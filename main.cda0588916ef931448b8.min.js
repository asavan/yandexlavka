(()=>{var e,t,n={741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return n[e](s,s.exports,a),s.exports}a.m=n,a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+"."+{327:"47b5224a8e56e4e23356",352:"91c1808e1c8d0a1047b3",590:"ad476ae9046bad33d724",753:"cf426e7dc61916bfa2bb",802:"6f72386d1276de9e2f7e",833:"7c17ce4206f8fee5f98e",967:"e80f1f83e01402c093db"}[e]+".min.js",a.miniCssF=e=>{},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="nedanila:",a.l=(n,r,s,i)=>{if(e[n])e[n].push(r);else{var o,l;if(void 0!==s)for(var u=document.getElementsByTagName("script"),h=0;h<u.length;h++){var p=u[h];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==t+s){o=p;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=n),e[n]=[r];var d=(t,r)=>{o.onerror=o.onload=null,clearTimeout(c);var a=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),t)return t(r)},c=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),l&&document.head.appendChild(o)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=s);var i=a.p+a.u(t),o=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,s,[i,o,l]=n,u=0;if(i.some((t=>0!==e[t]))){for(r in o)a.o(o,r)&&(a.m[r]=o[r]);if(l)l(a)}for(t&&t(n);u<i.length;u++)s=i[u],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0},n=self.webpackChunknedanila=self.webpackChunknedanila||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e="/index.js",t=Object.defineProperty,n=a(741),r=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})};r({},{Abs:()=>Be,Acos:()=>We,Acosh:()=>Ve,AdadeltaOptimizer:()=>Gc,AdagradOptimizer:()=>Hc,AdamOptimizer:()=>jc,AdamaxOptimizer:()=>qc,Add:()=>Ue,AddN:()=>Ge,All:()=>He,Any:()=>je,ArgMax:()=>qe,ArgMin:()=>Ke,Asin:()=>Xe,Asinh:()=>Ye,Atan:()=>Ze,Atan2:()=>Qe,Atanh:()=>Je,AvgPool:()=>et,AvgPool3D:()=>nt,AvgPool3DGrad:()=>rt,AvgPoolGrad:()=>tt,BackendWasm:()=>$j,BatchMatMul:()=>at,BatchToSpaceND:()=>st,Bincount:()=>it,BroadcastArgs:()=>lt,BroadcastTo:()=>ot,Callback:()=>nN,CallbackList:()=>ev,Cast:()=>ut,Ceil:()=>ht,ClipByValue:()=>pt,Complex:()=>dt,ComplexAbs:()=>ct,Concat:()=>ft,Conv2D:()=>mt,Conv2DBackpropFilter:()=>gt,Conv2DBackpropInput:()=>yt,Conv3D:()=>bt,Conv3DBackpropFilterV2:()=>xt,Conv3DBackpropInputV2:()=>vt,Cos:()=>wt,Cosh:()=>kt,CropAndResize:()=>Nt,Cumprod:()=>It,Cumsum:()=>St,CustomCallback:()=>rv,DataStorage:()=>M,DenseBincount:()=>Tt,DepthToSpace:()=>Ct,DepthwiseConv2dNative:()=>_t,DepthwiseConv2dNativeBackpropFilter:()=>Et,DepthwiseConv2dNativeBackpropInput:()=>$t,Diag:()=>At,Dilation2D:()=>Ft,Dilation2DBackpropFilter:()=>Dt,Dilation2DBackpropInput:()=>Rt,ENV:()=>Le,EarlyStopping:()=>sN,Einsum:()=>Ot,Elu:()=>Lt,EluGrad:()=>zt,Environment:()=>Re,Equal:()=>Bt,Erf:()=>Pt,Exp:()=>Wt,ExpandDims:()=>Vt,Expm1:()=>Ut,FFT:()=>Gt,Fill:()=>Ht,FlipLeftRight:()=>jt,Floor:()=>qt,FloorDiv:()=>Kt,FromPixels:()=>qr,FusedBatchNorm:()=>Xt,FusedConv2D:()=>Yr,FusedDepthwiseConv2D:()=>Zr,GPGPUContext:()=>NO,GatherNd:()=>Zt,GatherV2:()=>Yt,GraphModel:()=>WT,Greater:()=>Jt,GreaterEqual:()=>Qt,History:()=>nv,IFFT:()=>tn,Identity:()=>en,Imag:()=>nn,InputSpec:()=>nx,IsFinite:()=>rn,IsInf:()=>an,IsNan:()=>sn,KernelBackend:()=>O,LRN:()=>xn,LRNGrad:()=>vn,LayerVariable:()=>Qb,LayersModel:()=>sw,LeakyRelu:()=>on,Less:()=>ln,LessEqual:()=>un,LinSpace:()=>hn,Log:()=>pn,Log1p:()=>dn,LogSoftmax:()=>yn,LogicalAnd:()=>cn,LogicalNot:()=>fn,LogicalOr:()=>mn,LogicalXor:()=>gn,LowerBound:()=>bn,MathBackendWebGL:()=>$L,Max:()=>wn,MaxPool:()=>In,MaxPool3D:()=>Nn,MaxPool3DGrad:()=>Tn,MaxPoolGrad:()=>Sn,MaxPoolWithArgmax:()=>Cn,Maximum:()=>kn,Mean:()=>_n,Min:()=>En,Minimum:()=>$n,MirrorPad:()=>An,Mod:()=>Fn,MomentumOptimizer:()=>Xc,Multinomial:()=>Rn,Multiply:()=>Dn,Neg:()=>Mn,NonMaxSuppressionV3:()=>Ln,NonMaxSuppressionV4:()=>zn,NonMaxSuppressionV5:()=>Pn,NotEqual:()=>On,OP_SCOPE_SUFFIX:()=>Is,OneHot:()=>Wn,OnesLike:()=>Bn,Optimizer:()=>Uc,OptimizerConstructors:()=>Zc,Pack:()=>Vn,PadV2:()=>Un,Pool:()=>Gn,Pow:()=>Hn,Prelu:()=>jn,Prod:()=>qn,RMSPropOptimizer:()=>Yc,RNN:()=>dk,RaggedTensorToTensor:()=>Kn,Range:()=>Xn,Rank:()=>Ha,Real:()=>Yn,RealDiv:()=>Mt,Reciprocal:()=>Zn,Reduction:()=>bc,Relu:()=>Jn,Relu6:()=>ar,Reshape:()=>Qn,ResizeBilinear:()=>nr,ResizeBilinearGrad:()=>rr,ResizeNearestNeighbor:()=>er,ResizeNearestNeighborGrad:()=>tr,Reverse:()=>sr,RotateWithOffset:()=>Kr,Round:()=>ir,Rsqrt:()=>or,SGDOptimizer:()=>Kc,ScatterNd:()=>lr,SearchSorted:()=>ur,Select:()=>hr,Selu:()=>pr,Sequential:()=>uw,Sigmoid:()=>gr,Sign:()=>mr,Sin:()=>cr,Sinh:()=>fr,Slice:()=>dr,Softmax:()=>kr,Softplus:()=>yr,SpaceToBatchND:()=>vr,SparseFillEmptyRows:()=>Ir,SparseReshape:()=>Sr,SparseSegmentMean:()=>Nr,SparseSegmentSum:()=>Tr,SparseToDense:()=>Cr,SplitV:()=>wr,Sqrt:()=>br,Square:()=>Er,SquaredDifference:()=>_r,Step:()=>jr,StridedSlice:()=>$r,StringNGrams:()=>Ar,StringSplit:()=>Fr,StringToHashBucketFast:()=>Rr,Sub:()=>Dr,Sum:()=>xr,SymbolicTensor:()=>rx,Tan:()=>Mr,Tanh:()=>Or,Tensor:()=>Va,TensorBuffer:()=>Pa,Tile:()=>Lr,TopK:()=>zr,Transform:()=>Pr,Transpose:()=>Br,Unique:()=>Wr,Unpack:()=>Vr,UnsortedSegmentSum:()=>Ur,UpperBound:()=>Gr,Variable:()=>Ga,ZerosLike:()=>Hr,_FusedMatMul:()=>Xr,abs:()=>Nl,acos:()=>Tl,acosh:()=>Cl,add:()=>wl,addN:()=>_l,all:()=>El,any:()=>$l,argMax:()=>Al,argMin:()=>Fl,asin:()=>Rl,asinh:()=>Dl,atan:()=>Ml,atan2:()=>Ol,atanh:()=>Ll,avgPool:()=>Ql,avgPool3d:()=>eu,backend:()=>co,backend_util:()=>nf,basicLSTMCell:()=>su,batchNorm:()=>lu,batchNorm2d:()=>uu,batchNorm3d:()=>hu,batchNorm4d:()=>pu,batchToSpaceND:()=>iu,bincount:()=>du,booleanMaskAsync:()=>wd,broadcastArgs:()=>cu,broadcastTo:()=>fu,broadcast_util:()=>vo,browser:()=>No,buffer:()=>vi,callbacks:()=>lN,cast:()=>wi,ceil:()=>mu,clipByValue:()=>gu,clone:()=>ki,complex:()=>Ns,concat:()=>tu,concat1d:()=>yu,concat2d:()=>bu,concat3d:()=>xu,concat4d:()=>vu,constraints:()=>bx,conv1d:()=>ku,conv2d:()=>wu,conv2dTranspose:()=>Su,conv3d:()=>Nu,conv3dTranspose:()=>Cu,copyRegisteredKernels:()=>ua,cos:()=>_u,cosh:()=>Eu,cosineWindow:()=>_d,cumprod:()=>$u,cumsum:()=>Au,customGrad:()=>Dh,data:()=>HT,denseBincount:()=>Fu,deprecationWarn:()=>Yi,depthToSpace:()=>Ru,depthwiseConv2d:()=>Du,deregisterOp:()=>dN,device_util:()=>cs,diag:()=>Mu,dilation2d:()=>Ou,disableDeprecationWarnings:()=>Xi,dispose:()=>no,disposeVariables:()=>Zi,div:()=>Il,divNoNan:()=>Bu,dot:()=>Wu,dropout:()=>Td,einsum:()=>Vu,elu:()=>Uu,enableDebugMode:()=>Ki,enableProdMode:()=>qi,enclosingPowerOfTwo:()=>Cd,engine:()=>Ji,env:()=>Me,equal:()=>Lu,erf:()=>Gu,euclideanNorm:()=>lh,exp:()=>uh,expandDims:()=>hh,expm1:()=>ph,eye:()=>ch,fft:()=>Yp,fill:()=>fh,findBackend:()=>uo,findBackendFactory:()=>ho,floor:()=>mh,floorDiv:()=>kl,forceHalfFloat:()=>FL,fused:()=>$d,gather:()=>gh,gatherND:()=>Nd,gather_util:()=>Fo,getBackend:()=>oo,getGradient:()=>ra,getKernel:()=>na,getKernelsForBackend:()=>aa,getThreadsCount:()=>Gj,gpgpu_util:()=>nO,grad:()=>Eh,grads:()=>$h,greater:()=>yh,greaterEqual:()=>bh,ifft:()=>Zp,imag:()=>mo,image:()=>zc,inTopKAsync:()=>Ed,initializers:()=>Rx,input:()=>cw,io:()=>Si,irfft:()=>Jp,isFinite:()=>xh,isInf:()=>vh,isNaN:()=>wh,keep:()=>ro,kernel_impls:()=>om,layers:()=>Yx,leakyRelu:()=>kh,less:()=>Ih,lessEqual:()=>Sh,linalg:()=>Pc,linspace:()=>Nh,loadGraphModel:()=>VT,loadGraphModelSync:()=>UT,loadLayersModel:()=>dw,localResponseNormalization:()=>Th,log:()=>Ch,log1p:()=>_h,logSigmoid:()=>Lh,logSoftmax:()=>Ph,logSumExp:()=>Bh,logicalAnd:()=>Wh,logicalNot:()=>Vh,logicalOr:()=>Uh,logicalXor:()=>Gh,losses:()=>Bc,lowerBound:()=>qh,matMul:()=>Hi,math:()=>Gi,max:()=>Qu,maxPool:()=>Kh,maxPool3d:()=>Xh,maxPoolWithArgmax:()=>Yh,maximum:()=>Zh,mean:()=>Jh,memory:()=>Qi,meshgrid:()=>tp,metrics:()=>MS,min:()=>eh,minimum:()=>np,mirrorPad:()=>rp,mod:()=>ap,model:()=>hw,models:()=>ZS,moments:()=>sp,movingAverage:()=>kd,mul:()=>Sl,multiRNNCell:()=>ip,multinomial:()=>op,neg:()=>go,nextFrame:()=>ef,norm:()=>oh,notEqual:()=>lp,oneHot:()=>ji,ones:()=>ep,onesLike:()=>up,op:()=>Ss,outerProduct:()=>hp,pad:()=>pp,pad1d:()=>dp,pad2d:()=>cp,pad3d:()=>fp,pad4d:()=>mp,pool:()=>yp,pow:()=>th,prelu:()=>bp,print:()=>Ii,prod:()=>xp,profile:()=>eo,raggedTensorToTensor:()=>vp,rand:()=>wp,randomGamma:()=>Sp,randomNormal:()=>Np,randomStandardNormal:()=>Tp,randomUniform:()=>Cp,range:()=>_p,ready:()=>io,real:()=>yo,reciprocal:()=>Ep,registerBackend:()=>po,registerCallbackConstructor:()=>fw,registerGradient:()=>ia,registerKernel:()=>sa,registerOp:()=>hN,regularizers:()=>JS,relu:()=>$p,relu6:()=>Ap,removeBackend:()=>lo,reshape:()=>Jl,reverse:()=>Fp,reverse1d:()=>Rp,reverse2d:()=>Dp,reverse3d:()=>Mp,reverse4d:()=>Op,rfft:()=>ed,round:()=>Lp,rsqrt:()=>zp,scalar:()=>nh,scatterND:()=>Id,scatter_util:()=>Do,searchSorted:()=>jh,selu:()=>Pp,separableConv2d:()=>Bp,sequential:()=>pw,serialization:()=>nl,setBackend:()=>so,setPlatform:()=>fo,setThreadsCount:()=>Uj,setWasmPath:()=>Pj,setWasmPaths:()=>Bj,setWebGLContext:()=>ED,setdiff1dAsync:()=>Wp,sigmoid:()=>nu,sign:()=>Vp,signal:()=>Lc,sin:()=>Up,sinh:()=>Gp,slice:()=>ru,slice1d:()=>Hp,slice2d:()=>jp,slice3d:()=>qp,slice4d:()=>Kp,slice_util:()=>zo,softmax:()=>Xp,softplus:()=>Oh,spaceToBatchND:()=>gp,sparse:()=>Wc,sparseToDense:()=>Sd,spectral:()=>Oc,split:()=>Qp,sqrt:()=>rh,square:()=>ah,squaredDifference:()=>td,squeeze:()=>nd,stack:()=>rd,step:()=>ad,stridedSlice:()=>sd,string:()=>Vc,sub:()=>zh,sum:()=>sh,sumOutType:()=>es,tan:()=>id,tanh:()=>au,tensor:()=>Cs,tensor1d:()=>od,tensor2d:()=>ld,tensor3d:()=>To,tensor4d:()=>ud,tensor5d:()=>hd,tensor6d:()=>pd,tensor_util:()=>Za,test_util:()=>il,tidy:()=>to,tile:()=>dh,time:()=>ao,topk:()=>dd,train:()=>Jc,transpose:()=>bo,truncatedNormal:()=>cd,unique:()=>fd,unregisterGradient:()=>la,unregisterKernel:()=>oa,unsortedSegmentSum:()=>md,unstack:()=>gd,upcastType:()=>Qa,upperBound:()=>yd,util:()=>pa,valueAndGrad:()=>Ah,valueAndGrads:()=>Fh,variable:()=>bd,variableGrads:()=>Rh,version:()=>jj,version_converter:()=>GT,version_core:()=>vl,version_layers:()=>Pv,version_wasm:()=>Hj,version_webgl:()=>AL,webgl:()=>RL,webgl_util:()=>ID,where:()=>zu,whereAsync:()=>vd,zeros:()=>Qh,zerosLike:()=>Pu});var s=Object.create,i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,l=Object.getOwnPropertyNames,u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,p=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),d=(e,t)=>{for(var n in t)i(e,n,{get:t[n],enumerable:!0})},c=(e,t,n)=>(n=null!=e?s(u(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of l(t))!h.call(e,a)&&a!==n&&i(e,a,{get:()=>t[a],enumerable:!(r=o(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:i(n,"default",{value:e,enumerable:!0}),e)),f=p(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var h=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var a=l(h(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(h(n,o));s=s.mul(d).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=p,r.fromValue=d;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(h(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,h=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=r+l)>>>16,h+=(p+=n+o)>>>16,h+=t+i,u((c&=65535)<<16|(f&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,h=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*p)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*p)>>>16,m&=65535,f+=(m+=i*h)>>>16,f+=t*c+r*p+s*h+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:h(2,i-48),p=l(t),c=p.mul(e);c.isNegative()||c.gt(r);)c=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=x),s=s.add(p),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),m=p((()=>{})),g=p((()=>{})),y=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),b=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),x=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),v=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),w=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=p((()=>{})),S=p(((e,t)=>{!function(e,n,r){var s,i=256,o="random",l=r.pow(i,6),u=r.pow(2,52),h=2*u,p=255;function d(t,a,p){var d=[],b=g(m((a=1==a?{entropy:!0}:a||{}).entropy?[t,y(n)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var r=e.navigator,a=r&&r.plugins;return[+new Date,e,a,e.screen,y(n)]}}():t,3),d),x=new c(d),v=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,g(y(x.S),n),(a.pass||p||function(e,t,n,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),n?(r[o]=e,t):e})(v,b,"global"in a?a.global:this==r,a.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*i+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(r.random(),n),"object"==typeof t&&t.exports){t.exports=d;try{s=I()}catch(e){}}else"function"==typeof define&&a.amdO?define((function(){return d})):r["seed"+o]=d}("undefined"!=typeof self?self:e,[],Math)})),N=p(((e,t)=>{var n=y(),r=b(),a=x(),s=v(),i=w(),o=k(),l=S();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),T=p((()=>{})),C=p((()=>{})),_=p((()=>{})),E=p((()=>{})),$=p((()=>{})),A=p((()=>{})),F=p(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){function t(){return z.buffer!=H&&te(z.buffer),j}function n(){return z.buffer!=H&&te(z.buffer),q}function s(){return z.buffer!=H&&te(z.buffer),K}function i(){return z.buffer!=H&&te(z.buffer),X}var o,l,u,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){o=e,l=t})),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,d,c,f,m,g,y=Object.assign({},h),b=[],x=(e,t)=>{throw t},v="object"==typeof window,w="function"==typeof importScripts,k="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,I=h.ENVIRONMENT_IS_PTHREAD||!1,S="";function N(e){return h.locateFile?h.locateFile(e,S):S+e}if(k){let e;S=w?_().dirname(S)+"/":"//",g=()=>{m||(f=C(),m=_())},p=function(e,t){return g(),e=m.normalize(e),f.readFileSync(e,t?void 0:"utf8")},c=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},d=(e,t,n)=>{g(),e=m.normalize(e),f.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),b=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ft))throw e})),process.on("unhandledRejection",(function(e){throw e})),x=(e,t)=>{if(le())throw process.exitCode=e,t;(function(e){e instanceof ft||M("exiting due to exception: "+e)})(t),process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{e=E()}catch(e){throw e}a.g.Worker=e.Worker}else(v||w)&&(w?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):"",k||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},w&&(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));k&&"undefined"==typeof performance&&(a.g.performance=$().performance);var T=void 0,F=void 0;k&&(g(),T=e=>f.writeSync(1,e+"\n"),F=e=>f.writeSync(2,e+"\n"));var R,D=h.print||T,M=h.printErr||F;function O(e){O.shown||(O.shown={}),O.shown[e]||(O.shown[e]=1,M(e))}Object.assign(h,y),y=null,h.arguments&&(b=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(x=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(R=h.wasmBinary);var L=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&fe("no native wasm support detected");var z,P,B,W=!1;function V(e){return h["_"+e]}function U(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Q(e,t=dt(n),n)}return t},array:function(e){var n=dt(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=V(e),l=[],u=0;if(a)for(var h=0;h<a.length;h++){var p=i[r[h]];p?(0===u&&(u=ht()),l[h]=p(a[h])):l[h]=a[h]}var d,c=o.apply(null,l);return d=c,0!==u&&pt(u),c=function(e){return"string"===n?J(e):"boolean"===n?Boolean(e):e}(d),c}function G(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var H,j,q,K,X,Y="undefined"!=typeof TextDecoder?new G("utf8"):void 0;function Z(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&Y)return Y.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function J(e,t){return e?Z(n(),e,t):""}function Q(e,t,r){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,n(),t,r)}function ee(e,t){return e%t>0&&(e+=t-e%t),e}function te(e){H=e,h.HEAP8=j=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=K=new Int32Array(e),h.HEAPU8=q=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=X=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new G("utf-16le"),I&&(H=h.buffer);var ne=h.INITIAL_MEMORY||16777216;if(I)z=h.wasmMemory,H=h.buffer;else if(h.wasmMemory)z=h.wasmMemory;else if(!((z=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");z&&(H=z.buffer),ne=H.byteLength,te(H);var re,ae=[],se=[],ie=[],oe=[];function le(){return L||!1}function ue(){!I&&xe(se)}var he,pe=0,de=null,ce=null;function fe(e){I?postMessage({cmd:"onAbort",arg:e}):h.onAbort&&h.onAbort(e),M(e="Aborted("+e+")"),W=!0,B=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function me(e){return e.startsWith("data:application/octet-stream;base64,")}function ge(e){return e.startsWith("file://")}function ye(e){try{if(e==he&&R)return new Uint8Array(R);if(c)return c(e);throw"both async and sync fetching of the wasm failed"}catch(e){fe(e)}}h.preloadedImages={},h.preloadedAudios={},me(he="tfjs-backend-wasm-threaded-simd.wasm")||(he=N(he));var be={};function xe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Ce(n)():Ce(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}function ve(e){var t=ht(),n=e();return pt(t),n}function we(e){var t=Ie.pthreads[e];if(t){s()[e>>2]=0;var n=t.worker;Ie.returnWorkerToPool(n)}}function ke(e){!function(e,t){if(B=e,!t&&I)throw Se(e),"unwind";le()||I||Ie.terminateAllThreads(),function(e){B=e,le()||(Ie.terminateAllThreads(),h.onExit&&h.onExit(e),W=!0),x(e,new ft(e))}(e)}(e)}var Ie={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?Ie.initWorker():Ie.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)Ie.allocateUnusedWorker()},initWorker:function(){L=!1},pthreads:{},setExitStatus:function(e){B=e},terminateAllThreads:function(){for(var e in Ie.pthreads){var t=Ie.pthreads[e];t&&t.worker&&Ie.returnWorkerToPool(t.worker)}for(var n=0;n<Ie.unusedWorkers.length;++n)Ie.unusedWorkers[n].terminate();Ie.unusedWorkers=[]},returnWorkerToPool:function(e){Ie.runWithoutMainThreadQueuedCalls((function(){delete Ie.pthreads[e.pthread.threadInfoStruct],Ie.unusedWorkers.push(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(e),1),lt(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[ct>>2]=0;try{e()}finally{s()[ct>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in Ie.tlsInitFunctions)Ie.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,a=r.cmd;if(e.pthread&&(Ie.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=nt()){var i=Ie.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):M('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ie.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===a?rt():"spawnThread"===a?Ee(r):"cleanupThread"===a?we(r.thread):"killThread"===a?function(e){s()[e>>2]=0;var t=Ie.pthreads[e];delete Ie.pthreads[e],t.worker.terminate(),lt(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===a?function(e){Ie.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===a?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===a?D("Thread "+r.threadId+": "+r.text):"printErr"===a?M("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===a?h.onAbort&&h.onAbort(r.arg):M("worker sent an unknown command "+a),Ie.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw M("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},k&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:z,wasmModule:P})},allocateUnusedWorker:function(){var e=N("tfjs-backend-wasm-threaded-simd.worker.js");Ie.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ie.unusedWorkers.length&&(Ie.allocateUnusedWorker(),Ie.loadWasmModuleToWorker(Ie.unusedWorkers[0])),Ie.unusedWorkers.pop()}};function Se(e){if(I)return Ae(1,0,e);try{ke(e)}catch(e){!function(e){if(e instanceof ft||"unwind"==e)return B;x(1,e)}(e)}}h.establishStackSpace=function(){var e=nt(),t=s()[e+44>>2],n=s()[e+48>>2];ut(t,t-n),pt(t)};var Ne,Te=[];function Ce(e){var t=Te[e];return t||(e>=Te.length&&(Te.length=e+1),Te[e]=t=re.get(e)),t}function _e(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return function(e){s()[tt()>>2]=e}(28),-1;n=Ne()}return s()[t>>2]=n/1e3|0,s()[t+4>>2]=n%1e3*1e3*1e3|0,0}function Ee(e){var t=Ie.getNewWorker();if(!t)return 6;Ie.runningWorkers.push(t);var n=Ie.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function $e(){return 2147483648}function Ae(e,t){var n=arguments.length-2,r=arguments;return ve((function(){for(var a=n,s=dt(8*a),o=s>>3,l=0;l<n;l++){var u=r[2+l];i()[o+l]=u}return it(e,a,s,t)}))}h.invokeEntryPoint=function(e,t){return Ce(e)(t)},Ne=k?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:I?()=>performance.now()-h.__performance_now_clock_drift:()=>performance.now();var Fe=[];function Re(e){try{return z.grow(e-H.byteLength+65535>>>16),te(z.buffer),1}catch(e){}}var De={inEventHandler:0,removeAllEventListeners:function(){for(var e=De.eventHandlers.length-1;e>=0;--e)De._removeHandler(e);De.eventHandlers=[],De.deferredCalls=[]},registerRemoveEventListeners:function(){De.removeEventListenersRegistered||(ie.push(De.removeAllEventListeners),De.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in De.deferredCalls){var s=De.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}De.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),De.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<De.deferredCalls.length;++t)De.deferredCalls[t].targetFunction==e&&(De.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return De.inEventHandler&&De.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(De.canPerformEventHandlerRequests())for(var e=0;e<De.deferredCalls.length;++e){var t=De.deferredCalls[e];De.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e&&(!t||t==De.eventHandlers[n].eventTypeString)&&De._removeHandler(n--)},_removeHandler:function(e){var t=De.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),De.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++De.inEventHandler,De.currentEventHandler=e,De.runDeferredCalls(),e.handlerFunc(t),De.runDeferredCalls(),--De.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),De.eventHandlers.push(e),De.registerRemoveEventListeners();else for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e.target&&De.eventHandlers[n].eventTypeString==e.eventTypeString&&De._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){ve((function(){var i=dt(12);s()[i>>2]=n,s()[i+4>>2]=r,s()[i+8>>2]=a,ot(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ie.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Me(e,t,n,r){ve((function(){var a=dt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Qe(t);return Q(e,n,t),n}(t)),s()[a>>2]=i,s()[a+4>>2]=n,s()[a+8>>2]=r,ot(e,657457152,0,i,a)}))}var Oe=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Le(e){return e=function(e){return e>2?J(e):e}(e),Oe[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ze(e){return Le(e)}function Pe(e,t,n){var r=ze(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Me(e,t=t?J(t):"",n,r)}(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Be(e,t,n){return I?Ae(2,1,e,t,n):Pe(e,t,n)}var We={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){We.lastError||(We.lastError=e)},getNewId:function(e){for(var t=We.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=J(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?We.registerContext(n,t):0},registerContext:function(e,t){var n=Qe(8);s()[n+4>>2]=nt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),We.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&We.initExtensions(r),n},makeContextCurrent:function(e){return We.currentContext=We.contexts[e],h.ctx=qe=We.currentContext&&We.currentContext.GLctx,!(e&&!qe)},getContext:function(e){return We.contexts[e]},deleteContext:function(e){We.currentContext===We.contexts[e]&&(We.currentContext=null),"object"==typeof De&&De.removeAllHandlersOnTarget(We.contexts[e].GLctx.canvas),We.contexts[e]&&We.contexts[e].GLctx.canvas&&(We.contexts[e].GLctx.canvas.GLctxObject=void 0),et(We.contexts[e].handle),We.contexts[e]=null},initExtensions:function(e){if(e||(e=We.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Ve=["default","low-power","high-performance"],Ue={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ue.buffers[e];0===t||10===t?((1===e?D:M)(Z(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ue.varargs+=4,s()[Ue.varargs-4>>2]},getStr:function(e){return J(e)},get64:function(e,t){return e}};function Ge(e){return I?Ae(3,1,e):0}function He(e,t,n,r,a){if(I)return Ae(4,1,e,t,n,r,a)}function je(e,t,r,a){if(I)return Ae(5,1,e,t,r,a);for(var i=0,o=0;o<r;o++){var l=s()[t>>2],u=s()[t+4>>2];t+=8;for(var h=0;h<u;h++)Ue.printChar(e,n()[l+h]);i+=u}return s()[a>>2]=i,0}Ie.init();var qe,Ke,Xe,Ye,Ze=[null,Se,Be,Ge,He,je],Je={__clock_gettime:function(e,t){return _e(e,t)},__emscripten_init_main_thread_js:function(e){at(e,!w,1,!v),Ie.threadInit()},__emscripten_thread_cleanup:function(e){I?postMessage({cmd:"cleanupThread",thread:e}):we(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return M("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(I&&0===a.length)return st(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return I?(s.cmd="spawnThread",postMessage(s,a),0):Ee(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ie.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){fe("")},emscripten_check_blocking_allowed:function(){k||w||O("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:$e,emscripten_get_now:Ne,emscripten_memcpy_big:function(e,t,r){n().copyWithin(e,t,t+r)},emscripten_num_logical_cores:function(){return k?A().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Fe.length=t;for(var r=n>>3,a=0;a<t;a++)Fe[a]=i()[r+a];return(e<0?be[-e-1]:Ze[e]).apply(null,Fe)},emscripten_resize_heap:function(e){var t=n().length;if((e>>>=0)<=t)return!1;var r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+100663296),Re(Math.min(r,ee(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return ze(e)?Pe(e,t,n):Be(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Ve[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ze(e);return!i||a.explicitSwapControl?0:We.createContext(i,a)}(e,t)},exit:ke,fd_close:Ge,fd_seek:He,fd_write:je,memory:z||h.wasmMemory,setTempRet0:function(e){}},Qe=(function(){var e={env:Je,wasi_snapshot_preview1:Je};function t(e,t){var n=e.exports;if(h.asm=n,function(e,t,n){Ie.tlsInitFunctions.push(e)}(h.asm.emscripten_tls_init),re=h.asm.__indirect_function_table,function(e){se.unshift(e)}(h.asm.__wasm_call_ctors),P=t,!I){var r=Ie.unusedWorkers.length;Ie.unusedWorkers.forEach((function(e){Ie.loadWasmModuleToWorker(e,(function(){--r||function(e){if(pe--,h.monitorRunDependencies&&h.monitorRunDependencies(pe),0==pe&&(null!==de&&(clearInterval(de),de=null),ce)){var t=ce;ce=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!R&&(v||w)){if("function"==typeof fetch&&!ge(he))return fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return ye(he)}));if(d)return new Promise((function(e,t){d(he,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ye(he)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){M("failed to asynchronously prepare wasm: "+e),fe(e)}))}if(I||(pe++,h.monitorRunDependencies&&h.monitorRunDependencies(pe)),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return M("Module.instantiateWasm callback failed with error: "+e),!1}(R||"function"!=typeof WebAssembly.instantiateStreaming||me(he)||ge(he)||"function"!=typeof fetch?r(n):fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return M("wasm streaming compile failed: "+e),M("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),h.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.__wasm_call_ctors).apply(null,arguments)},h._init=function(){return(h._init=h.asm.init).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.init_with_threads_count).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.get_threads_count).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.register_tensor).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.dispose_data).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.dispose).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.Abs).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.Add).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.AddN).apply(null,arguments)},h._All=function(){return(h._All=h.asm.All).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.Any).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.ArgMax).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.AvgPool).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.BatchMatMul).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.Ceil).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.ClipByValue).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.Conv2D).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.Conv2DBackpropInput).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.Cos).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.Cosh).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.CropAndResize).apply(null,arguments)},h._Cumprod=function(){return(h._Cumprod=h.asm.Cumprod).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Cumsum).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.DepthToSpace).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm.DepthwiseConv2dNative).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.Elu).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.Equal).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.Exp).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.FlipLeftRight).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.Floor).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.FloorDiv).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.FusedBatchNorm).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.FusedConv2D).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.FusedDepthwiseConv2D).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.Gather).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.GatherNd).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.Greater).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.GreaterEqual).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.LeakyRelu).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.Less).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.LessEqual).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.Log).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.LogicalAnd).apply(null,arguments)},h._LogicalNot=function(){return(h._LogicalNot=h.asm.LogicalNot).apply(null,arguments)},h._LogicalOr=function(){return(h._LogicalOr=h.asm.LogicalOr).apply(null,arguments)},h._LogicalXor=function(){return(h._LogicalXor=h.asm.LogicalXor).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.Max).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.MaxPool).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.Maximum).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.Mean).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.Min).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.Minimum).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.MirrorPad).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.Multiply).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.Neg).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.NonMaxSuppressionV3).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.NonMaxSuppressionV4).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.NonMaxSuppressionV5).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.NotEqual).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.OneHot).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.PadV2).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Pow).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Prelu).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Prod).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.RealDiv).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Relu).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.Relu6).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.ResizeBilinear).apply(null,arguments)},h._ResizeNearestNeighbor=function(){return(h._ResizeNearestNeighbor=h.asm.ResizeNearestNeighbor).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Reverse).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.RotateWithOffset).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Round).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Rsqrt).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.ScatterNd).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.SelectV2).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Sigmoid).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Sin).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Softmax).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.SparseFillEmptyRows).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.SparseReshape).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.SparseSegmentReduction).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Sqrt).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm.Square).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.SquaredDifference).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.Step).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.StridedSlice).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.Sub).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.Sum).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.Tan).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.Tanh).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.Tile).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.TopK).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.Transform).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.Transpose).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm._FusedMatMul).apply(null,arguments)},h._malloc=function(){return(Qe=h._malloc=h.asm.malloc).apply(null,arguments)}),et=h._free=function(){return(et=h._free=h.asm.free).apply(null,arguments)},tt=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.emscripten_tls_init).apply(null,arguments)},h.___errno_location=function(){return(tt=h.___errno_location=h.asm.__errno_location).apply(null,arguments)}),nt=h._pthread_self=function(){return(nt=h._pthread_self=h.asm.pthread_self).apply(null,arguments)},rt=h._emscripten_main_thread_process_queued_calls=function(){return(rt=h._emscripten_main_thread_process_queued_calls=h.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},at=(h.__emscripten_thread_crashed=function(){return(h.__emscripten_thread_crashed=h.asm._emscripten_thread_crashed).apply(null,arguments)},h.__emscripten_thread_init=function(){return(at=h.__emscripten_thread_init=h.asm._emscripten_thread_init).apply(null,arguments)}),st=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},h._emscripten_main_browser_thread_id=function(){return(h._emscripten_main_browser_thread_id=h.asm.emscripten_main_browser_thread_id).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_2=function(){return(h._emscripten_sync_run_in_main_thread_2=h.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_4=function(){return(st=h._emscripten_sync_run_in_main_thread_4=h.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),it=h._emscripten_run_in_main_runtime_thread_js=function(){return(it=h._emscripten_run_in_main_runtime_thread_js=h.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},ot=h._emscripten_dispatch_to_thread_=function(){return(ot=h._emscripten_dispatch_to_thread_=h.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},lt=h.__emscripten_thread_free_data=function(){return(lt=h.__emscripten_thread_free_data=h.asm._emscripten_thread_free_data).apply(null,arguments)},ut=(h.__emscripten_thread_exit=function(){return(h.__emscripten_thread_exit=h.asm._emscripten_thread_exit).apply(null,arguments)},h._memalign=function(){return(h._memalign=h.asm.memalign).apply(null,arguments)},h._emscripten_stack_set_limits=function(){return(ut=h._emscripten_stack_set_limits=h.asm.emscripten_stack_set_limits).apply(null,arguments)}),ht=h.stackSave=function(){return(ht=h.stackSave=h.asm.stackSave).apply(null,arguments)},pt=h.stackRestore=function(){return(pt=h.stackRestore=h.asm.stackRestore).apply(null,arguments)},dt=h.stackAlloc=function(){return(dt=h.stackAlloc=h.asm.stackAlloc).apply(null,arguments)},ct=(h.dynCall_iijjiiii=function(){return(h.dynCall_iijjiiii=h.asm.dynCall_iijjiiii).apply(null,arguments)},h.dynCall_jiji=function(){return(h.dynCall_jiji=h.asm.dynCall_jiji).apply(null,arguments)},h.__emscripten_allow_main_runtime_queued_calls=21672);function ft(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function mt(e){if(e=e||b,!(pe>0)){if(I)return o(h),ue(),void postMessage({cmd:"loaded"});(function(){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)e=h.preRun.shift(),ae.unshift(e);var e;xe(ae)})(),pe>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Ke||(Ke=!0,h.calledRun=!0,!W&&(ue(),o(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),function(){if(!I){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)e=h.postRun.shift(),oe.unshift(e);xe(oe)}var e}()))}}if(h.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?V(e):function(){return U(e,t,n,arguments)}},h.keepRuntimeAlive=le,h.PThread=Ie,h.PThread=Ie,h.wasmMemory=z,h.ExitStatus=ft,ce=function e(){Ke||mt(),Ke||(ce=e)},h.run=mt,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(mt(),u&&(Xe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Ye=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Ye=e}if(Xe){var gt=Ye._dispose;Ye._dispose=function(){gt(),Xe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Xe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=s)})),R=p(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'})),D=p(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,h,p,d=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y="";g?(y=m?_().dirname(y)+"/":"//",p=()=>{h||(u=C(),h=_())},i=function(e,t){return p(),e=h.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{p(),e=h.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),r&&(y=r),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,x=s.print||void 0,v=s.printErr||void 0;Object.assign(s,d),d=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(b=s.wasmBinary);s.noExitRuntime;"object"!=typeof WebAssembly&&H("no native wasm support detected");var w,k=!1;function I(e){return s["_"+e]}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,E,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=I(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=se()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,0!==l&&ie(l),d=function(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}(p),d}var N,T,E,$,A="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function F(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&A)return A.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?F(E,e,t):""}function D(e,t){return e%t>0&&(e+=t-e%t),e}function M(e){N=e,s.HEAP8=T=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=$=new Int32Array(e),s.HEAPU8=E=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var O,L=[],z=[],P=[];var B,W,V=0,U=null,G=null;function H(e){s.onAbort&&s.onAbort(e),v(e="Aborted("+e+")"),k=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function j(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function K(e){try{if(e==B&&b)return new Uint8Array(b);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z(n)():Z(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},j(B="tfjs-backend-wasm.wasm")||(W=B,B=s.locateFile?s.locateFile(W,y):y+W);var Y=[];function Z(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=O.get(e)),t}function J(){return 2147483648}function Q(e){try{return w.grow(e-N.byteLength+65535>>>16),M(w.buffer),1}catch(e){}}var ee,te,ne,re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=re.buffers[e];0===t||10===t?((1===e?x:v)(F(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return re.varargs+=4,$[re.varargs-4>>2]},getStr:function(e){return R(e)},get64:function(e,t){return e}},ae={abort:function(){H("")},emscripten_get_heap_max:J,emscripten_memcpy_big:function(e,t,n){E.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=E.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Q(Math.min(n,D(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=$[t>>2],o=$[t+4>>2];t+=8;for(var l=0;l<o;l++)re.printChar(e,E[i+l]);a+=o}return $[r>>2]=a,0},setTempRet0:function(e){}},se=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n=e.exports;s.asm=n,M((w=s.asm.memory).buffer),O=s.asm.__indirect_function_table,function(e){z.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(V--,s.monitorRunDependencies&&s.monitorRunDependencies(V),0==V&&(null!==U&&(clearInterval(U),U=null),G)){var t=G;G=null,t()}}()}function r(e){t(e.instance)}function a(t){return function(){if(!b&&(f||m)){if("function"==typeof fetch&&!q(B))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return K(B)}));if(o)return new Promise((function(e,t){o(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(B)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),H(e)}))}if(V++,s.monitorRunDependencies&&s.monitorRunDependencies(V),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(b||"function"!=typeof WebAssembly.instantiateStreaming||j(B)||q(B)||"function"!=typeof fetch?a(r):fetch(B,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(se=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ie=s.stackRestore=function(){return(ie=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){ee||(ee=!0,s.calledRun=!0,!k&&(X(z),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),P.unshift(e);var e;X(P)}()))}e=e||c,V>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),L.unshift(e);var e;X(L)}(),V>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?I(e):function(){return S(e,t,n,arguments)}},G=function e(){ee||ue(),ee||(G=e)},s.run=ue,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ue(),a&&(te={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)ne=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var he=ne._dispose;ne._dispose=function(){he(),te.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),te.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModule=s)})),M=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},O=class{refCount(e){return L("refCount")}incRef(e){return L("incRef")}timerAvailable(){return!0}time(e){return L("time")}read(e){return L("read")}readSync(e){return L("readSync")}readToGPU(e,t){return L("readToGPU")}numDataIds(){return L("numDataIds")}disposeData(e,t){return L("disposeData")}write(e,t,n){return L("write")}move(e,t,n,r,a){return L("move")}memory(){return L("memory")}floatPrecision(){return L("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return L("dispose")}};function L(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function z(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,V(e,t,n)}function P(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,V(e,n,r),V(t,n,r)}function B(e,t,n){return Math.max(e,Math.min(t,n))}function W(e){return e%2==0?e:e+1}function V(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function U(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function G(e,t){let n=Math.random();return t*n+(1-n)*e}function H(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function j(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function q(e,t,n=""){j(J(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function K(e){j(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function X(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ce(e)&&!n)for(let r=0;r<e.length;++r)X(e[r],t,n);else t.push(e);return t}function Y(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Z(e){return 0===e.length}function J(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Q(e){return e%1==0}function ee(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function te(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ne(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return z(t),t}function re(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ae(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function se(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ie(e,t){let n=t.length;return j((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),j(e.every((e=>Q(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function oe(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ie(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function le(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ue(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function he(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function pe(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function de(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ce(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function fe(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function me(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ge(e){return"string"==typeof e||e instanceof String}function ye(e){return"boolean"==typeof e}function be(e){return"number"==typeof e}function xe(e){return Array.isArray(e)?xe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":be(e)?"float32":ge(e)?"string":ye(e)?"bool":"float32"}function ve(e){return!!(e&&e.constructor&&e.call&&e.apply)}function we(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ke(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ie(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Ie(e+t*o,i,n,r)}return a}function Se(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ie(0,e,t,n)}function Ne(e,t){let n=Te(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Te(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ce(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Se(e,new Float32Array(n));if("int32"===t)return Se(e,new Int32Array(n));if("bool"===t)return Se(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _e(e){e.forEach((t=>{j(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ee(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function $e(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Ae(e){return e&&e.then&&"function"==typeof e.then}var Fe="tfjsflags",Re=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=De,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Me().getBool("IS_TEST")||Me().getBool("PROD")),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Me().getBool("IS_TEST")||Me().getBool("PROD"),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Ae(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Fe in e&&e[Fe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function De(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Me(){return Le}var Oe,Le=null;function ze(){if(null==Oe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Oe=e}return Oe}function Pe(e,t){let n=function(){let e=ze();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Be="Abs",We="Acos",Ve="Acosh",Ue="Add",Ge="AddN",He="All",je="Any",qe="ArgMax",Ke="ArgMin",Xe="Asin",Ye="Asinh",Ze="Atan",Je="Atanh",Qe="Atan2",et="AvgPool",tt="AvgPoolGrad",nt="AvgPool3D",rt="AvgPool3DGrad",at="BatchMatMul",st="BatchToSpaceND",it="Bincount",ot="BroadcastTo",lt="BroadcastArgs",ut="Cast",ht="Ceil",pt="ClipByValue",dt="Complex",ct="ComplexAbs",ft="Concat",mt="Conv2D",gt="Conv2DBackpropFilter",yt="Conv2DBackpropInput",bt="Conv3D",xt="Conv3DBackpropFilterV2",vt="Conv3DBackpropInputV2",wt="Cos",kt="Cosh",It="Cumprod",St="Cumsum",Nt="CropAndResize",Tt="DenseBincount",Ct="DepthToSpace",_t="DepthwiseConv2dNative",Et="DepthwiseConv2dNativeBackpropFilter",$t="DepthwiseConv2dNativeBackpropInput",At="Diag",Ft="Dilation2D",Rt="Dilation2DBackpropInput",Dt="Dilation2DBackpropFilter",Mt="RealDiv",Ot="Einsum",Lt="Elu",zt="EluGrad",Pt="Erf",Bt="Equal",Wt="Exp",Vt="ExpandDims",Ut="Expm1",Gt="FFT",Ht="Fill",jt="FlipLeftRight",qt="Floor",Kt="FloorDiv",Xt="FusedBatchNorm",Yt="GatherV2",Zt="GatherNd",Jt="Greater",Qt="GreaterEqual",en="Identity",tn="IFFT",nn="Imag",rn="IsFinite",an="IsInf",sn="IsNan",on="LeakyRelu",ln="Less",un="LessEqual",hn="LinSpace",pn="Log",dn="Log1p",cn="LogicalAnd",fn="LogicalNot",mn="LogicalOr",gn="LogicalXor",yn="LogSoftmax",bn="LowerBound",xn="LRN",vn="LRNGrad",wn="Max",kn="Maximum",In="MaxPool",Sn="MaxPoolGrad",Nn="MaxPool3D",Tn="MaxPool3DGrad",Cn="MaxPoolWithArgmax",_n="Mean",En="Min",$n="Minimum",An="MirrorPad",Fn="Mod",Rn="Multinomial",Dn="Multiply",Mn="Neg",On="NotEqual",Ln="NonMaxSuppressionV3",zn="NonMaxSuppressionV4",Pn="NonMaxSuppressionV5",Bn="OnesLike",Wn="OneHot",Vn="Pack",Un="PadV2",Gn="Pool",Hn="Pow",jn="Prelu",qn="Prod",Kn="RaggedTensorToTensor",Xn="Range",Yn="Real",Zn="Reciprocal",Jn="Relu",Qn="Reshape",er="ResizeNearestNeighbor",tr="ResizeNearestNeighborGrad",nr="ResizeBilinear",rr="ResizeBilinearGrad",ar="Relu6",sr="Reverse",ir="Round",or="Rsqrt",lr="ScatterNd",ur="SearchSorted",hr="Select",pr="Selu",dr="Slice",cr="Sin",fr="Sinh",mr="Sign",gr="Sigmoid",yr="Softplus",br="Sqrt",xr="Sum",vr="SpaceToBatchND",wr="SplitV",kr="Softmax",Ir="SparseFillEmptyRows",Sr="SparseReshape",Nr="SparseSegmentMean",Tr="SparseSegmentSum",Cr="SparseToDense",_r="SquaredDifference",Er="Square",$r="StridedSlice",Ar="StringNGrams",Fr="StringSplit",Rr="StringToHashBucketFast",Dr="Sub",Mr="Tan",Or="Tanh",Lr="Tile",zr="TopK",Pr="Transform",Br="Transpose",Wr="Unique",Vr="Unpack",Ur="UnsortedSegmentSum",Gr="UpperBound",Hr="ZerosLike",jr="Step",qr="FromPixels",Kr="RotateWithOffset",Xr="_FusedMatMul",Yr="FusedConv2D",Zr="FusedDepthwiseConv2D";function Jr(...e){Me().getBool("IS_TEST")||Me().getBool("PROD")}function Qr(...e){Me().getBool("IS_TEST")||Me().getBool("PROD")}var ea=Pe("kernelRegistry",(()=>new Map)),ta=Pe("gradRegistry",(()=>new Map));function na(e,t){let n=ha(e,t);return ea.get(n)}function ra(e){return ta.get(e)}function aa(e){let t=ea.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function sa(e){let{kernelName:t,backendName:n}=e,r=ha(t,n);ea.has(r)&&Jr(),ea.set(r,e)}function ia(e){let{kernelName:t}=e;ta.has(t)&&Me().getBool("DEBUG")&&Jr(),ta.set(t,e)}function oa(e,t){let n=ha(e,t);if(!ea.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ea.delete(n)}function la(e){if(!ta.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ta.delete(e)}function ua(e,t){aa(e).forEach((e=>{sa(Object.assign({},e,{backendName:t}))}))}function ha(e,t){return`${t}_${e}`}var pa={};d(pa,{arraysEqual:()=>J,assert:()=>j,assertNonNegativeIntegerDimensions:()=>_e,assertNonNull:()=>K,assertShapesMatch:()=>q,bytesFromStringArray:()=>me,bytesPerElement:()=>fe,checkConversionForErrors:()=>he,clamp:()=>B,computeStrides:()=>ke,createScalarValue:()=>Ta,createShuffledIndices:()=>ne,decodeString:()=>Aa,distSquared:()=>H,encodeString:()=>$a,fetch:()=>Ea,fingerPrint64:()=>Na,flatten:()=>X,getArrayFromDType:()=>ue,getTypedArrayFromDType:()=>le,hasEncodingLoss:()=>de,hexToLong:()=>fa,indexToLoc:()=>$e,inferDtype:()=>xe,inferFromImplicitShape:()=>se,isBoolean:()=>ye,isFunction:()=>ve,isInt:()=>Q,isNumber:()=>be,isPromise:()=>Ae,isScalarShape:()=>Z,isString:()=>ge,isTypedArray:()=>ce,isValidDtype:()=>pe,locToIndex:()=>Ee,makeOnesTypedArray:()=>Ne,makeZerosNestedTypedArray:()=>Ce,makeZerosTypedArray:()=>Te,nearestDivisor:()=>we,nearestLargerEven:()=>W,now:()=>_a,parseAxisParam:()=>ie,randUniform:()=>G,repeatedTry:()=>ae,rightPad:()=>re,shuffle:()=>z,shuffleCombo:()=>P,sizeFromShape:()=>Y,sizeToSquarishShape:()=>te,squeezeShape:()=>oe,sum:()=>U,swap:()=>V,tanh:()=>ee,toNestedArray:()=>Se,toTypedArray:()=>Ca});var da=c(f()),ca=da.default||da;function fa(e){return ca.fromString(e,!0,16)}var ma=fa("c3a5c85c97cb3127"),ga=fa("b492b66fbe98f273"),ya=fa("9ae16a3b2f90404f");function ba(e){return e.xor(e.shru(47))}function xa(e,t,n){let r=e.slice(t,t+n);return ca.fromBytes(Array.from(r),!0,!0)}function va(e,t){return xa(e,t,8)}function wa(e,t){return xa(e,t,4)}function ka(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ia(e,t,n=fa("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Sa(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=ka(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(ka(a,44)),[a.add(r),s.add(i)]}(va(e,t),va(e,t+8),va(e,t+16),va(e,t+24),n,r)}function Na(e,t=e.length){let n=ca.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=ya.add(2*t),r=va(e,0).add(ya),a=va(e,t-8);return Ia(ka(a,37).mul(n).add(r),ka(r,25).add(a).mul(n),n)}if(t>=4){let n=ya.add(2*t);return Ia(wa(e,0).shl(3).add(t),wa(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ba(ya.mul(n).xor(ma.mul(r))).mul(ya)}return ya}(e,t):function(e,t=e.length){let n=ya.add(2*t),r=va(e,0).mul(ga),a=va(e,8),s=va(e,t-8).mul(n),i=va(e,t-16).mul(ya);return Ia(ka(r.add(a),43).add(ka(s,30)).add(i),r.add(ka(a.add(ya),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=ya.add(2*t),r=va(e,0).mul(ya),a=va(e,8),s=va(e,t-8).mul(n),i=va(e,t-16).mul(ya),o=ka(r.add(a),43).add(ka(s,30)).add(i),l=Ia(o,r.add(ka(a.add(ya),18)).add(s),n),u=va(e,16).mul(n),h=va(e,24),p=o.add(va(e,t-32)).mul(n),d=l.add(va(e,t-24)).mul(n);return Ia(ka(u.add(h),43).add(ka(p,30)).add(d),u.add(ka(h.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(ga).add(113),s=ba(a.mul(ya).add(113)).mul(ya),i=[ca.UZERO,ca.UZERO],o=[ca.UZERO,ca.UZERO];r=r.mul(ya).add(va(e,0));let l=0,u=64*(t-1>>6),h=u+(t-1&63)-63;do{r=ka(r.add(a).add(i[0]).add(va(e,l+8)),37).mul(ga),a=ka(a.add(i[1]).add(va(e,l+48)),42).mul(ga),r=r.xor(o[1]),a=a.add(i[0]).add(va(e,l+40)),s=ka(s.add(o[0]),33).mul(ga),i=Sa(e,l,i[1].mul(ga),r.add(o[0])),o=Sa(e,l+32,s.add(o[1]),a.add(va(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let p=ga.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=ka(r.add(a).add(i[0]).add(va(e,l+8)),37).mul(p),a=ka(a.add(i[1]).add(va(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(va(e,l+40))),s=ka(s.add(o[0]),33).mul(p),i=Sa(e,l,i[1].mul(p),r.add(o[0])),o=Sa(e,l+32,s.add(o[1]),a.add(va(e,l+16))),[s,r]=[r,s],Ia(Ia(i[0],o[0],p).add(ba(a).mul(ma)).add(s),Ia(i[1],o[1],p).add(r),p)}function Ta(e,t){return"string"===t?$a(e):Ca([e],t)}function Ca(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=X(e)),Me().getBool("DEBUG")&&he(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function _a(){return Me().platform.now()}function Ea(e,t){return Me().platform.fetch(e,t)}function $a(e,t="utf-8"){return t=t||"utf-8",Me().platform.encode(e,t)}function Aa(e,t="utf-8"){return t=t||"utf-8",Me().platform.decode(e,t)}function Fa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return!0}return!1}var Ra=class{logKernelProfile(e,t,n,r,a,s){"number"==typeof r?re(`${r}ms`,9):r.error,re(e,25),t.rank,t.size,re(t.shape.toString(),14);let i="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;i+=`${e}: ${a}D ${a>0?r:""} `}}}};function Da(e,t,n,r){let a=ke(t),s=function(e,t,n,r){let a=Y(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?za(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ma(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=La(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ma(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ge(e)?`'${e}'`:"bool"===n?Oa(e):parseFloat(e.toFixed(7)).toString(),re(r,t)}function Oa(e){return 0===e?"false":"true"}function La(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ma(za(e)[0],0,n)]}return"bool"===n?[Oa(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=za(r),s=za(s)),["["+r.map(((e,t)=>Ma(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ma(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?za(e):Array.from(e)).map(((e,t)=>Ma(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){let r=t*p,s=r+p;d.push(...La(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-3;t<o;t++){let r=t*p,s=r+p;d.push(...La(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*p,s=r+p;d.push(...La(e.slice(r,s),u,n,h,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function za(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Pa=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Y(e),null!=n){let e=n.length;j(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ue(t,this.size),this.strides=ke(e)}set(e,...t){0===t.length&&(t=[0]),j(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ba().makeTensor(this.values,this.shape,this.dtype)}},Ba=null,Wa=null;var Va=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Y(e),this.strides=ke(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Wa.buffer(this.shape,this.dtype,e)}bufferSync(){return Wa.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Se(this.shape,e,"complex64"===this.dtype)}arraySync(){return Se(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Ba().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Aa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ba().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ba().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Aa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ba().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ba().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Wa.print(this,e)}clone(){return this.throwIfDisposed(),Wa.clone(this)}toString(e=!1){return Da(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Wa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ba().makeVariable(this,e,t,n)}};function Ua(){return Pe("Tensor",(()=>Va))}Object.defineProperty(Va,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ua();var Ga=class extends Va{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!J(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ba().disposeTensor(this),this.dataId=e.dataId,Ba().incRef(this,null)}dispose(){Ba().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ga,Symbol.hasInstance,{value:e=>e instanceof Va&&null!=e.assign&&e.assign instanceof Function});var Ha,ja,qa,Ka,Xa,Ya,Za={};d(Za,{assertTypesMatch:()=>ns,getTensorsInContainer:()=>as,isTensorInList:()=>rs,makeTypesMatch:()=>ts}),(ja=Ha||(Ha={})).R0="R0",ja.R1="R1",ja.R2="R2",ja.R3="R3",ja.R4="R4",ja.R5="R5",ja.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(qa||(qa={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ka||(Ka={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Xa||(Xa={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ya||(Ya={}));var Ja={float32:Xa,int32:qa,bool:Ka,complex64:Ya};function Qa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ja[e][t]}function es(e){return Qa(e,"int32")}function ts(e,t){if(e.dtype===t.dtype)return[e,t];let n=Qa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ns(e,t){j(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function rs(e,t){return t.some((t=>t.id===e.id))}function as(e){let t=[];return ss(e,t,new Set),t}function ss(e,t,n){if(null==e)return;if(e instanceof Va)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),ss(a,t,n))}}function is(e){return null!=e.kernelName}var os=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},ls=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new os}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Jr(),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ra)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=_a();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:_a()-i})}if(Me().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){let t=r[e];t.data().then((e=>{Fa(e,t.dtype)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){aa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){aa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof O||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Jr(),Jr(e.stack||e.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return Jr(),Jr(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ls.nextTensorId++}nextVariableId(){return ls.nextVariableId++}clone(e){let t=hs.runKernel(en,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return hs.runKernel(ut,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==na(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=is(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(is(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=na(t,this.backendName);j(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=is(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=ra(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(j(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ge(e[0])&&(a=e.map((e=>$a(e))));let s=r.write(a,t,n),i=new Va(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=me(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new Va(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Ga(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*fe(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ga||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*fe(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ra(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Te(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=as(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(j(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));j(a instanceof Va,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Ne(Y(e),"float32");return hs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!J(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ps);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return j(ve(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{j(t.every((e=>e instanceof Va)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),j(n.value instanceof Va,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),j(ve(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];j(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),j(s.every((e=>e instanceof Va)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=_a(),n=await this.backend.time(e);return n.wallMs=_a()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new os;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function us(){let e=ze();if(null==e._tfengine){let t=new Re(e);e._tfengine=new ls(t)}return function(e){Le=e}(e._tfengine.ENV),function(e){Ba=e}((()=>e._tfengine)),e._tfengine}ls.nextTensorId=0,ls.nextVariableId=0;var hs=us();function ps(e,t){let n={a:e,b:t};return hs.runKernel(Ue,n)}var ds,cs={};function fs(e){ds=e}function ms(e){if(void 0!==ds)return ds;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function gs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}d(cs,{isBrowser:()=>gs,isMobile:()=>ms,mockIsMobile:()=>fs});var ys=Me();function bs(e,t){let n=e;if(ce(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ce(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Me().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xs(e,r,[]),r}function xs(e,t,n){if(n=n||[],!Array.isArray(e)&&!ce(e))return void j(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));j(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),j(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)xs(e[t],r,n.concat(t))}function vs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ws(e,t,n,r="numeric"){if(e instanceof Va)return vs(r,e.dtype,t,n),e;let a=xe(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),vs(r,a,t,n),null==e||!ce(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=bs(e,a);!ce(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Ca(e,a):X(e,[],!0);return hs.makeTensor(i,s,a)}function ks(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>ws(e,`${t}[${a}]`,n,r)))}ys.registerFlag("DEBUG",(()=>!1),(e=>{})),ys.registerFlag("IS_BROWSER",(()=>gs())),ys.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ys.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ys.registerFlag("PROD",(()=>!1)),ys.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ys.getBool("DEBUG"))),ys.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ys.registerFlag("IS_TEST",(()=>!1)),ys.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ys.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ys.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),ys.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1));var Is="__op";function Ss(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Is;let a=(...e)=>{hs.startScope(n);try{let t=r(...e);return Ae(t),hs.endScope(t),t}catch(e){throw hs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Ns=Ss({complex_:function(e,t){let n=ws(e,"real","complex"),r=ws(t,"imag","complex");q(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return hs.runKernel(dt,a)}});function Ts(e,t,n,r){if(null==r&&(r=xe(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ce(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){_e(t);let e=Y(t),r=Y(n);j(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Y(t.slice(e));j(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!ce(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Ca(e,r):X(e,[],!0),hs.makeTensor(e,t,r)}function Cs(e,t,n){return Ts(e,t,bs(e,n),n)}var _s={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Es(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:As(await Promise.all(r)),specs:n}}function $s(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=Y(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=_s[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Ps()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=Y(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=_s[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Cs(e,l,"float32"),o=Cs(n,l,"float32");r[i]=Ns(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Cs(t,l,o))}return r}function As(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Fs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Rs(e){return Fs?Buffer.byteLength(e):new Blob([e]).size}function Ds(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ms(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Os(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ls(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function zs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Rs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Rs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ps(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Bs=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bs.instance&&(Bs.instance=new Bs),Bs.instance}static registerSaveRouter(e){Bs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bs.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Bs.getInstance().loadRouters:Bs.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},Ws=e=>Bs.registerSaveRouter(e),Vs=e=>Bs.registerLoadRouter(e),Us=e=>Bs.getSaveHandlers(e),Gs=(e,t)=>Bs.getLoadHandlers(e,t),Hs="tensorflowjs",js="models_store",qs="model_info_store";function Ks(){if(!Me().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xs(e){let t=e.result;t.createObjectStore(js,{keyPath:"modelPath"}),t.createObjectStore(qs,{keyPath:"modelPath"})}var Ys=class{constructor(e){if(this.indexedDB=Ks(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Hs,1);r.onupgradeneeded=()=>Xs(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(js,"readonly"),r=t.objectStore(js).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=zs(t),i=a.transaction(qs,"readwrite"),o=i.objectStore(qs),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(js,"readwrite");let l=r.objectStore(js).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(qs);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Ys.URL_SCHEME="indexeddb://";var Zs=e=>Me().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ys.URL_SCHEME)?function(e){return new Ys(e)}(e.slice(Ys.URL_SCHEME.length)):null;Bs.registerSaveRouter(Zs),Bs.registerLoadRouter(Zs);var Js="/",Qs="tensorflowjs_models",ei="info",ti="model_topology",ni="weight_specs",ri="weight_data",ai="model_metadata";function si(e){return{info:[Qs,e,ei].join(Js),topology:[Qs,e,ti].join(Js),weightSpecs:[Qs,e,ni].join(Js),weightData:[Qs,e,ri].join(Js),modelMetadata:[Qs,e,ai].join(Js)}}function ii(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function oi(e){let t=e.split(Js);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Js)}var li=class{constructor(e){if(!Me().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=si(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=zs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Fs)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ii(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Fs){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};li.URL_SCHEME="localstorage://";var ui=e=>Me().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(li.URL_SCHEME)?function(e){return new li(e)}(e.slice(li.URL_SCHEME.length)):null;Bs.registerSaveRouter(ui),Bs.registerLoadRouter(ui);var hi="://",pi=class{constructor(){this.managers={}}static getInstance(){return null==pi.instance&&(pi.instance=new pi),pi.instance}static registerManager(e,t){j(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(hi)&&(e=e.slice(0,e.indexOf(hi))),j(e.length>0,(()=>"scheme must not be an empty string."));let n=pi.getInstance();j(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=pi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(pi.getInstance().managers)}};function di(e){if(-1===e.indexOf(hi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pi.getSchemes().join(",")}`);return{scheme:e.split(hi)[0],path:e.split(hi)[1]}}async function ci(e,t,n=!1){j(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Bs.getLoadHandlers(e);j(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),j(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Bs.getSaveHandlers(t);j(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),j(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=di(e).scheme,l=di(e).path,u=o===di(e).scheme,h=await a.load();n&&u&&await pi.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await pi.getManager(o).removeModel(l),p.modelArtifactsInfo}async function fi(){let e=pi.getSchemes(),t={};for(let n of e){let e=await pi.getManager(n).listModels();for(let r in e){t[n+hi+r]=e[r]}}return t}async function mi(e){let t=di(e);return pi.getManager(t.scheme).removeModel(t.path)}async function gi(e,t){return ci(e,t,!1)}async function yi(e,t){return ci(e,t,!0)}if(Me().get("IS_BROWSER")){Me().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{pi.registerManager(li.URL_SCHEME,new class{constructor(){j(Me().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),j("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=Qs+Js,n=Js+ei;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[oi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=si(e=function(e){return e.startsWith(li.URL_SCHEME)?e.slice(li.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return ii(t),n}})}catch(ja){}try{pi.registerManager(Ys.URL_SCHEME,new class{constructor(){this.indexedDB=Ks()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Hs,1);n.onupgradeneeded=()=>Xs(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(qs,"readonly"),s=a.objectStore(qs).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Ys.URL_SCHEME)?e.slice(Ys.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Hs,1);r.onupgradeneeded=()=>Xs(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(qs,"readwrite"),o=i.objectStore(qs),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(js,"readwrite");let r=a.objectStore(js).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(ja){}}var bi,xi=()=>m();function vi(e,t="float32",n){return t=t||"float32",_e(e),new Pa(e,t,n)}Me().get("IS_NODE")&&!Me().get("IS_BROWSER")&&Me().setPlatform("node",new class{constructor(){this.util=g(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Me().global.fetch?Me().global.fetch(e,t):(null==bi&&(bi=xi()),bi(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var wi=Ss({cast_:function(e,t){let n=ws(e,"x","cast");if(!pe(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return hs.runKernel(ut,r,a)}});var ki=Ss({clone_:function(e){let t={x:ws(e,"x","clone","string_or_numeric")};return hs.runKernel(en,t)}});function Ii(e,t=!1){}us(),function(e){Wa=e}({buffer:vi,cast:wi,clone:ki,print:Ii});var Si={};d(Si,{browserFiles:()=>Ci,browserHTTPRequest:()=>Oi,concatenateArrayBuffers:()=>Ds,copyModel:()=>gi,decodeWeights:()=>$s,encodeWeights:()=>Es,fromMemory:()=>Bi,fromMemorySync:()=>Wi,getLoadHandlers:()=>Gs,getModelArtifactsForJSON:()=>Ls,getModelArtifactsInfoForJSON:()=>zs,getSaveHandlers:()=>Us,http:()=>Mi,isHTTPScheme:()=>Ri,listModels:()=>fi,loadWeights:()=>$i,moveModel:()=>yi,registerLoadRouter:()=>Vs,registerSaveRouter:()=>Ws,removeModel:()=>mi,weightsLoaderFactory:()=>Ai,withSaveHandler:()=>Vi,withSaveHandlerSync:()=>Ui});function Ni(e){return new Promise((e=>setTimeout(e))).then(e)}var Ti=class{constructor(e){if(!Me().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ti.URL_SCHEME)&&(e=e.slice(Ti.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Os(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ni((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ni((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:zs(e)}}}};Ti.URL_SCHEME="downloads://";function Ci(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Ls(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ds(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Ms(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Ms(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function _i(e,t,n,r){var a;j(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){j(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),j(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),j(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ei(e,t){null==t&&(t={});let n=null==t.fetchFunc?Me().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await _i(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await _i(a,t.onProgress,.5,1)}async function $i(e,t="",n,r){return Ai((e=>Ei(e,{requestInit:r})))(e,t,n)}function Ai(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=_s[l]*Y(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(h[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=$s(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),d+=n})),p}}Bs.registerSaveRouter((e=>Me().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ti.URL_SCHEME)?function(e="model"){return new Ti(e)}(e.slice(Ti.URL_SCHEME.length)):null));var Fi=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(j("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Me().platform.fetch,j(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&j(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Os(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:zs(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ls(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Ds(await Ei(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Ri(e){return null!=e.match(Fi.URL_SCHEME_REGEX)}Fi.URL_SCHEME_REGEX=/^https?:\/\//;var Di=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ri(e))):Ri(e),n)return Mi(e,t)}return null};function Mi(e,t){return new Fi(e,t)}function Oi(e,t){return Mi(e,t)}Bs.registerSaveRouter(Di),Bs.registerLoadRouter(Di);var Li=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},zi=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Pi=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function Bi(e,t,n,r){let a=arguments;return new Pi(Wi(...a))}function Wi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Li(e):new Li({modelTopology:e}):new Li({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Vi(e){return new zi(e)}function Ui(e){return new zi(e)}var Gi={};d(Gi,{confusionMatrix:()=>xo});var Hi=Ss({matMul_:function(e,t,n=!1,r=!1){let a=ws(e,"a","matMul"),s=ws(t,"b","matMul");[a,s]=ts(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return hs.runKernel(at,i,o)}});var ji=Ss({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:ws(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return hs.runKernel(Wn,s,i)}});function qi(){Me().set("PROD",!0)}function Ki(){Me().set("DEBUG",!0)}function Xi(){Me().set("DEPRECATION_WARNINGS_ENABLED",!1)}function Yi(e){Me().getBool("DEPRECATION_WARNINGS_ENABLED")}function Zi(){hs.disposeVariables()}function Ji(){return hs}function Qi(){return hs.memory()}function eo(e){return hs.profile(e)}function to(e,t){return hs.tidy(e,t)}function no(e){as(e).forEach((e=>e.dispose()))}function ro(e){return hs.keep(e)}function ao(e){return hs.time(e)}function so(e){return hs.setBackend(e)}function io(){return hs.ready()}function oo(){return hs.backendName}function lo(e){hs.removeBackend(e)}function uo(e){return hs.findBackend(e)}function ho(e){return hs.findBackendFactory(e)}function po(e,t,n=1){return hs.registerBackend(e,t,n)}function co(){return hs.backend}function fo(e,t){Me().setPlatform(e,t)}!function(e){e}(Yi);var mo=Ss({imag_:function(e){let t={input:ws(e,"input","imag")};return hs.runKernel(nn,t)}});var go=Ss({neg_:function(e){let t={x:ws(e,"x","neg")};return hs.runKernel(Mn,t)}});var yo=Ss({real_:function(e){let t={input:ws(e,"input","real")};return hs.runKernel(Yn,t)}});var bo=Ss({transpose_:function(e,t,n){let r=ws(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),j(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{j(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?to((()=>{let e=yo(r),t=mo(r);return e=hs.runKernel(Br,{x:e},s),t=hs.runKernel(Br,{x:t},s),n&&(t=go(t)),Ns(e,t)})):hs.runKernel(Br,a,s)}});var xo=Ss({confusionMatrix_:function(e,t,n){let r=ws(e,"labels","confusionMatrix"),a=ws(t,"predictions","confusionMatrix");j(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),j(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),j(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),j(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),j(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=ji(wi(r,"int32"),n),i=ji(wi(a,"int32"),n),o=bo(s),l=Hi(o,i);return wi(l,"int32")}}),vo={};function wo(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function ko(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Io(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}d(vo,{assertAndGetBroadcastShape:()=>Io,getBroadcastDims:()=>wo,getReductionAxes:()=>ko});var So,No={};function To(e,t,n){if(K(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=bs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function Co(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=na(qr,hs.backendName)){let n={pixels:e},r={numChannels:t};return hs.runKernel(qr,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,h,p).data;else if(r||n)l=e.data;else if(s||a||o){if(null==So)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");So=new OffscreenCanvas(1,1).getContext("2d")}else So=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});So.canvas.width=h,So.canvas.height=p,So.drawImage(e,0,0,h,p),l=So.getImageData(0,0,h,p).data}if(4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return To(u,[p,h,t],"int32")}function _o(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Eo(e,t=3){let n=null;if(Me().getBool("WRAP_TO_IMAGEBITMAP")&&_o(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Co(n,t)}async function $o(e,t){let n=ws(e,"img","toPixels");if(!(e instanceof Va)){let e=n;n=wi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}d(No,{fromPixels:()=>Ao,fromPixelsAsync:()=>Eo,toPixels:()=>$o});var Ao=Ss({fromPixels_:Co}),Fo={};function Ro(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Y(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...ke(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}d(Fo,{prepareAndValidate:()=>Ro});var Do={};function Mo(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Oo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Mo(n,t,e)}function Lo(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:Y(t.shape)/o,sliceSize:i,strides:[...ke(n.slice(0,a)),1],outputSize:Y(n)}}d(Do,{calculateShapes:()=>Lo,validateInput:()=>Oo,validateUpdateShape:()=>Mo});var zo={};d(zo,{assertParamsValid:()=>Po,computeFlatOffset:()=>Jo,computeOutShape:()=>Wo,getNormalizedAxes:()=>Ho,isSliceContinous:()=>Zo,maskToAxes:()=>Bo,parseSliceParams:()=>Qo,sliceInfo:()=>el,startForAxis:()=>Xo,startIndicesWithElidedDims:()=>jo,stopForAxis:()=>Yo,stopIndicesWithElidedDims:()=>qo,stridesForAxis:()=>Ko,stridesWithElidedDims:()=>Vo});function Po(e,t,n){let r=e.shape.length;j(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),j(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)j(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Bo(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Wo(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Vo(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Uo(e,t,n){return n<=e?n:n-(t-1)}function Go(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ho(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=jo(i,l,u,r,e),p=qo(o,l,u,a,e),d=Vo(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=Xo(i,r,s,e,t,l),p[t]=Yo(o,a,s,e,t,l),d[t]=Ko(s,t,l);return{begin:h,end:p,strides:d}}function jo(e,t,n,r,a){let s=[...a],i=Go(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Uo(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function qo(e,t,n,r,a){let s=[...a],i=Go(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Uo(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=B(0,s[e],a[e])}return s}function Ko(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Xo(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=B(0,i,l-1),i}function Yo(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?B(0,i,l):B(-1,i,l-1),i}function Zo(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Jo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Qo(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{j(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(j(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function el(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)h&&0!=(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=tl(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=tl(d.end[t],1,d.strides[t],r,a,s);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function tl(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var nl={};d(nl,{Serializable:()=>rl,SerializationMap:()=>al,registerClass:()=>sl});var rl=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},al=class{constructor(){this.classNameMap={}}static getMap(){return null==al.instance&&(al.instance=new al),al.instance}static register(e){al.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function sl(e){j(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),j("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),j(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),al.register(e)}var il={};d(il,{TEST_EPSILON_FLOAT16:()=>ol,createVideoElement:()=>bl,encodeStrings:()=>yl,expectArrayBuffersEqual:()=>gl,expectArraysClose:()=>ll,expectArraysEqual:()=>dl,expectNumbersClose:()=>cl,expectPromiseToFail:()=>pl,expectValuesInRange:()=>ml,play:()=>xl,testEpsilon:()=>ul});var ol=.1;function ll(e,t,n){return null==n&&(n=ul()),hl(e,t,((e,t)=>fl(e,t,n)))}function ul(){return 32===hs.backend.floatPrecision()?.001:ol}function hl(e,t,n){let r=!0;if((ce(e)||ce(t))&&(r=!1),ce(e)&&ce(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=bs(e),r=bs(t);if(!J(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ce(e)?e:X(e),s=ce(t)?t:X(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function pl(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function dl(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ge(e)||ge(e[0])||ge(t)||ge(t[0])?hl(e,n,((e,t)=>e==t)):hl(e,t,((e,t)=>fl(e,t,0)))}function cl(e,t,n){if(null==n&&(n=ul()),!fl(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function fl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ml(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function gl(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function yl(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?yl(n):e[t]=$a(n)}return e}function bl(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function xl(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var vl="3.20.0";var wl=Ss({add_:function(e,t){let n=ws(e,"a","add"),r=ws(t,"b","add");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Ue,a)}});var kl=Ss({floorDiv_:function(e,t){let n=ws(e,"a","floorDiv"),r=ws(t,"b","floorDiv");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Kt,a)}});var Il=Ss({div_:function(e,t){let n=ws(e,"a","div"),r=ws(t,"b","div");if([n,r]=ts(n,r),"int32"===n.dtype&&"int32"===r.dtype)return kl(n,r);let a={a:n,b:r};return hs.runKernel(Mt,a,{})}});var Sl=Ss({mul_:function(e,t){let n=ws(e,"a","mul"),r=ws(t,"b","mul");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Dn,a)}});var Nl=Ss({abs_:function(e){let t=ws(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return hs.runKernel(ct,e)}{let e={x:t};return hs.runKernel(Be,e)}}});var Tl=Ss({acos_:function(e){let t={x:ws(e,"x","acos")};return hs.runKernel(We,t)}});var Cl=Ss({acosh_:function(e){let t={x:ws(e,"x","acosh")};return hs.runKernel(Ve,t)}});var _l=Ss({addN_:function(e){j(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),j(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>ws(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!J(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return hs.runKernel(Ge,r)}});var El=Ss({all_:function(e,t=null,n=!1){let r={x:ws(e,"x","all","bool")},a={axis:t,keepDims:n};return hs.runKernel(He,r,a)}});var $l=Ss({any_:function(e,t=null,n=!1){let r={x:ws(e,"x","any","bool")},a={axis:t,keepDims:n};return hs.runKernel(je,r,a)}});var Al=Ss({argMax_:function(e,t=0){let n={x:ws(e,"x","argMax")},r={axis:t};return hs.runKernel(qe,n,r)}});var Fl=Ss({argMin_:function(e,t=0){let n={x:ws(e,"x","argMin")},r={axis:t};return hs.runKernel(Ke,n,r)}});var Rl=Ss({asin_:function(e){let t={x:ws(e,"x","asin")};return hs.runKernel(Xe,t)}});var Dl=Ss({asinh_:function(e){let t={x:ws(e,"x","asinh")};return hs.runKernel(Ye,t)}});var Ml=Ss({atan_:function(e){let t={x:ws(e,"x","atan")};return hs.runKernel(Ze,t)}});var Ol=Ss({atan2_:function(e,t){let n=ws(e,"a","atan2"),r=ws(t,"b","atan2");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Qe,a)}});var Ll=Ss({atanh_:function(e){let t={x:ws(e,"x","atanh")};return hs.runKernel(Je,t)}});function zl(e,t,n,r,a="NHWC",s){return Wl(e,[...t,e[3]],n,s,r,null,null,Yl(a))}function Pl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Gl(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Wl(e,o,n,r,a,s,!1,i)}function Bl(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=Hl(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return Vl(e,o,n,r,a,!1,l,s)}function Wl(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=Gl(n),[b,x]=Gl(r),v=jl(c,b),w=jl(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Ul(e,t,n));let s=e[0],i=e[1],o=ql((s-t+2*r)/n+1,a),l=ql((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=ql((t-s+d+c)/r+1,o),p=ql((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,u,h,g,y,v,w,s,o),N=i?m*p:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Vl(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,v]=Hl(n),[w,k,I]=Hl(r),S=jl(f,w),N=jl(m,k),T=jl(g,I),{padInfo:C,outDepth:_,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Ul(e,t,r));let i=e[0],o=e[1],l=e[2],u=ql((i-t+2*a)/r+1,s),h=ql((o-t+2*a)/r+1,s),p=ql((l-t+2*a)/r+1,s);return[u,h,p,n]}([t,n,r,1],o,1,a,e,h);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,u,h,p,b,x,v,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,_,E,$]:"channelsLast"===i&&(c=[l,_,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:_,outHeight:E,outWidth:$,outChannels:A,padInfo:C,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Ul(e,t,n,r=1){let a=jl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Gl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Hl(e){return"number"==typeof e?[e,e,e]:e}function jl(e,t){return t<=1?e:e+(e-1)*(t-1)}function ql(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Kl(e){let[t,n,r]=Gl(e);return 1===t&&1===n&&1===r}function Xl(e,t){return Kl(e)||Kl(t)}function Yl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)j(Q(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{j(Q(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Jl=Ss({reshape_:function(e,t){let n={x:ws(e,"x","reshape","string_or_numeric")},r={shape:t};return hs.runKernel(Qn,n,r)}});var Ql=Ss({avgPool_:function(e,t,n,r,a){let s=ws(e,"x","avgPool","float32");j(Xl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Jl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Zl("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=hs.runKernel(et,l,u);return h=wi(h,s.dtype),o?Jl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var eu=Ss({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=ws(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),j(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),j("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Zl("avgPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=hs.runKernel(nt,u,h);return p=wi(p,o.dtype),l?Jl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var tu=Ss({concat_:function(e,t=0){j(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=ks(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ki(n[0]);let r=n,a={axis:t};return hs.runKernel(ft,r,a)}});var nu=Ss({sigmoid_:function(e){let t={x:ws(e,"x","sigmoid","float32")};return hs.runKernel(gr,t)}});var ru=Ss({slice_:function(e,t,n){let r=ws(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return hs.runKernel(dr,a,s)}});var au=Ss({tanh_:function(e){let t={x:ws(e,"x","tanh","float32")};return hs.runKernel(Or,t)}});var su=Ss({basicLSTMCell_:function(e,t,n,r,a,s){let i=ws(e,"forgetBias","basicLSTMCell"),o=ws(t,"lstmKernel","basicLSTMCell"),l=ws(n,"lstmBias","basicLSTMCell"),u=ws(r,"data","basicLSTMCell"),h=ws(a,"c","basicLSTMCell"),p=ws(s,"h","basicLSTMCell"),d=tu([u,p],1),c=Hi(d,o),f=wl(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=ru(f,[0,0],y),x=ru(f,[0,g],y),v=ru(f,[0,2*g],y),w=ru(f,[0,3*g],y),k=wl(Sl(nu(b),au(x)),Sl(h,nu(wl(i,v))));return[k,Sl(au(k),nu(w))]}});var iu=Ss({batchToSpaceND_:function(e,t,n){let r=ws(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));j(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),j(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),j(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return hs.runKernel(st,s,i)}});function ou(e){let t;return t=0===e.rank||1===e.rank?Jl(e,[1,1,1,e.size]):2===e.rank?Jl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Jl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var lu=Ss({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=ws(e,"x","batchNorm"),u=ws(t,"mean","batchNorm"),h=ws(n,"variance","batchNorm");null!=a&&(i=ws(a,"scale","batchNorm")),null!=r&&(o=ws(r,"offset","batchNorm")),j(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),j(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),j(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:ou(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=hs.runKernel(Xt,p,d);return Jl(c,l.shape)}});var uu=Ss({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=ws(e,"x","batchNorm"),u=ws(t,"mean","batchNorm"),h=ws(n,"variance","batchNorm");return null!=a&&(i=ws(a,"scale","batchNorm")),null!=r&&(o=ws(r,"offset","batchNorm")),j(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),j(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),j(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&j(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&j(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),lu(l,u,h,o,i,s)}});var hu=Ss({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=ws(e,"x","batchNorm"),u=ws(t,"mean","batchNorm"),h=ws(n,"variance","batchNorm");return null!=a&&(i=ws(a,"scale","batchNorm")),null!=r&&(o=ws(r,"offset","batchNorm")),j(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),j(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),j(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&j(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&j(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),lu(l,u,h,o,i,s)}});var pu=Ss({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=ws(e,"x","batchNorm"),u=ws(t,"mean","batchNorm"),h=ws(n,"variance","batchNorm");return null!=a&&(i=ws(a,"scale","batchNorm")),null!=r&&(o=ws(r,"offset","batchNorm")),j(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),j(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),j(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&j(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&j(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),lu(l,u,h,o,i,s)}});var du=Ss({bincount_:function(e,t,n){let r=ws(e,"x","bincount"),a=ws(t,"weights","bincount");j("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),j(n>=0,(()=>`size must be non-negative, but got ${n}.`)),j(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return hs.runKernel(it,s,i)}});var cu=Ss({broadcastArgs_:function(e,t){let n=ws(e,"s0","broadcastArgs","int32"),r=ws(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return hs.runKernel(lt,a)}});var fu=Ss({broadcastTo_:function(e,t){let n=ws(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Jl(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ki(n);let i={x:n},o={reps:s};return hs.runKernel(Lr,i,o)}});var mu=Ss({ceil_:function(e){let t={x:ws(e,"x","ceil","float32")};return hs.runKernel(ht,t)}});var gu=Ss({clipByValue_:function(e,t,n){let r=ws(e,"x","clipByValue");j(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return hs.runKernel(pt,a,s)}});var yu=Ss({concat1d_:function(e){return tu(e,0)}});var bu=Ss({concat2d_:function(e,t){return tu(e,t)}});var xu=Ss({concat3d_:function(e,t){return tu(e,t)}});var vu=Ss({concat4d_:function(e,t){return tu(e,t)}});var wu=Ss({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=ws(e,"x","conv2d","float32"),l=ws(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),j(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),j(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Zl("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];j(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),j(Xl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=hs.runKernel(mt,d,c);return h?Jl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var ku=Ss({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=ws(e,"x","conv1d"),l=ws(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=Jl(o,[1,o.shape[0],o.shape[1]])),j(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),j(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Zl("conv1d",r,i),j(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),j(Xl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),j("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=Jl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Jl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=wu(d,p,[1,n],r,"NHWC",[1,s],i);return Jl(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Iu=Ss({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){j(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),j(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),j(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),j(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];j(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),j(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Zl("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=hs.runKernel(yt,d,c);return u?Jl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Su=Ss({conv2dTranspose_:function(e,t,n,r,a,s){let i=ws(e,"x","conv2dTranspose"),o=ws(t,"filter","conv2dTranspose");return Iu(n,i,o,r,a,"NHWC",s)}});var Nu=Ss({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=ws(e,"x","conv3d"),o=ws(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),j(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),j(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),j(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),j(Xl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),j("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=hs.runKernel(bt,h,p);return u?Jl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Tu=Ss({conv3DBackpropInput_:function(e,t,n,r,a){j(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];j(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),j(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),j(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),j(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),j(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=hs.runKernel(vt,h,p);return o?Jl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Cu=Ss({conv3dTranspose_:function(e,t,n,r,a){let s=ws(e,"x","conv3dTranspose"),i=ws(t,"filter","conv3dTranspose");return Tu(n,s,i,r,a)}});var _u=Ss({cos_:function(e){let t={x:ws(e,"x","cos","float32")};return hs.runKernel(wt,t)}});var Eu=Ss({cosh_:function(e){let t={x:ws(e,"x","cosh","float32")};return hs.runKernel(kt,t)}});var $u=Ss({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:ws(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return hs.runKernel(It,a,s)}});var Au=Ss({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:ws(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return hs.runKernel(St,a,s)}});var Fu=Ss({denseBincount_:function(e,t,n,r=!1){let a=ws(e,"x","denseBincount"),s=ws(t,"weights","denseBincount");j("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),j(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),j(n>=0,(()=>`size must be non-negative, but got ${n}.`)),j(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return hs.runKernel(Tt,i,o)}});var Ru=Ss({depthToSpace_:function(e,t,n="NHWC"){let r=ws(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];j(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),j(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),j(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),j(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return hs.runKernel(Ct,o,l)}});var Du=Ss({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=ws(e,"x","depthwiseConv2d","float32"),l=ws(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),j(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),j(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let p="NHWC"===a?u.shape[3]:u.shape[1];j(p===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Zl("depthwiseConv2d",r,i);let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=hs.runKernel(_t,d,c);return h?Jl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Mu=Ss({diag_:function(e){let t={x:ws(e,"x","diag")};return hs.runKernel(At,t)}});var Ou=Ss({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=ws(e,"x","dilation2d"),o=ws(t,"filter","dilation2d");j(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),j(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),j("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=hs.runKernel(Ft,h,p);return u?Jl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Lu=Ss({equal_:function(e,t){let n=ws(e,"a","equal","string_or_numeric"),r=ws(t,"b","equal","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(Bt,a)}});var zu=Ss({where_:function(e,t,n){let r=ws(t,"a","where"),a=ws(n,"b","where"),s=ws(e,"condition","where","bool"),i=Io(Io(s.shape,r.shape),a.shape),o={condition:fu(s,i),t:fu(r,i),e:fu(a,i)};return hs.runKernel(hr,o)}});var Pu=Ss({zerosLike_:function(e){let t={x:ws(e,"x","zerosLike")};return hs.runKernel(Hr,t)}});var Bu=Ss({divNoNan_:function(e,t){let n=ws(e,"a","div"),r=ws(t,"b","div");[n,r]=ts(n,r);let a=Il(n,r),s=Pu(a),i=Lu(r,s);return zu(i,s,a)}});var Wu=Ss({dot_:function(e,t){let n=ws(e,"t1","dot"),r=ws(t,"t2","dot");j(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(j(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Jl(n,[1,-1]),t=Jl(r,[-1,1]),a=Hi(e,t);return Jl(a,[])}if(1===n.rank&&2===r.rank){let e=Jl(n,[1,-1]),t=Jl(r,[r.shape[0],r.shape[1]]),a=Hi(e,t);return Jl(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Jl(r,[-1,1]),t=Hi(n,e);return Jl(t,[t.size])}{let e=Jl(r,[r.shape[0],r.shape[1]]);return Hi(n,e)}}});var Vu=Ss({einsum_:function(e,...t){let n=t.map(((e,t)=>ws(e,`tensors${t}`,"einsum"))),r={equation:e};return hs.runKernel(Ot,n,r)}});var Uu=Ss({elu_:function(e){let t={x:ws(e,"x","elu","float32")};return hs.runKernel(Lt,t)}});var Gu=Ss({erf_:function(e){let t=ws(e,"x","erf");j("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=wi(t,"float32"));let n={x:t};return hs.runKernel(Pt,n)}});function Hu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ju(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function qu(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Ku(e,t){return ju(e,t.map((e=>1)),t)}function Xu(e,t,n){j(Hu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Yu(e,t){if(Hu(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Zu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ju(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Qu=Ss({max_:function(e,t=null,n=!1){let r={x:ws(e,"x","max")},a={reductionIndices:t,keepDims:n};return hs.runKernel(wn,r,a)}});var eh=Ss({min_:function(e,t=null,n=!1){let r={x:ws(e,"x","min")},a={axis:t,keepDims:n};return hs.runKernel(En,r,a)}});var th=Ss({pow_:function(e,t){let n=ws(e,"base","pow"),r=ws(t,"exp","pow");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Hn,a)}});function nh(e,t){if((ce(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ce(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ts(e,[],[],t)}var rh=Ss({sqrt_:function(e){let t={x:ws(e,"x","sqrt","float32")};return hs.runKernel(br,t)}});var ah=Ss({square_:function(e){let t=ws(e,"x","square");return hs.runKernel("Square",{x:t},{})}});var sh=Ss({sum_:function(e,t=null,n=!1){let r=ws(e,"x","sum");"bool"===r.dtype&&(r=wi(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return hs.runKernel(xr,a,s)}});function ih(e,t,n=null){if(0===e.rank)return Nl(e);if(1!==e.rank&&null===n)return ih(Jl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return sh(Nl(e),n);if(t===1/0)return Qu(Nl(e),n);if(t===-1/0)return eh(Nl(e),n);if("euclidean"===t||2===t)return rh(sh(th(Nl(e),nh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Qu(sh(Nl(e),n[0]),n[1]-1);if(t===1/0)return Qu(sh(Nl(e),n[1]),n[0]);if(t===-1/0)return eh(sh(Nl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return rh(sh(ah(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var oh=Ss({norm_:function(e,t="euclidean",n=null,r=!1){let a=ih(e=ws(e,"x","norm"),t,n),s=a.shape;if(r){let t=ie(n,e.shape);s=Ku(a.shape,t)}return Jl(a,s)}});var lh=Ss({euclideanNorm_:function(e,t=null,n=!1){return oh(e,"euclidean",t,n)}});var uh=Ss({exp_:function(e){let t={x:ws(e,"x","exp")};return hs.runKernel(Wt,t)}});var hh=Ss({expandDims_:function(e,t=0){let n=ws(e,"x","expandDims","string_or_numeric");j(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return hs.runKernel(Vt,r,a)}});var ph=Ss({expm1_:function(e){let t={x:ws(e,"x","expm1")};return hs.runKernel(Ut,t)}});var dh=Ss({tile_:function(e,t){let n=ws(e,"x","tile","string_or_numeric");j(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return hs.runKernel(Lr,r,a)}});var ch=Ss({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=vi([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=Jl(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return dh(hh(i,0),[n[0],1,1]);if(2===n.length)return dh(hh(hh(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return dh(hh(hh(hh(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function fh(e,t,n){let r={shape:e,value:t,dtype:n};return hs.runKernel(Ht,{},r)}var mh=Ss({floor_:function(e){let t={x:ws(e,"x","floor","float32")};return hs.runKernel(qt,t)}});var gh=Ss({gather_:function(e,t,n=0,r=0){let a={x:ws(e,"x","gather"),indices:ws(t,"indices","gather","int32")},s={axis:n,batchDims:r};return hs.runKernel(Yt,a,s)}});var yh=Ss({greater_:function(e,t){let n=ws(e,"a","greater","string_or_numeric"),r=ws(t,"b","greater","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(Jt,a)}});var bh=Ss({greaterEqual_:function(e,t){let n=ws(e,"a","greaterEqual","string_or_numeric"),r=ws(t,"b","greaterEqual","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(Qt,a)}});var xh=Ss({isFinite_:function(e){let t={x:ws(e,"x","isFinite")};return hs.runKernel(rn,t)}});var vh=Ss({isInf_:function(e){let t={x:ws(e,"x","isInf")};return hs.runKernel(an,t)}});var wh=Ss({isNaN_:function(e){let t={x:ws(e,"x","isNaN")};return hs.runKernel(sn,t)}});var kh=Ss({leakyRelu_:function(e,t=.2){let n={x:ws(e,"x","leakyRelu")},r={alpha:t};return hs.runKernel(on,n,r)}});var Ih=Ss({less_:function(e,t){let n=ws(e,"a","less","string_or_numeric"),r=ws(t,"b","less","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(ln,a)}});var Sh=Ss({lessEqual_:function(e,t){let n=ws(e,"a","lessEqual","string_or_numeric"),r=ws(t,"b","lessEqual","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(un,a)}});function Nh(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return hs.runKernel(hn,{},r)}var Th=Ss({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=ws(e,"x","localResponseNormalization");j(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),j(Q(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Jl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=hs.runKernel(xn,l,u);return o?Jl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Ch=Ss({log_:function(e){let t={x:ws(e,"x","log","float32")};return hs.runKernel(pn,t)}});var _h=Ss({log1p_:function(e){let t={x:ws(e,"x","log1p")};return hs.runKernel(dn,t)}});function Eh(e){return j(ve(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=ws(t,"x","tf.grad","string_or_numeric"),a=null!=n?ws(n,"dy","tf.grad"):null;return hs.tidy((()=>{let{value:t,grads:n}=hs.gradients((()=>e(r)),[r],a);return null!=a&&q(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Mh(n),n[0]}))}}function $h(e){return j(ve(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{j(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=ks(t,"args","tf.grads","string_or_numeric"),a=null!=n?ws(n,"dy","tf.grads"):null;return hs.tidy((()=>{let{value:t,grads:n}=hs.gradients((()=>e(...r)),r,a);return null!=a&&q(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mh(n),n}))}}function Ah(e){return j(ve(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{j(t instanceof Va,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),j(null==n||n instanceof Va,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=hs.gradients((()=>e(t)),[t],n);return Mh(r),{grad:r[0],value:a}}}function Fh(e){return j(ve(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{j(Array.isArray(t)&&t.every((e=>e instanceof Va)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),j(null==n||n instanceof Va,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=hs.gradients((()=>e(...t)),t,n);return null!=n&&q(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Mh(r.grads),r}}function Rh(e,t){j(ve(e),(()=>"The f passed in variableGrads(f) must be a function")),j(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ga)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in hs.registeredVariables)t.push(hs.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;j((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=hs.gradients(e,t,null,!0);j(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),j(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Dh(e){return hs.customGrad(e)}function Mh(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Oh=Ss({softplus_:function(e){let t={x:ws(e,"x","softplus")};return hs.runKernel(yr,t)}});var Lh=Ss({logSigmoid_:function(e){let t=ws(e,"x","logSigmoid");return Dh((e=>({value:go(Oh(go(e))),gradFunc:t=>Sl(t,nu(go(e)))})))(t)}});var zh=Ss({sub_:function(e,t){let n=ws(e,"a","sub"),r=ws(t,"b","sub");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Dr,a)}});var Ph=Ss({logSoftmax_:function(e,t=-1){let n=ws(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Dh(((e,n)=>{let r=Qu(e,t,!0),a=zh(e,r),s=zh(wi(a,"float32"),Ch(sh(uh(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=uh(r);return zh(e,Sl(sh(e,t,!0),a))}}}))(n)}});var Bh=Ss({logSumExp_:function(e,t=null,n=!1){let r=ws(e,"x","logSumExp"),a=ie(t,r.shape),s=Qu(r,a,!0),i=zh(r,s),o=uh(i),l=sh(o,a),u=Ch(l),h=wl(Jl(s,u.shape),u);if(n){let e=Ku(h.shape,a);return Jl(h,e)}return h}});var Wh=Ss({logicalAnd_:function(e,t){let n=ws(e,"a","logicalAnd","bool"),r=ws(t,"b","logicalAnd","bool");Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(cn,a)}});var Vh=Ss({logicalNot_:function(e){let t={x:ws(e,"x","logicalNot","bool")};return hs.runKernel(fn,t)}});var Uh=Ss({logicalOr_:function(e,t){let n=ws(e,"a","logicalOr","bool"),r=ws(t,"b","logicalOr","bool");Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(mn,a)}});var Gh=Ss({logicalXor_:function(e,t){let n=ws(e,"a","logicalXor","bool"),r=ws(t,"b","logicalXor","bool");return Io(n.shape,r.shape),Wh(Uh(e,t),Vh(Wh(e,t)))}}),Hh=2147483648;var jh=Ss({searchSorted_:function(e,t,n="left"){let r=ws(e,"sortedSequence","searchSorted"),a=ws(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=Jl(r,[-1,s]),l=Jl(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Y(l.shape)>=Hh)throw new Error(`values tensor size must less than ${Hh}`);if(o.shape[1]>=Hh)throw new Error(`trailing dim_size must less than ${Hh} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},h={side:n};return hs.runKernel(ur,u,h)}});function qh(e,t){return jh(e,t,"left")}var Kh=Ss({maxPool_:function(e,t,n,r,a){let s=ws(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=Jl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),j(Xl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Zl("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=hs.runKernel(In,l,u);return o?Jl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Xh=Ss({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=ws(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),j(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),j("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Zl("maxPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=hs.runKernel(Nn,u,h);return l?Jl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Yh=Ss({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:ws(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=hs.runKernel(Cn,s,i);return{result:o[0],indexes:o[1]}}});var Zh=Ss({maximum_:function(e,t){let n=ws(e,"a","maximum"),r=ws(t,"b","maximum");[n,r]=ts(n,r),"bool"===n.dtype&&(n=wi(n,"int32"),r=wi(r,"int32")),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(kn,a)}});var Jh=Ss({mean_:function(e,t=null,n=!1){let r={x:ws(e,"x","mean")},a={axis:t,keepDims:n};return hs.runKernel(_n,r,a)}});function Qh(e,t="float32"){if("complex64"===t){let t=Qh(e,"float32"),n=Qh(e,"float32");return Ns(t,n)}let n=Te(Y(e),t);return hs.makeTensor(n,e,t)}function ep(e,t="float32"){if("complex64"===t){let t=ep(e,"float32"),n=Qh(e,"float32");return Ns(t,n)}let n=Ne(Y(e),t);return hs.makeTensor(n,e,t)}function tp(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=ws(e,"x","meshgrid",e instanceof Va?e.dtype:"float32");if(void 0===t)return[r];let a=ws(t,"y","meshgrid",t instanceof Va?t.dtype:"float32"),s=Y(r.shape),i=Y(a.shape);return"xy"===n?(r=Jl(r,[1,-1]),a=Jl(a,[-1,1]),[Hi(ep([i,1],r.dtype),r),Hi(a,ep([1,s],a.dtype))]):(r=Jl(r,[-1,1]),a=Jl(a,[1,-1]),[Hi(r,ep([1,i],r.dtype)),Hi(ep([s,1],a.dtype),a)])}var np=Ss({minimum_:function(e,t){let n=ws(e,"a","minimum"),r=ws(t,"b","minimum");[n,r]=ts(n,r),"bool"===n.dtype&&(n=wi(n,"int32"),r=wi(r,"int32")),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel($n,a)}});var rp=Ss({mirrorPad_:function(e,t,n){j("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=ws(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");j(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)j(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),j(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return hs.runKernel(An,i,s)}});var ap=Ss({mod_:function(e,t){let n=ws(e,"a","mod"),r=ws(t,"b","mod");[n,r]=ts(n,r);let a={a:n,b:r};return hs.runKernel(Fn,a)}});var sp=Ss({moments_:function(e,t=null,n=!1){let r=ie(t,(e=ws(e,"x","moments")).shape),a=Jh(e,r,n),s=a.shape;n||(s=Ku(a.shape,r));let i=ah(zh(wi(e,"float32"),Jl(a,s)));return{mean:a,variance:Jh(i,r,n)}}});var ip=Ss({multiRNNCell_:function(e,t,n,r){let a=ws(t,"data","multiRNNCell"),s=ks(n,"c","multiRNNCell"),i=ks(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}});var op=Ss({multinomial_:function(e,t,n,r=!1){let a=ws(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Jl(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=hs.runKernel(Rn,o,l);return 1===i?Jl(u,[u.size]):u}});var lp=Ss({notEqual_:function(e,t){let n=ws(e,"a","notEqual","string_or_numeric"),r=ws(t,"b","notEqual","string_or_numeric");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(On,a)}});var up=Ss({onesLike_:function(e){let t={x:ws(e,"x","onesLike")};return hs.runKernel(Bn,t)}});var hp=Ss({outerProduct_:function(e,t){let n=ws(e,"v1","outerProduct"),r=ws(t,"v2","outerProduct");j(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Jl(n,[-1,1]),s=Jl(r,[1,-1]);return Hi(a,s)}});var pp=Ss({pad_:function(e,t,n=0){let r=ws(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return hs.runKernel(Un,s,a)}});var dp=Ss({pad1d_:function(e,t,n=0){return j(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),pp(e,[t],n)}});var cp=Ss({pad2d_:function(e,t,n=0){return j(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pp(e,t,n)}});var fp=Ss({pad3d_:function(e,t,n=0){return j(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pp(e,t,n)}});var mp=Ss({pad4d_:function(e,t,n=0){return j(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pp(e,t,n)}});var gp=Ss({spaceToBatchND_:function(e,t,n){let r=ws(e,"x","spaceToBatchND");j(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),j(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),j(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return hs.runKernel(vr,a,s)}});var yp=Ss({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=ws(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),j(Xl(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let h,p=Pl(l.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];h="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([p.inHeight,p.inWidth],d,h),g=c?r:"valid",y=c?l:gp(l,d,f),b=("avg"===n?()=>Ql(y,t,s,g,i):()=>Kh(y,t,s,g,i))(),x=c?b:iu(b,d,m);return u?Jl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var bp=Ss({prelu_:function(e,t){let n={x:ws(e,"x","prelu"),alpha:ws(t,"alpha","prelu")};return hs.runKernel(jn,n)}});var xp=Ss({prod_:function(e,t=null,n=!1){let r=ws(e,"x","prod");"bool"===r.dtype&&(r=wi(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return hs.runKernel(qn,a,s)}});var vp=Ss({raggedTensorToTensor_:function(e,t,n,r,a){let s=ws(e,"shape","raggedTensorToTensor","int32"),i=ws(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:ws(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>ws(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:a};return hs.runKernel(Kn,o,l)}});var wp=Ss({rand_:function(e,t,n){let r=Y(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return hs.makeTensor(a,e,n)}}),kp=c(N()),Ip=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=kp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var Sp=Ss({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=kp.alea(a.toString()),this.randn=new Ip(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=vi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Np=Ss({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Ip(t,n,r,!1,a),i=vi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Tp=Ss({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Np(e,0,1,t,n)}});var Cp=Ss({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=vi(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=kp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function _p(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return hs.runKernel(Xn,{},a)}var Ep=Ss({reciprocal_:function(e){let t={x:ws(e,"x","reciprocal")};return hs.runKernel(Zn,t)}});var $p=Ss({relu_:function(e){let t={x:ws(e,"x","relu")};return hs.runKernel(Jn,t)}});var Ap=Ss({relu6_:function(e){let t={x:ws(e,"x","relu6")};return hs.runKernel(ar,t)}});var Fp=Ss({reverse_:function(e,t){let n={x:ws(e,"x","reverse")},r={dims:t};return hs.runKernel(sr,n,r)}});var Rp=Ss({reverse1d_:function(e){let t=ws(e,"x","reverse");return j(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Fp(t,0)}});var Dp=Ss({reverse2d_:function(e,t){let n=ws(e,"x","reverse");return j(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Fp(n,t)}});var Mp=Ss({reverse3d_:function(e,t){let n=ws(e,"x","reverse");return j(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Fp(n,t)}});var Op=Ss({reverse4d_:function(e,t){let n=ws(e,"x","reverse");return j(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Fp(n,t)}});var Lp=Ss({round_:function(e){let t={x:ws(e,"x","round")};return hs.runKernel(ir,t)}});var zp=Ss({rsqrt_:function(e){let t={x:ws(e,"x","rsqrt","float32")};return hs.runKernel(or,t)}});var Pp=Ss({selu_:function(e){let t={x:ws(e,"x","selu")};return hs.runKernel(pr,t)}});var Bp=Ss({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=ws(e,"x","separableConv2d"),l=ws(t,"depthwiseFilter","separableConv2d"),u=ws(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");j(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),j(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),j(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),j(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),j(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];j(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Du(h,l,r,a,i,s),m=wu(f,u,1,"valid",i);return p?Jl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Wp=async function(e,t){let n=ws(e,"x","setdiff1d"),r=ws(t,"y","setdiff1d");j(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),j(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),j(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Pa([o],n.dtype),u=new Pa([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Vp=Ss({sign_:function(e){let t={x:ws(e,"x","sign")};return hs.runKernel(mr,t)}});var Up=Ss({sin_:function(e){let t={x:ws(e,"x","sin","float32")};return hs.runKernel(cr,t)}});var Gp=Ss({sinh_:function(e){let t={x:ws(e,"x","sinh")};return hs.runKernel(fr,t)}});var Hp=Ss({slice1d_:function(e,t,n){let r=ws(e,"x","slice1d");return j(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),ru(r,[t],[n])}});var jp=Ss({slice2d_:function(e,t,n){let r=ws(e,"x","slice2d");return j(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),ru(r,t,n)}});var qp=Ss({slice3d_:function(e,t,n){let r=ws(e,"x","slice3d");return j(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),ru(r,t,n)}});var Kp=Ss({slice4d_:function(e,t,n){let r=ws(e,"x","slice4d");return j(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),ru(r,t,n)}});var Xp=Ss({softmax_:function(e,t=-1){let n=ws(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return hs.runKernel(kr,r,a)}});var Yp=Ss({fft_:function(e){j("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return hs.runKernel(Gt,t)}});var Zp=Ss({ifft_:function(e){j("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return hs.runKernel(tn,t)}});var Jp=Ss({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Jl(e,[r,n]);t=Zp(a)}else{let a=[r,2*(n-1)],s=Jl(yo(e),[r,n]),i=Jl(mo(e),[r,n]),o=Fp(ru(s,[0,1],[r,n-2]),1),l=Sl(Fp(ru(i,[0,1],[r,n-2]),1),nh(-1)),u=tu([s,o],1),h=tu([i,l],1),p=Jl(Ns(u,h),[a[0],a[1]]);t=Zp(p)}if(t=yo(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Jl(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var Qp=Ss({split_:function(e,t,n=0){let r={x:ws(e,"x","split")},a={numOrSizeSplits:t,axis:n};return hs.runKernel(wr,r,a)}});var ed=Ss({rfft_:function(e,t){j("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=ru(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=tu([e,Qh(a)],e.shape.length-1),r=t}else n=e;let s=Pu(n),i=Jl(Ns(n,s),[a,r]),o=Yp(i),l=Math.floor(r/2)+1,u=yo(o),h=mo(o),p=Qp(u,[l,r-l],u.shape.length-1),d=Qp(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Jl(Ns(p[0],d[0]),c)}});var td=Ss({squaredDifference_:function(e,t){let n=ws(e,"a","squaredDifference"),r=ws(t,"b","squaredDifference");[n,r]=ts(n,r),Io(n.shape,r.shape);let a={a:n,b:r};return hs.runKernel(_r,a,{})}});var nd=Ss({squeeze_:function(e,t){let n=ws(e,"x","squeeze","string_or_numeric");return Jl(n,oe(n.shape,t).newShape)}});var rd=Ss({stack_:function(e,t=0){let n=ks(e,"tensors","stack","string_or_numeric");j(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&j(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return hs.runKernel(Vn,r,a)}});var ad=Ss({step_:function(e,t=0){let n={x:ws(e,"x","step")},r={alpha:t};return hs.runKernel(jr,n,r)}});var sd=Ss({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:ws(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return hs.runKernel($r,u,h)}});var id=Ss({tan_:function(e){let t={x:ws(e,"x","tan","float32")};return hs.runKernel(Mr,t)}});function od(e,t){K(e);let n=bs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ts(e,null,n,t)}function ld(e,t,n){if(K(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=bs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ts(e,t,r,n)}function ud(e,t,n){if(K(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=bs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function hd(e,t,n){if(K(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=bs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ts(e,t,r,n)}function pd(e,t,n){if(K(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=bs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ts(e,t=t||r,r,n)}var dd=Ss({topk_:function(e,t=1,n=!0){let r=ws(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=hs.runKernel(zr,s,i);return{values:o,indices:l}}});var cd=Ss({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Ip(t,n,r,!0,a),i=vi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var fd=Ss({unique_:function(e,t=0){let n=ws(e,"x","unique","string_or_numeric");j(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=hs.runKernel(Wr,r,a);return{values:s,indices:i}}});var md=Ss({unsortedSegmentSum_:function(e,t,n){let r=ws(e,"x","unsortedSegmentSum"),a=ws(t,"segmentIds","unsortedSegmentSum","int32");j(Q(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return hs.runKernel(Ur,s,i)}});var gd=Ss({unstack_:function(e,t=0){let n=ws(e,"x","unstack","string_or_numeric");j(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return hs.runKernel(Vr,r,a)}});function yd(e,t){return jh(e,t,"right")}function bd(e,t=!0,n,r){return hs.makeVariable(e,t,n,r)}function xd(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=vi(e,"int32"),a=vi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var vd=async function(e){let t=ws(e,"condition","whereAsync","bool"),n=await t.data(),r=xd(t.shape,n);return e!==t&&t.dispose(),r};var wd=async function(e,t,n){let r=ws(e,"tensor","boolMask"),a=ws(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;j(i>0,(()=>"mask cannot be scalar")),q(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=Jl(r,u),p=Jl(a,[-1]),d=await vd(p),c=nd(d,[1]),f=gh(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f};var kd=Ss({movingAverage_:function(e,t,n,r,a=!0){let s=ws(e,"v","movingAverage"),i=ws(t,"x","movingAverage"),o=ws(n,"decay","movingAverage");ns(s,i),j(J(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=nh(1),u=zh(l,o),h=Sl(zh(i,s),u);if(a){j(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=ws(r,"step","movingAverage");h=Il(h,zh(l,th(o,e)))}return wl(s,h)}});var Id=Ss({scatterND_:function(e,t,n){let r=ws(e,"indices","scatterND","int32"),a=ws(t,"updates","scatterND");Oo(a,r,n);let s={indices:r,updates:a},i={shape:n};return hs.runKernel(lr,s,i)}});var Sd=Ss({sparseToDense_:function(e,t,n,r=0){let a=ws(e,"sparseIndices","sparseToDense","int32"),s=ws(t,"sparseValues","sparseToDense","string_or_numeric"),i=ws(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return hs.runKernel(Cr,o,l)}});var Nd=Ss({gatherND_:function(e,t){let n=ws(t,"indices","gatherND","int32"),r={params:ws(e,"x","gatherND","string_or_numeric"),indices:n};return hs.runKernel(Zt,r)}});var Td=Ss({dropout_:function(e,t,n,r){let a=ws(e,"x","dropout");if(j("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),j(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Va?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(J(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Il(mh(wl(Cp(s,0,1,"float32",r),i)),i);return Sl(a,o)}});function Cd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function _d(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return od(a,"float32")}var Ed=async function(e,t,n=1){let r=ws(e,"predictions","inTopK"),a=ws(t,"targets","inTopK");j(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),j(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),q(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];j(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=le("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Cs(h,a.shape,"bool")},$d={};d($d,{conv2d:()=>Od,depthwiseConv2d:()=>Pd,matMul:()=>Bd});var Ad=Ss({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Jl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),j(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),j(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),j(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];j(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),j(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),Zl("conv2dDerFilter",a,i);let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return hs.runKernel(gt,p,d)}});function Fd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Sl(e,ad(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Rd(e,t){let n=t,r=ko(e.shape,t.shape);return r.length>0&&(n=sh(n,r)),Jl(n,e.shape)}function Dd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return $p(e);if("elu"===t)return Uu(e);if("relu6"===t)return Ap(e);if("prelu"===t)return bp(e,n);if("leakyrelu"===t)return kh(e,r);if("sigmoid"===t)return nu(e);throw new Error(`Unknown fused activation ${t}.`)}var Md=(e,t)=>!(e>0)||"linear"===t;var Od=Ss({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Md(hs.state.gradientDepth,l)){j("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=wu(e,t,n,r,a,s,i);return null!=o&&(p=wl(p,o)),Dd(p,l,u,h)}let p=ws(e,"x","conv2d","float32"),d=ws(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Jl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),j(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),j(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Zl("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];j(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),j(Xl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=Wl(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=ws(o,"bias","fused conv2d"),[g]=ts(g,p),"NHWC"===a?Io(b.outShape,g.shape):(j(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),j(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(j(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)j(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Io(e,b.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=ws(u,"prelu weights","fused conv2d")}let x=(e,t)=>{j("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));let[i,o,u,h]=t,p=Fd(e,u,l);j(Kl(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let d=[Iu(o.shape,p,i,n,r),Ad(o,p,i.shape,n,r)];if(null!=h){let e=Rd(h,p);d.push(e)}return d},v={x:c,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Dh(((e,t,n)=>{let r=hs.runKernel(Yr,v,w);return n([t,e,r]),f&&(r=Jl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,d):Dh(((e,t,n,r)=>{let a=hs.runKernel(Yr,v,w);return r([t,e,a,n]),f&&(a=Jl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,d,g)}});var Ld=Ss({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Jl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return hs.runKernel(Et,u,h)}});var zd=Ss({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=hs.runKernel($t,u,h);return l?Jl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Pd=Ss({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Md(hs.state.gradientDepth,l)){let p=Du(e,t,n,r,a,s,i);return null!=o&&(p=wl(p,o)),Dd(p,l,u,h)}let p=ws(e,"x","depthwiseConv2d","float32"),d=ws(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=Jl(p,[1,p.shape[0],p.shape[1],p.shape[2]])),j(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),j(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),j(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),j(Xl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Zl("fused depthwiseConv2d",r,i);let m,g,y=Wl(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=ws(o,"bias","fused conv2d"),[m]=ts(m,p),Io(y.outShape,m.shape)),null!=u&&(g=ws(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{j(Kl(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=Fd(e,u,l),d=zd(o.shape,p,a,n,r,s,i),c=Ld(o,p,a.shape,n,r,s,i);if(null!=h){return[d,c,Rd(m,p)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Dh(((e,t,n)=>{let r=hs.runKernel(Zr,x,v);return n([t,e,r]),f&&(r=Jl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):Dh(((e,t,n,r)=>{let a=hs.runKernel(Zr,x,v);return r([t,e,a,n]),f&&(a=Jl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Bd=Ss({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Md(hs.state.gradientDepth,s)){let l=Hi(e,t,n,r);return null!=a&&(l=wl(l,a)),Dd(l,s,i,o)}let l=ws(e,"a","fused matMul"),u=ws(t,"b","fused matMul");[l,u]=ts(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Y(f),y=Y(m);j(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=Io(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),w=Jl(l,n?[g,h,d]:[g,d,h]),k=Jl(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=ws(a,"bias","fused matMul"),[b]=ts(b,l),Io(v,b.shape)),null!=i&&(x=ws(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=Fd(Jl(e,h.shape),h,s);if(n||r?!n&&r?(i=Hi(d,u,!1,!1),o=Hi(d,l,!0,!1)):n&&!r?(i=Hi(u,d,!1,!0),o=Hi(l,d,!1,!1)):(i=Hi(u,d,!0,!0),o=Hi(d,l,!0,!0)):(i=Hi(d,u,!1,!0),o=Hi(l,d,!0,!1)),null!=a){return[i,o,Rd(p,d)]}return[i,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Dh(((e,t,n)=>{let r=hs.runKernel(Xr,S,N);return n([e,t,r]),{value:Jl(r,v),gradFunc:I}}))(w,k):Dh(((e,t,n,r)=>{let a=hs.runKernel(Xr,S,N);return r([e,t,a,n]),{value:Jl(a,v),gradFunc:I}}))(w,k,b)}});var Wd=Ss({hammingWindow_:function(e){return _d(e,.54,.46)}});var Vd=Ss({hannWindow_:function(e){return _d(e,.5,.5)}});var Ud=Ss({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(ru(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=tu([ru(e,s,t-r),fh([r],a)]);i.push(o),s+=n}return 0===i.length?ld([],[0,t]):Jl(tu(i),[i.length,t])}});var Gd=Ss({stft_:function(e,t,n,r,a=Vd){null==r&&(r=Cd(t));let s=Ud(e,t,n),i=Sl(s,a(t));return ed(i,r)}});var Hd=Ss({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=ws(e,"image","cropAndResize"),o=ws(t,"boxes","cropAndResize","float32"),l=ws(n,"boxInd","cropAndResize","int32"),u=o.shape[0];j(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),j(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),j(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),j(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),j(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),j("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return hs.runKernel(Nt,h,p)}});var jd=Ss({flipLeftRight_:function(e){let t=ws(e,"image","flipLeftRight","float32");j(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return hs.runKernel(jt,n,{})}});var qd=Ss({grayscaleToRGB_:function(e){let t=ws(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];j(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),j(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,dh(t,a)}});var Kd=Ss({rotateWithOffset_:function(e,t,n=0,r=.5){let a=ws(e,"image","rotateWithOffset","float32");j(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return hs.runKernel(Kr,s,i)}});function Xd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),j(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),j(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),j(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),j(1===t.rank,(()=>"scores must be a 1D tensor")),j(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),j(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Yd=Ss({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=ws(e,"boxes","nonMaxSuppression","float32"),i=ws(t,"scores","nonMaxSuppression","float32"),o=Xd(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return hs.runKernel(Ln,{boxes:s,scores:i},l)}});function Zd(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Jd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Jd(e,t){return e>t?1:e<t?-1:0}function Qd(e,t,n,r,a){return nc(e,t,n,r,a,0)}function ec(e,t,n,r,a,s){return nc(e,t,n,r,a,0,!1,s,!0)}function tc(e,t,n,r,a,s){return nc(e,t,n,r,a,s,!0)}function nc(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(sc);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=rc(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*ac(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Zd(u,t,sc))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function rc(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function ac(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function sc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var ic=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=ws(e,"boxes","nonMaxSuppressionAsync"),i=ws(t,"scores","nonMaxSuppressionAsync"),o=Xd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=Qd(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),od(p,"int32")};var oc=Ss({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=ws(e,"boxes","nonMaxSuppression"),o=ws(t,"scores","nonMaxSuppression"),l=Xd(i,o,n,r,a,s),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=hs.runKernel(Pn,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}});var lc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=ws(e,"boxes","nonMaxSuppressionAsync"),o=ws(t,"scores","nonMaxSuppressionAsync"),l=Xd(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=tc(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:od(d,"int32"),selectedScores:od(c)}};var uc=Ss({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=ws(e,"boxes","nonMaxSuppression"),o=ws(t,"scores","nonMaxSuppression"),l=Xd(i,o,n,r,a,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=hs.runKernel(zn,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var hc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=ws(e,"boxes","nonMaxSuppressionAsync"),o=ws(t,"scores","nonMaxSuppressionAsync"),l=Xd(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ec(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:od(f,"int32"),validOutputs:nh(m,"int32")}};var pc=Ss({resizeBilinear_:function(e,t,n=!1,r=!1){let a=ws(e,"images","resizeBilinear");j(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),j(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),j(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Jl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=hs.runKernel(nr,o,l);return i?Jl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var dc=Ss({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=ws(e,"images","resizeNearestNeighbor");j(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),j(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),j("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),j(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Jl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=hs.runKernel(er,o,l);return i?Jl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var cc=Ss({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=ws(e,"image","threshold"),u=l.shape[0]*l.shape[1],h=Sl(od([r]),255);if(j(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),j(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),j("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),j("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=Qp(l,[1,1,1],-1);let e=Sl(a,.2989),t=Sl(s,.587),n=Sl(i,.114);o=wl(wl(e,t),n)}else o=e;if("otsu"===t){h=function(e,t){let n,r,a,s,i,o,l=od([-1]),u=od([0]),h=od([0]);for(let p=0;p<e.size-1;p++){n=ru(e,0,p+1),r=ru(e,p+1),i=Il(sh(n),t),o=Il(sh(r),t);let d=sh(Sl(n,_p(0,n.size)));a=Il(d,sh(n));let c=fh(r.shape,n.size),f=wl(_p(0,r.size),c),m=Sl(r,f);s=Il(sh(m),sh(r));let g=zh(a,s),y=zh(a,s),b=Sl(i,o);h=Sl(Sl(b,g),y);let x=yh(h,u);u=zu(x,h,u),l=zu(x,od([p]),l)}return l}(du(wi(Lp(o),"int32"),Cs([]),256),u)}let p=n?Sh(o,h):yh(o,h);return wi(Sl(p,255),"int32")}});var fc=Ss({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=ws(e,"image","transform","float32"),o=ws(t,"transforms","transform","float32");j(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),j(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),j(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return hs.runKernel(Pr,l,u)}});var mc=Ss({bandPart_:function(e,t,n){j(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),j(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=ws(e,"a","bandPart");j(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Jl(_p(0,s,1,"int32"),[-1,1]),l=_p(0,i,1,"int32"),u=zh(o,l),h=Wh(Sh(u,nh(+t,"int32")),bh(u,nh(-n,"int32"))),p=Qh([s,i],r.dtype);return Jl(rd(gd(Jl(r,[-1,s,i])).map((e=>zu(h,e,p)))),a)}});var gc=Ss({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,j(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)j(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Qp(e,e.shape[0],0).map((e=>nd(e,[0])));j(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(hs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=Sl(sh(Sl(n[r],e)),n[r]);e=zh(e,t)}return Il(e,oh(e,"euclidean"))})));return t?rd(n,0):n}});function yc(e,t=!1){return hs.tidy((()=>{j(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=ch(n),s=ki(e),i=ld([[1]],[1,1]),o=ki(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=hs.tidy((()=>{let t=ru(s,[e,e],[n-e,1]),l=oh(t),u=ru(s,[e,e],[1,1]),h=zu(yh(u,0),ld([[-1]]),ld([[1]])),p=zh(u,Sl(h,l)),d=Il(t,p);o=1===d.shape[0]?ki(i):tu([i,ru(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=go(Il(Hi(h,p),l)),f=ru(s,[e,0],[n-e,r]),m=Sl(c,o),g=bo(o);if(0===e)s=zh(f,Hi(m,Hi(g,f)));else{let t=zh(f,Hi(m,Hi(g,f)));s=tu([ru(s,[0,0],[e,r]),t],0)}let y=bo(m),b=ru(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=zh(b,Hi(Hi(b,o),y));else{let t=zh(b,Hi(Hi(b,o),y));a=tu([ru(a,[0,0],[n,e]),t],1)}return[o,s,a]})),no([t,l,u])}return!t&&n>r&&(a=ru(a,[0,0],[n,r]),s=ru(s,[0,0],[r,r])),[a,s]}))}var bc,xc=Ss({qr_:function(e,t=!1){if(j(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return yc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=gd(Jl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=yc(e,t);a.push(n),s.push(r)})),[Jl(rd(a,0),e.shape),Jl(rd(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(bc||(bc={}));var vc=Ss({computeWeightedLoss_:function(e,t,n=bc.SUM_BY_NONZERO_WEIGHTS){let r=ws(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=ws(t,"weights","computeWeightedLoss"));let s=null==a?r:Sl(r,a);if(n===bc.NONE)return s;if(n===bc.SUM)return sh(s);if(n===bc.MEAN){if(null==a)return Jh(s);{let e=r.size/a.size,t=Il(sh(s),sh(a));return e>1?Il(t,nh(e)):t}}if(n===bc.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Il(sh(s),nh(r.size));{let e=Sl(a,ep(r.shape)),t=wi(sh(lp(e,nh(0))),"float32");return Il(sh(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var wc=Ss({absoluteDifference_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=ws(e,"labels","absoluteDifference"),s=ws(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=ws(n,"weights","absoluteDifference")),q(a.shape,s.shape,"Error in absoluteDifference: ");let o=Nl(zh(a,s));return vc(o,i,r)}});var kc=Ss({cosineDistance_:function(e,t,n,r,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=ws(e,"labels","cosineDistance"),i=ws(t,"predictions","cosineDistance"),o=null;null!=r&&(o=ws(r,"weights","cosineDistance")),q(s.shape,i.shape,"Error in cosineDistance: ");let l=nh(1),u=zh(l,sh(Sl(s,i),n,!0));return vc(u,o,a)}});var Ic=Ss({hingeLoss_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=ws(e,"labels","hingeLoss"),s=ws(t,"predictions","hingeLoss"),i=null;null!=n&&(i=ws(n,"weights","hingeLoss")),q(a.shape,s.shape,"Error in hingeLoss: ");let o=nh(1);a=zh(Sl(nh(2),a),o);let l=$p(zh(o,Sl(a,s)));return vc(l,i,r)}});var Sc=Ss({huberLoss_:function(e,t,n,r=1,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=ws(e,"labels","huberLoss"),i=ws(t,"predictions","huberLoss"),o=null;null!=n&&(o=ws(n,"weights","huberLoss")),q(s.shape,i.shape,"Error in huberLoss: ");let l=nh(r),u=Nl(zh(i,s)),h=np(u,l),p=zh(u,h),d=wl(Sl(nh(.5),ah(h)),Sl(l,p));return vc(d,o,a)}});var Nc=Ss({logLoss_:function(e,t,n,r=1e-7,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=ws(e,"labels","logLoss"),i=ws(t,"predictions","logLoss"),o=null;null!=n&&(o=ws(n,"weights","logLoss")),q(s.shape,i.shape,"Error in logLoss: ");let l=nh(1),u=nh(r),h=go(Sl(s,Ch(wl(i,u)))),p=Sl(zh(l,s),Ch(wl(zh(l,i),u))),d=zh(h,p);return vc(d,o,a)}});var Tc=Ss({meanSquaredError_:function(e,t,n,r=bc.SUM_BY_NONZERO_WEIGHTS){let a=ws(e,"labels","meanSquaredError"),s=ws(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=ws(n,"weights","meanSquaredError")),q(a.shape,s.shape,"Error in meanSquaredError: ");let o=td(a,s);return vc(o,i,r)}});var Cc=Ss({sigmoidCrossEntropy_:function(e,t,n,r=0,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=ws(e,"multiClassLabels","sigmoidCrossEntropy"),i=ws(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=ws(n,"weights","sigmoidCrossEntropy")),q(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=nh(r),t=nh(1),n=nh(.5);s=wl(Sl(s,zh(t,e)),Sl(n,e))}let l=function(e,t){let n=ws(e,"labels","sigmoidCrossEntropyWithLogits"),r=ws(t,"logits","sigmoidCrossEntropyWithLogits");q(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=$p(r),s=Sl(r,n),i=_h(uh(go(Nl(r))));return wl(zh(a,s),i)}(s,i);return vc(l,o,a)}});var _c=Ss({softmaxCrossEntropy_:function(e,t,n,r=0,a=bc.SUM_BY_NONZERO_WEIGHTS){let s=ws(e,"onehotLabels","softmaxCrossEntropy"),i=ws(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=ws(n,"weights","softmaxCrossEntropy")),q(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=nh(r),t=nh(1),n=nh(s.shape[1]);s=wl(Sl(s,zh(t,e)),Il(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Dh(((e,t,r)=>{let a=Bh(t,[n],!0),s=zh(wi(t,"float32"),a);r([e,s]);let i=go(Sl(s,e));return{value:sh(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Ku(e.shape,[n]);return[Sl(Jl(e,s),zh(wi(r,"float32"),uh(a))),Sl(Jl(e,s),zh(uh(a),wi(r,"float32")))]}}}))(e,t)}(s,i);return vc(l,o,a)}});var Ec=Ss({sparseFillEmptyRows_:function(e,t,n,r){let a=ws(e,"indices","sparseFillEmptyRows","int32"),s=ws(t,"values","sparseFillEmptyRows"),i=ws(n,"denseShape","sparseFillEmptyRows","int32"),o=ws(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=hs.runKernel(Ir,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var $c=Ss({sparseReshape_:function(e,t,n){let r=ws(e,"inputIndices","sparseReshape","int32"),a=ws(t,"inputShape","sparseReshape","int32"),s=ws(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=hs.runKernel(Sr,i);return{outputIndices:o[0],outputShape:o[1]}}});var Ac=Ss({sparseSegmentMean_:function(e,t,n){let r=ws(e,"data","sparseSegmentMean"),a=ws(t,"indices","sparseSegmentMean","int32"),s=ws(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return hs.runKernel(Nr,i)}});var Fc=Ss({sparseSegmentSum_:function(e,t,n){let r=ws(e,"data","sparseSegmentSum"),a=ws(t,"indices","sparseSegmentSum","int32"),s=ws(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return hs.runKernel(Tr,i)}});var Rc=Ss({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=ws(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=ws(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=hs.runKernel(Ar,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}});var Dc=Ss({stringSplit_:function(e,t,n=!0){let r=ws(e,"input","stringSplit","string"),a=ws(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=hs.runKernel(Fr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var Mc=Ss({stringToHashBucketFast_:function(e,t){let n=ws(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return hs.runKernel(Rr,a,r)}}),Oc={fft:Yp,ifft:Zp,rfft:ed,irfft:Jp},Lc={hammingWindow:Wd,hannWindow:Vd,frame:Ud,stft:Gd},zc={flipLeftRight:jd,grayscaleToRGB:qd,resizeNearestNeighbor:dc,resizeBilinear:pc,rotateWithOffset:Kd,cropAndResize:Hd,nonMaxSuppression:Yd,nonMaxSuppressionAsync:ic,nonMaxSuppressionWithScore:oc,nonMaxSuppressionWithScoreAsync:lc,nonMaxSuppressionPadded:uc,nonMaxSuppressionPaddedAsync:hc,threshold:cc,transform:fc},Pc={bandPart:mc,gramSchmidt:gc,qr:xc},Bc={absoluteDifference:wc,computeWeightedLoss:vc,cosineDistance:kc,hingeLoss:Ic,huberLoss:Sc,logLoss:Nc,meanSquaredError:Tc,sigmoidCrossEntropy:Cc,softmaxCrossEntropy:_c},Wc={sparseFillEmptyRows:Ec,sparseReshape:$c,sparseSegmentMean:Ac,sparseSegmentSum:Fc},Vc={stringNGrams:Rc,stringSplit:Dc,stringToHashBucketFast:Mc},Uc=class extends rl{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return no(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Rh(e,t)}dispose(){null!=this.iterations_&&no(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:nh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Uc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Gc=class extends Uc{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=hs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:to((()=>Pu(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:to((()=>Pu(r).variable(false)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;to((()=>{let e=wl(Sl(s,this.rho),Sl(ah(a),1-this.rho)),t=Sl(Il(rh(wl(i,this.epsilon)),rh(wl(s,this.epsilon))),a),n=wl(Sl(i,this.rho),Sl(ah(t),1-this.rho));s.assign(e),i.assign(n);let o=wl(Sl(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(no(this.accumulatedGrads.map((e=>e.variable))),no(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Gc.className="Adadelta",sl(Gc);var Hc=class extends Uc{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:to((()=>fh(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;to((()=>{let e=wl(s,ah(a));s.assign(e);let t=wl(Sl(Il(a,rh(wl(e,hs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&no(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Hc.className="Adagrad",sl(Hc);var jc=class extends Uc{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],to((()=>{this.accBeta1=nh(t).variable(),this.accBeta2=nh(n).variable()})),null==r&&(this.epsilon=hs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);to((()=>{let n=zh(1,this.accBeta1),r=zh(1,this.accBeta2);t.forEach(((t,a)=>{let s=hs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:to((()=>Pu(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:to((()=>Pu(s).variable(false)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=wl(Sl(o,this.beta1),Sl(i,1-this.beta1)),h=wl(Sl(l,this.beta2),Sl(ah(i),1-this.beta2)),p=Il(u,n),d=Il(h,r);o.assign(u),l.assign(h);let c=wl(Sl(Il(p,wl(rh(d),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(Sl(this.accBeta1,this.beta1)),this.accBeta2.assign(Sl(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&no(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&no(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),to((()=>{this.accBeta1.assign(th(this.beta1,this.iterations_+1)),this.accBeta2.assign(th(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};jc.className="Adam",sl(jc);var qc=class extends Uc{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],to((()=>{this.iteration=nh(0).variable(),this.accBeta1=nh(t).variable()})),null==r&&(this.epsilon=hs.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);to((()=>{let n=zh(1,this.accBeta1),r=Il(-this.learningRate,wl(Sl(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=hs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Pu(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Pu(s).variable(false)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=wl(Sl(o,this.beta1),Sl(i,1-this.beta1)),h=Sl(l,this.beta2),p=Nl(i),d=Zh(h,p);o.assign(u),l.assign(d);let c=wl(Sl(Il(r,n),Il(u,wl(d,this.epsilon))),s);s.assign(c)})),this.iteration.assign(wl(this.iteration,1)),this.accBeta1.assign(Sl(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&no(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&no(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};qc.className="Adamax",sl(qc);var Kc=class extends Uc{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=hs.registeredVariables[t];to((()=>{let e=wl(Sl(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ro(nh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Kc.className="SGD",sl(Kc);var Xc=class extends Kc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=nh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hs.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:to((()=>Pu(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&to((()=>{let e,t=wl(Sl(this.m,a),s);e=this.useNesterov?wl(Sl(this.c,wl(s,Sl(t,this.m))),r):wl(Sl(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&no(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Xc.className="Momentum",sl(Xc);var Yc=class extends Uc{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=hs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:to((()=>Pu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:to((()=>Pu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:to((()=>Pu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;to((()=>{let e=wl(Sl(i,this.decay),Sl(ah(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=wl(Sl(t,this.decay),Sl(s,1-this.decay)),l=Il(Sl(s,this.learningRate),rh(zh(e,wl(ah(a),this.epsilon)))),u=wl(Sl(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=zh(r,u);r.assign(h)}else{let e=wl(Sl(i,this.decay),Sl(ah(s),1-this.decay)),t=wl(Sl(o,this.momentum),Il(Sl(s,this.learningRate),rh(wl(e,this.epsilon))));i.assign(e),o.assign(t);let n=zh(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&no(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&no(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&no(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Yc.className="RMSProp",sl(Yc);var Zc=class{static sgd(e){return new Kc(e)}static momentum(e,t,n=!1){return new Xc(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Yc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new jc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Gc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new qc(e,t,n,r,a)}static adagrad(e,t=.1){return new Hc(e,t)}},Jc={sgd:Zc.sgd,momentum:Zc.momentum,adadelta:Zc.adadelta,adagrad:Zc.adagrad,rmsprop:Zc.rmsprop,adamax:Zc.adamax,adam:Zc.adam},Qc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function ef(){return new Promise((e=>Qc((()=>e()))))}var tf,nf={};function rf(e,t){let n=e[0].length;e.forEach(((e,t)=>{j(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),j(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)j(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function af(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function sf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function of(e){let t={FIRST_DIM_SIZE:tf.FIRST_DIM_SIZE,VALUE_ROWIDS:tf.VALUE_ROWIDS,ROW_LENGTHS:tf.ROW_LENGTHS,ROW_SPLITS:tf.ROW_SPLITS,ROW_LIMITS:tf.ROW_LIMITS,ROW_STARTS:tf.ROW_STARTS},n=[];for(let r of e){if(!(r in t))break;n.push(t[r])}return n}function lf(e){return 0===e.length?0:e[0]===tf.FIRST_DIM_SIZE?e.length-1:e.length}function uf(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}d(nf,{ERF_A1:()=>wf,ERF_A2:()=>kf,ERF_A3:()=>If,ERF_A4:()=>Sf,ERF_A5:()=>Nf,ERF_P:()=>vf,PARALLELIZE_THRESHOLD:()=>hf,RowPartitionType:()=>tf,SELU_SCALE:()=>xf,SELU_SCALEALPHA:()=>bf,applyActivation:()=>Dd,assertAndGetBroadcastShape:()=>Io,assertAxesAreInnerMostDims:()=>Xu,assertParamsConsistent:()=>rf,assignToTypedArray:()=>Af,axesAreInnerMostDims:()=>Hu,calculateShapes:()=>Lo,checkEinsumDimSizes:()=>zf,checkPadOnDimRoundingMode:()=>Zl,combineLocations:()=>ju,combineRaggedTensorToTensorShapes:()=>sf,complexWithEvenIndex:()=>_f,complexWithOddIndex:()=>Ef,computeConv2DInfo:()=>Wl,computeConv3DInfo:()=>Vl,computeDefaultPad:()=>Ul,computeDilation2DInfo:()=>zl,computeOptimalWindowSize:()=>pf,computeOutAndReduceShapes:()=>qu,computeOutShape:()=>af,computePool2DInfo:()=>Pl,computePool3DInfo:()=>Bl,convertConv2DDataFormat:()=>Yl,decodeEinsumEquation:()=>Of,eitherStridesOrDilationsAreOne:()=>Xl,expandShapeToKeepDim:()=>Ku,exponent:()=>Rf,exponents:()=>Ff,fromStringArrayToUint8:()=>im,fromUint8ToStringArray:()=>sm,getAxesPermutation:()=>Yu,getBroadcastDims:()=>wo,getComplexWithIndex:()=>$f,getEinsumComputePath:()=>Pf,getEinsumPermutation:()=>Lf,getFusedBiasGradient:()=>Rd,getFusedDyActivation:()=>Fd,getImageCenter:()=>df,getInnerMostAxes:()=>Ju,getPermuted:()=>ff,getRaggedRank:()=>lf,getReductionAxes:()=>ko,getReshaped:()=>cf,getReshapedPermuted:()=>mf,getRowPartitionTypesHelper:()=>of,getSliceBeginCoords:()=>gf,getSliceSize:()=>yf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Uf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Gf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Hf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Kf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Yf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Xf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>jf,getSparseReshapeNegativeOutputDimErrorMessage:()=>qf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>em,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Zf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Jf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Qf,getUndoAxesPermutation:()=>Zu,isIdentityPermutation:()=>Bf,log:()=>Qr,mergeRealAndImagArrays:()=>Tf,prepareAndValidate:()=>Ro,prepareSplitSize:()=>Vf,segment_util:()=>tm,shouldFuse:()=>Md,slice_util:()=>zo,splitRealAndImagArrays:()=>Cf,tupleValuesAreOne:()=>Kl,upcastType:()=>Qa,validateDefaultValueShape:()=>uf,validateInput:()=>Oo,validateUpdateShape:()=>Mo,warn:()=>Jr}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(tf||(tf={}));var hf=30;function pf(e){return e<=hf?e:we(e,Math.floor(Math.sqrt(e)))}function df(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function cf(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function ff(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function mf(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function gf(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function yf(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var bf=1.7580993408473768,xf=1.0507009873554805,vf=.3275911,wf=.254829592,kf=-.284496736,If=1.421413741,Sf=-1.453152027,Nf=1.061405429;function Tf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Cf(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _f(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ef(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function $f(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Af(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ff(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Rf(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Df="->",Mf=/->/g;function Of(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Mf,"").length)/Df.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split(Df);j(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));let s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,h=[];for(let e=a.length;e<u;++e)h.push(e);return{allDims:o,summedDims:h,idDims:l}}function Lf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function zf(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:j(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Pf(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Wf(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Bf(e){return e.every(((e,t)=>e===t))}function Wf(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Vf(e,t,n=0){let r=[];if("number"==typeof t)j(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{j(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}j(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Uf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Gf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Hf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function jf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function qf(e,t){return`size ${e} must be non-negative, not ${t}`}function Kf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Xf(e,t){return`Input to reshape is a SparseTensor with ${Y(e)}\n  dense values, but the requested shape requires a multiple of ${Y(t)}. inputShape=${e} outputShape= ${t}`}function Yf(e,t){return`Input to reshape is a tensor with ${Y(e)} dense values, but the requested shape has ${Y(t)}. inputShape=${e} outputShape=${t}`}function Zf(){return"segment ids must be >= 0"}function Jf(){return"segment ids are not increasing"}function Qf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function em(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var tm={};function nm(e,t){let n,r=!1;for(e<=hf?(n=e,r=!0):n=we(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=we(e,n+1);return n}function rm(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function am(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function sm(e){try{return e.map((e=>Aa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function im(e){return e.map((e=>$a(e)))}d(tm,{collectGatherOpShapeInfo:()=>am,computeOutShape:()=>rm,segOpComputeOptimalWindowSize:()=>nm});var om={};d(om,{nonMaxSuppressionV3Impl:()=>Qd,nonMaxSuppressionV4Impl:()=>ec,nonMaxSuppressionV5Impl:()=>tc,whereImpl:()=>xd});var lm={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,ad(wi(n,"float32"),-1))}}},um={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ah(wi(n,"float32")),r=rh(zh(nh(1),t));return go(Il(e,r))}}}},hm={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=rh(zh(ah(wi(n,"float32")),1));return Il(e,t)}}}},pm={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=e,r=ko(n.shape,a);return r.length>0&&(t=sh(t,r)),Jl(t,n.shape)},b:()=>{let t=e,n=ko(r.shape,a);return n.length>0&&(t=sh(t,n)),Jl(t,r.shape)}}}},dm={kernelName:Ge,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},cm={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Pu(n)}}},fm={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Pu(n)}}},mm={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,rh(zh(nh(1),ah(wi(n,"float32")))))}}},gm={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=rh(wl(nh(1),ah(wi(n,"float32"))));return Il(e,t)}}}},ym={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=wl(ah(n),ah(r)),s=Sl(e,Il(r,t)),i=ko(n.shape,a);return i.length>0&&(s=sh(s,i)),Jl(s,n.shape)},b:()=>{let t=wl(ah(n),ah(r)),s=go(Sl(e,Il(n,t))),i=ko(r.shape,a);return i.length>0&&(s=sh(s,i)),Jl(s,r.shape)}}}},bm={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,wl(ah(wi(n,"float32")),1))}}},xm={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,zh(nh(1),ah(wi(n,"float32"))))}}};var vm=Ss({avgPool3dGrad_:function(e,t,n,r,a,s){let i=ws(e,"dy","avgPool3dGrad"),o=ws(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),j(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),j(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Zl("avgPool3dGrad",a,s);let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=hs.runKernel(rt,p,d);return h?Jl(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),wm={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>vm(e,r,a,s,i,o)}}};var km=Ss({avgPoolGrad_:function(e,t,n,r,a){let s=ws(e,"dy","avgPoolGrad"),i=ws(t,"input","avgPoolGrad");j(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Jl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Jl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),j(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),j(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=hs.runKernel(tt,h,p);return u?Jl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Im={kernelName:et,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>km(e,r,a,s,i)}}},Sm={kernelName:at,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Hi(e,a,!1,!1),b:()=>Hi(e,r,!0,!1)}:s&&!i?{a:()=>Hi(a,e,!1,!0),b:()=>Hi(r,e,!1,!1)}:{a:()=>Hi(a,e,!0,!0),b:()=>Hi(e,r,!0,!0)}:{a:()=>Hi(e,a,!1,!0),b:()=>Hi(r,e,!0,!1)}}},Nm={kernelName:st,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>gp(e,r,a)}}},Tm={kernelName:ot,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>sh(e,o,!0)}}},Cm={kernelName:ut,gradFunc:e=>({x:()=>e.clone()})},_m={kernelName:ht,gradFunc:e=>({x:()=>Pu(e)})},Em={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>zu(Wh(bh(r,a),Sh(r,s)),e,Pu(e))}}},$m={kernelName:ct,inputsToSave:["x"],gradFunc:lm.gradFunc},Am={kernelName:ft,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ie(a,t[0].shape)[0],i=r.map((e=>e[s]));return Qp(e,i,s).map((e=>()=>e))}},Fm={kernelName:mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return j(Kl(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Iu(r.shape,e,a,i,o,l),filter:()=>Ad(r,e,a.shape,i,o,l)}}},Rm={kernelName:yt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>wu(e,a,s,i,o,1,l),filter:()=>Ad(e,r,a.shape,s,i,o,l)}}};var Dm=Ss({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Jl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Jl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),j(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),j(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),j(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),j(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),j(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return hs.runKernel(xt,o,l)}}),Mm={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;j(Kl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Tu(i.shape,e,o,a,s),filter:()=>Dm(i,e,o.shape,a,s)}}},Om={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(go(Up(wi(n,"float32"))),e)}}},Lm={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(Gp(wi(n,"float32")),e)}}},zm={kernelName:St,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Yu([a],r.rank),n=Au(e,a,s,!i);return null!=t&&(n=bo(n,t)),n}}}},Pm={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;j(Kl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return j(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),j(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),j(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),j(Xl(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Zl("depthwiseConv2d",s,i),{x:()=>zd(l.shape,e,u,a,s,o,i),filter:()=>Ld(l,e,u.shape,a,s,o,i)}}},Bm={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>hs.runKernel(Rt,s,n),filter:()=>hs.runKernel(Dt,i,n)}}},Wm={kernelName:Lt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>hs.runKernel(zt,r)}}},Vm={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Sl(uh(go(ah(n))),2/Math.sqrt(Math.PI));return{x:()=>Sl(e,r)}}},Um={kernelName:Wt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,n)}}},Gm={kernelName:Vt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Jl(e,n.shape)}}},Hm={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,uh(n))}}},jm={kernelName:qt,gradFunc:e=>({x:()=>Pu(e)})},qm={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=Il(e,wi(r,"float32")),s=ko(n.shape,a);return s.length>0?Jl(sh(t,s),n.shape):t},b:()=>{let t=Sl(e,wi(n,"float32")),s=ko(r.shape,a);s.length>0&&(t=Jl(sh(t,s),r.shape));let i=ah(r);return go(Il(t,wi(i,"float32")))}}}},Km={kernelName:Xt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?nh(1):o,u=ko(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=zh(a,s),d=Sl(e,l),c=zp(wl(i,nh(r))),f=Sl(Sl(Sl(c,c),c),nh(-.5));return{x:()=>1===s.rank?Jl(Sl(Sl(e,dh(Jl(c,[1,1,1,s.shape[0]]),h)),l),a.shape):Jl(Sl(Sl(e,c),l),a.shape),mean:()=>{let e=Sl(Sl(c,nh(-1)),d);return 1===s.rank&&(e=sh(e,u)),Jl(e,s.shape)},variance:()=>{let e=Sl(Sl(f,p),d);return 1===s.rank&&(e=sh(e,u)),Jl(e,s.shape)},scale:()=>{let t=Sl(p,c),n=Sl(e,t);return 1===s.rank&&(n=sh(n,u)),Jl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=sh(t,u)),Jl(t,s.shape)}}}},Xm={kernelName:Yt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ie(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=Ym(0,l),d=Ym(l+1,l+1+h),c=Zm([o,[n],u]),f=Jl(e,c),m=Jl(a,[n]),g=Zm([[l],p,d]),y=bo(f,g),b=md(y,m,r.shape[i]),x=Zu(g);return b=bo(b,x),b},indices:()=>a}}};function Ym(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Zm(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Jm={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Pu(n),b:()=>Pu(r)}}},Qm={kernelName:en,gradFunc:e=>({x:()=>wi(e,"float32")})},eg={kernelName:rn,gradFunc:e=>({x:()=>Pu(e)})},tg={kernelName:an,gradFunc:e=>({x:()=>Pu(e)})},ng={kernelName:sn,gradFunc:e=>({x:()=>Pu(e)})},rg={kernelName:on,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=yh(r,0);return{x:()=>zu(s,e,Sl(e,a))}}},ag={kernelName:dn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,wl(n,1))}}},sg={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,wi(n,"float32"))}}},ig={kernelName:yn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=uh(r);return zh(e,Sl(sh(e,a,!0),t))}}}};var og=Ss({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return hs.runKernel(vn,o,l)}}),lg={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>og(r,a,e,s,i,o,l)}}};function ug(e,t,n,r){return t.rank<n.rank&&(t=Jl(t,Ku(t.shape,r))),e.rank<n.rank&&(e=Jl(e,Ku(e.shape,r))),{x:()=>Sl(e,wi(Lu(n,t),e.dtype))}}var hg={kernelName:wn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=ug(e,t[1],s,ie(a,s.shape));return{x:()=>i.x()}}},pg={kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Sl(e,wi(bh(n,r),"float32")),b:()=>Sl(e,wi(Ih(n,r),"float32"))}}};var dg=Ss({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=ws(e,"dy","maxPool3dGrad"),l=ws(t,"input","maxPool3dGrad"),u=ws(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=Jl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=Jl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Jl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),j(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),j(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),j(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Zl("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=hs.runKernel(Tn,f,m);return c?Jl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),cg={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>dg(e,r,a,s,i,o,l)}}};var fg=Ss({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=ws(e,"dy","maxPoolGrad"),l=ws(t,"input","maxPoolGrad"),u=ws(n,"output","maxPoolGrad");j(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),j(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),j(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Zl("maxPoolGrad",s,i);let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return hs.runKernel(Sn,h,p)}}),mg={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>fg(e,r,a,s,i,o)}}},gg={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ie(a,r.shape),i=Y(qu(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Jl(e,t);return Il(Sl(n,ep(r.shape,"float32")),i)}}}},yg={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=ug(e,i,s,ie(a,s.shape));return{x:()=>o.x()}}},bg={kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Sl(e,wi(Sh(n,r),"float32")),b:()=>Sl(e,wi(yh(n,r),"float32"))}}},xg={kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>ru(e,s,r.shape)}}},vg={kernelName:Fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=ko(n.shape,a);return t.length>0?Jl(sh(e,t),n.shape):e},b:()=>{let t=Sl(e,go(mh(Il(n,r)))),s=ko(r.shape,a);return s.length>0?Jl(sh(t,s),r.shape):t}}}},wg={kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=Sl(e,wi(r,"float32")),s=ko(n.shape,a);return s.length>0?Jl(sh(t,s),n.shape):t},b:()=>{let t=Sl(e,wi(n,"float32")),s=ko(r.shape,a);return s.length>0?Jl(sh(t,s),r.shape):t}}}},kg={kernelName:Mn,gradFunc:e=>({x:()=>go(e)})},Ig={kernelName:Wn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Qh(n.shape,"float32")}}},Sg={kernelName:Bn,gradFunc:e=>({x:()=>Pu(e)})},Ng={kernelName:Vn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return gd(e,r).map((e=>()=>e))}},Tg={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>ru(e,s,r.shape)}}},Cg={kernelName:Hn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Io(s.shape,i.shape);return{a:()=>{let t=wi(i,"float32"),n=Sl(e,Sl(t,th(s,zh(t,nh(1))))),r=ko(s.shape,o);return r.length>0&&(n=sh(n,r)),Jl(n,s.shape)},b:()=>{let t=yh(s,0),n=zu(t,Ch(s),Pu(s)),r=Sl(e,Sl(a,n)),l=ko(i.shape,o);return l.length>0&&(r=sh(r,l)),Jl(r,i.shape)}}}},_g={kernelName:jn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=yh(n,0);return{x:()=>zu(a,e,Sl(e,r)),alpha:()=>{let t=zu(a,Pu(e),Sl(e,n)),s=ko(r.shape,e.shape);return s.length>0&&(t=sh(t,s)),Jl(t,r.shape)}}}};function Eg(e,t,n){let r=e.shape.length,a=r-n.length,s=nf.getAxesPermutation(n,r),i=e;null!=s&&(i=bo(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=Jl(t,r),s=$u(e,n,!0,!1),i=$u(e,n,!0,!0),o=Sl(s,i);return Sl(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=nf.getUndoAxesPermutation(s);u=bo(u,e)}return u}var $g={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>Eg(r,e,s)}}},Ag={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=Il(e,wi(r,"float32")),s=ko(n.shape,a);return s.length>0?Jl(sh(t,s),n.shape):t},b:()=>{let t=Sl(e,wi(n,"float32")),s=ko(r.shape,a);s.length>0&&(t=Jl(sh(t,s),r.shape));let i=ah(r);return go(Il(t,wi(i,"float32")))}}}},Fg={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,go(ah(n)))}}},Rg={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Sl(Sh(n,6),ad(n));return{x:()=>Sl(e,wi(r,"float32"))}}},Dg={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,wi(ad(n),"float32"))}}},Mg={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Jl(e,n.shape)}}},Og={kernelName:nr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>hs.runKernel(rr,a,n)}}},Lg={kernelName:er,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>hs.runKernel(tr,a,n)}}},zg={kernelName:sr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ie(r,e.shape);return{x:()=>Fp(e,a)}}},Pg={kernelName:ir,gradFunc:e=>({x:()=>Pu(e)})},Bg={kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>go(Il(e,Sl(th(n,1.5),2)))}}},Wg={kernelName:hr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>wi(Pu(n),"float32"),t:()=>Sl(e,wi(n,e.dtype)),e:()=>Sl(e,wi(Vh(n),e.dtype))}}},Vg={kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=yh(n,nh(0)),r=nh(bf),a=nh(xf),s=Sl(e,a),i=Sl(Sl(e,r),uh(wi(n,"float32")));return zu(t,s,i)}}}},Ug={kernelName:gr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,Sl(n,zh(nh(1),n)))}}},Gg={kernelName:mr,gradFunc:e=>({x:()=>Pu(e)})},Hg={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(_u(wi(n,"float32")),e)}}},jg={kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(Eu(wi(n,"float32")),e)}}},qg={kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Qo(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>pp(e,u)}}},Kg={kernelName:kr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=Sl(e,r);return{logits:()=>zh(s,Sl(sh(s,[a],true),r))}}},Xg={kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,nu(n))}}},Yg={kernelName:vr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>iu(e,r,a)}}},Zg={kernelName:wr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>tu(e,r)}}},Jg={kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,Sl(rh(wi(n,"float32")),2))}}},Qg={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(e,Sl(wi(n,"float32"),2))}}},ey={kernelName:_r,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=nh(2);return{a:()=>Sl(e,Sl(a,zh(n,r))),b:()=>Sl(e,Sl(a,zh(r,n)))}}},ty={kernelName:jr,gradFunc:e=>({x:()=>Pu(e)})},ny={kernelName:Dr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Io(n.shape,r.shape);return{a:()=>{let t=e,r=ko(n.shape,a);return r.length>0&&(t=sh(t,r)),Jl(t,n.shape)},b:()=>{let t=e,n=ko(r.shape,a);return n.length>0&&(t=sh(t,n)),Jl(go(t),r.shape)}}}},ry={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ie(s,r.shape).forEach((e=>{a[e]=1}));let i=Jl(e,a),o=Sl(i,ep(r.shape,"float32"));return{x:()=>o}}},ay={kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Il(e,ah(_u(n)))}}},sy={kernelName:Or,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Sl(zh(nh(1),ah(n)),e)}}},iy={kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Pu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=wl(t,ru(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=wl(t,ru(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=wl(t,ru(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=wl(t,ru(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},oy={kernelName:Br,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Zu(a);return{x:()=>bo(e,s)}}},ly={kernelName:Vr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>rd(e,a)}}},uy={kernelName:Ur,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Zh(t,Pu(t)),r=gh(e,n),a=bh(t,nh(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=hh(a,e+1);a=Wh(a,ep(r.shape,"bool"));let i=Pu(r);return zu(a,r,i)}(e,n)}}};var hy={kernelName:Hr,gradFunc:e=>({x:()=>Pu(e)})},py=[lm,um,hm,pm,dm,cm,fm,mm,gm,ym,bm,xm,wm,Im,Sm,Nm,Tm,Cm,_m,Em,$m,Am,Rm,Fm,Mm,Om,Lm,zm,Pm,Bm,Ag,Wm,Vm,Um,Gm,Hm,qm,jm,Km,Xm,Jm,Qm,eg,tg,ng,rg,ag,sg,ig,lg,hg,hg,pg,cg,mg,gg,yg,bg,xg,vg,wg,kg,Ig,Sg,Ng,Tg,Tg,Cg,_g,$g,Fg,Rg,Dg,Mg,Og,Lg,zg,Pg,Bg,Wg,Vg,Ug,Gg,Hg,jg,qg,Kg,Xg,Yg,Yg,Zg,Zg,Jg,ey,Qg,ty,ny,ry,ay,sy,iy,oy,ly,uy,hy];for(let e of py)ia(e);Ua().prototype.abs=function(){return this.throwIfDisposed(),Nl(this)},Ua().prototype.acos=function(){return this.throwIfDisposed(),Tl(this)},Ua().prototype.acosh=function(){return this.throwIfDisposed(),Cl(this)},Ua().prototype.add=function(e){return this.throwIfDisposed(),wl(this,e)},Ua().prototype.all=function(e,t){return this.throwIfDisposed(),El(this,e,t)},Ua().prototype.any=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},Ua().prototype.argMax=function(e){return this.throwIfDisposed(),Al(this,e)},Ua().prototype.argMin=function(e){return this.throwIfDisposed(),Fl(this,e)},Ua().prototype.asScalar=function(){return this.throwIfDisposed(),j(1===this.size,(()=>"The array must have only 1 element.")),Jl(this,[])},Ua().prototype.asType=function(e){return this.throwIfDisposed(),wi(this,e)},Ua().prototype.as1D=function(){return this.throwIfDisposed(),Jl(this,[this.size])},Ua().prototype.as2D=function(e,t){return this.throwIfDisposed(),Jl(this,[e,t])},Ua().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Jl(this,[e,t,n])},Ua().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Jl(this,[e,t,n,r])},Ua().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Jl(this,[e,t,n,r,a])},Ua().prototype.asin=function(){return this.throwIfDisposed(),Rl(this)},Ua().prototype.asinh=function(){return this.throwIfDisposed(),Dl(this)},Ua().prototype.atan=function(){return this.throwIfDisposed(),Ml(this)},Ua().prototype.atan2=function(e){return this.throwIfDisposed(),Ol(this,e)},Ua().prototype.atanh=function(){return this.throwIfDisposed(),Ll(this)},Ua().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Ql(this,e,t,n,r)},Ua().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),iu(this,e,t)},Ua().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),lu(this,e,t,n,r,a)},Ua().prototype.broadcastTo=function(e){return this.throwIfDisposed(),fu(this,e)},Ua().prototype.cast=function(e){return this.throwIfDisposed(),wi(this,e)},Ua().prototype.ceil=function(){return this.throwIfDisposed(),mu(this)},Ua().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),gu(this,e,t)},Ua().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Va&&(e=[e]),tu([this,...e],t)},Ua().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ku(this,e,t,n,r,a,s)},Ua().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Su(this,e,t,n,r,a)},Ua().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wu(this,e,t,n,r,a,s)},Ua().prototype.cos=function(){return this.throwIfDisposed(),_u(this)},Ua().prototype.cosh=function(){return this.throwIfDisposed(),Eu(this)},Ua().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),$u(this,e,t,n)},Ua().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Au(this,e,t,n)},Ua().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},Ua().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Du(this,e,t,n,r,a,s)},Ua().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Ou(this,e,t,n,r,a)},Ua().prototype.divNoNan=function(e){return this.throwIfDisposed(),Bu(this,e)},Ua().prototype.div=function(e){return this.throwIfDisposed(),Il(this,e)},Ua().prototype.dot=function(e){return this.throwIfDisposed(),Wu(this,e)},Ua().prototype.elu=function(){return this.throwIfDisposed(),Uu(this)},Ua().prototype.equal=function(e){return this.throwIfDisposed(),Lu(this,e)},Ua().prototype.erf=function(){return this.throwIfDisposed(),Gu(this)},Ua().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},Ua().prototype.exp=function(){return this.throwIfDisposed(),uh(this)},Ua().prototype.expandDims=function(e){return this.throwIfDisposed(),hh(this,e)},Ua().prototype.expm1=function(){return this.throwIfDisposed(),ph(this)},Ua().prototype.fft=function(){return this.throwIfDisposed(),Yp(this)},Ua().prototype.flatten=function(){return this.throwIfDisposed(),Jl(this,[this.size])},Ua().prototype.floor=function(){return this.throwIfDisposed(),mh(this)},Ua().prototype.floorDiv=function(e){return this.throwIfDisposed(),kl(this,e)},Ua().prototype.gather=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},Ua().prototype.greaterEqual=function(e){return this.throwIfDisposed(),bh(this,e)},Ua().prototype.greater=function(e){return this.throwIfDisposed(),yh(this,e)},Ua().prototype.ifft=function(){return this.throwIfDisposed(),Zp(this)},Ua().prototype.irfft=function(){return this.throwIfDisposed(),Jp(this)},Ua().prototype.isFinite=function(){return this.throwIfDisposed(),xh(this)},Ua().prototype.isInf=function(){return this.throwIfDisposed(),vh(this)},Ua().prototype.isNaN=function(){return this.throwIfDisposed(),wh(this)},Ua().prototype.leakyRelu=function(e){return this.throwIfDisposed(),kh(this,e)},Ua().prototype.lessEqual=function(e){return this.throwIfDisposed(),Sh(this,e)},Ua().prototype.less=function(e){return this.throwIfDisposed(),Ih(this,e)},Ua().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Th(this,e,t,n,r)},Ua().prototype.logSigmoid=function(){return this.throwIfDisposed(),Lh(this)},Ua().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ph(this,e)},Ua().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Bh(this,e,t)},Ua().prototype.log=function(){return this.throwIfDisposed(),Ch(this)},Ua().prototype.log1p=function(){return this.throwIfDisposed(),_h(this)},Ua().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Wh(this,e)},Ua().prototype.logicalNot=function(){return this.throwIfDisposed(),Vh(this)},Ua().prototype.logicalOr=function(e){return this.throwIfDisposed(),Uh(this,e)},Ua().prototype.logicalXor=function(e){return this.throwIfDisposed(),Gh(this,e)},Ua().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Hi(this,e,t,n)},Ua().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Kh(this,e,t,n,r)},Ua().prototype.max=function(e,t){return this.throwIfDisposed(),Qu(this,e,t)},Ua().prototype.maximum=function(e){return this.throwIfDisposed(),Zh(this,e)},Ua().prototype.mean=function(e,t){return this.throwIfDisposed(),Jh(this,e,t)},Ua().prototype.min=function(e,t){return this.throwIfDisposed(),eh(this,e,t)},Ua().prototype.minimum=function(e){return this.throwIfDisposed(),np(this,e)},Ua().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Ua().prototype.mod=function(e){return this.throwIfDisposed(),ap(this,e)},Ua().prototype.mul=function(e){return this.throwIfDisposed(),Sl(this,e)},Ua().prototype.neg=function(){return this.throwIfDisposed(),go(this)},Ua().prototype.norm=function(e,t,n){return this.throwIfDisposed(),oh(this,e,t,n)},Ua().prototype.notEqual=function(e){return this.throwIfDisposed(),lp(this,e)},Ua().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ji(this,e,t,n)},Ua().prototype.onesLike=function(){return this.throwIfDisposed(),up(this)},Ua().prototype.pad=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},Ua().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),yp(this,e,t,n,r,a,s)},Ua().prototype.pow=function(e){return this.throwIfDisposed(),th(this,e)},Ua().prototype.prelu=function(e){return this.throwIfDisposed(),bp(this,e)},Ua().prototype.prod=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},Ua().prototype.reciprocal=function(){return this.throwIfDisposed(),Ep(this)},Ua().prototype.relu=function(){return this.throwIfDisposed(),$p(this)},Ua().prototype.relu6=function(){return this.throwIfDisposed(),Ap(this)},Ua().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Jl(this,e.shape)},Ua().prototype.reshape=function(e){return this.throwIfDisposed(),Jl(this,e)},Ua().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),pc(this,e,t,n)},Ua().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),dc(this,e,t,n)},Ua().prototype.reverse=function(e){return this.throwIfDisposed(),Fp(this,e)},Ua().prototype.rfft=function(){return this.throwIfDisposed(),ed(this)},Ua().prototype.round=function(){return this.throwIfDisposed(),Lp(this)},Ua().prototype.rsqrt=function(){return this.throwIfDisposed(),zp(this)},Ua().prototype.selu=function(){return this.throwIfDisposed(),Pp(this)},Ua().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Bp(this,e,t,n,r,a,s)},Ua().prototype.sigmoid=function(){return this.throwIfDisposed(),nu(this)},Ua().prototype.sign=function(){return this.throwIfDisposed(),Vp(this)},Ua().prototype.sin=function(){return this.throwIfDisposed(),Up(this)},Ua().prototype.sinh=function(){return this.throwIfDisposed(),Gp(this)},Ua().prototype.slice=function(e,t){return this.throwIfDisposed(),ru(this,e,t)},Ua().prototype.softmax=function(e){return this.throwIfDisposed(),Xp(this,e)},Ua().prototype.softplus=function(){return this.throwIfDisposed(),Oh(this)},Ua().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),gp(this,e,t)},Ua().prototype.split=function(e,t){return this.throwIfDisposed(),Qp(this,e,t)},Ua().prototype.sqrt=function(){return this.throwIfDisposed(),rh(this)},Ua().prototype.square=function(){return this.throwIfDisposed(),ah(this)},Ua().prototype.squaredDifference=function(e){return this.throwIfDisposed(),td(this,e)},Ua().prototype.squeeze=function(e){return this.throwIfDisposed(),nd(this,e)},Ua().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Va?[this,e]:[this,...e];return rd(n,t)},Ua().prototype.step=function(e){return this.throwIfDisposed(),ad(this,e)},Ua().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),sd(this,e,t,n,r,a,s,i,o)},Ua().prototype.sub=function(e){return this.throwIfDisposed(),zh(this,e)},Ua().prototype.sum=function(e,t){return this.throwIfDisposed(),sh(this,e,t)},Ua().prototype.tan=function(){return this.throwIfDisposed(),id(this)},Ua().prototype.tanh=function(){return this.throwIfDisposed(),au(this)},Ua().prototype.tile=function(e){return this.throwIfDisposed(),dh(this,e)},Ua().prototype.toBool=function(){return this.throwIfDisposed(),wi(this,"bool")},Ua().prototype.toFloat=function(){return this.throwIfDisposed(),wi(this,"float32")},Ua().prototype.toInt=function(){return this.throwIfDisposed(),wi(this,"int32")},Ua().prototype.topk=function(e,t){return this.throwIfDisposed(),dd(this,e,t)},Ua().prototype.transpose=function(e){return this.throwIfDisposed(),bo(this,e)},Ua().prototype.unique=function(e){return this.throwIfDisposed(),fd(this,e)},Ua().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),md(this,e,t)},Ua().prototype.unstack=function(e){return this.throwIfDisposed(),gd(this,e)},Ua().prototype.where=function(e,t){return this.throwIfDisposed(),zu(e,this,t)},Ua().prototype.zerosLike=function(){return this.throwIfDisposed(),Pu(this)};var dy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}},cy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cy.prototype)}},fy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fy.prototype)}},my=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,my.prototype)}},gy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gy.prototype)}},yy=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function by(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function xy(e,t){if(!e)throw new gy(t)}function vy(e,t){let n=0;for(let r of e)r===t&&n++;return n}function wy(e){return 1===e.length?e[0]:e}function ky(e){return Array.isArray(e)?e:[e]}function Iy(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Sy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Ny={};function Ty(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Cy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Cy(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Cy(t):e[n]=t.value)}}}function _y(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in Ny)a=Ny[s];else if(a=t[s],null==a)throw new fy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new fy(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in Ny?[i,o]=Ny.className:l in t&&([i,o]=t[l]),null==i)throw new fy(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(Ny))e[t]=Ny[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},Ny);for(let e of Object.keys(n))Ny[e]=n[e];Cy(s.config);let r=o(i,s.config,n,a);return Ny=Object.assign({},t),r}{let e=Object.assign({},Ny);for(let e of Object.keys(n))Ny[e]=n[e];let t=new i(s.config);return Ny=Object.assign({},e),t}}}function Ey(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function $y(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ay(e){if(null==e)throw new fy(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Fy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new fy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ry(e,t,n=0,r=1/0){return xy(n>=0),xy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Dy(e,t){Array.isArray(e)?(pa.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Dy(e,`element ${n+1} of ${t}`)))):pa.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${My(e)}.`))}function My(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>My(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Oy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var Ly=0;function zy(){return Ly++}var Py={};function By(e=""){return e in Py||(Py[e]=0),Py[e]+=1,e+Py[e].toString()}var Wy=["channelsFirst","channelsLast"],Vy=["nearest","bilinear"],Uy=["valid","same","causal"],Gy=["max","avg"],Hy=["sum","mul","concat","ave"],jy=new Map;function qy(e){Fy(Wy,"DataFormat",e)}function Ky(e){Fy(Uy,"PaddingMode",e)}function Xy(e){Fy(Gy,"PoolMode",e)}var Yy=[];function Zy(e,t){Yy.push(e);try{let e=t();return Yy.pop(),e}catch(e){throw Yy.pop(),e}}function Jy(e){if(!nb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Yy.length?"":Yy.join("/")+"/")+e}function Qy(e){if(!nb(e))throw new Error("Not a valid tensor name: '"+e+"'");jy.has(e)||jy.set(e,0);let t=jy.get(e);if(jy.set(e,jy.get(e)+1),t>0){let n=`${e}_${t}`;return jy.set(n,1),n}return e}var eb,tb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function nb(e){return!!e.match(tb)}function rb(e){return e===parseInt(e.toString(),10)}function ab(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function sb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function ib(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function ob(e,t){if(t<e)throw new fy(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function lb(){return null==eb&&(eb=co().epsilon()),eb}function ub(e,t){return wi(e,t)}function hb(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Jl(e,n)}function pb(e,t,n){return to((()=>{switch(e.rank){case 1:return Hp(e,t,n);case 2:return jp(e,[t,0],[n,e.shape[1]]);case 3:return qp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Kp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ru(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ru(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new fy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function db(e,t,n){return to((()=>{switch(e.rank){case 1:return Hp(e,t,n);case 2:return jp(e,[0,t],[e.shape[0],n]);case 3:return qp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Kp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new fy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cb(e,t,n,r){return to((()=>{switch(e.rank){case 1:return Hp(e,t,n);case 2:switch(r){case 1:return pb(e,t,n);case 2:return db(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return pb(e,t,n);case 2:return qp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return db(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return pb(e,t,n);case 2:return Kp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Kp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return db(e,t,n);default:throw new fy(`The axis is not within the rank of the tensor ${r}`)}default:throw new fy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function fb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),tu(e,t)}function mb(e,t){switch(e.rank){case 1:return yu([e,t]);case 2:return bu([e,t],0);case 3:return xu([e,t],0);case 4:return vu([e,t],0);default:throw new fy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new fy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return dh(e,t)}function yb(e,t=0,n=1,r,a){return Np(e,t,n,r,a)}function bb(e,t,n,r){if(e.rank<2||t.rank<2)throw new my(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new my(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return $d.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?wb(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Jl(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Jl(bo(t,h),[l,-1]);let p=[...a,...u],d=!1,c=!1;return Jl($d.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?wb(e.rank,r,"channelsLast"):null,activation:n}),p)}}function xb(e,t,n){return to((()=>(t=Array.isArray(t)?od(t,"int32"):wi(t,"int32"),gh(e,t,n))))}function vb(e){return Sl(e,e)}function wb(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new fy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Jl(t,[1,r[0],1,1,1]):Jl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Jl(t,[1,1,1,1,r[0]]):Jl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Jl(t,[1,r[0],1,1]):Jl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Jl(t,[1,1,1,r[0]]):Jl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Jl(t,[1,r[0],1]):Jl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Jl(t,[1,1,r[0]]):Jl(t,[1].concat(r))}else if(e<3)return t;throw new fy(`Unsupported input rank by biasAdd: ${t.rank}`)}function kb(e,t,n){return to((()=>(null==n&&(n="channelsLast"),qy(n),wl(e,wb(e.rank,t,n)))))}function Ib(e,t,n,r){return to((()=>Td(e,t,n,r)))}function Sb(e,t,n=!1){return n?e():t()}var Nb=["fanIn","fanOut","fanAvg"],Tb=["normal","uniform","truncatedNormal"];var Cb=class extends nl.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},_b=class extends Cb{apply(e,t){return Qh(e,t)}};_b.className="Zeros",nl.registerClass(_b);var Eb=class extends Cb{apply(e,t){return ep(e,t)}};Eb.className="Ones",nl.registerClass(Eb);var $b=class extends Cb{constructor(e){if(super(),"object"!=typeof e)throw new fy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new fy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return to((()=>Sl(nh(this.value),ep(e,t))))}getConfig(){return{value:this.value}}};$b.className="Constant",nl.registerClass($b);var Ab=class extends Cb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Cp(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Ab.className="RandomUniform",nl.registerClass(Ab);var Fb=class extends Cb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`randomNormal does not support dType ${t}.`);return yb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Fb.className="RandomNormal",nl.registerClass(Fb);var Rb=class extends Cb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`truncatedNormal does not support dType ${t}.`);return cd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Rb.className="TruncatedNormal",nl.registerClass(Rb);var Db=class extends Cb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return to((()=>{if(2!==e.length||e[0]!==e[1])throw new fy("Identity matrix initializer can only be used for 2D square matrices.");return Sl(this.gain,ch(e[0]))}))}getConfig(){return{gain:this.gain}}};Db.className="Identity",nl.registerClass(Db);var Mb=class extends Cb{constructor(e){if(super(),e.scale<0)throw new fy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Fy(Nb,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Fy(Tb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(qy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=ab(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=ab(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=ab(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new my(`${this.getClassName()} does not support dType ${t}.`);return cd(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Cp(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Mb.className="VarianceScaling",nl.registerClass(Mb);var Ob=class extends Mb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};Ob.className="GlorotUniform",nl.registerClass(Ob);var Lb=class extends Mb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};Lb.className="GlorotNormal",nl.registerClass(Lb);var zb=class extends Mb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};zb.className="HeNormal",nl.registerClass(zb);var Pb=class extends Mb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};Pb.className="HeUniform",nl.registerClass(Pb);var Bb=class extends Mb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};Bb.className="LeCunNormal",nl.registerClass(Bb);var Wb=class extends Mb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Mb.className}};Wb.className="LeCunNormal",nl.registerClass(Wb);var Vb=class extends Cb{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new my("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return to((()=>{if(e.length<2)throw new my("Shape must be at least 2D.");e[0],e[1];let t=yb(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Pc.gramSchmidt(t);return e[0]>e[1]&&(n=bo(n)),Sl(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Vb.className="Orthogonal",nl.registerClass(Vb);var Ub={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gb(e,t={}){return _y(e,nl.SerializationMap.getMap().classNameMap,t,"initializer")}function Hb(e){return Ty(e)}function jb(e){if("string"==typeof e){let t=e in Ub?Ub[e]:e;if("GlorotNormal"===t)return new Lb;if("GlorotUniform"===t)return new Ob;if("HeNormal"===t)return new zb;if("HeUniform"===t)return new Pb;if("LeCunNormal"===t)return new Bb;if("LeCunUniform"===t)return new Wb;{let e={};return e.className=t,e.config={},Gb(e)}}return e instanceof Cb?e:Gb(e)}function qb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Kb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new fy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Yb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new fy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Zb(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Jb="Variable",Qb=class{constructor(e,t="float32",n=Jb,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=zy(),n=null==n?Jb:n,this.originalName=Jy(n),this.name=Qy(this.originalName),this.trainable_=r,this.constraint=a,this.val=bd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function ex(e){return e.map((e=>e.read()))}function tx(e){e.forEach((e=>{e[0].write(e[1])}))}var nx=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},rx=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=zy(),null!=s&&(this.originalName=Jy(s),this.name=Qy(this.originalName)),this.rank=t.length}},ax=0,sx=class{constructor(e,t){this.callArgs=t,this.id=ax++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},ix=0,ox=class extends nl.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ix++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=Iy(e)+"_"+By(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new cy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new fy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return wy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return wy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new dy(`Layer ${this.name} is not connected, no input to return.`);return wy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new dy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ky(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=ky(this.inputSpec);if(e.length!==t.length)throw new fy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new fy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new fy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new fy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new fy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new fy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new fy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=ky(e),r=!0;for(let e of n)if(!(e instanceof rx)){r=!1;break}let a=!0;for(let e of n)if(e instanceof rx){a=!1;break}if(r===a)throw new fy("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of ky(e))t.push(n.shape);this.build(wy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=ky(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=wy(s),null!=this.activityRegularizer)throw new my("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=ky(e);let t=[];for(let n of e)t.push(n.shape);return wy(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new rx(s,n,this,ky(e),t,this.name,r))):new rx(s,a,this,ky(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new my("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new dy(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new dy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Zb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ex(e?this.trainableWeights:this.weights)}setWeights(e){to((()=>{let t=this.weights;if(t.length!==e.length)throw new fy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=ex(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!pa.arraysEqual(s.shape,o.shape))throw new fy(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}tx(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new fy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():jb("zeros"));let l=r.apply(t,n),u=new Qb(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ky(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=ky(e);t=ky(t),n=ky(n),r=ky(r),a=Kb(a),s=Kb(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new sx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function lx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=lx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var ux=class extends ox{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:By("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new fy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new fy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new fy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new rx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new fy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function hx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new fy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ux({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}ux.className="InputLayer",nl.registerClass(ux);var px=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof px)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new fy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return wi(t,e.dtype)}catch(n){throw new fy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof rx){if(null==this.id2Value[e.id])throw new fy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new fy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof rx){if(null==this.id2Value[e.id])throw new fy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new fy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&no(this.id2Mask)}},dx=new yy,cx=new yy;function fx(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p=o.join(",")+"|"+t.names().sort().join(","),d=dx.get(p);if(null==d){let e=function(e,t){pa.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=gx(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=gx(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:mx(r)}}(i,t);d=e.sorted,h=e.recipientCounts,dx.put(p,d),cx.put(p,h)}h={},a||Object.assign(h,cx.get(p));let c=new px(t);for(let e=0;e<d.length;++e){if(null!=r){let e=Qi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof ux)continue;let u=[],p=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),p.push(r),null!=r&&(m=!0),a||(h[e.name]--,0===h[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=p[0]);let g=ky(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let b=yx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||no(f)}return c.disposeMasks(),s?l:l[0]}function mx(e){let t={};for(let n in e)t[n]=e[n].size;return t}function gx(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function yx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}Me().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=dx&&dx.setMaxEntries(e),null!=cx&&cx.setMaxEntries(e)}));var bx={};function xx(e,t){return to((()=>rh(sh(Sl(e,e),t,!0))))}d(bx,{maxNorm:()=>Ex,minMaxNorm:()=>Fx,nonNeg:()=>Ax,unitNorm:()=>$x});var vx=class extends nl.Serializable{getConfig(){return{}}},wx=class extends vx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return to((()=>{let t=xx(e,this.axis),n=gu(t,0,this.maxValue);return Sl(e,Il(n,wl(lb(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};wx.className="MaxNorm",nl.registerClass(wx);var kx=class extends vx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return to((()=>Il(e,wl(lb(),xx(e,this.axis)))))}getConfig(){return{axis:this.axis}}};kx.className="UnitNorm",nl.registerClass(kx);var Ix=class extends vx{apply(e){return $p(e)}};Ix.className="NonNeg",nl.registerClass(Ix);var Sx=class extends vx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return to((()=>{let t=xx(e,this.axis),n=wl(Sl(this.rate,gu(t,this.minValue,this.maxValue)),Sl(1-this.rate,t));return Sl(e,Il(n,wl(lb(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Sx.className="MinMaxNorm",nl.registerClass(Sx);var Nx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Tx(e){return Ty(e)}function Cx(e,t={}){return _y(e,nl.SerializationMap.getMap().classNameMap,t,"constraint")}function _x(e){if(null==e)return null;if("string"==typeof e){return Cx({className:e in Nx?Nx[e]:e,config:{}})}return e instanceof vx?e:Cx(e)}function Ex(e){return new wx(e)}function $x(e){return new kx(e)}function Ax(){return new Ix}function Fx(e){return new Sx(e)}var Rx={};function Dx(){return new _b}function Mx(){return new Eb}function Ox(e){return new $b(e)}function Lx(e){return new Ab(e)}function zx(e){return new Fb(e)}function Px(e){return new Rb(e)}function Bx(e){return new Db(e)}function Wx(e){return new Mb(e)}function Vx(e){return new Ob(e)}function Ux(e){return new Lb(e)}function Gx(e){return new zb(e)}function Hx(e){return new Pb(e)}function jx(e){return new Bb(e)}function qx(e){return new Wb(e)}function Kx(e){return new Vb(e)}d(Rx,{constant:()=>Ox,glorotNormal:()=>Ux,glorotUniform:()=>Vx,heNormal:()=>Gx,heUniform:()=>Hx,identity:()=>Bx,leCunNormal:()=>jx,leCunUniform:()=>qx,ones:()=>Mx,orthogonal:()=>Kx,randomNormal:()=>zx,randomUniform:()=>Lx,truncatedNormal:()=>Px,varianceScaling:()=>Wx,zeros:()=>Dx});var Xx,Yx={};async function Zx(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];no(r)}}function Jx(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}d(Yx,{Layer:()=>ox,RNN:()=>dk,RNNCell:()=>ck,activation:()=>DI,add:()=>UI,alphaDropout:()=>RS,average:()=>GI,averagePooling1d:()=>QI,averagePooling2d:()=>nS,averagePooling3d:()=>sS,avgPool1d:()=>eS,avgPool2d:()=>rS,avgPool3d:()=>iS,avgPooling1d:()=>tS,avgPooling2d:()=>aS,avgPooling3d:()=>oS,batchNormalization:()=>YI,bidirectional:()=>NS,concatenate:()=>HI,conv1d:()=>NI,conv2d:()=>TI,conv2dTranspose:()=>CI,conv3d:()=>_I,conv3dTranspose:()=>EI,convLstm2d:()=>wS,convLstm2dCell:()=>kS,cropping2D:()=>AI,dense:()=>MI,depthwiseConv2d:()=>RI,dot:()=>XI,dropout:()=>OI,elu:()=>xI,embedding:()=>VI,flatten:()=>zI,gaussianDropout:()=>FS,gaussianNoise:()=>AS,globalAveragePooling1d:()=>lS,globalAveragePooling2d:()=>uS,globalMaxPool1d:()=>CS,globalMaxPool2d:()=>_S,globalMaxPooling1d:()=>hS,globalMaxPooling2d:()=>pS,gru:()=>mS,gruCell:()=>gS,input:()=>cw,inputLayer:()=>bI,layerNormalization:()=>ZI,leakyReLU:()=>wI,lstm:()=>yS,lstmCell:()=>bS,masking:()=>DS,maxPool1d:()=>ES,maxPool2d:()=>$S,maxPooling1d:()=>dS,maxPooling2d:()=>cS,maxPooling3d:()=>fS,maximum:()=>jI,minimum:()=>qI,multiply:()=>KI,permute:()=>WI,prelu:()=>kI,reLU:()=>vI,repeatVector:()=>PI,reshape:()=>BI,rnn:()=>IS,separableConv2d:()=>$I,simpleRNN:()=>xS,simpleRNNCell:()=>vS,softmax:()=>II,spatialDropout1d:()=>LI,stackedRNNCells:()=>SS,thresholdedReLU:()=>SI,timeDistributed:()=>TS,upSampling2d:()=>FI,zeroPadding2d:()=>JI}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Xx||(Xx={}));var Qx=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},ev=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},tv=class extends Qx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=to((()=>wl(this.totals[e],Sl(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:to((()=>{let n=Sl(Il(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ro(t[e])})))}},nv=class extends Qx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},rv=class extends Qx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||ef,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");pa.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():pa.now();return(...s)=>{let i=null!=n?n():pa.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await Zx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Zx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await Zx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Zx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await Zx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):pa.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Zx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Zx(e),await this.trainEnd(e))}};function av(e,t){return null==e&&(e={}),e instanceof Qx?[e]:Array.isArray(e)&&e[0]instanceof Qx?e:ky(e).map((e=>new rv(e,t)))}var sv=class{constructor(){}static registerCallbackConstructor(e,t){pa.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),sv.checkForDuplicate(t),null==sv.constructors[e]&&(sv.constructors[e]=[]),sv.constructors[e].push(t)}static checkForDuplicate(e){for(let t in sv.constructors)sv.constructors[+t].forEach((t=>{if(t===e)throw new fy("Duplicate callback constructor.")}))}static clear(){sv.constructors={}}static createCallbacks(e){let t=[];for(let n in sv.constructors){let r=+n;e>=r&&t.push(...sv.constructors[r])}return t.map((e=>new e))}};function iv(e,t,n,r,a,s,i,o,l){let u=new nv,h=[new tv,...sv.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new ev(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function ov(e,t={},n=!1){return _y(e,nl.SerializationMap.getMap().classNameMap,t,"layer",n)}function lv(e,t){return to((()=>{"float32"!==e.dtype&&(e=wi(e,"float32"));let n=sh(vb(e),t,!0),r=fh(n.shape,lb()),a=rh(Zh(n,r));return Il(e,a)}))}function uv(e,t){return to((()=>Jh(vb(zh(t,e)),-1)))}function hv(e,t){return to((()=>Jh(Nl(zh(t,e)),-1)))}function pv(e,t){return to((()=>{let n=zh(e,t),r=gu(Nl(e),lb(),Number.MAX_VALUE),a=Nl(Il(n,r));return Sl(100,Jh(a,-1))}))}function dv(e,t,n=!1){return to((()=>{if(n)t=Xp(t);else{let e=sh(t,t.shape.length-1,!0);t=Il(t,e)}return t=gu(t,lb(),1-lb()),go(sh(Sl(wi(e,"float32"),Ch(t)),t.shape.length-1))}))}function cv(e,t,n=!1){return to((()=>{let r=wi(mh(function(e){let t=[ab(e.shape)];return Jl(e,t)}(e)),"int32"),a=(t=gu(t,lb(),1-lb())).shape;return dv(Jl(ji(r,a[a.length-1]),a),t,n)}))}function fv(e,t){return to((()=>{let n;return n=gu(t,lb(),1-lb()),n=Ch(Il(n,zh(1,n))),Jh(function(e,t){if(!pa.arraysEqual(e.shape,t.shape))throw new fy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return to((()=>{let n=$p(t),r=go(Nl(t));return wl(zh(n,Sl(t,e)),_h(uh(r)))}))}(e,n),-1)}))}function mv(e,t){return to((()=>{let n=lv(e,-1),r=lv(t,-1),a=Sl(n,r);return go(sh(a,-1))}))}sv.constructors={};var gv={meanSquaredError:uv,meanAbsoluteError:hv,meanAbsolutePercentageError:pv,meanSquaredLogarithmicError:function(e,t){return to((()=>{let n=gu(t,lb(),Number.MAX_VALUE),r=Ch(wl(1,n)),a=gu(e,lb(),Number.MAX_VALUE),s=Ch(wl(1,a));return Jh(vb(zh(r,s)),-1)}))},squaredHinge:function(e,t){return to((()=>{let n=Zh(0,zh(1,Sl(e,t)));return Jh(vb(n),-1)}))},hinge:function(e,t){return to((()=>{let n=Zh(0,zh(1,Sl(e,t)));return Jh(n,-1)}))},categoricalHinge:function(e,t){return to((()=>{let n=sh(Sl(e,t),-1),r=Qu(Sl(zh(1,e),t),-1);return Zh(0,wl(1,zh(r,n)))}))},logcosh:function(e,t){return to((()=>{let n=Math.log(2),r=zh(t,e),a=zh(wl(r,Oh(Sl(-2,r))),n);return Jh(a,-1)}))},categoricalCrossentropy:dv,sparseCategoricalCrossentropy:cv,binaryCrossentropy:fv,kullbackLeiblerDivergence:function(e,t){return to((()=>{let n=gu(e,lb(),1),r=gu(t,lb(),1);return sh(Sl(e,Ch(Il(n,r))),-1)}))},poisson:function(e,t){return to((()=>{let n=Ch(wl(lb(),t));return Jh(zh(t,Sl(e,n)),-1)}))},cosineProximity:mv};function yv(e){if("string"==typeof e){if(e in gv)return gv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new fy(t)}return e}function bv(e,t){return to((()=>{let n=Sl(.5,up(t)),r=ub(yh(t,n),e.dtype);return Jh(Lu(e,r),-1)}))}function xv(e,t){return to((()=>ub(Lu(Al(e,-1),Al(t,-1)),"float32")))}function vv(e,t){return to((()=>wi(sh(Wh(Lu(e,1),Lu(t,1))),"float32")))}function wv(e,t){return to((()=>{let n=vv(e,t),r=function(e,t){return to((()=>wi(sh(Wh(Lu(e,0),Lu(t,1))),"float32")))}(e,t),a=wl(n,r);return wi(zu(yh(a,0),Il(n,a),0),"float32")}))}function kv(e,t){return to((()=>{let n=vv(e,t),r=function(e,t){return to((()=>wi(sh(Wh(Lu(e,1),Lu(t,0))),"float32")))}(e,t),a=wl(n,r);return wi(zu(yh(a,0),Il(n,a),0),"float32")}))}function Iv(e,t){return fv(e,t)}function Sv(e,t){return e.rank===t.rank&&(e=nd(e,[e.rank-1])),(t=Al(t,-1)).dtype!==e.dtype&&(t=wi(t,e.dtype)),wi(Lu(e,t),"float32")}var Nv=dv,Tv=cv,Cv={binaryAccuracy:bv,categoricalAccuracy:xv,precision:wv,categoricalCrossentropy:Nv,sparseCategoricalCrossentropy:Tv,mse:uv,MSE:uv,mae:hv,MAE:hv,mape:pv,MAPE:pv,cosine:mv};function _v(e){if("string"==typeof e&&e in Cv)return Cv[e];if("string"!=typeof e&&null!=e)return e;throw new fy(`Unknown metric ${e}`)}function Ev(e){if(xy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(gv))if(gv[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Cv))if(Cv[n]===e){t=n;break}return void 0!==t?t:e.name}}function $v(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Av(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){JSON.stringify(e).length}}function Av(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!Av(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!Av(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Fv(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Rv(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?Dv(o[e],n,r):Mv(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?Zb(e.collectedTrainableWeights):Zb(e.trainableWeights),t}(e),u=Zb(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Rv(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Dv(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Rv([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function Mv(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Rv([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Rv(["","","","",i[e]],t,r)}function Ov(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Lv(e,t){if(null===e)return null;if("string"==typeof e)return Sy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Ov(t,a,r)?n.push(r):n.push(Lv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=Sy(n);t[e]=Lv(r,e)}}return t}}function zv(e,t){if(null==e)return null;if("string"==typeof e)return Iy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Ov(t,a,r)?n.push(r):n.push(zv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=Iy(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?zv(r,n):r}return t}}var Pv="3.20.0",Bv=class extends ox{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=By(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],$y(this.inputs).length!==this.inputs.length)throw new fy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);$y(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;xy(0===n,"input layer has >1 nodes"),xy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof ux))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new cy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Bv.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let h=i.slice().reverse();for(let e of h){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let p={};for(let e in t){let r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(Ey);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof Bv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(Ey);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new cy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new cy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new fy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new fy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new fy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new fy(`${e.length} of ${r} weights are not set: ${e}`)}tx(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Pv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=zv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return to((()=>{e=ky(e);let n=new px;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return fx(this.outputs,n,t)}))}computeMask(e,t){return to((()=>{let n;return e=ky(e),n=null==t?by(null,e.length):ky(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Kb(e);if(t.length!==this.inputLayers.length)throw new fy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ey);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=Kb(t.computeOutputShape(wy(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];xy(t in n),a.push(n[t])}return wy(a)}runInternalGraph(e,t){null==t&&(t=by(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ey);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=ky(t.call(e,u)),l=ky(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ky(t.call(r,u)),l=ky(t.computeMask(r,i));if(t.activityRegularizer)throw new my("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){xy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Bv?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=Bv.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new fy(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new fy("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new fy(`No such layer: ${e}`)}calculateLosses(){return to((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Bv.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=Bv.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[Bv.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Bv.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Bv.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(wy(r),n)}function l(e){let n=e.name,s=ov(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new fy(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let e of h)l(e);for(;!Ay(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];xy(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];xy(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new fy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){to((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Wv(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Vv(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=to((()=>{if(1===e.shape.length)return ki(e);if(2===e.shape.length){if(e.shape[1]>1)return Al(e,1);if(1===e.shape[1])return Jl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());no(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),od(a,"float32")}return null}function Uv(e,t){return Sl(e,t)}function Gv(e,t){let n,r,a=t;n=a.xs,r=a.ys,pa.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Hv("input",e.inputNames,n),i=Hv("output",e.outputNames,r),o=s[0].shape[0];pa.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),pa.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)pa.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)pa.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Hv(e,t,n){if(n instanceof Va)return[n];if(Array.isArray(n))return pa.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new fy(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function jv(e,t,n){let r=null!=n.batchesPerEpoch;if(pa.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),pa.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),pa.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),pa.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),pa.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(qv(n.validationData))pa.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new my("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=av(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=iv(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done)break;if(null!=t.value){let{xs:r,ys:a}=Gv(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=Wv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Vv(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);no(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,ro(n)}await d.onBatchEnd(p,s),Jx(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=qv(n.validationData)?ky(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ky(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function qv(e){return"function"==typeof e.iterator}function Kv(e){pa.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Xv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>pb(e,t,n-t))):pb(e,t,n-t)}function Yv(e,t){return to((()=>null==e?null:Array.isArray(e)?e.map((e=>Yv(e,t))):xb(e,"int32"===t.dtype?t:wi(t,"int32"))))}function Zv(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Jv(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,h,p,d;e.isTraining=!0;try{let c=null==r.batchSize?32:r.batchSize;Kv(c);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new my("validationData including sample weights is not supported yet."):new fy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];let t=!0,n=await e.standardizeUserData(l,u,null,null,t,c);h=n[0],p=n[1],g=h.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];h=Xv(a,e,t),i=a,a=Xv(a,0,e),p=Xv(s,e,t),o=s,s=Xv(s,0,e),g=h.concat(p)}else null!=r.validationSteps&&(y=!0);let b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x,v,w=e.makeTrainFunction(),k=e.getDedupedMetricsNames();y?(e.makeTestFunction(),x=e.testFunction,v=k.slice().concat(k.map((e=>"val_"+e)))):(x=null,g=[],v=k.slice());let I=av(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,h,p,d,c,f){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new fy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=ob(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=iv(o,i,s,d,y,c,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new my("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new my("batch shuffling is not implemneted yet");h&&pa.shuffle(g);let i=od(g),o=Zv(y,a);for(let h=0;h<o.length;++h){let p={};if(await b.onBatchBegin(h,p),to((()=>{let d=o[h][0],c=o[h][1],f=pb(i,d,c-d);p.batch=h,p.size=c-d;let g=Yv(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];p[t]=n,ro(n)}if(h===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];ro(a),s["val_"+n]=a}}})),await b.onBatchEnd(h,p),Jx(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,w,b,k,c,r.epochs,r.verbose,I,x,g,r.shuffle,v,r.initialEpoch,null,null)}finally{e.isTraining=!1,ew(a,t),ew(s,n),ew(i,t),ew(o,n),ew(h,l),ew(p,u),null!=d&&no(d)}}function Qv(e){let t=[];e instanceof Va&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(hb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ew(e,t){if(null==e)return;let n=[];if(t instanceof Va)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof Va)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function tw(e){return Array.isArray(e)}function nw(e){return!function(e){return e instanceof Va}(e)&&!tw(e)}function rw(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(tw(e)&&e.length>0)t=!0;else if(nw(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new fy(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(nw(e)){s=[];for(let n of t){if(null==e[n])throw new fy(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(tw(e)){if(e.length!==t.length)throw new fy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new fy(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Qv(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new fy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new fy(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function aw(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new fy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new fy(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new fy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new fy(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var sw=class extends Bv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new fy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Fv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Jc.adagrad(.01),Adadelta:()=>Jc.adadelta(1,.95,lb()),Adam:()=>Jc.adam(.001,.9,.999,lb()),Adamax:()=>Jc.adamax(.002,.9,.999,lb(),0),RMSProp:()=>Jc.rmsprop(.001,.9,0,lb()),SGD:()=>Jc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new fy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Uc))throw new fy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new fy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>yv(e)))}else{let n=yv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new fy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)e.loss[n],t.push(yv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Zy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===fv?-1!==["accuracy","acc"].indexOf(i)?r=bv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Iv):this.lossFunctions[e]===cv?-1!==["accuracy","acc"].indexOf(i)?r=Sv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Tv):-1!==["accuracy","acc"].indexOf(i)?r=xv:-1!==["crossentropy","ce"].indexOf(i)&&(r=Nv),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=_v(i),n=""+Ev(i);let t;Zy(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Kv(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction;return wy(this.testLoop(i,s,r,n.verbose,n.steps))}finally{ew(a[0],e),ew(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new my("Verbose mode is not implemented yet.");pa.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=to((()=>{if(t.value){let{xs:n,ys:r}=Gv(e,t.value),i=n.concat(r),u=to((()=>a(i)));if(no(i),0===l)for(let e=0;e<u.length;++e)s.push(nh(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=to((()=>wl(s[e],Sl(h,t)))),l>0&&no(n)}no(u),o+=h,++l}return s})),t.done)break}for(let e=0;e<s.length;++e){let t=s[e];s[e]=Il(s[e],o),no(t)}return wy(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new fy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new fy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new fy("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new px;if(e instanceof Va&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new fy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new fy(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=fx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=by(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new fy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return to((()=>{let r=this.checkNumSamples(e);if(n)throw new my("Verbose predictLoop() is not implemented yet.");let a=Zv(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)to((()=>{let n=a[t][0],r=a[t][1],s=Xv(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new px(i);return fx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return wy(s.map((e=>tu(e,0))))}))}predict(e,t={}){let n=Qv(e);aw(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return Kv(r),this.predictLoop(n,r)}finally{ew(n,e)}}predictOnBatch(e){aw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new cy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===cv?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){let r=$y(e.map((e=>e.shape[0])));r.sort();let a=$y(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new fy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new fy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!pa.arraysEqual(r,a))throw new fy(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=rw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=rw(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[uv,fv,dv];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===dv&&1===s.shape[s.shape.length-1])throw new fy(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new fy(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new fy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Wv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Vv(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return to((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new my("Verbose mode is not implemented yet.");if(null!=a)throw new my("steps mode in testLoop() is not implemented yet");{let r=Zv(s,n),a=od(ob(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=pb(a,s,o-s),u=Yv(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(nh(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=wl(i[e],Sl(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Il(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;vy(e,r)>1&&(a+=`_${vy(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new px(e),l=fx(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],l[e]);null!=a[e]&&(n=Uv(n,a[e]));let s=Jh(n);t.push(s),i=0===e?n:wl(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Jh(t(r[a],l[a]))}ro(n),s.push(n)}return i=Jh(i),this.calculateLosses().forEach((e=>{i=wl(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>to((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new px(s),o=fx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Jh(r(a[e],o[e]));t=0===e?s:wl(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Jh(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return Jv(this,e,t,n)}async fitDataset(e,t){return jv(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return no(s),ew(n[0],e),ew(n[1],t),wy(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Qi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Qi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Iy(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Iy(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Iy(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Iy(Ev(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Iy(Ev(e))));{let e={};for(let t in this.metrics)e[t]=Iy(Ev(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=ov(Lv(e.optimizer_config));if("string"==typeof e.loss)t=Sy(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>Sy(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=Sy(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>Sy(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=Sy(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Si.getSaveHandlers(e);if(0===t.length)throw new fy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new fy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new fy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Si.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Pv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Si.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Si.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&($v(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){$v(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};sw.className="Model",nl.registerClass(sw);var iw=class extends sw{};async function ow(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=ov(Lv(n),t);if(null!=e.weightsManifest){let t=await Si.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),no(t)}return r}async function lw(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Si.getLoadHandlers(e,t);if(0===n.length)n.push(Si.browserHTTPRequest(e,t));else if(n.length>1)throw new fy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new fy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=ov(Lv(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new fy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Si.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),no(e),no(t.map((e=>e.tensor)))}return o}(e,void 0,t)}iw.className="Functional",nl.registerClass(iw);var uw=class extends sw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:By("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new fy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof uw||e instanceof sw;if(n){if(t=e,1!==t.outputs.length)throw new fy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new fy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new fy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=hx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new fy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new fy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=lx(this.outputs[0])}this.inboundNodes=[],new sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:by(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new sw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new fy("Legacy serialization format not supported yet.");a=t}else pa.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof uw))throw new my(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=ov(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new fy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new fy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function hw(e){return new sw(e)}function pw(e){return new uw(e)}function dw(e,t){return null==t&&(t={}),lw(e,t)}function cw(e){return hx(e)}function fw(e,t){sv.registerCallbackConstructor(e,t)}uw.className="Sequential",nl.registerClass(uw);var mw=class extends nl.Serializable{getConfig(){return{}}},gw=class extends mw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new my(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Uu(e)}(e,t)}};gw.className="elu",nl.registerClass(gw);var yw=class extends mw{apply(e){return Pp(e)}};yw.className="selu",nl.registerClass(yw);var bw=class extends mw{apply(e){return $p(e)}};bw.className="relu",nl.registerClass(bw);var xw=class extends mw{apply(e){return to((()=>np(6,$p(e))))}};xw.className="relu6",nl.registerClass(xw);var vw=class extends mw{apply(e){return e}};vw.className="linear",nl.registerClass(vw);var ww=class extends mw{apply(e){return nu(e)}};ww.className="sigmoid",nl.registerClass(ww);var kw=class extends mw{apply(e){return function(e){return to((()=>{let t=wl(.5,Sl(.2,e));return gu(t,0,1)}))}(e)}};kw.className="hardSigmoid",nl.registerClass(kw);var Iw=class extends mw{apply(e){return Oh(e)}};Iw.className="softplus",nl.registerClass(Iw);var Sw=class extends mw{apply(e){return function(e){return to((()=>Il(e,wl(Nl(e),1))))}(e)}};Sw.className="softsign",nl.registerClass(Sw);var Nw=class extends mw{apply(e){return au(e)}};Nw.className="tanh",nl.registerClass(Nw);var Tw=class extends mw{apply(e,t=-1){return Xp(e,t)}};Tw.className="softmax",nl.registerClass(Tw);var Cw=class extends mw{apply(e,t=-1){return Ph(e,t)}};Cw.className="logSoftmax",nl.registerClass(Cw);var _w=class extends mw{apply(e,t=1){return to((()=>Sl(nu(Sl(e,t)),e)))}};_w.className="swish",nl.registerClass(_w);var Ew=class extends mw{apply(e){return to((()=>Sl(e,au(Oh(e)))))}};function $w(e){return e.getClassName()}function Aw(e,t={}){return _y(e,nl.SerializationMap.getMap().classNameMap,t,"activation")}function Fw(e){if(null==e){let e={className:"linear",config:{}};return Aw(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},Aw(t)}return e instanceof mw?e:Aw(e)}function Rw(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Ew.className="mish",nl.registerClass(Ew);var Dw=class extends nl.Serializable{},Mw=class extends Dw{constructor(e){super(),Rw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return to((()=>{let t=Qh([1]);return this.hasL1&&(t=wl(t,sh(Sl(this.l1,Nl(e))))),this.hasL2&&(t=wl(t,sh(Sl(this.l2,vb(e))))),Jl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Mw.className="L1L2",nl.registerClass(Mw);var Ow={l1l2:"L1L2"};function Lw(e){return Ty(e)}function zw(e,t={}){return _y(e,nl.SerializationMap.getMap().classNameMap,t,"regularizer")}function Pw(e){if(null==e)return null;if("string"==typeof e){return zw({className:e in Ow?Ow[e]:e,config:{}})}return e instanceof Dw?e:zw(e)}var Bw=class extends ox{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xb(e);let n=$p(e);return null!=this.maxValue&&(n=gu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Bw.className="ReLU",nl.registerClass(Bw);var Ww=class extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xb(e);return kh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ww.className="LeakyReLU",nl.registerClass(Ww);var Vw=class extends ox{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Pw(e.alphaRegularizer),this.alphaConstraint=_x(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new fy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Yb(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new nx({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xb(e),bp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Hb(this.alphaInitializer),alphaRegularizer:Lw(this.alphaRegularizer),alphaConstraint:Tx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Vw.className="PReLU",nl.registerClass(Vw);var Uw=class extends ox{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new my(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xb(e);return Uu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Uw.className="ELU",nl.registerClass(Uw);var Gw=class extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Xb(e);return Sl(n,wi(yh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Gw.className="ThresholdedReLU",nl.registerClass(Gw);var Hw=class extends ox{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Tw).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Xb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function jw(e,t,n){if("number"==typeof e)return by(e,t);if(e.length!==t)throw new fy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!rb(a))throw new fy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function qw(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Kw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ib([n-t,0]);else{if("same"!==r)throw new fy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Xw(e,t){return to((()=>(qy(t),"channelsFirst"===t?bo(e,[0,2,3,1]):e)))}function Yw(e,t){return to((()=>(qy(t),"channelsFirst"===t?bo(e,[0,2,3,4,1]):e)))}function Zw(e,t,n,r=[1,1],a="valid",s,i,o=null){return to((()=>{if(null==s&&(s="channelsLast"),qy(s),3!==e.rank&&4!==e.rank)throw new fy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new fy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Xw(e,s);if("causal"===a)throw new my("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=$d.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=bo(l,[0,3,1,2])),l}))}Hw.className="Softmax",nl.registerClass(Hw);var Jw=class extends ox{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jw.verifyArgs(t),this.rank=e,Dy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new my(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=jw(t.kernelSize,e,"kernelSize"),this.strides=jw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ky(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,qy(this.dataFormat),this.activation=Fw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_x(t.biasConstraint),this.biasRegularizer=Pw(t.biasRegularizer),this.activityRegularizer=Pw(t.activityRegularizer),this.dilationRate=jw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(xy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,3))throw new fy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$w(this.activation),useBias:this.useBias,biasInitializer:Hb(this.biasInitializer),biasRegularizer:Lw(this.biasRegularizer),activityRegularizer:Lw(this.activityRegularizer),biasConstraint:Tx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Qw=class extends Jw{constructor(e,t){super(e,t),this.kernel=null,Qw.verifyArgs(t),this.filters=t.filters,Dy(this.filters,"filters"),this.kernelInitializer=jb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_x(t.kernelConstraint),this.kernelRegularizer=Pw(t.kernelRegularizer)}build(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return to((()=>{e=Xb(e);let t,n=null==this.bias?null:this.bias.read(),r=Oy(this.activation.getClassName());if(null!=r&&2===this.rank)t=Zw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return to((()=>{if(null==s&&(s="channelsLast"),qy(s),3!==e.shape.length)throw new fy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new fy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new fy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=bo(e,[0,2,1])),"causal"===a)throw new my("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ku(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=kb(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Zw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new my("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return to((()=>{if(null==s&&(s="channelsLast"),qy(s),4!==e.rank&&5!==e.rank)throw new fy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new fy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Yw(e,s);if("causal"===a)throw new my("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Nu(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=kb(o,n)),"channelsFirst"===s&&(o=bo(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yb(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=qw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Hb(this.kernelInitializer),kernelRegularizer:Lw(this.kernelRegularizer),kernelConstraint:Tx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new fy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ek=class extends Qw{constructor(e){super(2,e),ek.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,2))throw new fy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};ek.className="Conv2D",nl.registerClass(ek);var tk=class extends Qw{constructor(e){super(3,e),tk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new fy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};tk.className="Conv3D",nl.registerClass(tk);var nk=class extends ek{constructor(e){if(super(e),this.inputSpec=[new nx({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Yb(e)).length)throw new fy("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nx({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return to((()=>{let t=Xb(e);if(4!==t.shape.length)throw new fy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Kw(i,h,l,this.padding),Kw(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=bo(t,[0,2,3,1]));let c=Su(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=bo(c,[0,3,1,2])),null!=this.bias&&(c=kb(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=Yb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Kw(a[n],o,s,this.padding),a[r]=Kw(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};nk.className="Conv2DTranspose",nl.registerClass(nk);var rk=class extends tk{constructor(e){if(super(e),this.inputSpec=[new nx({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new fy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Yb(e)).length)throw new fy("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nx({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return to((()=>{let t=Xb(e);if(5!==t.shape.length)throw new fy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Kw(o,c,h,this.padding),Kw(l,f,p,this.padding),Kw(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=bo(t,[0,2,3,4,1]));let y=Cu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=bo(y,[0,4,1,2,3])),null!==this.bias&&(y=kb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=Yb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=Kw(s[n],u,i,this.padding),s[r]=Kw(s[r],h,o,this.padding),s[a]=Kw(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};rk.className="Conv3DTranspose",nl.registerClass(rk);var ak=class extends Qw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new fy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new fy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new fy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Pw(t.depthwiseRegularizer),this.depthwiseConstraint=_x(t.depthwiseConstraint),this.pointwiseInitializer=jb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Pw(t.pointwiseRegularizer),this.pointwiseConstraint=_x(t.pointwiseConstraint)}build(e){if((e=Yb(e)).length<this.rank+2)throw new fy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new fy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new nx({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return to((()=>{let t;if(e=Xb(e),1===this.rank)throw new my("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=bo(e,[0,2,3,1])),t=Bp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=kb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=bo(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Hb(this.depthwiseInitializer),e.pointwiseInitializer=Hb(this.pointwiseInitializer),e.depthwiseRegularizer=Lw(this.depthwiseRegularizer),e.pointwiseRegularizer=Lw(this.pointwiseRegularizer),e.depthwiseConstraint=Tx(this.depthwiseConstraint),e.pointwiseConstraint=Tx(this.pointwiseConstraint),e}};ak.className="SeparableConv";var sk=class extends ak{constructor(e){super(2,e)}};sk.className="SeparableConv2D",nl.registerClass(sk);var ik=class extends Qw{constructor(e){super(1,e),ik.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ry(e.kernelSize,"number",1,1))throw new fy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};ik.className="Conv1D",nl.registerClass(ik);var ok=class extends ox{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return to((()=>{if(e=Xb(e),"channelsLast"===this.dataFormat){let t=cb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=cb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ok.className="Cropping2D",nl.registerClass(ok);var lk=class extends ox{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Fy(Vy,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return to((()=>{let t=Xb(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=bo(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?zc.resizeNearestNeighbor(t,[e,r]):zc.resizeBilinear(t,[e,r]);return bo(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?zc.resizeNearestNeighbor(t,[e,r]):zc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};lk.className="UpSampling2D",nl.registerClass(lk);var uk=class extends Jw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_x(e.depthwiseConstraint),this.depthwiseRegularizer=Pw(e.depthwiseRegularizer)}build(e){if((e=Yb(e)).length<4)throw new fy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new fy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return to((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return to((()=>{null==a&&(a="channelsLast"),qy(a);let i=Xw(e,a);if(4!==e.rank)throw new fy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new fy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Du(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=bo(i,[0,3,1,2])),i}))}(e=Xb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=kb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=qw(t,this.kernelSize[0],this.padding,this.strides[0]),s=qw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Hb(this.depthwiseInitializer),e.depthwiseRegularizer=Lw(this.depthwiseRegularizer),e.depthwiseConstraint=Tx(this.depthwiseRegularizer),e}};function hk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new fy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function pk(e,t,n,r=!1,a,s,i=!1,o=!1){return to((()=>{let i=t.shape.length;if(i<3)throw new fy(`Input should be at least 3D, but is ${i}D.`);let l=[1,0].concat(ob(2,i));if(t=bo(t,l),null!=s)throw new my("The rnn() functoin of the deeplearn.js backend does not support constants yet.");null!=a&&((a=wi(wi(a,"bool"),"float32")).rank===i-1&&(a=hh(a,-1)),a=bo(a,l)),r&&(t=Fp(t,0),null!=a&&(a=Fp(a,0)));let u,h,p,d=[],c=n,f=t.shape[0],m=gd(t);null!=a&&(h=gd(a));for(let t=0;t<f;++t){let n=m[t],r=to((()=>e(n,c)));if(null==a)u=r[0],c=r[1];else{let e=to((()=>{let e=h[t],n=zh(up(e),e);return{output:wl(Sl(r[0],e),Sl(c[0],n)),newStates:c.map(((t,a)=>wl(Sl(r[1][a],e),Sl(t,n))))}}));u=e.output,c=e.newStates}o&&d.push(u)}return o&&(p=rd(d,1)),[u,p,c]}))}uk.className="DepthwiseConv2D",nl.registerClass(uk);var dk=class extends ox{constructor(e){let t;if(super(e),null==e.cell)throw new fy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new vk({cells:e.cell}):e.cell,null==t.stateSize)throw new fy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new nx({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ob(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){qb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return to((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new my("Constants support is not implemented in RNN yet.");qb(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new nx({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pa.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new fy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new nx({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){to((()=>{if(!this.stateful)throw new dy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new fy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qh([n,e]))):this.states_=[Qh([n,this.cell.stateSize])];else if(null==e)no(this.states_),null!=this.keptStates&&(no(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qh([n,e]))):this.states_[0]=Qh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):no(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!pa.arraysEqual(r.shape,s))throw new fy(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ro(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=hk(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new nx({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof rx){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return to((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Xb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new fy(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll;let i={training:r},o=pk(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return to((()=>{let t=Qh(e.shape);return t=sh(t,[1,2]),t=hb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?gb(t,[1,e]):t)):this.cell.stateSize>1?[gb(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===dk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=ov(t.cell,n);return new e(Object.assign(t,{cell:r}))}};dk.className="RNN",nl.registerClass(dk);var ck=class extends ox{},fk=class extends ck{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dy(this.units,"units"),this.activation=Fw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pw(e.kernelRegularizer),this.recurrentRegularizer=Pw(e.recurrentRegularizer),this.biasRegularizer=Pw(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=sb([1,ib([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sb([1,ib([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return to((()=>{if(2!==e.length)throw new fy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wk({ones:()=>up(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wk({ones:()=>up(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=bb(null!=s?Sl(e,s):e,this.kernel.read()),null!=this.bias&&(a=kb(a,this.bias.read())),null!=i&&(n=Sl(n,i));let o=wl(a,bb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:$w(this.activation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:Lw(this.kernelRegularizer),recurrentRegularizer:Lw(this.recurrentRegularizer),biasRegularizer:Lw(this.biasRegularizer),activityRegularizer:Lw(this.activityRegularizer),kernelConstraint:Tx(this.kernelConstraint),recurrentConstraint:Tx(this.recurrentConstraint),biasConstraint:Tx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};fk.className="SimpleRNNCell",nl.registerClass(fk);var mk=class extends dk{constructor(e){e.cell=new fk(e),super(e)}call(e,t){return to((()=>{null!=this.cell.dropoutMask&&(no(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(no(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};mk.className="SimpleRNN",nl.registerClass(mk);var gk=class extends ck{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new fy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dy(this.units,"units"),this.activation=Fw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pw(e.kernelRegularizer),this.recurrentRegularizer=Pw(e.recurrentRegularizer),this.biasRegularizer=Pw(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=sb([1,ib([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sb([1,ib([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=Yb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return to((()=>{if(2!==e.length)throw new fy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wk({ones:()=>up(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wk({ones:()=>up(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Sl(e,o[0]));let u=bb(e,this.kernel.read());this.useBias&&(u=kb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Sl(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=Qp(h,[2*this.units,this.units],h.rank-1),c=bb(r,p),[f,m,g]=Qp(u,3,u.rank-1),[y,b]=Qp(c,2,c.rank-1);a=this.recurrentActivation.apply(wl(f,y)),s=this.recurrentActivation.apply(wl(m,b));let x=bb(Sl(s,r),d);i=this.activation.apply(wl(g,x));let v=wl(Sl(a,r),Sl(wl(1,go(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:$w(this.activation),recurrentActivation:$w(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:Lw(this.kernelRegularizer),recurrentRegularizer:Lw(this.recurrentRegularizer),biasRegularizer:Lw(this.biasRegularizer),activityRegularizer:Lw(this.activityRegularizer),kernelConstraint:Tx(this.kernelConstraint),recurrentConstraint:Tx(this.recurrentConstraint),biasConstraint:Tx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};gk.className="GRUCell",nl.registerClass(gk);var yk=class extends dk{constructor(e){e.implementation,e.cell=new gk(e),super(e)}call(e,t){return to((()=>{null!=this.cell.dropoutMask&&(no(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(no(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};yk.className="GRU",nl.registerClass(yk);var bk=class extends ck{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dy(this.units,"units"),this.activation=Fw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Pw(e.kernelRegularizer),this.recurrentRegularizer=Pw(e.recurrentRegularizer),this.biasRegularizer=Pw(e.biasRegularizer),this.kernelConstraint=_x(e.kernelConstraint),this.recurrentConstraint=_x(e.recurrentConstraint),this.biasConstraint=_x(e.biasConstraint),this.dropout=sb([1,ib([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sb([1,ib([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=Yb(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends Cb{apply(t,n){let a=e.apply([r]),s=(new Eb).apply([r]),i=e.apply([2*r]);return mb(mb(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return to((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new fy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wk({ones:()=>up(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wk({ones:()=>up(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Sl(e,u[0]));let p=bb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Sl(r,h[0])),p=wl(p,bb(r,this.recurrentKernel.read())),this.useBias&&(p=kb(p,this.bias.read()));let[d,c,f,m]=Qp(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=wl(Sl(i,a),Sl(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=Sl(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:$w(this.activation),recurrentActivation:$w(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),recurrentInitializer:Hb(this.recurrentInitializer),biasInitializer:Hb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Lw(this.kernelRegularizer),recurrentRegularizer:Lw(this.recurrentRegularizer),biasRegularizer:Lw(this.biasRegularizer),activityRegularizer:Lw(this.activityRegularizer),kernelConstraint:Tx(this.kernelConstraint),recurrentConstraint:Tx(this.recurrentConstraint),biasConstraint:Tx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};bk.className="LSTMCell",nl.registerClass(bk);var xk=class extends dk{constructor(e){e.implementation,e.cell=new bk(e),super(e)}call(e,t){return to((()=>{null!=this.cell.dropoutMask&&(no(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(no(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};xk.className="LSTM",nl.registerClass(xk);var vk=class extends ck{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return to((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;qb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Zy(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(ov(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ex(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}tx(t)}};function wk(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Ib(t(),n),o=()=>Sb(i,t,r);return!a||a<=1?ro(o().clone()):Array(a).fill(void 0).map(o).map((e=>ro(e.clone())))}vk.className="StackedRNNCells",nl.registerClass(vk);var kk=class extends dk{constructor(e){if(e.unroll)throw new my("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new my("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new nx({ndim:5})]}call(e,t){return to((()=>{if(null!=this.cell.dropoutMask&&(no(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(no(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new fy("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return to((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Qh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){to((()=>{if(!this.stateful)throw new dy("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new fy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qh(a))):this.states_=[Qh(a)];else if(null==e)no(this.states_),null!=this.keptStates&&(no(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qh(a))):this.states_[0]=Qh(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):no(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!pa.arraysEqual(n.shape,r))throw new fy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ro(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=qw(l,r[0],a,s[0],i[0]),p=qw(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};kk.className="ConvRNN2D";var Ik=class extends bk{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Dy(this.filters,"filters"),this.kernelSize=jw(n,2,"kernelSize"),this.kernelSize.forEach((e=>Dy(e,"kernelSize"))),this.strides=jw(r||1,2,"strides"),this.strides.forEach((e=>Dy(e,"strides"))),this.padding=a||"valid",Ky(this.padding),this.dataFormat=s||"channelsLast",qy(this.dataFormat),this.dilationRate=jw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Dy(e,"dilationRate")))}build(e){var t;e=Yb(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new fy(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends Cb{apply(e,t){return fb([n.apply([r]),ep([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return to((()=>{if(3!==e.length)throw new fy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wk({ones:()=>up(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Sl(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wk({ones:()=>up(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=Qp(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?Qp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,v,S,this.padding);let[N,T,C,_]=Qp(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,_);let E=this.recurrentActivation.apply(wl(l,c)),$=this.recurrentActivation.apply(wl(u,f)),A=wl(Sl($,s),Sl(E,this.activation.apply(wl(h,m)))),F=Sl(this.recurrentActivation.apply(wl(p,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=wu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?kb(a,n,this.dataFormat):a}recurrentConv(e,t){return wu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Ik.className="ConvLSTM2DCell",nl.registerClass(Ik);var Sk=class extends kk{constructor(e){let t=new Ik(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Sk.className="ConvLSTM2D",nl.registerClass(Sk);var Nk=class extends ox{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Sb((()=>Ib(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Nk.className="Dropout",nl.registerClass(Nk);var Tk=class extends Nk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Tk.className="SpatialDropout1D",nl.registerClass(Tk);var Ck=class extends ox{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Dy(this.units,"units"),this.activation=Fw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_x(e.kernelConstraint),this.biasConstraint=_x(e.biasConstraint),this.kernelRegularizer=Pw(e.kernelRegularizer),this.biasRegularizer=Pw(e.biasRegularizer),this.activityRegularizer=Pw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Yb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Yb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n,r=Xb(e),a=Oy(this.activation.getClassName());return null!=a?n=bb(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=bb(r,this.kernel.read()),null!=this.bias&&(n=kb(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:$w(this.activation),useBias:this.useBias,kernelInitializer:Hb(this.kernelInitializer),biasInitializer:Hb(this.biasInitializer),kernelRegularizer:Lw(this.kernelRegularizer),biasRegularizer:Lw(this.biasRegularizer),activityRegularizer:Lw(this.activityRegularizer),kernelConstraint:Tx(this.kernelConstraint),biasConstraint:Tx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ck.className="Dense",nl.registerClass(Ck);var _k=class extends ox{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yb(e);for(let t of e.slice(1))if(null==t)throw new fy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ab(e,1)]}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=bo(n,e)}return function(e){if(e.rank<=1)throw new fy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ab(e.shape,1)];return Jl(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};_k.className="Flatten",nl.registerClass(_k);var Ek=class extends ox{constructor(e){super(e),this.supportsMasking=!0,this.activation=Fw(e.activation)}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);return this.activation.apply(n)}))}getConfig(){let e={activation:$w(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ek.className="Activation",nl.registerClass(Ek);var $k=class extends ox{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return to((()=>function(e,t){return to((()=>{if(2!==e.shape.length)throw new fy(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return gb(hb(e,1),[1,t,1])}))}(e=Xb(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};$k.className="RepeatVector",nl.registerClass($k);var Ak=class extends ox{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new fy("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=ab(e);if(null!==s){if(0===a||i%a!=0)throw new fy(n);r[s]=i/a}else if(i!==a)throw new fy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Jl(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Ak.className="Reshape",nl.registerClass(Ak);var Fk=class extends ox{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=ob(1,e.dims.length+1);if(!pa.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new nx({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Yb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return bo(Xb(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Fk.className="Permute",nl.registerClass(Fk);var Rk=class extends ox{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Xb(e);return $l(lp(n,this.maskValue),-1)}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e),r=$l(lp(n,this.maskValue),-1,!0);return Sl(n,wi(r,n.dtype))}))}};Rk.className="Masking",nl.registerClass(Rk);var Dk=class extends ox{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ky(e.inputLength))}this.inputDim=e.inputDim,Dy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dy(this.outputDim,"outputDim"),this.embeddingsInitializer=jb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Pw(e.embeddingsRegularizer),this.activityRegularizer=Pw(e.activityRegularizer),this.embeddingsConstraint=_x(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return to((()=>this.maskZero?(e=Xb(e),lp(e,Pu(e))):null))}computeOutputShape(e){if(e=Yb(e),null==this.inputLength)return[...e,this.outputDim];let t=ky(this.inputLength);if(t.length!==e.length-1)throw new fy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new fy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);"int32"!==n.dtype&&(n=ub(n,"int32"));let r=xb(this.embeddings.read(),Jl(n,[n.size]));return Jl(r,Yb(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Hb(this.embeddingsInitializer),embeddingsRegularizer:Lw(this.embeddingsRegularizer),activityRegularizer:Lw(this.activityRegularizer),embeddingsConstraint:Tx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Dk.className="Embedding",nl.registerClass(Dk);var Mk=class extends ox{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new my}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new fy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yb(e)]),e.length<2)throw new fy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=$y(t),t.length>1)throw new fy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===$y(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return to((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=ib(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=hb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=Jl(r,[a].concat(ab(e.slice(1))));i=bo(i,[1,0]),i=Jl(i,s),t.push(i),n=!0}else if(e>1){let a=ob(1,e).concat([0]);t.push(bo(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Jl(bo(Jl(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(ob(0,a-1));r=bo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=$y(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return to((()=>{if(null==t)return null;if(!Array.isArray(t))throw new fy("`mask` should be an Array");if(!Array.isArray(e))throw new fy("`inputs` should be an Array");if(t.length!==e.length)throw new fy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:hh(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Wh(n,t[e]);return n}))}},Ok=class extends Mk{constructor(e){super(e)}mergeFunction(e){return to((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wl(t,e[n]);return t}))}};Ok.className="Add",nl.registerClass(Ok);var Lk=class extends Mk{constructor(e){super(e)}mergeFunction(e){return to((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Sl(t,e[n]);return t}))}};Lk.className="Multiply",nl.registerClass(Lk);var zk=class extends Mk{constructor(e){super(e)}mergeFunction(e){return to((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wl(t,e[n]);return Sl(1/e.length,t)}))}};zk.className="Average",nl.registerClass(zk);var Pk=class extends Mk{constructor(e){super(e)}mergeFunction(e){return to((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zh(t,e[n]);return t}))}};Pk.className="Maximum",nl.registerClass(Pk);var Bk=class extends Mk{constructor(e){super(e)}mergeFunction(e){return to((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=np(t,e[n]);return t}))}};Bk.className="Minimum",nl.registerClass(Bk);var Wk=class extends Mk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new fy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(pa.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new fy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return to((()=>fb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new fy("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new fy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new fy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new fy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return to((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(wi(up(e[n]),"bool")):t[n].rank<e[n].rank?r.push(hh(t[n],-1)):r.push(t[n]);let a=tu(r,this.axis);return El(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Vk(e,t){for(;e<0;)e+=t;return e}Wk.className="Concatenate",nl.registerClass(Wk);var Uk=class extends Mk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){pa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new my("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new fy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new fy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Vk(t,e[n].shape.length))):[Vk(this.axes,n.shape.length),Vk(this.axes,r.shape.length)],this.normalize&&(n=lv(n,t[0]),r=lv(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new my("batchDot is not implemented for tensors of 4D or higher rank yet");if(pa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),pa.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new my("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return to((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Jl(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Jl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?sh(Sl(e,t),s[0]):sh(Sl(bo(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Hi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=nd(i,t)}return 1===i.shape.length&&(i=hh(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Vk(this.axes,e.length),Vk(this.axes,t.length)],n}computeOutputShape(e){pa.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new my("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Uk.className="Dot",nl.registerClass(Uk);var Gk=class extends ox{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);return Sb((()=>wl(yb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};Gk.className="GaussianNoise",nl.registerClass(Gk);var Hk=class extends ox{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return to((()=>{this.invokeCallHook(e,t);let n=Xb(e);return this.rate>0&&this.rate<1?Sb((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return Sl(n,yb(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Hk.className="GaussianDropout",nl.registerClass(Hk);var jk=class extends ox{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xb(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return to((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Sb((()=>{let t=Xb(e),r=-1.7580993408473766,a=bh(Cp(n),this.rate);a=ub(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=wl(Sl(t,a),Sl(wl(a,-1),r));return wl(Sl(o,s),i)}),(()=>Xb(e)),t.training||!1)}return e}))}};function qk(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=uu(e,t,n,r,a,s);else if(3===e.rank)i=hu(e,t,n,r,a,s);else{if(4!==e.rank)throw new my(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=pu(e,t,n,r,a,s)}return i}function Kk(e,t,n,r,a=.001){return pa.arraysEqual(r.slice().sort(),ob(0,e.rank-1))?function(e,t,n,r,a=.001){return to((()=>{let s=sp(e,r),i=s.mean,o=s.variance;return[qk(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return to((()=>{let s=sp(e,r),i=s.mean,o=s.variance,l=[];for(let t of ob(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Jl(i,l),h=Jl(o,l),p=null==t?null:Jl(t,l),d=null==n?null:Jl(n,l);return[qk(e,u,h,d,p,a),i,o]}))}(e,t,n,r,a)}jk.className="AlphaDropout",nl.registerClass(jk);var Xk=class extends ox{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.movingMeanInitializer=jb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jb(e.movingVarianceInitializer||"ones"),this.betaConstraint=_x(e.betaConstraint),this.gammaConstraint=_x(e.gammaConstraint),this.betaRegularizer=Pw(e.betaRegularizer),this.gammaRegularizer=Pw(e.gammaRegularizer)}build(e){e=Yb(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new fy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new nx({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return to((()=>{let n=null!=t.training&&t.training,r=Xb(e),a=r.shape,s=a.length,i=ob(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=by(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!pa.arraysEqual(u,ob(0,s).slice(0,s-1));if(!n)return(()=>{if(h){let e=Jl(this.movingMean.read(),l),t=Jl(this.movingVariance.read(),l),n=this.center?Jl(this.beta.read(),l):null,a=this.scale?Jl(this.gamma.read(),l):null;return qk(r,e,t,n,a,this.epsilon)}return qk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[p,d,c]=Kk(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{to((()=>{let r=1-n,a=e.read(),s=Sl(zh(a,t),r);e.write(zh(a,s))}))};return f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum),p}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hb(this.betaInitializer),gammaInitializer:Hb(this.gammaInitializer),movingMeanInitializer:Hb(this.movingMeanInitializer),movingVarianceInitializer:Hb(this.movingVarianceInitializer),betaRegularizer:Lw(this.betaRegularizer),gammaRegularizer:Lw(this.gammaRegularizer),betaConstraint:Tx(this.betaConstraint),gammaConstraint:Tx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Xk.className="BatchNormalization",nl.registerClass(Xk);var Yk=class extends ox{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jb(e.betaInitializer||"zeros"),this.gammaInitializer=jb(e.gammaInitializer||"ones"),this.betaRegularizer=Pw(e.betaRegularizer),this.gammaRegularizer=Pw(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Yb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==$y(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){let n=Xb(e),r=n.shape,a=r.length;return to((()=>{let{mean:e,variance:t}=sp(n,this.axis,!0),s=by(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?Jl(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=dh(e,u),t=dh(t,u),null!=o&&(o=dh(o,h)),null!=l&&(l=dh(l,h)),qk(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hb(this.betaInitializer),gammaInitializer:Hb(this.gammaInitializer),betaRegularizer:Lw(this.betaRegularizer),gammaRegularizer:Lw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Yk.className="LayerNormalization",nl.registerClass(Yk);var Zk=class extends ox{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new fy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new fy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new fy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new nx({ndim:4})]}computeOutputShape(e){let t,n;return e=Yb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return to((()=>function(e,t,n){return to((()=>{if(4!==e.rank)throw new fy(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new fy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new fy(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],pp(e,r)}))}(Xb(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Jk(e,t,n,r,a,s){return to((()=>{qy(a),Xy(s),Ky(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Xw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Kh(e,t,n,o):Ql(e,t,n,o),"channelsFirst"===a&&(i=bo(i,[0,3,1,2])),i}))}function Qk(e,t,n,r,a,s){return to((()=>{qy(a),Xy(s),Ky(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Yw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Xh(e,t,n,o):eu(e,t,n,o),"channelsFirst"===a&&(i=bo(i,[0,4,1,2,3])),i}))}Zk.className="ZeroPadding2D",nl.registerClass(Zk);var eI=class extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new fy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Dy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new fy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ky(this.padding),this.inputSpec=[new nx({ndim:3})]}computeOutputShape(e){let t=qw((e=Yb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return to((()=>{this.invokeCallHook(e,t),e=hb(Xb(e),2);let n=this.poolingFunction(Xb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nd(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},tI=class extends eI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Jk(e,t,n,r,a,"max")}};tI.className="MaxPooling1D",nl.registerClass(tI);var nI=class extends eI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Jk(e,t,n,r,a,"avg")}};nI.className="AveragePooling1D",nl.registerClass(nI);var rI=class extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new fy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Dy(this.poolSize,"poolSize"),Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new nx({ndim:4})]}computeOutputShape(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=qw(t,this.poolSize[0],this.padding,this.strides[0]),n=qw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return to((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},aI=class extends rI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Jk(e,t,n,r,a,"max")}};aI.className="MaxPooling2D",nl.registerClass(aI);var sI=class extends rI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Jk(e,t,n,r,a,"avg")}};sI.className="AveragePooling2D",nl.registerClass(sI);var iI=class extends ox{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new fy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Dy(this.poolSize,"poolSize"),Dy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),Ky(this.padding),this.inputSpec=[new nx({ndim:5})]}computeOutputShape(e){e=Yb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=qw(t,this.poolSize[0],this.padding,this.strides[0]),n=qw(n,this.poolSize[1],this.padding,this.strides[1]),r=qw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return to((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oI=class extends iI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Qk(e,t,n,r,a,"max")}};oI.className="MaxPooling3D",nl.registerClass(oI);var lI=class extends iI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return qy(a),Ky(r),Qk(e,t,n,r,a,"avg")}};lI.className="AveragePooling3D",nl.registerClass(lI);var uI=class extends ox{constructor(e){super(e),this.inputSpec=[new nx({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new my}},hI=class extends uI{constructor(e){super(e||{})}call(e,t){return to((()=>{let t=Xb(e);return Jh(t,1)}))}};hI.className="GlobalAveragePooling1D",nl.registerClass(hI);var pI=class extends uI{constructor(e){super(e||{})}call(e,t){return to((()=>{let t=Xb(e);return Qu(t,1)}))}};pI.className="GlobalMaxPooling1D",nl.registerClass(pI);var dI=class extends ox{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qy(this.dataFormat),this.inputSpec=[new nx({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new my}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},cI=class extends dI{call(e,t){return to((()=>{let t=Xb(e);return"channelsLast"===this.dataFormat?Jh(t,[1,2]):Jh(t,[2,3])}))}};cI.className="GlobalAveragePooling2D",nl.registerClass(cI);var fI=class extends dI{call(e,t){return to((()=>{let t=Xb(e);return"channelsLast"===this.dataFormat?Qu(t,[1,2]):Qu(t,[2,3])}))}};fI.className="GlobalMaxPooling2D",nl.registerClass(fI);var mI=class extends ox{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=ov(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},gI=class extends mI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yb(e)).length<3)throw new fy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Yb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return to((()=>pk(((e,n)=>[Xb(this.layer.call(e,t)),[]]),e=Xb(e),[],!1,null,null,!1,!0)[1]))}};gI.className="TimeDistributed",nl.registerClass(gI);var yI=class extends mI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ov(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ov(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Fy(Hy,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new my("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):wy(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=hk(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new fy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new nx({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new my("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof rx;for(let e of s)if(e instanceof rx!==o)throw new fy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return to((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Fp(r,1)),"concat"===this.mergeMode?s=fb([n,r]):"sum"===this.mergeMode?s=wl(n,r):"ave"===this.mergeMode?s=Sl(.5,wl(n,r)):"mul"===this.mergeMode?s=Sl(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Zy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=ov(t.layer);if(delete t.layer,null!=t.numConstants)throw new my("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function bI(e){return new ux(e)}function xI(e){return new Uw(e)}function vI(e){return new Bw(e)}function wI(e){return new Ww(e)}function kI(e){return new Vw(e)}function II(e){return new Hw(e)}function SI(e){return new Gw(e)}function NI(e){return new ik(e)}function TI(e){return new ek(e)}function CI(e){return new nk(e)}function _I(e){return new tk(e)}function EI(e){return new rk(e)}function $I(e){return new sk(e)}function AI(e){return new ok(e)}function FI(e){return new lk(e)}function RI(e){return new uk(e)}function DI(e){return new Ek(e)}function MI(e){return new Ck(e)}function OI(e){return new Nk(e)}function LI(e){return new Tk(e)}function zI(e){return new _k(e)}function PI(e){return new $k(e)}function BI(e){return new Ak(e)}function WI(e){return new Fk(e)}function VI(e){return new Dk(e)}function UI(e){return new Ok(e)}function GI(e){return new zk(e)}function HI(e){return new Wk(e)}function jI(e){return new Pk(e)}function qI(e){return new Bk(e)}function KI(e){return new Lk(e)}function XI(e){return new Uk(e)}function YI(e){return new Xk(e)}function ZI(e){return new Yk(e)}function JI(e){return new Zk(e)}function QI(e){return new nI(e)}function eS(e){return QI(e)}function tS(e){return QI(e)}function nS(e){return new sI(e)}function rS(e){return nS(e)}function aS(e){return nS(e)}function sS(e){return new lI(e)}function iS(e){return sS(e)}function oS(e){return sS(e)}function lS(e){return new hI(e)}function uS(e){return new cI(e)}function hS(e){return new pI(e)}function pS(e){return new fI(e)}function dS(e){return new tI(e)}function cS(e){return new aI(e)}function fS(e){return new oI(e)}function mS(e){return new yk(e)}function gS(e){return new gk(e)}function yS(e){return new xk(e)}function bS(e){return new bk(e)}function xS(e){return new mk(e)}function vS(e){return new fk(e)}function wS(e){return new Sk(e)}function kS(e){return new Ik(e)}function IS(e){return new dk(e)}function SS(e){return new vk(e)}function NS(e){return new yI(e)}function TS(e){return new gI(e)}yI.className="Bidirectional",nl.registerClass(yI);var CS=hS,_S=pS,ES=dS,$S=cS;function AS(e){return new Gk(e)}function FS(e){return new Hk(e)}function RS(e){return new jk(e)}function DS(e){return new Rk(e)}var MS={};function OS(e,t){return bv(e,t)}function LS(e,t){return Iv(e,t)}function zS(e,t){return Sv(e,t)}function PS(e,t){return xv(e,t)}function BS(e,t){return Nv(e,t)}function WS(e,t){return wv(e,t)}function VS(e,t){return kv(e,t)}function US(e,t){return mv(e,t)}function GS(e,t){return hv(e,t)}function HS(e,t){return pv(e,t)}function jS(e,t){return pv(e,t)}function qS(e,t){return pv(e,t)}function KS(e,t){return uv(e,t)}function XS(e,t){return uv(e,t)}function YS(e,t){return uv(e,t)}d(MS,{MAPE:()=>jS,MSE:()=>XS,binaryAccuracy:()=>OS,binaryCrossentropy:()=>LS,categoricalAccuracy:()=>PS,categoricalCrossentropy:()=>BS,cosineProximity:()=>US,mape:()=>qS,meanAbsoluteError:()=>GS,meanAbsolutePercentageError:()=>HS,meanSquaredError:()=>KS,mse:()=>YS,precision:()=>WS,recall:()=>VS,sparseCategoricalAccuracy:()=>zS});var ZS={};d(ZS,{modelFromJSON:()=>ow});var JS={};function QS(e){return new Mw(e)}function eN(e){return function(e){return Rw(e),new Mw({l1:null!=e?e.l1:null,l2:0})}(e)}function tN(e){return function(e){return Rw(e),new Mw({l2:null!=e?e.l2:null,l1:0})}(e)}d(JS,{l1:()=>eN,l1l2:()=>QS,l2:()=>tN});var nN=class extends Qx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof sw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function rN(e,t){return e<t}function aN(e,t){return e>t}var sN=class extends nN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new my("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=rN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=aN:this.monitorFunc=rN,this.monitorFunc===rN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===rN?1/0:-1/0}async onEpochEnd(e,t){await Zx(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return t}};var iN,oN,lN={earlyStopping:function(e){return new sN(e)}};Me().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(iN||(iN={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(oN||(oN={}));var uN={};function hN(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};uN[e]=n}function pN(e){return uN[e]}function dN(e){delete uN[e]}function cN(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return fN(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>fN(e,n,r,a)));let o=fN(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:pa.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function fN(e,t,n,r){let[a,s]=yN(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[gN(a,e)]));return void 0!==i?t[gN(a,i)][s]:void 0}function mN(e,t){let[n,r,a]=yN(e);return[gN(n,t&&t.currentContextId),r,a]}function gN(e,t){return t?`${e}-${t}`:e}function yN(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function bN(e,t,n){let r=cN("pad",e,t,n);if("explicit"===r){r=cN("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function xN(e){return e.kept?e:ki(e)}var vN={};d(vN,{json:()=>wN});var wN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kN={};d(kN,{json:()=>IN});var IN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SN={};d(SN,{json:()=>NN});var NN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],TN={};d(TN,{json:()=>CN});var CN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_N={};d(_N,{json:()=>EN});var EN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$N={};d($N,{json:()=>AN});var AN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FN={};d(FN,{json:()=>RN});var RN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],DN={};d(DN,{json:()=>MN});var MN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],ON={};d(ON,{json:()=>LN});var LN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],zN={};d(zN,{json:()=>PN});var PN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],BN={};d(BN,{json:()=>WN});var WN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VN={};d(VN,{json:()=>UN});var UN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],GN={};d(GN,{json:()=>HN});var HN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],jN={};d(jN,{json:()=>qN});var qN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],KN={};d(KN,{json:()=>XN});var XN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],YN={};d(YN,{json:()=>ZN});var ZN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],JN={};d(JN,{json:()=>QN});var QN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],eT={};d(eT,{json:()=>tT});var tT=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],nT={};d(nT,{json:()=>rT});var rT=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],aT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[vN,kN,SN,TN,_N,$N,FN,DN,ON,zN,BN,VN,GN,jN,KN,YN,JN,eT,nT].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=mN(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=mN(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=mN(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=pN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=iT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=gT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=lT(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=lT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=mT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=oT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=bT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=fT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=yT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=pT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=dT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=hT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=mN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:uT(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=mN(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=mN(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function sT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Me().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function iT(e,t,n,r=!1){let a=e[t];return null!=a?sT(a.s,r):n}function oT(e,t,n){let r=e[t];return r?r.b:n}function lT(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function uT(e){switch("string"==typeof e&&(e=iN[e]),e){case iN.DT_FLOAT:case iN.DT_HALF:return"float32";case iN.DT_INT32:case iN.DT_INT64:case iN.DT_INT8:case iN.DT_UINT8:return"int32";case iN.DT_BOOL:return"bool";case iN.DT_DOUBLE:return"float32";case iN.DT_STRING:return"string";default:return null}}function hT(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function pT(e,t,n){let r=e[t];return r&&r.type?uT(r.type):n}function dT(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>uT(e))):n}function cT(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function fT(e,t,n){let r=e[t];return r&&r.shape?cT(r.shape):n}function mT(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function gT(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>sT(e,r))):n}function yT(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>cT(e))):n}function bT(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var xT={};d(xT,{OP_SCOPE_SUFFIX:()=>Is,abs:()=>Nl,acos:()=>Tl,acosh:()=>Cl,add:()=>wl,addN:()=>_l,all:()=>El,any:()=>$l,argMax:()=>Al,argMin:()=>Fl,asin:()=>Rl,asinh:()=>Dl,atan:()=>Ml,atan2:()=>Ol,atanh:()=>Ll,avgPool:()=>Ql,avgPool3d:()=>eu,basicLSTMCell:()=>su,batchNorm:()=>lu,batchNorm2d:()=>uu,batchNorm3d:()=>hu,batchNorm4d:()=>pu,batchToSpaceND:()=>iu,bincount:()=>du,booleanMaskAsync:()=>wd,broadcastArgs:()=>cu,broadcastTo:()=>fu,buffer:()=>vi,cast:()=>wi,ceil:()=>mu,clipByValue:()=>gu,clone:()=>ki,complex:()=>Ns,concat:()=>tu,concat1d:()=>yu,concat2d:()=>bu,concat3d:()=>xu,concat4d:()=>vu,conv1d:()=>ku,conv2d:()=>wu,conv2dTranspose:()=>Su,conv3d:()=>Nu,conv3dTranspose:()=>Cu,cos:()=>_u,cosh:()=>Eu,cosineWindow:()=>_d,cumprod:()=>$u,cumsum:()=>Au,denseBincount:()=>Fu,depthToSpace:()=>Ru,depthwiseConv2d:()=>Du,diag:()=>Mu,dilation2d:()=>Ou,div:()=>Il,divNoNan:()=>Bu,dot:()=>Wu,dropout:()=>Td,einsum:()=>Vu,elu:()=>Uu,enclosingPowerOfTwo:()=>Cd,equal:()=>Lu,erf:()=>Gu,euclideanNorm:()=>lh,exp:()=>uh,expandDims:()=>hh,expm1:()=>ph,eye:()=>ch,fft:()=>Yp,fill:()=>fh,floor:()=>mh,floorDiv:()=>kl,fused:()=>$d,gather:()=>gh,gatherND:()=>Nd,greater:()=>yh,greaterEqual:()=>bh,ifft:()=>Zp,imag:()=>mo,image:()=>zc,inTopKAsync:()=>Ed,irfft:()=>Jp,isFinite:()=>xh,isInf:()=>vh,isNaN:()=>wh,leakyRelu:()=>kh,less:()=>Ih,lessEqual:()=>Sh,linalg:()=>Pc,linspace:()=>Nh,localResponseNormalization:()=>Th,log:()=>Ch,log1p:()=>_h,logSigmoid:()=>Lh,logSoftmax:()=>Ph,logSumExp:()=>Bh,logicalAnd:()=>Wh,logicalNot:()=>Vh,logicalOr:()=>Uh,logicalXor:()=>Gh,losses:()=>Bc,lowerBound:()=>qh,matMul:()=>Hi,max:()=>Qu,maxPool:()=>Kh,maxPool3d:()=>Xh,maxPoolWithArgmax:()=>Yh,maximum:()=>Zh,mean:()=>Jh,meshgrid:()=>tp,min:()=>eh,minimum:()=>np,mirrorPad:()=>rp,mod:()=>ap,moments:()=>sp,movingAverage:()=>kd,mul:()=>Sl,multiRNNCell:()=>ip,multinomial:()=>op,neg:()=>go,norm:()=>oh,notEqual:()=>lp,oneHot:()=>ji,ones:()=>ep,onesLike:()=>up,op:()=>Ss,outerProduct:()=>hp,pad:()=>pp,pad1d:()=>dp,pad2d:()=>cp,pad3d:()=>fp,pad4d:()=>mp,pool:()=>yp,pow:()=>th,prelu:()=>bp,print:()=>Ii,prod:()=>xp,raggedTensorToTensor:()=>vp,rand:()=>wp,randomGamma:()=>Sp,randomNormal:()=>Np,randomStandardNormal:()=>Tp,randomUniform:()=>Cp,range:()=>_p,real:()=>yo,reciprocal:()=>Ep,relu:()=>$p,relu6:()=>Ap,reshape:()=>Jl,reverse:()=>Fp,reverse1d:()=>Rp,reverse2d:()=>Dp,reverse3d:()=>Mp,reverse4d:()=>Op,rfft:()=>ed,round:()=>Lp,rsqrt:()=>zp,scalar:()=>nh,scatterND:()=>Id,searchSorted:()=>jh,selu:()=>Pp,separableConv2d:()=>Bp,setdiff1dAsync:()=>Wp,sigmoid:()=>nu,sign:()=>Vp,signal:()=>Lc,sin:()=>Up,sinh:()=>Gp,slice:()=>ru,slice1d:()=>Hp,slice2d:()=>jp,slice3d:()=>qp,slice4d:()=>Kp,softmax:()=>Xp,softplus:()=>Oh,spaceToBatchND:()=>gp,sparse:()=>Wc,sparseToDense:()=>Sd,spectral:()=>Oc,split:()=>Qp,sqrt:()=>rh,square:()=>ah,squaredDifference:()=>td,squeeze:()=>nd,stack:()=>rd,step:()=>ad,stridedSlice:()=>sd,string:()=>Vc,sub:()=>zh,sum:()=>sh,tan:()=>id,tanh:()=>au,tensor:()=>Cs,tensor1d:()=>od,tensor2d:()=>ld,tensor3d:()=>To,tensor4d:()=>ud,tensor5d:()=>hd,tensor6d:()=>pd,tile:()=>dh,topk:()=>dd,transpose:()=>bo,truncatedNormal:()=>cd,unique:()=>fd,unsortedSegmentSum:()=>md,unstack:()=>gd,upperBound:()=>yd,variable:()=>bd,where:()=>zu,whereAsync:()=>vd,zeros:()=>Qh,zerosLike:()=>Pu});function vT(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){pa.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];pa.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function wT(e){return!("number"==typeof e||e.some((e=>e<0)))}function kT(e,t,n){let r=IT(e,n),a=!wT(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=IT(e.shape,r)})),!wT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function IT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var ST=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);vT(t,e.shape,"TensorList shape mismatch: "),ro(e)})),this.idTensor=nh(0),this.maxNumElements=r,ro(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ST([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);vT(e,this.elementShape,"TensorList shape mismatch: ");let r=kT(this.elementShape,this.tensors,e);return to((()=>{let e=this.tensors.map((e=>Jl(e,r)));return rd(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=kT(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,vT(r.shape,e,"TensorList shape mismatch: "),Jl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(vT(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ro(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new ST([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);vT(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=kT(this.elementShape,this.tensors,t);return Jl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);vT(this.elementShape,t.shape,"TensorList shape mismatch: "),ro(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);vT(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=kT(this.elementShape,this.tensors,n);return 0===e.length?Cs([],[0].concat(r)):to((()=>{let t=e.map((e=>Jl(this.tensors[e],r)));return rd(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);vT(this.elementShape,t,"TensorList shape mismatch: ");let n=kT(this.elementShape,this.tensors,t);return 0===this.size()?Cs([],[0].concat(n)):to((()=>{let e=this.tensors.map((e=>Jl(e,n)));return tu(e,0)}))}};var NT=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=cN("thenBranch",e,t,n),a=cN("elseBranch",e,t,n),s=cN("cond",e,t,n),i=cN("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=cN("body",e,t,n),a=cN("cond",e,t,n),s=cN("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[xN(cN("pred",e,t,n))];case"Switch":{let r=cN("pred",e,t,n),a=cN("data",e,t,n);return a.kept||(a=xN(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==fN(e,t,n)));if(r){return[xN(fN(r,t,n))]}return}case"Enter":{let r=cN("frameName",e,t,n),a=cN("tensor",e,t,n);return n.enterFrame(r),[xN(a)]}case"Exit":{let r=cN("tensor",e,t,n);return n.exitFrame(),[xN(r)]}case"NextIteration":{let r=cN("tensor",e,t,n);return n.nextIteration(),[xN(r)]}case"TensorArrayV3":{let r=cN("size",e,t,n),a=cN("dtype",e,t,n),s=cN("elementShape",e,t,n),i=cN("dynamicSize",e,t,n),o=cN("clearAfterRead",e,t,n),l=cN("identicalElementShapes",e,t,n),u=cN("name",e,t,n),h=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=nh(0),ro(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),vT(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ro(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Cs([],[0].concat(this.elementShape));let n=this.readMany(e);return vT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),rd(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Cs([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return vT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),tu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,gd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];to((()=>{t=Jl(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Jl(ru(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,nh(1)]}case"TensorArrayWriteV3":{let r=cN("tensorArrayId",e,t,n),a=cN("index",e,t,n),s=cN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=cN("tensorArrayId",e,t,n),a=cN("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=cN("tensorArrayId",e,t,n),a=cN("indices",e,t,n),s=cN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=cN("tensorArrayId",e,t,n),a=cN("indices",e,t,n),s=cN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=cN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=cN("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=cN("tensorArrayId",e,t,n),a=cN("tensor",e,t,n),s=cN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=cN("tensorArrayId",e,t,n);return[nh(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=cN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=cN("tensorListId",e,t,n),a=cN("index",e,t,n),s=cN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=cN("tensorListId",e,t,n),a=cN("index",e,t,n),s=cN("elementShape",e,t,n),i=cN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=cN("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new ST([],n,e.dtype,r),i=gd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(cN("tensor",e,t,n),r,cN("elementShape",e,t,n),cN("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=cN("elementShape",e,t,n),s=cN("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=cN(r,e,t,n),o=function(e,t,n,r){return new ST([],e,t,r)}(a,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let r=cN("tensorListId",e,t,n),a=cN("indices",e,t,n),s=cN("elementShape",e,t,n),i=cN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=cN("tensorListId",e,t,n),a=cN("elementShape",e,t,n),s=cN("elementDType",e,t,n),i=cN("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);vT(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=gd(e);return new ST(a,t,r)}(cN("tensor",e,t,n),cN("elementShape",e,t,n),cN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=cN("tensorListId",e,t,n),a=n.getTensorList(r.id),s=cN("dtype",e,t,n),i=cN("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=cN("tensorListId",e,t,n),a=cN("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=cN("tensorListId",e,t,n),a=cN("elementShape",e,t,n),s=cN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=cN("tensor",e,t,n),a=cN("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=IT(e.shape.slice(1),n),i=0===r?0:e.size/r,o=to((()=>{let n=[];e=Jl(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Jl(ru(e,o,l),s)}return e.dispose(),n})),l=new ST([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,cN("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=cN("tensorListId",e,t,n);return[nh(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=cN("tensorListId",e,t,n),a=cN("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function TT(e,t,n){let[r,a]=cN("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=cN("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let h=cN("strides",e,t,n),p=bN(e,t,n),d=cN("dataFormat",e,t,n).toUpperCase(),c=cN("dilations",e,t,n),[f,m]=cN("args",e,t,n);return i&&(m=f,f=void 0),{stride:h,pad:p,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:cN("leakyreluAlpha",e,t,n)}}function CT(e,t,n){return{boxes:cN("boxes",e,t,n),scores:cN("scores",e,t,n),maxOutputSize:cN("maxOutputSize",e,t,n),iouThreshold:cN("iouThreshold",e,t,n),scoreThreshold:cN("scoreThreshold",e,t,n),softNmsSigma:cN("softNmsSigma",e,t,n)}}var _T=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=cN("keyDType",e,t,n),s=cN("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=nh(0),this.tensorMap=new Map,ro(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return nh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),to((()=>{let e=gd(t),r=n.length,a=e.length;pa.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];ro(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return to((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return rd(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=cN("tableHandle",e,t,n,r),s=cN("keys",e,t,n),i=cN("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=cN("tableHandle",e,t,n,r),s=cN("keys",e,t,n),i=cN("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=cN("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ET(e,t,n,r,a=to){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(cN("a",e,t,n),cN("b",e,t,n))];case"AddN":return[r.addN(cN("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(cN("a",e,t,n),cN("b",e,t,n))];case"Mul":return[r.mul(cN("a",e,t,n),cN("b",e,t,n))];case"RealDiv":case"Div":return[r.div(cN("a",e,t,n),cN("b",e,t,n))];case"DivNoNan":return[r.divNoNan(cN("a",e,t,n),cN("b",e,t,n))];case"FloorDiv":return[r.floorDiv(cN("a",e,t,n),cN("b",e,t,n))];case"Sub":return[r.sub(cN("a",e,t,n),cN("b",e,t,n))];case"Minimum":return[r.minimum(cN("a",e,t,n),cN("b",e,t,n))];case"Maximum":return[r.maximum(cN("a",e,t,n),cN("b",e,t,n))];case"Pow":return[r.pow(cN("a",e,t,n),cN("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(cN("a",e,t,n),cN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(cN("x",e,t,n))];case"Acos":return[r.acos(cN("x",e,t,n))];case"Acosh":return[r.acosh(cN("x",e,t,n))];case"Asin":return[r.asin(cN("x",e,t,n))];case"Asinh":return[r.asinh(cN("x",e,t,n))];case"Atan":return[r.atan(cN("x",e,t,n))];case"Atan2":return[r.atan2(cN("x",e,t,n),cN("y",e,t,n))];case"Atanh":return[r.atanh(cN("x",e,t,n))];case"Ceil":return[r.ceil(cN("x",e,t,n))];case"Complex":return[r.complex(cN("real",e,t,n),cN("imag",e,t,n))];case"Cos":return[r.cos(cN("x",e,t,n))];case"Cosh":return[r.cosh(cN("x",e,t,n))];case"Elu":return[r.elu(cN("x",e,t,n))];case"Erf":return[r.erf(cN("x",e,t,n))];case"Exp":return[r.exp(cN("x",e,t,n))];case"Expm1":return[r.expm1(cN("x",e,t,n))];case"Floor":return[r.floor(cN("x",e,t,n))];case"Log":return[r.log(cN("x",e,t,n))];case"Log1p":return[r.log1p(cN("x",e,t,n))];case"Imag":return[r.imag(cN("x",e,t,n))];case"Neg":return[r.neg(cN("x",e,t,n))];case"Reciprocal":return[r.reciprocal(cN("x",e,t,n))];case"Real":return[r.real(cN("x",e,t,n))];case"Relu":return[r.relu(cN("x",e,t,n))];case"Round":return[r.round(cN("x",e,t,n))];case"Selu":return[r.selu(cN("x",e,t,n))];case"Sigmoid":return[r.sigmoid(cN("x",e,t,n))];case"Sin":return[r.sin(cN("x",e,t,n))];case"Sign":return[r.sign(cN("x",e,t,n))];case"Sinh":return[r.sinh(cN("x",e,t,n))];case"Softplus":return[r.softplus(cN("x",e,t,n))];case"Sqrt":return[r.sqrt(cN("x",e,t,n))];case"Square":return[r.square(cN("x",e,t,n))];case"Tanh":return[r.tanh(cN("x",e,t,n))];case"Tan":return[r.tan(cN("x",e,t,n))];case"ClipByValue":return[r.clipByValue(cN("x",e,t,n),cN("clipValueMin",e,t,n),cN("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(cN("x",e,t,n))];case"Rsqrt":return[r.rsqrt(fN(e.inputNames[0],t,n))];case"Prod":return[r.prod(cN("x",e,t,n),cN("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(cN("x",e,t,n),cN("alpha",e,t,n))];case"Prelu":return[r.prelu(cN("x",e,t,n),cN("alpha",e,t,n))];case"IsNan":return[r.isNaN(fN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return NT(e,t,n);case"convolution":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Conv1D":{let a=cN("stride",e,t,n),s=cN("pad",e,t,n),i=cN("dataFormat",e,t,n).toUpperCase(),o=cN("dilation",e,t,n);return[r.conv1d(cN("x",e,t,n),cN("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=cN("strides",e,t,n),s=bN(e,t,n),i=cN("dataFormat",e,t,n).toUpperCase(),o=cN("dilations",e,t,n);return[r.conv2d(cN("x",e,t,n),cN("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=TT(e,t,n);return[r.fused.conv2d({x:cN("x",e,t,n),filter:cN("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=TT(e,t,n);return[r.fused.depthwiseConv2d({x:cN("x",e,t,n),filter:cN("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=cN("outputShape",e,t,n),s=cN("strides",e,t,n),i=bN(e,t,n);return[r.conv2dTranspose(cN("x",e,t,n),cN("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=cN("strides",e,t,n),s=bN(e,t,n),i=cN("dilations",e,t,n),o=cN("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(cN("input",e,t,n),cN("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("dataFormat",e,t,n).toUpperCase(),o=cN("dilations",e,t,n);return[r.conv3d(cN("x",e,t,n),cN("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("kernelSize",e,t,n);return[r.avgPool(cN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("kernelSize",e,t,n);return[r.maxPool(cN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("kernelSize",e,t,n),o=cN("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(cN("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("kernelSize",e,t,n);return[r.avgPool3d(cN("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("kernelSize",e,t,n);return[r.maxPool3d(cN("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=cN("strides",e,t,n),s=cN("pad",e,t,n),i=cN("dilations",e,t,n),o=a[1],l=a[2],u=i[1],h=i[2];return[r.dilation2d(cN("x",e,t,n),cN("filter",e,t,n),[o,l],s,[u,h],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Fill":{let a=cN("shape",e,t,n),s=cN("dtype",e,t,n),i=cN("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=cN("start",e,t,n),s=cN("stop",e,t,n),i=cN("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=cN("logits",e,t,n),s=cN("numSamples",e,t,n),i=cN("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=cN("indices",e,t,n),s=cN("depth",e,t,n),i=cN("onValue",e,t,n),o=cN("offValue",e,t,n),l=cN("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(cN("shape",e,t,n),cN("dtype",e,t,n))];case"OnesLike":return[r.onesLike(cN("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(cN("shape",e,t,n),cN("dtype",e,t,n),cN("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(cN("shape",e,t,n),cN("minval",e,t,n),cN("maxval",e,t,n),cN("dtype",e,t,n))];case"Range":{let a=cN("start",e,t,n),s=cN("stop",e,t,n),i=cN("step",e,t,n);return[r.range(a,s,i,cN("dtype",e,t,n))]}case"TruncatedNormal":{let a=cN("shape",e,t,n),s=cN("mean",e,t,n),i=cN("stdDev",e,t,n),o=cN("seed",e,t,n);return[r.truncatedNormal(a,s,i,cN("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(cN("shape",e,t,n),cN("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(cN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=xT)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=CT(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=CT(e,t,n),u=cN("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=CT(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(cN("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(cN("x",e,t,n),cN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"LowerBound":{let a=cN("sortedSequence",e,t,n),s=cN("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=cN("x",e,t,n),s=cN("k",e,t,n),i=cN("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=cN("sortedSequence",e,t,n),s=cN("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=cN("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=cN("x",e,t,n),s=cN("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"ResizeBilinear":{let a=cN("images",e,t,n),s=cN("size",e,t,n),i=cN("alignCorners",e,t,n),o=cN("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=cN("images",e,t,n),s=cN("size",e,t,n),i=cN("alignCorners",e,t,n),o=cN("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=cN("image",e,t,n),s=cN("boxes",e,t,n),i=cN("boxInd",e,t,n),o=cN("cropSize",e,t,n),l=cN("method",e,t,n),u=cN("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=cN("images",e,t,n),s=cN("transforms",e,t,n),i=cN("outputShape",e,t,n),o=cN("fillValue",e,t,n),l=cN("interpolation",e,t,n),u=cN("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=cN("default",e,t,n);return[fN(e.name,t,n)||a];case"Placeholder":return[fN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[xN(cN("x",e,t,n))];case"IdentityN":return cN("x",e,t,n).map((e=>xN(e)));case"Shape":return[r.tensor1d(cN("x",e,t,n).shape,"int32")];case"ShapeN":return cN("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(cN("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(cN("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=cN("x",e,t,n),i=cN("data",e,t,n);cN("message",e,t,n),cN("summarize",e,t,n);for(let e=0;e<i.length;e++);return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Equal":return[r.equal(cN("a",e,t,n),cN("b",e,t,n))];case"NotEqual":return[r.notEqual(cN("a",e,t,n),cN("b",e,t,n))];case"Greater":return[r.greater(cN("a",e,t,n),cN("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(cN("a",e,t,n),cN("b",e,t,n))];case"Less":return[r.less(cN("a",e,t,n),cN("b",e,t,n))];case"LessEqual":return[r.lessEqual(cN("a",e,t,n),cN("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(cN("a",e,t,n),cN("b",e,t,n))];case"LogicalNot":return[r.logicalNot(cN("a",e,t,n))];case"LogicalOr":return[r.logicalOr(cN("a",e,t,n),cN("b",e,t,n))];case"Select":case"SelectV2":return[r.where(cN("condition",e,t,n),cN("a",e,t,n),cN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(cN("a",e,t,n),cN("b",e,t,n),cN("transposeA",e,t,n),cN("transposeB",e,t,n))];case"Einsum":return[r.einsum(cN("equation",e,t,n),...cN("tensors",e,t,n))];case"Transpose":return[r.transpose(cN("x",e,t,n),cN("perm",e,t,n))];case"_FusedMatMul":let[a,s]=cN("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===s,l=cN("numArgs",e,t,n),u=cN("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[h,p]=cN("args",e,t,n);return[r.fused.matMul({a:cN("a",e,t,n),b:cN("b",e,t,n),transposeA:cN("transposeA",e,t,n),transposeB:cN("transposeB",e,t,n),bias:h,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(cN("x",e,t,n),cN("axis",e,t,n),cN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(cN("x",e,t,n),cN("mean",e,t,n),cN("variance",e,t,n),cN("offset",e,t,n),cN("scale",e,t,n),cN("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(cN("x",e,t,n),cN("radius",e,t,n),cN("bias",e,t,n),cN("alpha",e,t,n),cN("beta",e,t,n))];case"Softmax":return[r.softmax(cN("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(cN("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(cN("sparseIndices",e,t,n),cN("outputShape",e,t,n),cN("sparseValues",e,t,n),cN("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Max":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.max(cN("x",e,t,n),a,s)]}case"Mean":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.mean(cN("x",e,t,n),a,s)]}case"Min":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.min(cN("x",e,t,n),a,s)]}case"Sum":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.sum(cN("x",e,t,n),a,s)]}case"All":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.all(cN("x",e,t,n),a,s)]}case"Any":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.any(cN("x",e,t,n),a,s)]}case"ArgMax":{let a=cN("axis",e,t,n);return[r.argMax(cN("x",e,t,n),a)]}case"ArgMin":{let a=cN("axis",e,t,n);return[r.argMin(cN("x",e,t,n),a)]}case"Prod":{let a=cN("axis",e,t,n),s=cN("keepDims",e,t,n);return[r.prod(cN("x",e,t,n),a,s)]}case"Cumprod":{let a=cN("axis",e,t,n),s=cN("exclusive",e,t,n),i=cN("reverse",e,t,n);return[r.cumprod(cN("x",e,t,n),a,s,i)]}case"Cumsum":{let a=cN("axis",e,t,n),s=cN("exclusive",e,t,n),i=cN("reverse",e,t,n);return[r.cumsum(cN("x",e,t,n),a,s,i)]}case"Bincount":let a=cN("x",e,t,n),s=cN("weights",e,t,n),i=cN("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=cN("x",e,t,n),s=cN("weights",e,t,n),i=cN("size",e,t,n),o=cN("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=cN("n",e,t,n),s=cN("axis",e,t,n),i=cN("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=cN("x",e,t,n),s=cN("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=cN("axis",e,t,n),s=cN("batchDims",e,t,n),i=cN("x",e,t,n),o=cN("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=cN("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=cN("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=cN("axis",e,t,n),s=cN("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=cN("begin",e,t,n),s=cN("size",e,t,n);return[r.slice(cN("x",e,t,n),a,s)]}case"StridedSlice":{let a=cN("begin",e,t,n),s=cN("end",e,t,n),i=cN("strides",e,t,n),o=cN("beginMask",e,t,n),l=cN("endMask",e,t,n),u=cN("ellipsisMask",e,t,n),h=cN("newAxisMask",e,t,n),p=cN("shrinkAxisMask",e,t,n),d=cN("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,h,p)]}case"Pack":return to((()=>{let a=cN("axis",e,t,n),s=cN("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map((e=>{let t=pa.arraysEqual(e.shape,i);if(!t&&!pa.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,a)]}));case"Unpack":{let a=cN("axis",e,t,n),s=cN("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=cN("reps",e,t,n);return[r.tile(cN("x",e,t,n),a)]}case"Split":case"SplitV":{let a=cN("axis",e,t,n),s=cN("numOrSizeSplits",e,t,n),i=cN("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=cN("indices",e,t,n),s=cN("values",e,t,n),i=cN("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=cN("x",e,t,n),s=cN("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=cN("sparseIndices",e,t,n),s=cN("outputShape",e,t,n),i=cN("sparseValues",e,t,n),o=cN("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(cN("indices",e,t,n),cN("values",e,t,n),cN("denseShape",e,t,n),cN("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(cN("inputIndices",e,t,n),cN("inputShape",e,t,n),cN("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(cN("data",e,t,n),cN("indices",e,t,n),cN("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(cN("data",e,t,n),cN("indices",e,t,n),cN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"FFT":return[r.fft(cN("x",e,t,n))];case"IFFT":return[r.ifft(cN("x",e,t,n))];case"RFFT":return[r.rfft(cN("x",e,t,n))];case"IRFFT":return[r.irfft(cN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(cN("data",e,t,n),cN("dataSplits",e,t,n),cN("separator",e,t,n),cN("nGramWidths",e,t,n),cN("leftPad",e,t,n),cN("rightPad",e,t,n),cN("padWidth",e,t,n),cN("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(cN("input",e,t,n),cN("delimiter",e,t,n),cN("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(cN("input",e,t,n),cN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=xT)=>{switch(e.op){case"Cast":return[r.cast(cN("x",e,t,n),cN("dtype",e,t,n))];case"ExpandDims":{let a=cN("axis",e,t,n);return[r.expandDims(cN("x",e,t,n),a)]}case"Squeeze":{let a=cN("axis",e,t,n);return[r.squeeze(cN("x",e,t,n),a)]}case"Reshape":return[r.reshape(cN("x",e,t,n),cN("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(cN("x",e,t,n),cN("padding",e,t,n),cN("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(cN("x",e,t,n),cN("padding",e,t,n),cN("constantValue",e,t,n))];case"SpaceToBatchND":{let a=cN("blockShape",e,t,n),s=cN("paddings",e,t,n);return[r.spaceToBatchND(cN("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=cN("blockShape",e,t,n),s=cN("crops",e,t,n);return[r.batchToSpaceND(cN("x",e,t,n),a,s)]}case"DepthToSpace":{let a=cN("blockSize",e,t,n),s=cN("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(cN("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(cN("x",e,t,n),cN("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(cN("s0",e,t,n),cN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return _T(e,t,n,r);case"custom":let s=pN(e.op);if(s&&s.customExecutor)return s.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return fN(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return fN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return lT(this.node.rawAttrs,e,t);if(null!=n.s)return iT(this.node.rawAttrs,e,t);if(null!=n.b)return oT(this.node.rawAttrs,e,t);if(null!=n.shape)return fT(this.node.rawAttrs,e,t);if(null!=n.type)return pT(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return mT(this.node.rawAttrs,e,t);if(null!=n.list.s)return gT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return yT(this.node.rawAttrs,e,t);if(null!=n.list.b)return bT(this.node.rawAttrs,e,t);if(null!=n.list.type)return dT(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return pa.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var $T=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function AT(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>yN(e)[0])),h=[];null!=r&&(h=r.map((e=>yN(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if((MT(e)||OT(e)||LT(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var FT=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],RT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],DT=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function MT(e){return FT.indexOf(e.op)>=0}function OT(e){return RT.indexOf(e.op)>=0}function LT(e){return DT.indexOf(e.op)>=0}var zT=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new zT(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=AT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>yN(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[yN(e)[0]])),a=t.map((e=>yN(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return to((()=>{let n=new $T(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=yN(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=ET(t,r,n,this._resourceManager);if(pa.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>fN(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[gN(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=mN(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Me().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){}this.resetIntermediateTensors();let s=new $T(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>fN(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[yN(e)[0]])),i=n.map((e=>yN(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=AT(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=yN(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}let y=o.filter((e=>!MT(e)&&!fN(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&cN("isConstant",e.node,r,n)&&([h]=mN(e.node.name,n)),null==r[e.node.name]){let p=ET(e.node,r,n,this._resourceManager);h||([h]=mN(e.node.name,n));let d=n.currentContext;pa.isPromise(p)?u.push(p.then((u=>(r[h]=u,n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=mN(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!fN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!fN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=yN(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));pa.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&pa.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=yN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=yN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},PT="?tfjs-format=file",BT="model.json",WT=class{constructor(e,t={},n=Si){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return pa.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new zT(aT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=aT.Instance.transformGraph(e.modelInitializer);this.initializer=new zT(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let e={};return(n instanceof Va?[n]:n).forEach(((t,n)=>e[this.structuredOutputKeys[n]]=t)),e}return n}normalizeInputs(e){if(!(e instanceof Va||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function VT(e,t={},n=Si){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${BT}${PT}`}(e));let r=new WT(e,t,n);return await r.load(),r}function UT(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new WT(e);return t.load(),t}var GT="3.20.0",HT={};d(HT,{CSVDataset:()=>LC,Dataset:()=>SC,FileDataSource:()=>YC,TextLineDataset:()=>$C,URLDataSource:()=>ZC,array:()=>TC,csv:()=>JC,func:()=>QC,generator:()=>e_,microphone:()=>n_,version_data:()=>r_,webcam:()=>t_,zip:()=>CC});var jT=c(N()),qT=c(N());function KT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(QT(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=KT(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function XT(e,t=ZT){return YT(e,t)}function YT(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(QT(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=YT(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function ZT(e){return null===e?null:QT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function JT(e,t){let n=new Map;KT(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(pa.isPromise(t)){let r=await t;n.set(e,r)}}return KT(e,t,n)}function QT(e){let t=!1;if(Me().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=T();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Va)&&!(e instanceof Promise)&&!t)}function eC(e){return function(e,t){return KT(e,t)}(e,tC)}function tC(e){return e instanceof Va?{value:e.clone(),recurse:!1}:QT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var nC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},rC=class extends nC{constructor(){super(rC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function aC(e){return new lC(e)}function sC(e){return new uC(e)}rC.INITIAL_CAPACITY=32;var iC,oC=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new gC(this,e)}filter(e){return new fC(this,e)}map(e){return new mC(this,e)}mapAsync(e){return new yC(this,e)}serialMapAsync(e){return new yC(this,e).serial()}flatmap(e){return new xC(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new cC(this,e,t)}columnMajorBatch(e,t=!0,n=ZT){return this.rowMajorBatch(e,t).map((e=>XT(e,n)))}concatenate(e,t){return new vC(aC([this,e]),t)}take(e){return e<0||null==e?this:new dC(this,e)}skip(e){return e<0||null==e?this:new pC(this,e)}prefetch(e){return new kC(this,e)}shuffle(e,t){return new IC(this,e,t)}serial(){return new hC(this)}},lC=class extends oC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:eC(e),done:!1}}},uC=class extends oC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},hC=class extends oC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},pC=class extends oC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;no(e.value)}return this.upstream.next()}},dC=class extends oC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},cC=class extends oC{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},fC=class extends oC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;no(e.value)}}},mC=class extends oC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Za.getTensorsInContainer(e.value),n=this.transform(e.value),r=Za.getTensorsInContainer(n);for(let e of t)Za.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},gC=class extends oC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},yC=class extends oC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Za.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Za.getTensorsInContainer(n);for(let e of t)Za.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},bC=class extends oC{constructor(){super(),this.outputQueue=new rC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},xC=class extends bC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Za.getTensorsInContainer(e.value),n=this.transform(e.value),r=Za.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)Za.isTensorInList(e,r)||e.dispose();return!0}},vC=class extends oC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(iC||(iC={}));var wC=class extends oC{constructor(e,t=iC.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await JT(this.iterators,(function(e){return e instanceof oC?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case iC.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case iC.SHORTEST:return{value:null,done:!0};case iC.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},kC=class extends oC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new nC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},IC=class extends kC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=qT.alea(n||pa.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},SC=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return pa.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),NC((async()=>(await r.iterator()).columnMajorBatch(e,t,_C)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,NC((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,NC((async()=>(await n.iterator()).filter((t=>to((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return NC((async()=>(await t.iterator()).map((t=>to((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return NC((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return NC((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,NC((async()=>function(e,t){return new vC(e,t)}(sC((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,NC((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=jT.alea(t||pa.now().toString());return NC((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,NC((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function NC(e,t=null){return new class extends SC{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function TC(e){return NC((async()=>aC(e)),e.length)}function CC(e){if(!QT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return NC((async()=>function(e,t=iC.FAIL){return new wC(e,t)}(await JT(e,(e=>{if(e instanceof SC)return{value:e.iterator(),recurse:!1};if(QT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),iC.SHORTEST)),t)}function _C(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Va||pa.isTypedArray(e)}(e[0])?{value:EC(e),recurse:!1}:{value:null,recurse:!0}}function EC(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Va?rd(e):Cs(e)}SC.MAX_BUFFER_SIZE=1e4;var $C=class extends SC{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},AC='"',FC=Symbol("out"),RC=Symbol("field"),DC=Symbol("quote"),MC=Symbol("quoteafterquote"),OC=Symbol("quoteinquote"),LC=class extends SC{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new $C(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(pa.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&pa.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(pa.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=FC;for(let t=0;t<a;t++)switch(s){case FC:switch(e.charAt(t)){case AC:r=t+1,s=DC;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=FC;break;default:s=RC,r=t}break;case RC:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=FC,r=t+1;break;case DC:if(e.charAt(t)===AC)s=MC;break;case MC:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=FC,r=t+1;break;case AC:s=DC;break;default:s=OC}break;case OC:if(e.charAt(t)===AC)s=DC}if(s===MC?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},zC=class extends oC{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Me().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new zC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(pa.sizeFromShape(t));return n.set(e,n.length-e.length),Cs(n,t)}},PC=class extends oC{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=od([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=ld([r,n,s,a],[1,4])}else this.cropBox=ld([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Me().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new PC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&pa.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=No.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return to((()=>{let t,n=hh(wi(e,"float32"),0);t=zc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Jl(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},BC=class{},WC=class extends oC{split(e){return new VC(this,e)}},VC=class extends WC{constructor(e,t){super(),this.upstream=e,this.impl=new UC(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},UC=class extends bC{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},GC=class extends oC{decodeUTF8(){return new HC(this)}},HC=class extends WC{constructor(e){super(),this.upstream=e,this.impl=new jC(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},jC=class extends bC{constructor(e){if(super(),this.upstream=e,Me().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=T();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Me().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},qC=class extends GC{constructor(e,t={}){super(),this.file=e,this.options=t,pa.assert(e instanceof Uint8Array||!!Me().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var KC=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function XC(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var YC=class extends BC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(XC(this.input)&&Me().get("IS_NODE")){let e=C();this.input=e.readFileSync(this.input.slice(7))}return new qC(this.input,this.options)}},ZC=class extends BC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return XC(this.url)?new YC(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=KC(e));let s=await(n||pa.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new qC(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function JC(e,t={}){return new LC(new ZC(e),t)}function QC(e){let t=sC(e);return NC((async()=>t))}function e_(e){return NC((async()=>{let t=await e();return sC((()=>t.next()))}))}async function t_(e,t){return PC.create(e,t)}async function n_(e){return zC.create(e)}var r_="3.20.0";function a_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var s_=om.whereImpl,i_=class extends O{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new M(this,Ji())}nextDataId(){return i_.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Me().get("IS_NODE")&&nf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pa.isString(n[0])){let a=n.map((e=>pa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return nf.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>pa.decodeString(e)));return vi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return vi(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ji().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=pa.now();return e(),{kernelMs:pa.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){a_([e],"where");let t=this.readSync(e.dataId);return s_(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};i_.nextDataId=0;var o_={};function l_(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}d(o_,{addImpl:()=>I_,bincountImpl:()=>C_,bincountReduceImpl:()=>__,castImpl:()=>b_,ceilImpl:()=>F_,concatImpl:()=>M_,equalImpl:()=>O_,expImpl:()=>P_,expm1Impl:()=>V_,floorImpl:()=>H_,gatherNdImpl:()=>K_,gatherV2Impl:()=>X_,greaterEqualImpl:()=>Q_,greaterImpl:()=>Y_,lessEqualImpl:()=>sE,lessImpl:()=>nE,linSpaceImpl:()=>lE,logImpl:()=>uE,maxImpl:()=>dE,maximumImpl:()=>cE,minimumImpl:()=>gE,multiplyImpl:()=>xE,negImpl:()=>IE,notEqualImpl:()=>NE,prodImpl:()=>AE,raggedTensorToTensorImpl:()=>LE,rangeImpl:()=>zE,rsqrtImpl:()=>PE,scatterImpl:()=>VE,sigmoidImpl:()=>UE,simpleAbsImpl:()=>l_,sliceImpl:()=>jE,sparseFillEmptyRowsImpl:()=>XE,sparseReshapeImpl:()=>YE,sparseSegmentReductionImpl:()=>ZE,sqrtImpl:()=>JE,squaredDifferenceImpl:()=>t$,stridedSliceImpl:()=>a$,stringNGramsImpl:()=>s$,stringSplitImpl:()=>o$,stringToHashBucketFastImpl:()=>l$,subImpl:()=>u$,tileImpl:()=>c$,topKImpl:()=>g$,transposeImpl:()=>_E,uniqueImpl:()=>y$});var u_={kernelName:Be,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;a_(t,"abs");let r=new Float32Array(pa.sizeFromShape(t.shape));return r=l_(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function h_(e){return(t,n,r,a,s)=>{let i=nf.assertAndGetBroadcastShape(t,n),o=i.length,l=pa.computeStrides(i),u=pa.sizeFromShape(i),h=pa.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=pa.computeStrides(t),f=pa.computeStrides(n),m=nf.getBroadcastDims(t,i),g=nf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=pa.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=pa.locToIndex(s,p,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=pa.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function p_(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var d_={kernelName:dt,backendName:"cpu",kernelFunc:p_};function c_(e,t,n="float32"){if("complex64"===n){return p_({inputs:{real:c_(e,t,"float32"),imag:c_(e,t,"float32")},backend:e})}let r=pa.makeZerosTypedArray(pa.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function f_(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var m_={kernelName:en,backendName:"cpu",kernelFunc:f_};function g_(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var y_={kernelName:Yn,backendName:"cpu",kernelFunc:g_};function b_(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){let r=pa.toTypedArray([0],n),[a,s]=h_(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function x_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return f_({inputs:{x:a},backend:n});let e=c_(n,a.shape,a.dtype),t=x_({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=p_({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=g_({inputs:{input:a},backend:n}),t=x_({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!pa.hasEncodingLoss(a.dtype,s)){let e=f_({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,l,u]=b_(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,l,u)}var v_={kernelName:ut,backendName:"cpu",kernelFunc:x_};function w_(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;a_([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h="string"===s.dtype?nf.fromUint8ToStringArray(l):l,p="string"===s.dtype?nf.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,h,p,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=x_({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=x_({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=p_({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function k_(e){return(t,n,r,a,s,i)=>{let o=nf.assertAndGetBroadcastShape(t,n),l=pa.sizeFromShape(o),u=o.length,h=pa.computeStrides(o),p=pa.getTypedArrayFromDType("float32",l),d=pa.getTypedArrayFromDType("float32",l),c=nf.getBroadcastDims(t,o),f=nf.getBroadcastDims(n,o),m=nf.mergeRealAndImagArrays(r,a),g=nf.mergeRealAndImagArrays(s,i),y=t.length,b=pa.computeStrides(t),x=n.length,v=pa.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=pa.indexToLoc(t,u,h),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=pa.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=pa.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}var I_=h_(((e,t)=>e+t)),S_=k_(((e,t,n,r)=>({real:e+n,imag:t+r}))),N_=w_(Ue,I_,S_),T_={kernelName:Ue,backendName:"cpu",kernelFunc:N_};function C_(e,t,n,r,a){let s=pa.sizeFromShape(r),i=pa.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function __(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=vi([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function E_(e){return(t,n,r)=>{let a=pa.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function $_(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(a_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=pa.sizeFromShape(i.shape),h=n||i.dtype,p=pa.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function A_(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(a_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var F_=E_((e=>Math.ceil(e))),R_=A_(ht,F_),D_={kernelName:ht,backendName:"cpu",kernelFunc:R_};function M_(e,t,n,r){let a=pa.getArrayFromDType(n,pa.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=pa.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?nf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var O_=h_(((e,t)=>e===t?1:0)),L_=w_(Bt,O_,null,"bool"),z_={kernelName:Bt,backendName:"cpu",kernelFunc:L_},P_=E_((e=>Math.exp(e))),B_=A_(Wt,P_,"float32"),W_={kernelName:Wt,backendName:"cpu",kernelFunc:B_},V_=E_((e=>Math.expm1(e))),U_=A_(Ut,V_),G_={kernelName:Ut,backendName:"cpu",kernelFunc:U_},H_=E_((e=>Math.floor(e))),j_=A_(qt,H_),q_={kernelName:qt,backendName:"cpu",kernelFunc:j_};function K_(e,t,n,r,a,s,i,o,l){let u=vi([r,s],n);for(let n=0;n<r;n++){let r=[],h=0;for(let t=0;t<a;t++){let s=e[n*a+t];h+=s*i[t],r.push(s)}if(h<0||h>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(h*s+e))}return u}function X_(e,t,n){let r=vi(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var Y_=h_(((e,t)=>e>t?1:0)),Z_=w_(Jt,Y_,null,"bool"),J_={kernelName:Jt,backendName:"cpu",kernelFunc:Z_},Q_=h_(((e,t)=>e>=t?1:0)),eE=w_(Qt,Q_,null,"bool"),tE={kernelName:Qt,backendName:"cpu",kernelFunc:eE},nE=h_(((e,t)=>e<t?1:0)),rE=w_(ln,nE,null,"bool"),aE={kernelName:ln,backendName:"cpu",kernelFunc:rE},sE=h_(((e,t)=>e<=t?1:0)),iE=w_(un,sE,null,"bool"),oE={kernelName:un,backendName:"cpu",kernelFunc:iE};function lE(e,t,n){let r=(t-e)/(n-1),a=pa.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var uE=E_((e=>Math.log(e))),hE=A_(pn,uE),pE={kernelName:pn,backendName:"cpu",kernelFunc:hE};function dE(e,t,n,r){let a=pa.getTypedArrayFromDType(r,pa.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var cE=h_(((e,t)=>Math.max(e,t))),fE=w_(kn,cE),mE={kernelName:kn,backendName:"cpu",kernelFunc:fE},gE=h_(((e,t)=>Math.min(e,t))),yE=w_($n,gE),bE={kernelName:$n,backendName:"cpu",kernelFunc:yE},xE=h_(((e,t)=>e*t)),vE=k_(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),wE=w_(Dn,xE,vE),kE={kernelName:Dn,backendName:"cpu",kernelFunc:wE};function IE(e,t,n){let r=pa.createScalarValue(-1,n);return xE([],t,r,e,n)}var SE={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;a_(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=IE(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},NE=h_(((e,t)=>e!==t?1:0)),TE=w_(On,NE,null,"bool"),CE={kernelName:On,backendName:"cpu",kernelFunc:TE};function _E(e,t,n,r,a){let s=t.length,i=pa.sizeFromShape(t),o=pa.computeStrides(t),l=pa.computeStrides(a),u=pa.getTypedArrayFromDType(n,pa.sizeFromShape(a));for(let t=0;t<i;++t){let n=pa.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[pa.locToIndex(a,s,l)]=e[t]}return u}function EE(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;a_(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=_E(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var $E={kernelName:Br,backendName:"cpu",kernelFunc:EE};function AE(e,t,n,r){let[a,s]=nf.computeOutAndReduceShapes(e,r),i=Qa(t,"int32"),o=pa.makeZerosTypedArray(pa.sizeFromShape(a),i),l=pa.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var FE={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;a_(a,"prod");let o=a.shape.length,l=pa.parseAxisParam(s,a.shape),u=nf.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=EE({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=nf.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=AE(p.shape,p.dtype,c,h),y=m;return i&&(y=nf.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}},RE=nf.RowPartitionType,DE=class{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=nf.getRowPartitionTypesHelper(u),this.raggedRank=nf.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===RE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===RE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case RE.VALUE_ROWIDS:return DE.getMaxWidthValueRowID(t);case RE.ROW_SPLITS:return DE.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${RE[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return OE(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;nf.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=nf.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let e=0;e<r;++e,s+=t)a.push(s);for(let t=r;t<e;++t)a.push(-1);return pa.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case RE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case RE.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${RE[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case RE.FIRST_DIM_SIZE:return e[0];case RE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RE[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let r=OE(t,!1),a=pa.getArrayFromDType(this.valuesDType,pa.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=pa.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;to((()=>{let t=Jl(u,e);u=fu(t,i).dataSync()}))}let h=0,p=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(p<d){let e=a.subarray(h*o);ME(s.subarray(p*o),e,(d-p)*o)}if(e>=l){let e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)s.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;){ME(s.slice(d*o),u,o),++d}r<0?(h=e+1,p=d):(h=e,p=d,d=p+1)}else++d}}};function ME(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function OE(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function LE(e,t,n,r,a,s,i,o,l,u){return new DE(e,t,n,r,a,s,i,o,l,u).compute()}function zE(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return pa.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=pa.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var PE=E_((e=>1/Math.sqrt(e))),BE=A_(or,PE),WE={kernelName:or,backendName:"cpu",kernelFunc:BE};function VE(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return vi(n,t.dtype);let c=vi(h,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var UE=E_((e=>1/(1+Math.exp(-e)))),GE=$_(gr,(e=>1/(1+Math.exp(-e)))),HE={kernelName:gr,backendName:"cpu",kernelFunc:GE};function jE(e,t,n,r,a){let s=zo.isSliceContinous(r,t,n),i=pa.sizeFromShape(n),o=pa.computeStrides(r);if(s){let n=zo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=vi(r,a,"string"===a?nf.fromUint8ToStringArray(e):e),u=vi(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?nf.fromStringArrayToUint8(u.values):u.values}function qE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;a_(a,"slice");let[o,l]=zo.parseSliceParams(a,s,i);zo.assertParamsValid(a,o,l);let u=jE(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var KE={kernelName:dr,backendName:"cpu",kernelFunc:qE};function XE(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),h=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(nf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[pa.getArrayFromDType(n,0),[0,p],pa.getArrayFromDType(a,0),u,h]}let d=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw new Error(nf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(nf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)h[e]=e;return[t,[o,p],n,u,h]}{let t=f[l-1],s=pa.getArrayFromDType(n,t*p),d=pa.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=r[t],h[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function YE(e,t,n,r,a){let s=pa.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==h)throw new Error(nf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,e));h=e,l.push(1)}else{if(t<0)throw new Error(nf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw new Error(nf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(nf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(pa.sizeFromShape(l)!==s)throw new Error(nf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=pa.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function ZE(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce(((e,t)=>e*t),1),c=pa.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(nf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(nf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(nf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}var JE=E_((e=>Math.sqrt(e))),QE=$_(br,(e=>Math.sqrt(e))),e$={kernelName:br,backendName:"cpu",kernelFunc:QE},t$=h_(((e,t)=>{let n=e-t;return n*n})),n$=w_(_r,t$),r$={kernelName:_r,backendName:"cpu",kernelFunc:n$};function a$(e,t,n,r){let a=vi(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function s$(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=pa.encodeString(e),this.nGramWidths=t,this.leftPad=pa.encodeString(n),this.rightPad=pa.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),h=s-(l+u),p=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<h;++t)d+=e[p+t].length;d+=u*this.rightPad.length,d+=(l+u+h-1)*this.separator.length,n[r+i]=new Uint8Array(d);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<h-1;++t)m(e[p+t]),m(this.separator);if(h>0){m(e[p+h-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=pa.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function i$(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function o$(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;i$(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=pa.getArrayFromDType("int32",2*s),u=new Array(s),h=[r,i],p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=a[p],++p;return[l,u,h]}function l$(e,t){let n=pa.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=pa.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var u$=h_(((e,t)=>e-t)),h$=k_(((e,t,n,r)=>({real:e-n,imag:t-r}))),p$=w_(Dr,u$,h$),d$={kernelName:Dr,backendName:"cpu",kernelFunc:p$};function c$(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=vi(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var f$=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function m$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);m$(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(pa.swap(e,n,t),f$(e[r],a)>0&&pa.swap(e,n,r);s<i;){for(pa.swap(e,s,i),s++,i--;f$(e[s],a)<0;)s+=1;for(;f$(e[i],a)>0;)i-=1}0===f$(e[n],a)?pa.swap(e,n,i):(i+=1,pa.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function g$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=pa.getTypedArrayFromDType(n,i*r),u=pa.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(m$(i,r),i=i.slice(0,r)),a&&i.sort(f$);let h=t*r,p=l.subarray(h,h+r),d=u.subarray(h,h+r);for(let e=0;e<r;e++)p[e]=i[e].value,d[e]=i[e].index}let h=t.slice();return h[h.length-1]=r,[vi(h,n,l),vi(h,"int32",u)]}function y$(e,t,n,r){let a=pa.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Pa(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new Pa(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}po("cpu",(()=>new i_),1);var b$=$_(Lt,(e=>e>=0?e:Math.exp(e)-1)),x$={kernelName:Lt,backendName:"cpu",kernelFunc:b$};function v$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;a_([a],"leakyRelu");let i=pa.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=pa.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var w$={kernelName:on,backendName:"cpu",kernelFunc:v$},k$=h_(((e,t)=>e<0?t*e:e));function I$(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;a_([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=k$(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var S$={kernelName:jn,backendName:"cpu",kernelFunc:I$},N$=$_(Jn,(e=>Math.max(0,e))),T$={kernelName:Jn,backendName:"cpu",kernelFunc:N$},C$=$_(ar,(e=>Math.min(Math.max(0,e),6))),_$={kernelName:ar,backendName:"cpu",kernelFunc:C$};function E$(e,t,n,r,a){if("linear"===n)return f_({inputs:{x:t},backend:e});if("relu"===n)return N$({inputs:{x:t},backend:e});if("elu"===n)return b$({inputs:{x:t},backend:e});if("relu6"===n)return C$({inputs:{x:t},backend:e});if("prelu"===n)return I$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return v$({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return GE({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function $$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=pa.sizeFromShape(a.shape),o=pa.inferFromImplicitShape(s,i),l=pa.sizeFromShape(o);pa.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var A$={kernelName:Qn,backendName:"cpu",kernelFunc:$$};function F$(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;a_([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pa.sizeFromShape(f),y=pa.sizeFromShape(m),b=vo.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);pa.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=$$({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=$$({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,_=pa.computeStrides(v.shape),E=pa.computeStrides(w.shape),[$,A,F]=i?[_[0],1,_[1]]:[_[0],_[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=vi([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){let a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*C[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var R$={kernelName:at,backendName:"cpu",kernelFunc:F$};var D$={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=F$({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=N_({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=E$(s,t,c,h,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},M$=$_(We,(e=>Math.acos(e))),O$={kernelName:We,backendName:"cpu",kernelFunc:M$},L$=$_(Ve,(e=>Math.acosh(e))),z$={kernelName:Ve,backendName:"cpu",kernelFunc:L$};var P$={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;a_(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=vi(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var B$={kernelName:He,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;a_(a,"all");let o=pa.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=EE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=$$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var W$={kernelName:je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;a_(a,"any");let o=pa.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=EE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=$$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var V$={kernelName:qe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;a_(a,"argMax");let i=pa.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=EE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],nf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=nf.computeOutAndReduceShapes(l.shape,i),d=pa.sizeFromShape(h),c=pa.makeZerosTypedArray(d,"int32"),f=pa.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}};var U$={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;a_(a,"argMin");let i=pa.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=EE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],nf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=nf.computeOutAndReduceShapes(l.shape,i),d=pa.sizeFromShape(h),c=pa.makeZerosTypedArray(d,"int32"),f=pa.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}},G$=$_(Xe,(e=>Math.asin(e))),H$={kernelName:Xe,backendName:"cpu",kernelFunc:G$},j$=$_(Ye,(e=>Math.asinh(e))),q$={kernelName:Ye,backendName:"cpu",kernelFunc:j$},K$=$_(Ze,(e=>Math.atan(e))),X$={kernelName:Ze,backendName:"cpu",kernelFunc:K$},Y$=h_(((e,t)=>Math.atan2(e,t))),Z$=w_(Qe,Y$),J$={kernelName:Qe,backendName:"cpu",kernelFunc:Z$},Q$=$_(Je,(e=>Math.atanh(e))),eA={kernelName:Je,backendName:"cpu",kernelFunc:Q$};function tA(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=vi(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,h+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function nA(e,t,n,r,a=!1,s=!1){let i=vi(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=vi(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function rA(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=vi(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let C=Math.min(a.inDepth,d+N),_=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=_+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<C;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var aA={kernelName:et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;a_(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pa.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&pa.arraysEqual(h.inShape,h.outShape))u=f_({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=pa.computeStrides(a.shape),r=tA(e,a.shape,a.dtype,t,h,"avg");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var sA={kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;a_(a,"avgPool3d");let h=nf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=rA(n.data.get(a.dataId).values,a.shape,a.dtype,pa.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var iA={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a_([a,s],"avgPool3DGrad");let h=nf.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=v-1-h.padInfo.front,S=k-1-h.padInfo.left,N=w-1-h.padInfo.top,T=vi(s.shape,"float32"),C=1/(f*m*g),_=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=_.get(e,r,a,s,t))}}}T.set(l*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var oA={kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;a_([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=nf.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,v=y-1-h.padInfo.top,w=vi(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=vi(a.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var lA={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;pa.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pa.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pa.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),a_([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var uA={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;a_([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=$$({inputs:{x:a},backend:n,attrs:{shape:l}}),f=EE({inputs:{x:c},backend:n,attrs:{perm:u}}),m=$$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=qE({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var hA={kernelName:it,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=C_(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var pA={kernelName:lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=nf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},dA=$_(pt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),cA={kernelName:pt,backendName:"cpu",kernelFunc:dA},fA={kernelName:ct,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(pa.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function mA(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var gA={kernelName:nn,backendName:"cpu",kernelFunc:mA};function yA(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pa.parseAxisParam(a,t[0].shape)[0],i=nf.computeOutShape(t.map((e=>e.shape)),s);if(0===pa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===o.length)return f_({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(nf.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>g_({inputs:{input:e},backend:n}))),t=o.map((e=>mA({inputs:{input:e},backend:n}))),r=yA({inputs:e,backend:n,attrs:{axis:s}}),a=yA({inputs:t,backend:n,attrs:{axis:s}}),i=p_({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=pa.sizeFromShape(e.shape.slice(s));return $$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=nf.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=M_(h,i,t[0].dtype,p),c=nf.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var bA={kernelName:ft,backendName:"cpu",kernelFunc:yA};function xA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;a_([a,s],"conv2d");let p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Pa(d.outShape,a.dtype),w=pa.computeStrides(a.shape),k=pa.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],C=v.strides[0],_=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){let r=n+e*_,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var vA={kernelName:mt,backendName:"cpu",kernelFunc:xA};var wA={kernelName:gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;a_([a,s],"conv2dBackpropFilter");let p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Pa(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Pa(a.shape,a.dtype,w),S=new Pa(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,h,e,o):I.get(u,i,t,n)*S.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var kA={kernelName:yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;a_([a,s],"conv2dBackpropInput");let p=pa.computeStrides(s.shape),d=pa.computeStrides(a.shape),c=nf.convertConv2DDataFormat(u),f=nf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new Pa(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:_,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<C;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),h=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<_;++e){h+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var IA={kernelName:bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;a_([a,s],"conv3d");let u=nf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Pa(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=pa.computeStrides(a.shape),N=pa.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var SA={kernelName:xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;a_([a,s],"conv3dBackpropFilterV2");let u=pa.computeStrides(a.shape),h=pa.computeStrides(s.shape),p=nf.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Pa(p.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,_]=h,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(p.outWidth,(p.inWidth+M-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*$,y=m*N;for(let m=t;m<n;++m){let t=(e+m*d-D)*A+p,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*C+n;for(let e=l;e<u;++e){let t=e*_+i;g+=E[(r+e*f-M)*R+s+o]*S[t+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var NA={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;a_([a],"conv3dBackpropInputV2");let u=pa.computeStrides(a.shape),h=pa.computeStrides(s.shape),p=nf.computeConv3DInfo(l,s.shape,o,1,i),d=new Pa(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,C]=h,{batchSize:_,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=$-1-p.padInfo.top,H=A-1-p.padInfo.left;for(let e=0;e<_;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let h=0;h<M;++h){let p=h-H,d=Math.max(0,Math.ceil(p/V)),_=Math.min(P,(A+p)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<_;++i){let o=x*e+v*n+w*r+k*i,l=S*(E-1-a)+N*($-1-s)+T*(A-1-(i*V-p))+C*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},TA=$_(wt,(e=>Math.cos(e))),CA={kernelName:wt,backendName:"cpu",kernelFunc:TA},_A=$_(kt,(e=>Math.cosh(e))),EA={kernelName:kt,backendName:"cpu",kernelFunc:_A};var $A={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=vi([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=pa.computeStrides(a.shape),k=pa.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let h=v[s];s=r+p*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(h-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var AA={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;a_(a,"cumprod");let l=nf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=EE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=nf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Qa(u.dtype,"int32"),d=pa.makeOnesTypedArray(pa.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let r=m(e,t-1);d[n]=i?c[r]*d[r]:c[n]*d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=EE({inputs:{x:g},backend:n,attrs:{perm:nf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var FA={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;a_(a,"cumsum");let l=nf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=EE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=nf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=Qa(u.dtype,"int32"),d=pa.makeZerosTypedArray(pa.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=EE({inputs:{x:g},backend:n,attrs:{perm:nf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var RA={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=C_(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=__(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var DA={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;pa.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}};function MA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;a_([a,s],"depthwiseConv2DNative");let h=pa.computeStrides(a.shape),p=pa.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),pa.assert(nf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=nf.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new Pa(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-v;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var OA={kernelName:_t,backendName:"cpu",kernelFunc:MA};var LA={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;a_([a,s],"depthwiseConv2dNativeBackpropFilter");let p=nf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new Pa(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new Pa(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Pa(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var zA={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;a_([a,s],"depthwiseConv2DNativeBackpropInput");let p=pa.computeStrides(a.shape),d=pa.computeStrides(s.shape),c=nf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new Pa(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:C,filterHeight:_,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=_-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<C;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(_+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),h=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=S*(_-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e){h+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var PA={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=pa.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=vi([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},BA={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=nf.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=pa.sizeFromShape(T),_=T.length,E=pa.getArrayFromDType(r.dtype,C);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*N;if(c>=0&&c<m){let i=pa.locToIndex([e,s,c,o],h,pa.computeStrides(r.shape)),f=pa.locToIndex([t,n,o],d,pa.computeStrides(a.shape)),m=u[i]+p[f];m>l&&(l=m)}}}E[pa.locToIndex([e,t,s,o],_,pa.computeStrides(T))]=l}}}return{dataId:l.write(pa.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},WA={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=pa.toNestedArray(r.shape,u.data.get(r.dataId).values),p=pa.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=nf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);pa.assert(s.rank===N.length,(()=>`Error in ${Dt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=pa.toNestedArray(N,u.data.get(s.dataId).values),C=pa.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}C[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(pa.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},VA={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=pa.toNestedArray(r.shape,u.data.get(r.dataId).values),p=pa.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=nf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);pa.assert(s.rank===N.length,(()=>`Error in ${Rt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=pa.toNestedArray(N,u.data.get(s.dataId).values),C=pa.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}C[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(pa.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function UA(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;a_(s,"sum"),t="bool"===s.dtype?x_({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):f_({inputs:{x:s},backend:r});let l=t.shape.length,u=pa.parseAxisParam(i,t.shape),h=nf.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=EE({inputs:{x:t},backend:r,attrs:{perm:h}}),p=nf.getInnerMostAxes(p.length,l)),nf.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=nf.computeOutAndReduceShapes(d.shape,p),m=c_(r,c,nf.upcastType(d.dtype,"int32")),g=pa.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=$$({inputs:{x:m},backend:r,attrs:{shape:nf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}var GA={kernelName:xr,backendName:"cpu",kernelFunc:UA};var HA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=nf.decodeEinsumEquation(a,s.length);nf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=nf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=nf.getEinsumPermutation(c,l[t]);nf.isIdentityPermutation(r)?e=s[t]:(e=EE({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);pa.arraysEqual(e.shape,i)||(e=$$({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=wE({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=UA({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};var jA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;a_([r,a],"eluGrad");let s=new Float32Array(pa.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},qA=nf.ERF_P,KA=nf.ERF_A1,XA=nf.ERF_A2,YA=nf.ERF_A3,ZA=nf.ERF_A4,JA=nf.ERF_A5,QA=$_(Pt,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+qA*n);return t*(1-((((JA*r+ZA)*r+YA)*r+XA)*r+KA)*r*Math.exp(-n*n))})),eF={kernelName:Pt,backendName:"cpu",kernelFunc:QA};function tF(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(pa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),$$({inputs:{x:a},backend:n,attrs:{shape:o}})}var nF={kernelName:Vt,backendName:"cpu",kernelFunc:tF},rF=h_(((e,t)=>e/t)),aF=w_(Mt,rF),sF={kernelName:Mt,backendName:"cpu",kernelFunc:aF};function iF(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=pa.sizeFromShape(u),p=pa.getTypedArrayFromDType("float32",h),d=pa.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=qE({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=qE({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=p_({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=oF(i,t,n),c=nf.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=nf.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=p_({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function oF(e,t,n){let r=pa.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=lF(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",pa.createScalarValue(r,"float32")),i=f_({inputs:{x:s},backend:n}),l=sF.kernelFunc({inputs:{a:e,b:s},backend:n}),u=sF.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=nf.exponent(a*r,t,n),l=nf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),nf.assignToTypedArray(r,s,i,a)}return r}(nf.mergeRealAndImagArrays(s,i),r,t);return nf.splitRealAndImagArrays(e)}}function lF(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=nf.mergeRealAndImagArrays(e,t),i=n/2,o=nf.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=p_({inputs:{real:p,imag:d},backend:a}),f=nf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=p_({inputs:{real:b,imag:x},backend:a}),w=lF(l,u,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=p_({inputs:{real:N,imag:T},backend:a}),_=lF(m,g,i,r,a),E=_.real,$=_.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=p_({inputs:{real:F,imag:R},backend:a}),M=nf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=p_({inputs:{real:L,imag:z},backend:a}),B=wE({inputs:{a:P,b:D},backend:a}),W=N_({inputs:{a:C,b:B},backend:a}),V=p$({inputs:{a:C,b:B},backend:a}),U=g_({inputs:{input:W},backend:a}),G=g_({inputs:{input:V},backend:a}),H=mA({inputs:{input:W},backend:a}),j=mA({inputs:{input:V},backend:a}),q=yA({inputs:[U,G],backend:a,attrs:{axis:0}}),K=yA({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var uF={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=pa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=$$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=iF(i,!1,n),l=$$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function hF(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||pa.inferDtype(a),o=pa.getArrayFromDType(i,pa.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var pF={kernelName:Ht,backendName:"cpu",kernelFunc:hF};var dF={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=pa.getTypedArrayFromDType(r.dtype,pa.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,p=h[o];if(i>=0&&i<l){p=h[t+n+i*u+a]}s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cF=h_(((e,t)=>Math.floor(e/t))),fF=w_(Kt,cF,null,"int32"),mF={kernelName:Kt,backendName:"cpu",kernelFunc:fF};var gF={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=xA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=$$({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=N_({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=N_({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=$$({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=E$(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=E$(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var yF={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=MA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=N_({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=E$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var bF={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=pa.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=nf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=K_(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};var xF={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;a_([a,s],"gatherV2");let l=pa.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];pa.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=o;null==o&&(p=0);let d=pa.sizeFromShape(s.shape),c=nf.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=$$({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=$$({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=X_(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var vF={kernelName:tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=pa.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=$$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=iF(i,!0,n),l=$$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},wF=$_(rn,(e=>Number.isFinite(e)?1:0),"bool"),kF={kernelName:rn,backendName:"cpu",kernelFunc:wF},IF=$_(an,(e=>Math.abs(e)===1/0?1:0),"bool"),SF={kernelName:an,backendName:"cpu",kernelFunc:IF},NF=$_(sn,(e=>Number.isNaN(e)?1:0),"bool"),TF={kernelName:sn,backendName:"cpu",kernelFunc:NF};var CF={kernelName:hn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=lE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},_F=$_(dn,(e=>Math.log1p(e))),EF={kernelName:dn,backendName:"cpu",kernelFunc:_F},$F=h_(((e,t)=>e&&t)),AF=w_(cn,$F,null,"bool"),FF={kernelName:cn,backendName:"cpu",kernelFunc:AF},RF=$_(fn,(e=>e?0:1),"bool"),DF={kernelName:fn,backendName:"cpu",kernelFunc:RF},MF=h_(((e,t)=>e||t)),OF=w_(mn,MF,null,"bool"),LF={kernelName:mn,backendName:"cpu",kernelFunc:OF};var zF={kernelName:xn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;a_(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=pa.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var PF={kernelName:vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;a_(i,"LRNGrad");let p=pa.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function BF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=pa.parseAxisParam(s,l),p=h,d=nf.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=_E(c,l,a.dtype,d,e),p=nf.getInnerMostAxes(p.length,u),l=e}a_(a,"max"),nf.assertAxesAreInnerMostDims("max",p,u);let[f,m]=nf.computeOutAndReduceShapes(l,p),g=dE(c,pa.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=nf.expandShapeToKeepDim(f,h)),{dataId:y,shape:b,dtype:a.dtype}}var WF={kernelName:wn,backendName:"cpu",kernelFunc:BF};var VF={kernelName:In,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;a_(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pa.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&pa.arraysEqual(h.inShape,h.outShape))u=f_({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=pa.computeStrides(a.shape),r=tA(e,a.shape,a.dtype,t,h,"max");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var UF={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;a_(a,"maxPool3d");let h=nf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=rA(n.data.get(a.dataId).values,a.shape,a.dtype,pa.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var GF={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a_([a,s],"maxPool3DGrad");let h=nf.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=vi(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,k=v-1-h.padInfo.left,I=x-1-h.padInfo.top,S=vi(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=N.get(e,r,s,u,t)*d)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var HF={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;a_([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=nf.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=vi(d.outShape,o.dtype,nA(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=vi(o.shape,"float32"),S=n.data.get(a.dataId).values,N=vi(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var jF={kernelName:Cn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;a_(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=nf.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=tA(e,0,n,pa.computeStrides(t),a,"max"),i=nA(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};var qF={kernelName:_n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=pa.parseAxisParam(s,a.shape),l=nf.computeOutAndReduceShapes(a.shape,o)[1],u=pa.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=x_({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=aF({inputs:{a:d,b:p},backend:n});h.push(c);let f=UA({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var KF={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;a_(a,"min");let o=pa.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=EE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=pa.sizeFromShape(d),f=pa.makeZerosTypedArray(pa.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=$$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var XF={kernelName:An,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;a_(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=pa.computeStrides(a.shape),f=pa.sizeFromShape(o),m=o.length,g=pa.computeStrides(o),y=pa.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=pa.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));let n=pa.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},YF=h_(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ZF=w_(Fn,YF),JF={kernelName:Fn,backendName:"cpu",kernelFunc:ZF},QF=c(N());function eR(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=pa.parseAxisParam([o],a.shape),u=BF({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=nf.expandShapeToKeepDim(u.shape,l),p=$$({inputs:{x:u},backend:n,attrs:{shape:h}}),d=p$({inputs:{a,b:p},backend:n}),c=B_({inputs:{x:d},backend:n}),f=UA({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=$$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=aF({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var tR={kernelName:kr,backendName:"cpu",kernelFunc:eR};var nR={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;a_(a,"multinomial");let l=o?a:eR({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=pa.makeZerosTypedArray(pa.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=QF.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},rR=om.nonMaxSuppressionV3Impl;var aR={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;a_(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=rR(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},sR=om.nonMaxSuppressionV4Impl;var iR={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;a_(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=sR(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},oR=om.nonMaxSuppressionV5Impl;var lR={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;a_(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=oR(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var uR={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;a_(a,"oneHot");let u=pa.sizeFromShape(a.shape),h=new Float32Array(u*i);h.fill(l);let p=n.data.get(a.dataId).values;for(let e=0;e<u;++e)p[e]>=0&&p[e]<i&&(h[e*i+p[e]]=o);return n.makeTensorInfo([...a.shape,i],s,h)}};function hR(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=g_({inputs:{input:r},backend:n}),t=hR({inputs:{x:e},backend:n}),a=mA({inputs:{input:r},backend:n}),s=hR({inputs:{x:a},backend:n}),i=p_({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return hF({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var pR={kernelName:Hr,backendName:"cpu",kernelFunc:hR};var dR={kernelName:Bn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=g_({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=mA({inputs:{input:a},backend:r}),i=hR({inputs:{x:s},backend:r}),o=p_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return hF({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function cR(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return tF({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=yA({inputs:t.map((e=>{let t=tF({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var fR={kernelName:Vn,backendName:"cpu",kernelFunc:cR};var mR={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;a_(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=pa.sizeFromShape(a.shape),p=a.shape.length,d=pa.computeStrides(a.shape),c=pa.sizeFromShape(o),f=o.length,m=pa.computeStrides(o),g=pa.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=pa.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));g[pa.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},gR=h_(((e,t)=>Math.pow(e,t))),yR=w_(Hn,gR),bR={kernelName:Hn,backendName:"cpu",kernelFunc:yR};var xR={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=LE(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}};var vR={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=zE(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},wR=$_(Zn,(e=>1/e)),kR={kernelName:Zn,backendName:"cpu",kernelFunc:wR};var IR={kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;a_(a,"resizeBilinear");let l=pa.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(pa.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}};var SR={kernelName:rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;a_([s,a],"resizeBilinearGrad");let o=pa.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}};var NR={kernelName:er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;a_(a,"resizeNearestNeighbor");let l=pa.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}};var TR={kernelName:tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;a_([s,a],"resizeNearestNeighborGrad");let o=pa.computeStrides(a.shape),l=pa.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<p;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var CR={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;a_(a,"reverse");let i=a.shape.length,o=pa.parseAxisParam(s,a.shape);if(0===i)return f_({inputs:{x:a},backend:n});let l=new Pa(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},_R={kernelName:Kr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=pa.getTypedArrayFromDType(r.dtype,pa.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=nf.getImageCenter(i,h,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*p*h*d;for(let e=0;e<h;e++){let n=e*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<h){k=y[t+w*(p*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ER=$_(ir,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),$R={kernelName:ir,backendName:"cpu",kernelFunc:ER};var AR={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=nf.calculateShapes(s,a,i),d=VE(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function FR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function RR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var DR={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=pa.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?FR(n,t[e+l]):RR(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};var MR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;a_([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=Qa(a.dtype,s.dtype),p=pa.makeZerosTypedArray(pa.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:pa.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},OR=nf.SELU_SCALEALPHA,LR=nf.SELU_SCALE,zR=$_(pr,(e=>e>=0?LR*e:OR*(Math.exp(e)-1))),PR={kernelName:pr,backendName:"cpu",kernelFunc:zR},BR=$_(mr,(e=>e<0?-1:e>0?1:0)),WR={kernelName:mr,backendName:"cpu",kernelFunc:BR},VR=$_(cr,(e=>Math.sin(e))),UR={kernelName:cr,backendName:"cpu",kernelFunc:VR},GR=$_(fr,(e=>Math.sinh(e))),HR={kernelName:fr,backendName:"cpu",kernelFunc:GR},jR=Math.log(1.1920928955078125e-7)+2,qR=$_(yr,(e=>{let t,n=e>-jR,r=e<jR,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),KR={kernelName:yr,backendName:"cpu",kernelFunc:qR};var XR={kernelName:vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;a_([a],"spaceToBatchND");let o=pa.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=mR.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=nf.getReshaped(u.shape,s,o,!1),p=nf.getPermuted(h.length,s.length,!1),d=nf.getReshapedPermuted(u.shape,s,o,!1),c=$$({inputs:{x:u},backend:n,attrs:{shape:h}}),f=EE({inputs:{x:c},backend:n,attrs:{perm:p}}),m=$$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var YR={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=XE(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var ZR={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=YE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var JR={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=ZE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var QR={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=ZE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var eD={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=nf.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":t=VE(m,r.bufferSync(i),l,c,p,h,u,d,Boolean(r.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":t=VE(m,r.bufferSync(i),l,c,p,h,u,d,r.data.get(o.dataId).values[0],f);break;case"string":t=VE(m,r.bufferSync(i),l,c,p,h,u,d,pa.decodeString(r.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}};var tD={kernelName:wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pa.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=qE({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},nD={kernelName:Er,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;a_(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rD=$_(jr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),aD={kernelName:jr,backendName:"cpu",kernelFunc:rD};var sD={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;a_(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=zo.sliceInfo(a.shape,s,i,o,l,u,h,p,d);if(g)c=$$({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){pa.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=zo.computeOutShape(x,v,w),t=qE({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=$$({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=a$(f,n.bufferSync(a),w,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var iD={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.data.get(h.dataId).values,c=n.data.get(p.dataId).values,[f,m]=s$(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var oD={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,h,p]=o$(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var lD={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=l$(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},uD=$_(Mr,(e=>Math.tan(e))),hD={kernelName:Mr,backendName:"cpu",kernelFunc:uD},pD=$_(Or,(e=>Math.tanh(e)));var dD={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;a_(a,"tile");let i=c$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var cD={kernelName:zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;a_(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=g$(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var fD={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=pa.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=pa.computeStrides(g),k=w[0],I=w[1],S=w[2],N=pa.getTypedArrayFromDType(a.dtype,pa.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,C=r.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let h=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=mD(h,d,o),m=mD(c,p,o);switch(i){case"nearest":s=yD(T,p,d,b,x,v,e,m,f,a,l);break;case"bilinear":s=bD(T,p,d,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+r*S+a]=s}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function mD(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return pa.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return pa.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return pa.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function gD(e,t,n,r,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:h}function yD(e,t,n,r,a,s,i,o,l,u,h){return gD(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,h)}function bD(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1;return(c-o)*((f-l)*gD(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*gD(e,t,n,r,a,s,i,p,f,u,h))+(o-p)*((f-l)*gD(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*gD(e,t,n,r,a,s,i,c,f,u,h))}var xD={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;a_(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=y$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var vD={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=qE({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=$$({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};var wD={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;a_(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,h=s;for(let e=0;e<u;++e){let t=tF({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){let t=pa.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=L_({inputs:{a:r,b:h},backend:n}),i=x_({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=wE({inputs:{a:i,b:a},backend:n}),p=UA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(r),l.push(s),l.push(i),l.push(u),l.push(p)}let p=cR({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},kD=[D$,u_,O$,z$,T_,P$,B$,W$,V$,U$,H$,q$,X$,J$,eA,aA,sA,iA,oA,R$,lA,uA,hA,pA,v_,D_,cA,d_,fA,bA,vA,wA,kA,IA,SA,NA,CA,EA,$A,AA,FA,RA,DA,OA,LA,zA,PA,BA,WA,VA,HA,x$,jA,z_,eF,W_,nF,G_,uF,pF,dF,q_,mF,gF,yF,bF,xF,J_,tE,m_,vF,gA,kF,SF,TF,w$,aE,oE,CF,pE,EF,FF,DF,LF,zF,PF,WF,mE,VF,UF,GF,HF,jF,qF,KF,bE,XF,JF,nR,kE,SE,aR,iR,lR,CE,uR,dR,fR,mR,bR,S$,FE,xR,vR,y_,sF,kR,T$,_$,A$,IR,SR,NR,TR,CR,_R,$R,WE,AR,DR,MR,PR,HE,WR,UR,HR,KE,tR,KR,XR,YR,ZR,JR,QR,eD,tD,e$,nD,r$,aD,sD,iD,oD,lD,d$,GA,hD,{kernelName:Or,backendName:"cpu",kernelFunc:pD},dD,cD,fD,$E,xD,vD,wD,pR];for(let e of kD)sa(e);var ID={};d(ID,{assertNotComplex:()=>$M,bindCanvasToFramebuffer:()=>iM,bindColorTextureToFramebuffer:()=>oM,bindTextureToProgramUniformSampler:()=>sM,bindTextureUnit:()=>tM,bindVertexBufferToProgramAttribute:()=>eM,callAndCheck:()=>MD,canBeRepresented:()=>OD,createFragmentShader:()=>BD,createFramebuffer:()=>QD,createProgram:()=>HD,createStaticIndexBuffer:()=>XD,createStaticVertexBuffer:()=>KD,createTexture:()=>ZD,createVertexShader:()=>PD,getBatchDim:()=>cM,getExtensionOrThrow:()=>zD,getFramebufferErrorMessage:()=>hM,getMaxTexturesInShader:()=>kM,getNumChannels:()=>YD,getProgramUniformLocation:()=>aM,getProgramUniformLocationOrThrow:()=>rM,getRowsCols:()=>fM,getShapeAs3D:()=>mM,getTextureShapeFromLogicalShape:()=>gM,getWebGLDisjointQueryTimerVersion:()=>IM,getWebGLErrorMessage:()=>LD,getWebGLMaxTextureSize:()=>xM,hasExtension:()=>SM,isCapableOfRenderingToFloatTexture:()=>TM,isDownloadFloatTextureEnabled:()=>CM,isReshapeFree:()=>bM,isWebGLFenceEnabled:()=>EM,isWebGLVersionEnabled:()=>NM,linkProgram:()=>jD,logShaderSourceAndInfoLog:()=>GD,resetMaxTextureSize:()=>vM,resetMaxTexturesInShader:()=>wM,unbindColorTextureFromFramebuffer:()=>lM,unbindTextureUnit:()=>nM,validateFramebuffer:()=>uM,validateProgram:()=>qD,validateTextureSize:()=>JD});var SD,ND,TD,CD={},_D={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ED(e,t){CD[e]=t}function $D(e,t){if(!(e in CD)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete CD[e]}),!1),Me().getBool("SOFTWARE_WEBGL_ENABLED")&&(_D.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",_D)||n.getContext("experimental-webgl",_D):n.getContext("webgl2",_D)}(e,t);if(null===n)return null;CD[e]=n}let n=CD[e];return null==n||n.isContextLost()?(delete CD[e],$D(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),CD[e])}function AD(e,t){return[t,e]}function FD(e){let t=pa.sizeFromShape(e),n=Math.ceil(t/4);return pa.sizeToSquarishShape(n)}function RD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function DD(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Me().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function MD(e,t){let n=t();return Me().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+LD(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(SD||(SD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ND||(ND={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(TD||(TD={}));function OD(e){return!!(Me().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function LD(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function zD(e,t){return pM(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function PD(e,t){let n=pM(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(MD(e,(()=>e.shaderSource(n,t))),MD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n}function BD(e,t){let n=pM(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(MD(e,(()=>e.shaderSource(n,t))),MD(e,(()=>e.compileShader(n))),Me().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw GD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var WD,VD,UD=/ERROR: [0-9]+:([0-9]+):/g;function GD(e,t){let n=UD.exec(t);if(null==n)return;let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>pa.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);i.slice(0,r-1),i.slice(r-1,r),i.slice(r)}function HD(e){return pM(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function jD(e,t){if(MD(e,(()=>e.linkProgram(t))),!Me().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")}function qD(e,t){if(MD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function KD(e,t){let n=pM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function XD(e,t){let n=pM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return MD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),MD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function YD(){return 2===Me().getNumber("WEBGL_VERSION")?1:4}function ZD(e){return pM(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function JD(e,t){let n=Me().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function QD(e){return pM(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function eM(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),MD(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),MD(e,(()=>e.enableVertexAttribArray(o))),!0)}function tM(e,t,n){dM(e,n),MD(e,(()=>e.activeTexture(e.TEXTURE0+n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function nM(e,t){dM(e,t),MD(e,(()=>e.activeTexture(e.TEXTURE0+t))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function rM(e,t,n){return pM(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function aM(e,t,n){return e.getUniformLocation(t,n)}function sM(e,t,n,r){MD(e,(()=>tM(e,t,r))),MD(e,(()=>e.uniform1i(n,r)))}function iM(e){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),MD(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),MD(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function oM(e,t,n){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),MD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function lM(e,t){MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),MD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function uM(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+hM(e,t))}function hM(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function pM(e,t,n){let r=MD(e,(()=>t()));if(null==r)throw new Error(n);return r}function dM(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function cM(e,t=2){return pa.sizeFromShape(e.slice(0,e.length-t))}function fM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function mM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[cM(e),...fM(e)]),t}function gM(e,t=!1){let n=Me().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?pa.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=pa.squeezeShape(e).newShape);let r=pa.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=cM(e),n=2,a=2;return e.length&&([n,a]=fM(e)),r=t*(n/2)*(a/2),pa.sizeToSquarishShape(r).map((e=>2*e))}return pa.sizeToSquarishShape(r)}function yM(e){return e%2==0}function bM(e,t){if(e=e.slice(-2),t=t.slice(-2),pa.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||yM(n)&&yM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&yM(e[0])&&yM(t[0])}function xM(e){if(null==WD){let t=$D(e);WD=t.getParameter(t.MAX_TEXTURE_SIZE)}return WD}function vM(){WD=null}function wM(){VD=null}function kM(e){if(null==VD){let t=$D(e);VD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,VD)}function IM(e){if(0===e)return 0;let t,n=$D(e);return t=SM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:SM(n,"EXT_disjoint_timer_query")?1:0,t}function SM(e,t){return null!=e.getExtension(t)}function NM(e){try{if(null!=$D(e))return!0}catch(e){return!1}return!1}function TM(e){if(0===e)return!1;let t=$D(e);if(1===e){if(!SM(t,"OES_texture_float"))return!1}else if(!SM(t,"EXT_color_buffer_float"))return!1;return _M(t)}function CM(e){if(0===e)return!1;let t=$D(e);if(1!==e){if(SM(t,"EXT_color_buffer_float"))return _M(t);let e="EXT_color_buffer_half_float";if(SM(t,e)){let n=t.getExtension(e);return function(e,t){let n=DD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!SM(t,"OES_texture_float")||!SM(t,"WEBGL_color_buffer_float"))&&_M(t)}function _M(e){let t=DD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function EM(e){return 2===e&&null!=$D(e).fenceSync}function $M(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pa.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var AM=Me();function FM(){let e,t,n,r,a,s,i,o,l,u;return 2===Me().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function RM(e,t,n="index"){let r=pa.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function DM(e,t,n="index"){let r=pa.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function MM(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function OM(e){let t=pa.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}AM.registerFlag("HAS_WEBGL",(()=>AM.getNumber("WEBGL_VERSION")>0)),AM.registerFlag("WEBGL_VERSION",(()=>NM(2)?2:NM(1)?1:0)),AM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),AM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===AM.get("WEBGL_VERSION"))),AM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),AM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),AM.registerFlag("WEBGL_PACK",(()=>AM.getBool("HAS_WEBGL"))),AM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_CLIP",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_REDUCE",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_CONV_IM2COL",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>xM(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>kM(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=AM.getNumber("WEBGL_VERSION");return 0===e?0:IM(e)})),AM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>AM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!cs.isMobile())),AM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>TM(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!AM.getBool("WEBGL_FORCE_F16_TEXTURES")&&AM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),AM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>CM(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>EM(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>AM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),AM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),AM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>cs.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),AM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),AM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),AM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),AM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),AM.registerFlag("WEBGL_EXP_CONV",(()=>!1)),AM.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>AM.getBool("IS_TEST")));var LM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:zM}=nf;function PM(e,t,n){let r=[];if(e.forEach((e=>{let t=pa.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=YM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?WM(e,r):BM(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=zM(e.shapeInfo.logicalShape,t.logicalShape),u=XM(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===pa.sizeFromShape(e.shapeInfo.logicalShape),m=1===pa.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&pa.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=XM(l),p=zM(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=FM(),h=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${VM}\n    ${UM}\n    ${GM}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return jM();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pa.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return jM();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pa.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${DM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=RM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${DM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=RM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=RM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=RM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=HM),[p,h,s,i,a,o,n.userCode].join("\n")}function BM(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=qM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${KM(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=qM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&pa.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=pa.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${BM(ZM(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${JM(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${KM(e)}\n      }\n    `;let u=s[0],h=s[1],p=qM(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=pa.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${BM(ZM(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${JM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${KM(e)}\n      }\n    `;let h=e.shapeInfo.texShape,p=h[0],d=h[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=qM(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=pa.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${BM(ZM(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${JM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${KM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=qM(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=pa.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${BM(ZM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${JM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${KM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=qM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=pa.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${BM(ZM(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${JM(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${KM(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=qM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function WM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=FM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=FM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=FM();if(null!=s&&pa.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${WM(ZM(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${JM(s,r)});\n        }\n      `}let o=FM();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=FM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var VM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",UM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",GM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",HM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function jM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function qM(e){return`offset${e}`}function KM(e){let t=e.name,n=pa.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function XM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function YM(e,t,n){let{newShape:r,keptDims:a}=pa.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!pa.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function ZM(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function JM(e,t){return t.map((t=>e[t])).join(", ")}function QM(e,t,n){let r,a,s,i={},o={},l={},u=[],h=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===Me().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,d),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:h,nanLoc:p,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function eO(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!pa.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!pa.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function tO(e){return Me().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var nO={};function rO(e){let t=FM();return PD(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function aO(e){return KD(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function sO(e){return XD(e,new Uint16Array([0,1,2,2,1,3]))}function iO(e,t,n,r,a,s){JD(t,n);let i=ZD(e),o=e.TEXTURE_2D;return MD(e,(()=>e.bindTexture(o,i))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),MD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Me().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):MD(e,(()=>e.texStorage2D(o,1,r,t,n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function oO(e){return e.internalFormatFloat}function lO(e,t,n,r){let[a,s]=AD(t,n);return iO(e,a,s,oO(r),r.textureFormatFloat,e.FLOAT)}function uO(e){return e.internalFormatHalfFloat}function hO(e,t,n,r){let[a,s]=AD(t,n);return iO(e,a,s,uO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function pO(e){return e.downloadTextureFormat}function dO(e,t,n,r){let[a,s]=AD(t,n);return iO(e,a,s,pO(r),e.RGBA,e.UNSIGNED_BYTE)}function cO(e){return e.internalFormatPackedFloat}function fO(e,t,n,r){let[a,s]=RD(t,n);return iO(e,a,s,cO(r),e.RGBA,e.FLOAT)}function mO(e){return e.internalFormatPackedHalfFloat}function gO(e,t,n,r){let[a,s]=RD(t,n);return iO(e,a,s,mO(r),e.RGBA,r.textureTypeHalfFloat)}function yO(e,t,n){return MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),eM(e,t,"clipSpacePos",n,3,20,0)&&eM(e,t,"uv",n,2,20,12)}function bO(e,t,n,r,a,s){let i,o,l;MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Me().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function xO(e,t,n){MD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Me().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Me().getNumber("WEBGL_VERSION")?MD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):MD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),MD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function vO(e,t,n,r){let a=e.createBuffer();MD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return MD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),MD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),MD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function wO(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function kO(e,t,n,r){let[a,s]=AD(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return MD(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function IO(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=RD(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function SO(e,t,n){let r=new Float32Array(t*n*4);return MD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}d(nO,{bindVertexProgramAttributeStreams:()=>yO,createBufferFromOutputTexture:()=>vO,createFloat16MatrixTexture:()=>hO,createFloat16PackedMatrixTexture:()=>gO,createFloat32MatrixTexture:()=>lO,createIndexBuffer:()=>sO,createPackedMatrixTexture:()=>fO,createUnsignedBytesMatrixTexture:()=>dO,createVertexBuffer:()=>aO,createVertexShader:()=>rO,downloadByteEncodedFloatMatrixFromOutputTexture:()=>kO,downloadFloat32MatrixFromBuffer:()=>wO,downloadMatrixFromPackedOutputTexture:()=>SO,downloadPackedMatrixFromBuffer:()=>IO,getInternalFormatForFloat16MatrixTexture:()=>uO,getInternalFormatForFloat16PackedMatrixTexture:()=>mO,getInternalFormatForFloat32MatrixTexture:()=>oO,getInternalFormatForPackedMatrixTexture:()=>cO,getInternalFormatForUnsignedBytesMatrixTexture:()=>pO,uploadDenseMatrixToTexture:()=>bO,uploadPixelDataToTexture:()=>xO});var NO=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Me().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,ED(t,e)):this.gl=$D(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Me().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=zD(this.gl,e),SM(this.gl,t))this.textureHalfFloatExtension=zD(this.gl,t);else if(Me().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),SM(this.gl,r))this.colorBufferHalfFloatExtension=zD(this.gl,r);else if(Me().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",SM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!SM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=aO(this.gl),this.indexBuffer=sO(this.gl),this.framebuffer=QD(this.gl),this.textureConfig=DD(this.gl,this.textureHalfFloatExtension)}get debug(){return Me().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;let e=this.gl;MD(e,(()=>e.finish())),MD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),MD(e,(()=>e.deleteFramebuffer(this.framebuffer))),MD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),MD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),MD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),lO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),hO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),dO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),xO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),bO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),gO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),fO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(lM(this.gl,this.framebuffer),this.outputTexture=null),MD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>kO(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return IO(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return wO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=vO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Me().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>SO(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=rO(t));let n=HD(t);return MD(t,(()=>t.attachShader(n,this.vertexShader))),MD(t,(()=>t.attachShader(n,e))),jD(t,n),this.debug&&qD(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=yO(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&MD(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&qD(this.gl,this.program),MD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?rM(this.gl,e,t):aM(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),MD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),sM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=RD(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&qD(this.gl,this.program),uM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),MD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),MD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zD(this.gl,2===Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await pa.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&pa.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),oM(this.gl,e,this.framebuffer),this.debug&&uM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(oM(this.gl,this.outputTexture,this.framebuffer),this.debug&&uM(this.gl)):lM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;oM(r,e,this.framebuffer),this.debug&&uM(r),this.outputTexture=e,MD(r,(()=>r.viewport(0,0,t,n))),MD(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),MD(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:TO,bincountImpl:CO,bincountReduceImpl:_O,castImpl:EO,ceilImpl:$O,concatImpl:AO,equalImpl:FO,expImpl:RO,expm1Impl:DO,floorImpl:MO,gatherNdImpl:OO,gatherV2Impl:LO,greaterImpl:zO,greaterEqualImpl:PO,lessImpl:BO,lessEqualImpl:WO,linSpaceImpl:VO,logImpl:UO,maxImpl:GO,maximumImpl:HO,minimumImpl:jO,multiplyImpl:qO,negImpl:KO,notEqualImpl:XO,prodImpl:YO,raggedTensorToTensorImpl:ZO,rangeImpl:JO,rsqrtImpl:QO,scatterImpl:eL,sigmoidImpl:tL,simpleAbsImpl:nL,sliceImpl:rL,sparseFillEmptyRowsImpl:aL,sparseReshapeImpl:sL,sparseSegmentReductionImpl:iL,sqrtImpl:oL,stridedSliceImpl:lL,stringNGramsImpl:uL,stringSplitImpl:hL,stringToHashBucketFastImpl:pL,subImpl:dL,tileImpl:cL,topKImpl:fL,transposeImpl:mL,uniqueImpl:gL}=o_;function yL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bL(e,t){return 1===t?[e]:yL(e,t)}var xL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?MM(["r","c","d"],"inputShape"):RM(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":OM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function vL(e,t,n,r,a){let s,i=function(e,t){switch(e){case TD.PACKED_2X2_FLOAT32:return cO(t);case TD.PACKED_2X2_FLOAT16:return mO(t);case TD.UNPACKED_FLOAT32:return oO(t);case TD.UNPACKED_FLOAT16:return uO(t);case TD.PACKED_4X1_UNSIGNED_BYTE:return pO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=RD(e[0],e[1]);s=t*n}else{let[t,n]=AD(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function wL(e,t){if(e===ND.UPLOAD)return TD.PACKED_2X2_FLOAT32;if(e===ND.RENDER||null==e)return function(e){return Me().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TD.PACKED_2X2_FLOAT32:TD.UNPACKED_FLOAT32:e?TD.PACKED_2X2_FLOAT16:TD.UNPACKED_FLOAT16}(t);if(e===ND.DOWNLOAD||e===ND.PIXELS)return TD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function kL(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var IL=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},SL="return abs(x);",NL="return x;",TL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},CL=om.whereImpl,_L={};var EL=Me().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var $L=class extends O{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Me().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof NO)t=e;else{let n=$D(Me().getNumber("WEBGL_VERSION"),e);t=new NO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=$D(Me().getNumber("WEBGL_VERSION"));t=new NO(e),this.binaryCache=function(e){return e in _L||(_L[e]={}),_L[e]}(Me().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=wL(t,n),a=kL(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=vL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===TD.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===TD.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===TD.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===TD.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===TD.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=wL(n,r),s=kL(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=vL(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Me().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Me().global.screen?1024:Me().global.screen.height*Me().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new M(this,Ji())}nextDataId(){return $L.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Me().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Me().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:ND.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Me().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:ND.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new TL(i,NL):new IL(i,NL);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=pa.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=nf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=pa.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new TL(r,NL):new IL(r,NL);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Me().getBool("DEBUG")&&!Me().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Me().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Me().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...FD(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=nf.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=pa.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){let e=this.gpgpu.gl;MD(e,(()=>e.deleteBuffer(h)))}let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ji().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new TL(a,NL):new IL(a,NL);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),h=Ji().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>pa.decodeString(e)));return vi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return vi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!OD(n))throw Me().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=pa.sizeFromShape(t);if(Me().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...FD(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Me().getBool("WEBGL_PACK")&&!0===r,i=s?mM(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ND.DOWNLOAD;let t=FM();this.outputShape=e,this.userCode=`\n      ${LM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=ND.DOWNLOAD;let t=FM();this.outputShape=e,this.userCode=`\n      ${LM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=pa.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=pa.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=pa.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:pa.now(),endMs:null}}endTimer(e){return Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=pa.now(),e)}async getQueryTime(e){if(Me().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=EL){return Me().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&pa.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){nf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return CL(e.shape,t)}packedUnaryOp(e,t,n){let r=new TL(e.shape,t),a=this.compileAndRun(r,[e],n);return Ji().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=nL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Me().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,SL,e.dtype);let t=new IL(e.shape,SL),n=this.compileAndRun(t,[e]);return Ji().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pa.isString(n[0])){let a=n.map((e=>pa.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ji().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length);let t=e.length,n=bL("rc",t),r=XM(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=tO(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=bL("rc",this.rank),t=XM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[cM(e.shape),...fM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[cM(t),...fM(t)],s=new xL(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=pa.sizeFromShape(a),n=t[0]*t[1]*4;pa.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=mM(a);i=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=SD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=FM();this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?DM(["r","c","d"],e):RM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=SD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=FM();this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?DM(["r","c","d"],e):RM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o);let l=[null!=t?t:FD(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===SD.DENSE){let t=null!=s?s:FD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===pa.sizeFromShape(i.shape))return o.values=pa.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&pa.sizeFromShape(t.shape)<=Me().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!bM(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let h,p={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=YM(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=pa.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&pa.arraysEqual(t.shape,s),f=1===pa.sizeFromShape(t.shape),m=nf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&pa.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Me().getNumber("WEBGL_VERSION")}`,s}(e,u,p),c=this.getAndSaveBinary(d,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=PM(a,i,t),l=BD(e.gl,o),u=e.createProgram(l);return Me().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},QM(e,t,u))}(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(h=this.startTimer()),Me().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(eO(t.inShapeInfos,n),eO([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Me().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=YM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(pa.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=pa.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,p,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Me().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=pa.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Me().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Me().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=to((()=>{if(!Me().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Me().getBool("DEBUG");Me().set("DEBUG",!1);let t=this.abs(nh(1e-8)).dataSync()[0];if(Me().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=pa.now());let h=t.texShape;if(null==h&&(h=gM(n,o),t.texShape=h),null!=a){let e,s=mM(n),i=h[1],p=h[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,p]=RD(h[0],h[1])),e=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=FM();this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":OM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(s,d):new class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=FM();this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":OM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(s,d);let c=d?[p,i]:h,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?ND.PIXELS:ND.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);let g=[[p,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Me().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=pa.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*pa.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await ef(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(GD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=QM(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};$L.nextDataId=0;var AL="3.20.0";function FL(){Me().set("WEBGL_FORCE_F16_TEXTURES",!0)}cs.isBrowser()&&po("webgl",(()=>new $L),2);var RL={forceHalfFloat:FL},DL=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=nf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=tO(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},ML=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=nf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=tO(a);let s="";if(r)if(0===a||1===pa.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${XM(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=bL("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function OL(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var LL={kernelName:en,backendName:"webgl",kernelFunc:OL};function zL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=OL({inputs:{x:r},backend:n}),l=OL({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var PL={kernelName:dt,backendName:"webgl",kernelFunc:zL},BL="return (a < 0.) ? b * a : a;",WL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var VL={kernelName:on,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",pa.createScalarValue(s,"float32")),o=Me().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ML(WL,a.shape,i.shape):new DL(BL,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},UL="return (a < 0.) ? b * a : a;",GL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var HL={kernelName:jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Me().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ML(GL,r.shape,a.shape):new DL(UL,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function jL({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Me().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new TL(o.shape,t):new IL(o.shape,e),l.runWebGLProgram(i,[o],u)}}function qL({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new DL(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],Qa(n.dtype,r.dtype))})),s=zL({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,d=s||Qa(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=a){let e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?nf.fromUint8ToStringArray(e):e,r="string"===l.dtype?nf.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=s,o}return p=Me().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new ML(t,l.shape,u.shape,n):new DL(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function KL(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?GL:UL;if("leakyrelu"===e)return t?WL:BL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var XL=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=tO(this.outputShape.length);let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},YL="return areal * breal - aimag * bimag;",ZL="return areal * bimag + aimag * breal;",JL=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=nf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},QL="return a * b;";function ez(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=nf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new JL(YL,a.shape,s.shape),i=new JL(ZL,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=zL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=qO(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Me().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ML(QL,a.shape,s.shape):new DL(QL,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var tz={kernelName:Dn,backendName:"webgl",kernelFunc:ez};function nz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=pa.sizeFromShape(a.shape),l=pa.inferFromImplicitShape(s,o),u=pa.sizeFromShape(l);pa.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||bM(a.shape,l)||null!==h.texture&&bM(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[cM(e.shape),...fM(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[cM(t),...fM(t)],i=new xL(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var rz={kernelName:Qn,backendName:"webgl",kernelFunc:nz},az=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${pa.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},sz=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function iz(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=nf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new az({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new az({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new sz({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}function oz(e,t,n){let r=Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=XM(this.rank),a=yL("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=XM(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function lz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=pa.parseAxisParam(a,e.shape),o=i,l=nf.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=oz(e,l,r),o=nf.getInnerMostAxes(o.length,s)),nf.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=nf.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=nf.expandShapeToKeepDim(p,i));let f=pa.sizeFromShape(d),m=nz({inputs:{x:h},attrs:{shape:[pa.sizeFromShape(e.shape)/f,f]},backend:r}),g=iz(m,es(e.dtype),"sum",r),y=nz({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),y}(a,s,i,n)}var uz={kernelName:xr,backendName:"webgl",kernelFunc:lz};function hz(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=mL(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=oz(s,i,o);return t}var pz={kernelName:Br,backendName:"webgl",kernelFunc:hz};function dz({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=pa.sizeFromShape(m),b=pa.sizeFromShape(g),x=vo.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);pa.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let v,w=n?[y,p,c]:[y,c,p],k=r?[b,f,d]:[b,d,f],I=nz({inputs:{x:e},backend:a,attrs:{shape:w}}),S=nz({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),C=n?I.shape[1]:I.shape[2],_=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?KL(l,!0):null;if((1===c||1===f)&&C>1e3&&!1===(_||E||$||null!=A)){let e=I,t=S;n&&(e=hz({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=hz({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1===f,i=e;1!==f&&(i=nz({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(i));let o=1===f?2:1,l=t;s&&(l=nz({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(l));let u=ez({inputs:{a:i,b:l},backend:a});v=lz({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let l=Qa(e.dtype,t.dtype),u=new XL(w,k,[T,c,f],n,r,_,A,E,$),h=[I,S];if(null!=s&&h.push(s),E&&h.push(i),$){let e=a.makeTensorInfo([],"float32",pa.createScalarValue(o,"float32"));h.push(e),N.push(e)}v=a.runWebGLProgram(u,h,l)}let F=nz({inputs:{x:v},backend:a,attrs:{shape:x}});N.push(v);for(let e of N)a.disposeIntermediateTensorInfo(e);return F}var cz={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return dz({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},fz="return abs(x);";var mz={kernelName:Be,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=nL(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Me().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new TL(a.shape,fz):new IL(a.shape,fz),r.runWebGLProgram(t,[a],a.dtype)}},gz=jL({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),yz={kernelName:We,backendName:"webgl",kernelFunc:gz},bz=jL({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),xz={kernelName:Ve,backendName:"webgl",kernelFunc:bz},vz="return a + b;",wz=qL({opSnippet:vz,packedOpSnippet:vz,supportsComplex:!0,cpuKernelImpl:TO}),kz={kernelName:Ue,backendName:"webgl",kernelFunc:wz};var Iz={kernelName:Ge,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return OL({inputs:{x:a[0]},backend:r});if(a.length>Me().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>Qa(e,t))),i=a.map((e=>e.shape)),o=Me().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var Sz={kernelName:He,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pa.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=hz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,o)),nf.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,pa.sizeFromShape(f)]}}),g=iz(m,m.dtype,"all",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};var Nz={kernelName:je,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pa.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=hz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,o)),nf.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,pa.sizeFromShape(f)]}}),g=iz(m,m.dtype,"any",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};function Tz(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=nf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=Tz(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function Cz(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=nf.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,pa.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=XM(u),p=bL("coords",u);if(1===s){o=u+1;let e=XM(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=bL("sourceLocR",o-1).concat("inIdx.r"),g=bL("sourceLocG",o-1).concat("inIdx.g"),y=bL("sourceLocB",o-1).concat("inIdx.b"),b=bL("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=Cz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function _z(e,t,n,r){let a=[n];if(nf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Me().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=nf.computeOutAndReduceShapes(i.shape,a),u=pa.sizeFromShape(l),h=nz({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(h);let p=Tz(e,h,r);n.push(p);let d=nz({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Cz(e,t,r)}var Ez={kernelName:qe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pa.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=hz({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),nf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=_z(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};var $z={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pa.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=hz({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),nf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=_z(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Az=jL({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Fz={kernelName:Xe,backendName:"webgl",kernelFunc:Az},Rz=jL({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Dz={kernelName:Ye,backendName:"webgl",kernelFunc:Rz},Mz=jL({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Oz={kernelName:Ze,backendName:"webgl",kernelFunc:Mz},Lz=qL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zz={kernelName:Qe,backendName:"webgl",kernelFunc:Lz},Pz=jL({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Bz={kernelName:Je,backendName:"webgl",kernelFunc:Pz},Wz=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},Vz=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var Uz={kernelName:et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$M(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pa.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pa.arraysEqual(u.inShape,u.outShape))return OL({inputs:{x:a},backend:n});let h=new Wz(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var Gz={kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=nf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),p=new Vz(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var Hz={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=nf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a],i.dtype)}};var jz={kernelName:tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;$M([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=nf.computePool2DInfo(i.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}};var qz={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return dz({a,b:s,transposeA:i,transposeB:o,backend:n})}},Kz={kernelName:Xt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;pa.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pa.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pa.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Me().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],nf.assertAndGetBroadcastShape(e,t),nf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(nf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(nf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],nf.assertAndGetBroadcastShape(e,t),nf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(nf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(nf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},Xz=["x","y","z","w","u","v"];function Yz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=zo.parseSliceParams(a,s,i);if(zo.assertParamsValid(a,o,l),0===pa.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=rL(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=zo.isSliceContinous(a.shape,o,l);if(u||!h){let e=Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=XM(this.rank),n=bL("coords",this.rank),r=bL("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=XM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Xz.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Xz[t]} = start[${t}] + coords.${Xz[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=zo.computeFlatOffset(t,pa.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var Zz={kernelName:dr,backendName:"webgl",kernelFunc:Yz},Jz={kernelName:st,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;pa.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=[],f=nz({inputs:{x:a},backend:n,attrs:{shape:l}}),m=hz({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nz({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Yz({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var Qz={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=CO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var eP={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=nf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},tP=qL({opSnippet:"return float(a != b);",cpuKernelImpl:XO,dtype:"bool"}),nP={kernelName:On,backendName:"webgl",kernelFunc:tP};function rP(e){let{inputs:t,backend:n}=e,{input:r}=t;return OL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var aP={kernelName:Yn,backendName:"webgl",kernelFunc:rP};var sP={kernelName:ut,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return OL({inputs:{x:s},backend:r});let t=Qh(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=zL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=rP({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!pa.hasEncodingLoss(s.dtype,i)){let e=OL({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([s])){let e=r.texData.get(s.dataId).values,[t,n,a]=EO(e,s.shape,s.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){let n=new IL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",pa.getTypedArrayFromDType("bool",1)),t=tP({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},iP="return ceil(x);",oP=jL({opSnippet:iP,packedOpSnippet:iP,cpuKernelImpl:$O}),lP={kernelName:ht,backendName:"webgl",kernelFunc:oP};var uP={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Me().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}};function hP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var pP={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[hP(r,a.complexTensorInfos.real),hP(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function dP(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function cP(e){let{inputs:t,backend:n}=e,{input:r}=t;return OL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var fP={kernelName:nn,backendName:"webgl",kernelFunc:cP};function mP(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>rP({inputs:{input:e},backend:n}))),a=e.map((e=>cP({inputs:{input:e},backend:n}))),s=mP(r,t,n),i=mP(a,t,n),o=zL({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=pa.sizeFromShape(e.shape.slice(t));return nz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=nf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=AO(s,i,r,o),u=nf.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}let s=Me().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>s){let r=[];for(let a=0;a<e.length;a+=s){let i=e.slice(a,a+s);r.push(mP(i,t,n))}let a=mP(r,t,n);for(let e of r)n.disposeIntermediateTensorInfo(e);return a}if(Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=nf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=XM(r),s=bL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${dP(i,l,t)}),\n            vec2(${dP(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${dP(i,l,c)}),\n          vec2(${dP(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:i,outShape:o}=function(e,t,n){let r=nf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>nz({inputs:{x:e},attrs:{shape:[-1,pa.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new class{constructor(e){this.outputShape=[],this.outputShape=nf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));let h=nz({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),h}function gP(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pa.parseAxisParam(a,t[0].shape)[0],i=nf.computeOutShape(t.map((e=>e.shape)),s);if(0===pa.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===o.length)return OL({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return nf.assertParamsConsistent(l,s),mP(o,s,n)}var yP={kernelName:ft,backendName:"webgl",kernelFunc:gP},bP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},xP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tO(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(h+1)/2;t++){let n=2*t;if(p+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(s%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){let e=s%2==0?pa.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}};function vP(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function wP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=s){let e=vP(s.shape,f);null!=e&&(s=nz({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(null!=a){let e=vP(a.shape,f);null!=e&&(a=nz({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if((1!==d&&1!==c||!(p>1e3))&&h.isPacked&&f&&null!=h.texture&&u[2]%2!=0&&pa.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,pa.assert(bM(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let f=nz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let g=dz({a:d,b:f,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);pa.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,y.shape=n.outShape,l=OL({inputs:{x:g},backend:r}),l.shape=n.outShape,m.push(g)}else{let u=n.outHeight*n.outWidth,h=nz({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=nz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=dz({a:f?h:p,b:f?p:h,transposeA:!f,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=nz({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(h),m.push(p),m.push(d)}for(let e of m)r.disposeIntermediateTensorInfo(e);return l}function kP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[n.batchSize,m,g],b=[];if(null!=s){let e=vP(s.shape,f);null!=e&&(s=nz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=vP(a.shape,f);null!=e&&(a=nz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}let x=nz({inputs:{x:t},backend:r,attrs:{shape:[1,m,pa.sizeFromShape(t.shape)/m]}});b.push(x);let v=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=tO(this.outputShape.length);let{dataFormat:n}=t,r=FM(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),I=nz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,C=o?KL(o,!0):null,_=new XL(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),E=f?[I,x]:[x,I];if(a&&E.push(a),N&&E.push(s),T){let e=r.makeTensorInfo([],"float32",pa.createScalarValue(i,"float32"));E.push(e),b.push(e)}let $=r.runWebGLProgram(_,E,"float32"),A=nz({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});b.push($);for(let e of b)r.disposeIntermediateTensorInfo(e);return A}var IP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=nf.convertConv2DDataFormat(u),c=nf.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===d&&Me().getBool("WEBGL_EXP_CONV")){let e=new xP(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(Me().getBool("WEBGL_CONV_IM2COL"))t=kP({x:s,filter:i,convInfo:c,backend:r});else{let e=new bP(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=wP({x:s,filter:i,convInfo:c,backend:r});let f=nz({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}};var SP={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var NP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=nf.convertConv2DDataFormat(u),d=nf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var TP={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=nf.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var CP={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=nf.computeConv3DInfo(a.shape,l,i,1,o),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var _P,EP={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=nf.computeConv3DInfo(l,s.shape,o,1,i),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}},$P=jL({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),AP={kernelName:wt,backendName:"webgl",kernelFunc:$P},FP=jL({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),RP={kernelName:kt,backendName:"webgl",kernelFunc:FP},DP={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(_P||(_P={}));var MP=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===_P.Prod?"1.0":"0.0",i=n?s:`getX(${OP(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${XM(a)} coords = getOutputCoords();\n        int end = ${LP(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${LP(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${OP(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function OP(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function LP(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function zP(e,t,n,r,a,s){let i=t.shape.length,o=nf.getAxesPermutation([r],i),l=t;null!=o&&(l=hz({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=nf.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let h=l.shape[u],p=OL({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(h))-1;t++){let r=new MP(e,l.shape,!1,s),a=[[t]],i=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new MP(e,l.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=hz({inputs:{x:p},backend:n,attrs:{perm:nf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}var PP={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return zP(_P.Prod,a,n,s,i,o)}};var BP={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return zP(_P.Sum,a,n,s,i,o)}};var WP={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=CO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=_O(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var VP={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p="NHWC"===i?[o,l,u,h]:[o,h,l,u],d=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(p,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},UP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tO(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}},GP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=tO(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=h,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<h;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){let t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){let e=i%2==0?pa.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var HP={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),pa.assert(nf.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=nf.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);p=Me().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new GP(d):new UP(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}};var jP={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=nf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var qP={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=nf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var KP={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=pa.sizeFromShape(r.shape),i=nz({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=nz({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};var XP={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=nf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=nz({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}};var YP={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=nf.decodeEinsumEquation(a,s.length);nf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=nf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=nf.getEinsumPermutation(c,l[t]);nf.isIdentityPermutation(r)?e=s[t]:(e=hz({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);pa.arraysEqual(e.shape,i)||(e=nz({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=ez({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=lz({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},ZP=jL({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),JP={kernelName:Lt,backendName:"webgl",kernelFunc:ZP},QP={kernelName:zt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Me().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ML("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new DL("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},eB=qL({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:FO}),tB={kernelName:Bt,backendName:"webgl",kernelFunc:eB},nB=jL({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${nf.ERF_P};\n  float a1 = ${nf.ERF_A1};\n  float a2 = ${nf.ERF_A2};\n  float a3 = ${nf.ERF_A3};\n  float a4 = ${nf.ERF_A4};\n  float a5 = ${nf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),rB={kernelName:Pt,backendName:"webgl",kernelFunc:nB},aB=jL({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:RO,dtype:"float32"}),sB={kernelName:Wt,backendName:"webgl",kernelFunc:aB};function iB(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(pa.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),nz({inputs:{x:s},backend:r,attrs:{shape:o}})}var oB={kernelName:Vt,backendName:"webgl",kernelFunc:iB},lB="return exp(x) - 1.0;",uB=jL({opSnippet:lB,packedOpSnippet:lB,cpuKernelImpl:DO}),hB={kernelName:Ut,backendName:"webgl",kernelFunc:uB},pB=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function dB(e,t,n){let r=n.texData.get(e.dataId),a=pa.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=nz({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new pB("real",o,t),u=new pB("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=zL({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=nz({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var cB={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return dB(r,!1,n)}};function fB(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||pa.inferDtype(a),"string"===s){let e=pa.getArrayFromDType(s,pa.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var mB,gB={kernelName:Ht,backendName:"webgl",kernelFunc:fB},yB={kernelName:jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},bB="return floor(x);",xB=jL({opSnippet:bB,packedOpSnippet:bB,cpuKernelImpl:MO}),vB={kernelName:qt,backendName:"webgl",kernelFunc:xB},wB=qL({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kB={kernelName:Kt,backendName:"webgl",kernelFunc:wB},IB={kernelName:qr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];if(o||i){let e=Me().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==mB||e!==SB)&&(SB=e,mB=document.createElement("canvas").getContext("2d",{willReadFrequently:SB})),mB.canvas.width=l,mB.canvas.height=u,mB.drawImage(a,0,0,l,u),a=mB.canvas}let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=ND.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Me().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=FM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(p):new class{constructor(e){this.variableNames=["A"];let t=FM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}},SB=Me().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");var NB={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=nf.convertConv2DDataFormat(p),y=nf.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[],x=null!=o,v=null!=l,w="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=nz({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,p)),v&&e.push(t(l,p)),w){let t=r.makeTensorInfo([],"float32",pa.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Me().getBool("WEBGL_EXP_CONV")){let e=f?KL(f,!0):null,n=new xP(y,x,e,v,w),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=r.runWebGLProgram(n,s,"float32",a)}else if(Me().getBool("WEBGL_CONV_IM2COL"))t=kP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?KL(f,!1):null,n=new bP(y,x,e,v,w),a=k();t=r.runWebGLProgram(n,a,"float32")}else t=wP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let I=nz({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),I}};var TB={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),pa.assert(nf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=nf.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Me().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?KL(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",pa.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new GP(y,w,x,k,I):new UP(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var CB={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=pa.sizeFromShape(r.shape),[l,u,h,p]=nf.prepareAndValidate(r,a),d=nz({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=nz({inputs:{x:r},backend:n,attrs:{shape:[pa.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=OO(e,t,r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=XM(t.length),s=XM(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=XM(r.length),l=r.length>1?"paramsShape[j]":"paramsShape";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n        ${o} paramsShape = ${o}(${this.paramsShape});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            out_of_bounds = out_of_bounds || index < 0;\n            out_of_bounds = out_of_bounds || index >= ${l};\n            flattenIndex += index * ${i};\n          }\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}(i,p,[u,h],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=nz({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}};function _B(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=pa.parseAxisParam(i,a.shape)[0];if(Me().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];pa.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=nf.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=pa.sizeFromShape(s.shape),p=[],d=nz({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=nz({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=LO(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=XM(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=nz({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var EB={kernelName:Yt,backendName:"webgl",kernelFunc:_B},$B=qL({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zO,dtype:"bool"}),AB={kernelName:Jt,backendName:"webgl",kernelFunc:$B},FB=qL({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:PO}),RB={kernelName:Qt,backendName:"webgl",kernelFunc:FB};var DB={kernelName:tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return dB(r,!0,n)}},MB=jL({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),OB={kernelName:rn,backendName:"webgl",kernelFunc:MB},LB=jL({opSnippet:"return float(isinf(x));",dtype:"bool"}),zB={kernelName:an,backendName:"webgl",kernelFunc:LB},PB=jL({opSnippet:"return float(isnan(x));",dtype:"bool"}),BB={kernelName:sn,backendName:"webgl",kernelFunc:PB},WB=qL({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:BO,dtype:"bool"}),VB={kernelName:ln,backendName:"webgl",kernelFunc:WB},UB=qL({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:WO,dtype:"bool"}),GB={kernelName:un,backendName:"webgl",kernelFunc:UB};var HB={kernelName:hn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=VO(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},jB=jL({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:UO}),qB={kernelName:pn,backendName:"webgl",kernelFunc:jB},KB=jL({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),XB={kernelName:dn,backendName:"webgl",kernelFunc:KB},YB=qL({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ZB={kernelName:cn,backendName:"webgl",kernelFunc:YB},JB=jL({opSnippet:"return float(!(x >= 1.0));"}),QB={kernelName:fn,backendName:"webgl",kernelFunc:JB},eW=qL({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),tW={kernelName:mn,backendName:"webgl",kernelFunc:eW},nW={kernelName:xn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Me().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},rW={kernelName:vn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function aW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=pa.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let r=mL(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=oz(a,h,n);u=nf.getInnerMostAxes(u.length,o)}nf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=nf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=nf.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=GO(e,pa.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=pa.sizeFromShape(t),s=nz({inputs:{x:e},attrs:{shape:[pa.sizeFromShape(e.shape)/a,a]},backend:r}),i=iz(s,e.dtype,"max",r),o=nz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var sW={kernelName:wn,backendName:"webgl",kernelFunc:aW},iW=qL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:HO}),oW={kernelName:kn,backendName:"webgl",kernelFunc:iW};var lW={kernelName:In,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;$M(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pa.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pa.arraysEqual(u.inShape,u.outShape))return OL({inputs:{x:a},backend:n});let h=new Wz(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var uW={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=nf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),p=new Vz(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var hW={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=nf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new Vz(p,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var pW={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;$M([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=nf.computePool2DInfo(o.shape,l,u,1,h,p),c=new Wz(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var dW={kernelName:Cn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;pa.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];pa.assert(nf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=nf.computePool2DInfo(r.shape,a,s,u,i),[p,d]=function(e,t,n,r){let a=new Wz(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Wz(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,h,l);return[p,d]}};var cW={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=pa.parseAxisParam(s,r.shape),u=l,h=nf.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];let n=mL(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=oz(r,h,i);c.push(f),u=nf.getInnerMostAxes(u.length,o)}nf.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=nf.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=nf.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=pa.sizeFromShape(t),s=nz({inputs:{x:e},attrs:{shape:[pa.sizeFromShape(e.shape)/a,a]},backend:r}),i=iz(s,"float32","mean",r),o=nz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var fW={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pa.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=hz({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,a.shape.length)),nf.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,pa.sizeFromShape(f)]}}),g=iz(m,m.dtype,"min",n);if(i){d=nz({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=nz({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},mW=qL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jO}),gW={kernelName:$n,backendName:"webgl",kernelFunc:mW},yW={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=XM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=bL("rc",r),l=bL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=XM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},bW=qL({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xW={kernelName:Fn,backendName:"webgl",kernelFunc:bW},vW=qL({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),wW={kernelName:Mt,backendName:"webgl",kernelFunc:vW},kW="return a - b;",IW=qL({opSnippet:kW,packedOpSnippet:kW,supportsComplex:!0,cpuKernelImpl:dL}),SW={kernelName:Dr,backendName:"webgl",kernelFunc:IW};function NW(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=pa.parseAxisParam([s],a.shape),o=aW({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=nf.expandShapeToKeepDim(o.shape,i),u=nz({inputs:{x:o},backend:n,attrs:{shape:l}}),h=IW({inputs:{a,b:u},backend:n}),p=aB({inputs:{x:h},backend:n}),d=lz({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=nz({inputs:{x:d},backend:n,attrs:{shape:l}}),f=vW({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var TW={kernelName:kr,backendName:"webgl",kernelFunc:NW};var CW={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:NW({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,h,s),d=[[i]],c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}};var _W={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=KO(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Me().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new TL(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new IL(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),r.runWebGLProgram(t,[a],a.dtype)}},EW=om.nonMaxSuppressionV3Impl;var $W={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=EW(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},AW=om.nonMaxSuppressionV4Impl;var FW={kernelName:zn,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=AW(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},RW=om.nonMaxSuppressionV5Impl;var DW={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=RW(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},MW={kernelName:Wn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=pa.sizeFromShape(a.shape),h=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,i,o,l),p=nz({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(h,[p],s);n.disposeIntermediateTensorInfo(p);let c=nz({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),c}};function OW(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=rP({inputs:{input:r},backend:n}),t=OW({inputs:{x:e},backend:n}),a=cP({inputs:{input:r},backend:n}),s=OW({inputs:{x:a},backend:n}),i=zL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return fB({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var LW={kernelName:Hr,backendName:"webgl",kernelFunc:OW};var zW={kernelName:Bn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=rP({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=cP({inputs:{input:a},backend:r}),i=OW({inputs:{x:s},backend:r}),o=zL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return fB({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var PW={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return iB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=gP({inputs:t.map((e=>{let t=iB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},BW=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===pa.sizeFromShape(a.shape)){return fB({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=XM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=bL("rc",r),l=bL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=XM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},WW={kernelName:Un,backendName:"webgl",kernelFunc:BW},VW=qL({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),UW={kernelName:Hn,backendName:"webgl",kernelFunc:VW};var GW={kernelName:qn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=pa.parseAxisParam(i,s.shape),p=h,d=nf.getAxesPermutation(p,l),c=s;if(null!=d&&(c=hz({inputs:{x:s},backend:r,attrs:{perm:d}}),p=nf.getInnerMostAxes(p.length,l),u.push(c)),nf.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=YO(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=nf.computeOutAndReduceShapes(c.shape,p),a=pa.sizeFromShape(n),i=nz({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=iz(i,es(s.dtype),"prod",r);t=nz({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=nf.expandShapeToKeepDim(t.shape,h);t=nz({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}};var HW={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),p=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=ZO(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}},jW=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=JO(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},qW={kernelName:Xn,backendName:"webgl",kernelFunc:jW},KW=jL({opSnippet:"return 1.0 / x;"}),XW={kernelName:Zn,backendName:"webgl",kernelFunc:KW},YW=jL({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ZW={kernelName:Jn,backendName:"webgl",kernelFunc:YW},JW=jL({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),QW={kernelName:ar,backendName:"webgl",kernelFunc:JW};var eV={kernelName:nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Me().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}};var tV={kernelName:rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var nV={kernelName:er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Me().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}};var rV={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var aV={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=pa.parseAxisParam(s,a.shape);if(0===i)return OL({inputs:{x:a},backend:n});let l=Me().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=bL("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=XM(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=XM(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},sV={kernelName:Kr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,s),[u,h]=nf.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,h,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},iV=jL({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oV={kernelName:ir,backendName:"webgl",kernelFunc:iV},lV=jL({opSnippet:"return inversesqrt(x);",cpuKernelImpl:QO}),uV={kernelName:or,backendName:"webgl",kernelFunc:lV},hV=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=XM(a.length),l=XM(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var pV={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=nf.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=nz({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=nz({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new hV(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=nz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var dV={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Me().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}};var cV={kernelName:hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=XM(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Qa(a.dtype,s.dtype))}},fV=jL({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${nf.SELU_SCALEALPHA};\n  float scale = ${nf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),mV={kernelName:pr,backendName:"webgl",kernelFunc:fV},gV=jL({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:tL}),yV={kernelName:gr,backendName:"webgl",kernelFunc:gV},bV=jL({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),xV={kernelName:mr,backendName:"webgl",kernelFunc:bV},vV=jL({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),wV={kernelName:cr,backendName:"webgl",kernelFunc:vV},kV=jL({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),IV={kernelName:fr,backendName:"webgl",kernelFunc:kV},SV=jL({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),NV={kernelName:yr,backendName:"webgl",kernelFunc:SV},TV={kernelName:vr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;pa.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=BW({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=nf.getReshaped(h.shape,s,o,!1),d=nf.getPermuted(p.length,s.length,!1),c=nf.getReshapedPermuted(h.shape,s,o,!1),f=nz({inputs:{x:h},backend:n,attrs:{shape:p}}),m=hz({inputs:{x:f},backend:n,attrs:{perm:d}}),g=nz({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var CV={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=aL(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var _V={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=sL(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var EV={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=iL(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var $V={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=iL(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var AV={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=nf.calculateShapes(s,a,o);if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=pa.decodeString(n.readSync(i.dataId)[0]),c=eL(e,t,o,d,h,u,l,p,r,false);return n.makeTensorInfo(o,c.dtype,c.values)}let c=new hV(u,l,a.shape.length,s.shape.length,p,[d,1],false),f=n.runWebGLProgram(c,[s,a,i],s.dtype),m=nz({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};var FV={kernelName:wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pa.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=Yz({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}},RV="return sqrt(x);",DV=jL({opSnippet:RV,packedOpSnippet:RV,cpuKernelImpl:oL}),MV={kernelName:br,backendName:"webgl",kernelFunc:DV},OV=jL({opSnippet:"return x * x;"}),LV={kernelName:Er,backendName:"webgl",kernelFunc:OV},zV="return (a - b) * (a - b);",PV=qL({opSnippet:zV,packedOpSnippet:zV}),BV={kernelName:_r,backendName:"webgl",kernelFunc:PV};var WV={kernelName:jr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new IL(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var VV={kernelName:$r,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=zo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=nz({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){pa.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=zo.computeOutShape(x,v,w),n=Yz({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=nz({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=vi(s.shape,s.dtype,e),a=lL(f,n,w,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=XM(n.length),s=XM(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(x,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=nz({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var UV={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.readSync(h.dataId),c=n.readSync(p.dataId),[f,m]=uL(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var GV={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,h,p]=hL(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var HV={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=pL(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},jV=jL({opSnippet:"return tan(x);"}),qV={kernelName:Mr,backendName:"webgl",kernelFunc:jV},KV=jL({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),XV={kernelName:Or,backendName:"webgl",kernelFunc:KV};function YV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>pa.decodeString(e))):e,r=vi(a.shape,a.dtype,t),i=cL(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=XM(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var ZV={kernelName:Lr,backendName:"webgl",kernelFunc:YV},JV=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function QV(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function eU(e){let t=1;for(;t<e;)t*=2;return t}var tU={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Me().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Me().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let e=n.readSync(a.dataId),[t,r]=fL(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,fB({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=pa.sizeFromShape(u)/h,m=nz({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&QV(n,c);let g=eU(s),y=eU(h),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{let a=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),QV(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new JV([f,e/2]),a=[[h],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),QV(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=Yz({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),QV(n,w);let k=_B({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});QV(n,m);let I=u.slice(0,-1);I.push(s),w=b,b=nz({inputs:{x:b},attrs:{shape:I},backend:n}),QV(n,w);let S=k;return k=nz({inputs:{x:k},attrs:{shape:I},backend:n}),QV(n,S),[k,b]}};var nU={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(p,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}};var rU={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;$M(s,"unique");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=gL(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var aU={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let e=0;e<o;e++)e!==s&&(u[h++]=i.shape[e]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=Yz({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=nz({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var sU,iU,oU,lU={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=nf.getAxesPermutation([u],o),p=a;null!=h&&(p=hz({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=nf.getInnerMostAxes(1,o)[0]);let d=nf.segment_util.computeOutShape(p.shape,u,i),c=pa.sizeFromShape([p.shape[u]]),f=nz({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=es(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=nf.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=jW({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=YV({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=nz({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=h){l.push(y);let e=nf.getUndoAxesPermutation(h);b=hz({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},uU=[cz,mz,yz,xz,kz,Iz,Sz,Nz,Ez,$z,Fz,Dz,Oz,zz,Bz,Uz,Gz,Hz,jz,qz,Kz,Jz,Qz,eP,sP,lP,uP,PL,pP,yP,IP,SP,NP,TP,CP,EP,AP,RP,DP,PP,BP,WP,VP,HP,jP,qP,KP,XP,YP,JP,QP,tB,rB,sB,oB,hB,cB,gB,yB,vB,kB,IB,NB,TB,CB,EB,AB,RB,LL,DB,fP,OB,zB,BB,VL,VB,GB,HB,qB,XB,ZB,QB,tW,nW,rW,sW,oW,lW,uW,hW,pW,dW,cW,fW,gW,yW,xW,CW,tz,_W,$W,FW,DW,nP,MW,zW,PW,WW,UW,HL,GW,HW,qW,aP,wW,XW,ZW,QW,rz,eV,tV,nV,rV,aV,sV,oV,uV,pV,dV,cV,mV,yV,xV,wV,IV,Zz,TW,NV,TV,CV,_V,EV,$V,AV,FV,MV,LV,BV,WV,VV,UV,GV,HV,SW,uz,qV,XV,ZV,tU,nU,pz,rU,aU,lU,LW];for(let e of uU)sa(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(sU||(sU={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(iU||(iU={}));var hU={kernelName:Xr,backendName:"wasm",setupFunc:function(e){oU=e.wasm.cwrap(Xr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=iU[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=vo.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return oU(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,w),v}};function pU(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===pa.sizeFromShape(i.shape)||n(s,sU[a.dtype],o),i}}}var dU=pU(Be);function cU(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,h=nf.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(h,u);if(0===pa.sizeFromShape(h))return p;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,sU[s.dtype],f),p}}}var fU,mU=cU(Ue);var gU={kernelName:Ge,backendName:"wasm",setupFunc:function(e){fU=e.wasm.cwrap(Ge,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===pa.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return fU(s,a.length,sU[r.dtype],i),r}};function yU(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var bU,xU={kernelName:en,backendName:"wasm",kernelFunc:yU};function vU(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=yU({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return bU(h,c,l.shape.length,sU[l.dtype],p,d,s.length),u}var wU,kU={kernelName:Br,backendName:"wasm",kernelFunc:vU,setupFunc:function(e){bU=e.wasm.cwrap(Br,null,["number","array","number","number","number","array","number"])}};function IU(e,t,n){let r=e.shape,a=e.shape.length,s=pa.parseAxisParam(t,r),i=s,o=nf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=nf.getInnerMostAxes(i.length,a),l=vU({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var SU,NU={kernelName:He,backendName:"wasm",setupFunc:function(e){wU=e.wasm.cwrap(He,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=IU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("all",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;wU(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var TU,CU={kernelName:je,backendName:"wasm",setupFunc:function(e){SU=e.wasm.cwrap(je,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=IU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("any",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;SU(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var _U,EU={kernelName:qe,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=IU(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=pa.sizeFromShape(c.shape),g=l.shape[h[0]];return TU(o,sU[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c},setupFunc:function(e){TU=e.wasm.cwrap(qe,null,["number","number","number","number","number"])}};var $U={kernelName:et,backendName:"wasm",setupFunc:function(e){_U=e.wasm.cwrap(et,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=nf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let v=r.makeOutput(h.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return _U(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w),v}};function AU(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=pa.sizeFromShape(r.shape),i=pa.inferFromImplicitShape(a,s);return pa.assert(s===pa.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var FU,RU={kernelName:Qn,backendName:"wasm",kernelFunc:AU};var DU={kernelName:at,backendName:"wasm",setupFunc:function(e){FU=e.wasm.cwrap(at,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pa.sizeFromShape(f),y=pa.sizeFromShape(m),b=vo.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);pa.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=AU({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=AU({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),C=n.makeOutput([T,S,N],v.dtype),_=n.dataIdMap.get(C.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return FU(k,E,v.shape.length,I,$,w.shape.length,i,o,_),n.disposeData(v.dataId),n.disposeData(w.dataId),C.shape=b,C}};function MU(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=zo.parseSliceParams(t,n,r),o=zo.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=pa.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=zo.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+pa.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+pa.sizeFromShape(i))),u}if("string"===t.dtype){let e=jE(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,h[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let a=o;a<h;a++)for(let o=l;o<p;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,h[0],h[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<d;l++)for(let u=h;u<c;u++){let h=s*t+l*n+u*r+f;a.set(e.subarray(h,h+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],d,s,i);else{let e=jE(l,s,i,t.shape,t.dtype);d.set(e)}return u}var OU={kernelName:dr,backendName:"wasm",kernelFunc:MU};var LU={kernelName:st,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=AU({inputs:{x:a},backend:n,attrs:{shape:l}}),f=vU({inputs:{x:c},backend:n,attrs:{perm:u}}),m=MU({inputs:{x:AU({inputs:{x:f},backend:n,attrs:{shape:h}})},backend:n,attrs:{begin:p,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function zU(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var PU,BU={kernelName:ut,backendName:"wasm",kernelFunc:zU},WU=pU(ht);var VU={kernelName:pt,backendName:"wasm",setupFunc:function(e){PU=e.wasm.cwrap(pt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return PU(o,s,i,u),l}};function UU(e){let{inputs:t,backend:n}=e,r=pa.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=nf.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>pa.sizeFromShape(e.shape)>0));if(1===s.length)return yU({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===pa.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(nf.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=pa.sizeFromShape(e.shape.slice(r));return AU({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=nf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=M_(o,a,t[0].dtype,l),h=nf.computeOutShape(s.map((e=>e.shape)),r);return i.shape=h,n.dataIdMap.get(i.dataId).stringBytes=nf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=pa.sizeFromShape(s[0].shape.slice(0,r)),u=0,h=s.map((e=>{let t=pa.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let r=h[n],a=e*r,s=p[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var GU,HU={kernelName:ft,backendName:"wasm",kernelFunc:UU};var jU,qU={kernelName:mt,backendName:"wasm",setupFunc:function(e){GU=e.wasm.cwrap(mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=nf.convertConv2DDataFormat(d),f=nf.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return GU(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,C,w,k,I,S,N,T,E),_}};var KU,XU,YU={kernelName:yt,backendName:"wasm",setupFunc:function(e){jU=e.wasm.cwrap(yt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(h,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,C=pa.computeStrides(d.inShape),_=pa.computeStrides(a.shape),[E,$,A]=pa.computeStrides(s.shape),F=C[0],R=T?C[1]:C[2],D=T?C[2]:1,M=T?1:C[1],O=_[0],L=T?_[1]:_[2],z=T?_[2]:1,P=T?1:_[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return jU(V,U,c,f,m,y,b,g,v,w,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}},ZU=pU(wt),JU=pU(kt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(KU||(KU={}));var QU,eG={kernelName:Nt,backendName:"wasm",setupFunc:function(e){XU=e.wasm.cwrap(Nt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=zU({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return XU(g,y,b,p,w,d,c,KU[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var tG,nG={kernelName:It,backendName:"wasm",setupFunc:function(e){QU=e.wasm.cwrap(It,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;pa.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=nf.getAxesPermutation([s],l),h=a;null!==u&&(h=vU({inputs:{x:a},attrs:{perm:u},backend:n}));let p=nf.getInnerMostAxes(1,l)[0];nf.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;QU(f,i?1:0,o?1:0,c,m,sU[a.dtype]);let g=d;if(null!==u){g=vU({inputs:{x:d},attrs:{perm:nf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var rG,aG={kernelName:St,backendName:"wasm",setupFunc:function(e){tG=e.wasm.cwrap(St,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;pa.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=nf.getAxesPermutation([s],l),h=a;null!==u&&(h=vU({inputs:{x:a},attrs:{perm:u},backend:n}));let p=nf.getInnerMostAxes(1,l)[0];nf.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;tG(f,i?1:0,o?1:0,c,m,sU[a.dtype]);let g=d;if(null!==u){g=vU({inputs:{x:d},attrs:{perm:nf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var sG,iG={kernelName:Ct,backendName:"wasm",setupFunc:function(e){rG=e.wasm.cwrap(Ct,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p="NHWC"===i?[o,l,u,h]:[o,h,l,u],d=t.makeOutput(p,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(pa.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(pa.computeStrides(p)).buffer),y=t.dataIdMap.get(d.dataId).id;return rG(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,p.length,y),d}};var oG={kernelName:_t,backendName:"wasm",setupFunc:function(e){sG=e.wasm.cwrap(_t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=nf.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(c.outShape,"float32"),_=r.dataIdMap.get(C.dataId).id;return sG(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,_),C}},lG=pU(Lt),uG=cU(Bt,0,"bool"),hG=pU(Wt,"float32");function pG(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(pa.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),AU({inputs:{x:a},backend:r,attrs:{shape:o}})}var dG={kernelName:Vt,backendName:"wasm",kernelFunc:pG};function cG(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var fG,mG={kernelName:Ht,backendName:"wasm",kernelFunc:cG};var gG,yG={kernelName:jt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return fG(s,o,l,u,h,i),a},setupFunc:function(e){fG=e.wasm.cwrap(jt,null,["number","number","number","number","number","number"])}},bG=pU(qt),xG=cU(Kt);var vG,wG={kernelName:Xt,backendName:"wasm",setupFunc:function(e){gG=e.wasm.cwrap(Xt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===pa.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return gG(h,p,d,c,f,a,g),m}};var kG,IG={kernelName:Yr,backendName:"wasm",setupFunc:function(e){vG=e.wasm.cwrap(Yr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=nf.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=iU[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return vG(y,R,D,M,b,w,k,v,I,S,N,T,F,C,_,E,$,A,x,g,z,f||0,L),O}};var SG,NG={kernelName:Zr,backendName:"wasm",setupFunc:function(e){kG=e.wasm.cwrap(Zr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=nf.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=iU[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return kG(y,R,D,M,b,w,k,v,I,S,N,T,F,C,_,E,$,A,x,g,z,f||0,L),O}};var TG,CG={kernelName:Zt,backendName:"wasm",setupFunc:function(e){SG=e.wasm.cwrap(Zt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Fo.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return SG(d,sU[r.dtype],c,i,p,o,f,m),u}};var _G,EG={kernelName:Yt,backendName:"wasm",setupFunc:function(e){TG=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=pa.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];pa.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=nf.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=AU({inputs:{x:a},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=pa.sizeFromShape(s.shape),f=AU({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,a.dtype);if(0===pa.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(pa.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(pa.computeStrides(m)).buffer);return TG(b,sU[a.dtype],w,y,x,p.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},$G=cU(Jt,0,"bool"),AG=cU(Qt,0,"bool");var FG,RG={kernelName:on,backendName:"wasm",setupFunc:function(e){_G=e.wasm.cwrap(on,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==pa.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;_G(a,sU[t.dtype],n,e)}return s}},DG=cU(ln,0,"bool"),MG=cU(un,0,"bool"),OG=pU(pn),LG=cU(cn,0,"bool"),zG=pU(fn),PG=cU(mn,0,"bool"),BG=cU(gn,0,"bool");var WG,VG={kernelName:wn,backendName:"wasm",setupFunc:function(e){FG=e.wasm.cwrap(wn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=IU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("max",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=pa.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pa.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;FG(o,sU[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},UG=cU(kn);var GG,HG={kernelName:In,backendName:"wasm",setupFunc:function(e){WG=e.wasm.cwrap(In,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;pa.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=nf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return WG(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v,w,k,S),I}};var jG,qG={kernelName:_n,backendName:"wasm",setupFunc:function(e){GG=e.wasm.cwrap(_n,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=IU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=pa.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=zU({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==pa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;GG(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var KG,XG,YG={kernelName:En,backendName:"wasm",setupFunc:function(e){jG=e.wasm.cwrap(En,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=IU(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;nf.assertAxesAreInnerMostDims("min",p,f);let[m,g]=nf.computeOutAndReduceShapes(u.shape,p),y=pa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==pa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;jG(l,sU[i.dtype],y,e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},ZG=cU($n);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(KG||(KG={}));var JG,QG={kernelName:An,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return XG(i,u,t.shape.length,sU[t.dtype],d,c,KG[a],l),o},setupFunc:function(e){XG=e.wasm.cwrap(An,null,["number","array","number","number","array","array","number","number"])}},eH=cU(Dn),tH=pU(Mn);function nH(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var rH,aH={kernelName:Ln,backendName:"wasm",setupFunc:function(e){JG=e.wasm.cwrap(Ln,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=JG(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=nH(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var sH,iH={kernelName:zn,backendName:"wasm",setupFunc:function(e){rH=e.wasm.cwrap(zn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=rH(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=nH(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var oH,lH={kernelName:Pn,backendName:"wasm",setupFunc:function(e){sH=e.wasm.cwrap(Pn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=sH(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=nH(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},uH=cU(On,0,"bool");var hH={kernelName:Wn,backendName:"wasm",setupFunc:function(e){oH=e.wasm.cwrap(Wn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=n.makeOutput([...a.shape,i],s),h=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(a.dataId).id;return oH(p,i,o,l,h),u}};var pH={kernelName:Bn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var dH,cH={kernelName:Vn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return pG({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pa.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pa.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=UU({inputs:t.map((e=>{let t=pG({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var fH,mH={kernelName:Un,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===pa.sizeFromShape(t.shape))return cG({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return dH(i,u,t.shape.length,sU[t.dtype],d,c,a,l),o},setupFunc:function(e){dH=e.wasm.cwrap(Un,null,["number","array","number","number","array","array","number","number"])}},gH=cU(Hn);var yH,bH={kernelName:jn,backendName:"wasm",setupFunc:function(e){fH=e.wasm.cwrap(jn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=zU({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let h=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(h.dataId).id;return fH(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),h}};var xH,vH={kernelName:qn,backendName:"wasm",setupFunc:function(e){yH=e.wasm.cwrap(qn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=IU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=pa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==pa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;yH(l,y,sU[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},wH={kernelName:Xn,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=zE(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},kH=cU(Mt),IH=pU(Jn),SH=pU(ar);var NH,TH={kernelName:nr,backendName:"wasm",setupFunc:function(e){xH=e.wasm.cwrap(nr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=zU({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===pa.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return xH(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var CH,_H={kernelName:er,backendName:"wasm",setupFunc:function(e){NH=e.wasm.cwrap(er,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[h,p,d,c]=a.shape,f=[h,l,u,c],m=t.makeOutput(f,"float32");if(0===pa.sizeFromShape(a.shape))return m;let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=zU({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let b=y.id,x=t.dataIdMap.get(m.dataId).id;return NH(b,h,p,d,c,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),m}};var EH,$H={kernelName:sr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=pa.parseAxisParam(s,a.shape);if(0===a.shape.length)return yU({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);CH(l,h,i.length,p,a.shape.length,u);let d=AU({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){CH=e.wasm.cwrap(sr,null,["number","array","number","array","number","number"])}};var AH,FH={kernelName:Kr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=nf.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return EH(u,p,d,c,f,s,m,g,b,y.length,h),l},setupFunc:function(e){EH=e.wasm.cwrap(Kr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},RH=pU(ir),DH=pU(or);var MH,OH={kernelName:lr,backendName:"wasm",setupFunc:function(e){AH=e.wasm.cwrap(lr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===pa.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=Do.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return AH(c,f,sU[s.dtype],l,u,h,m,d,g),o}};var LH,zH={kernelName:hr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:pa.sizeFromShape(a.shape.slice(1));return MH(i,o,l,c,h),u},setupFunc:function(e){MH=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var PH,BH={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){LH=e.wasm.cwrap(gr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===pa.sizeFromShape(a.shape)||LH(r,s),a}},WH=pU(cr);var VH={kernelName:kr,backendName:"wasm",setupFunc:function(e){PH=e.wasm.cwrap(kr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=pa.sizeFromShape(n.shape)/o;return 0===pa.sizeFromShape(s.shape)||PH(a,i,o,l),s}};var UH,GH={kernelName:vr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=pa.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=mH.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=nf.getReshaped(u.shape,s,o,!1),p=nf.getPermuted(h.length,s.length,!1),d=nf.getReshapedPermuted(u.shape,s,o,!1),c=AU({inputs:{x:u},backend:n,attrs:{shape:h}}),f=vU({inputs:{x:c},backend:n,attrs:{perm:p}}),m=AU({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var HH,jH={kernelName:Ir,backendName:"wasm",setupFunc:function(e){UH=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],h=n.readSync(i.dataId)[0],p=[l+h,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([h],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=UH(d,c,sU[s.dtype],l,h,u,f,g,b,v,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=nf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=nf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=nf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let C=m,_=y;return N!==p[0]&&(C=MU({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),_=MU({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[C,_,x,w]}};var qH,KH={kernelName:Sr,backendName:"wasm",setupFunc:function(e){HH=e.wasm.cwrap(Sr,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],h=pa.sizeFromShape(s.shape),p=t.makeOutput([u,h],r.dtype),d=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([h],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;HH(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=nf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=nf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=nf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=nf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=nf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}};function XH(e){qH=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function YH(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=a.shape.slice();h[0]=u;let p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(h,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;qH(p,sU[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=nf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=nf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=nf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var ZH={kernelName:Nr,backendName:"wasm",setupFunc:XH,kernelFunc:function(e){return YH(e,!0)}};var JH={kernelName:Tr,backendName:"wasm",setupFunc:XH,kernelFunc:function(e){return YH(e,!1)}};var QH,ej={kernelName:wr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=pa.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=MU({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},tj=pU(br),nj=pU(Er),rj=cU(_r);var aj,sj={kernelName:jr,backendName:"wasm",setupFunc:function(e){QH=e.wasm.cwrap(jr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return QH(i,a,sU[s.dtype],l),o}};var ij={kernelName:$r,backendName:"wasm",setupFunc:function(e){aj=e.wasm.cwrap($r,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=zo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=AU({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){pa.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=zo.computeOutShape(x,v,w),r=MU({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=AU({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(pa.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),h=new Uint8Array(new Int32Array(pa.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;aj(r,a,s.shape.length,i,o,l,u,h,f.length,p),t=AU({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}};var oj={kernelName:Ar,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:h,preserveShortSequences:p}=r,d=t.readSync(a.dataId),c=t.readSync(s.dataId),[f,m]=s$(d,c,i,o,l,u,h,p),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};var lj={kernelName:Fr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),l=t.readSync(s.dataId),[u,h,p]=o$(o,l[0],i),d=h.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string");t.dataIdMap.get(f.dataId).stringBytes=h;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(p),[c,f,m]}};var uj,hj={kernelName:Rr,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=l$(t.readSync(a.dataId),s),o=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}},pj=cU(Dr);var dj,cj={kernelName:xr,backendName:"wasm",setupFunc:function(e){uj=e.wasm.cwrap(xr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=IU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=pa.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==pa.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;uj(l,y,sU[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},fj=pU(Mr),mj=pU(Or);var gj,yj={kernelName:Lr,backendName:"wasm",setupFunc:function(e){dj=e.wasm.cwrap(Lr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return dj(s,l,a.shape.length,u,o.length,sU[h.dtype],p),h}};var bj,xj={kernelName:zr,backendName:"wasm",setupFunc:function(e){gj=e.wasm.cwrap(zr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return gj(i,o,r.shape.length,sU[r.dtype],a,s,h,d),[u,p]}};var vj={kernelName:Pr,backendName:"wasm",setupFunc:function(e){bj=e.wasm.cwrap(Pr,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:h}=a,[p,d,c,f]=s.shape,[m,g]=null!=h?h:[d,c],y=[p,m,g,f],b=new Uint8Array(new Int32Array(pa.computeStrides(s.shape)).buffer),x=new Uint8Array(new Int32Array(pa.computeStrides(y)).buffer),v=n.makeOutput(y,s.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.dataIdMap.get(s.dataId).id,I=n.dataIdMap.get(i.dataId).id,S="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return bj(k,I,i.shape[0]>1,p,m,g,f,c,d,b,s.shape.length-1,x,y.length-1,S,t,u,w),v}};var wj={kernelName:Vr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<h.length;e++)p[s]=e,h[e]=MU({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var kj={kernelName:Hr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},Ij=[hU,dU,mU,gU,NU,CU,EU,$U,DU,LU,BU,WU,VU,HU,qU,YU,ZU,JU,eG,nG,aG,iG,oG,lG,uG,hG,dG,mG,yG,bG,xG,wG,IG,NG,CG,EG,$G,AG,xU,RG,DG,MG,OG,LG,zG,PG,BG,VG,UG,HG,qG,YG,ZG,QG,eH,tH,aH,iH,lH,uH,hH,pH,cH,mH,gH,bH,vH,wH,kH,IH,SH,RU,TH,_H,$H,FH,RH,DH,OH,zH,BH,WH,OU,VH,GH,jH,KH,ZH,JH,ej,tj,nj,rj,sj,ij,oj,lj,hj,pj,cj,fj,mj,yj,xj,vj,kU,wj,kj];for(let e of Ij)sa(e);var Sj=Me();Sj.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Sj.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Sj.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Nj=c(F()),Tj=c(R()),Cj=c(D()),_j=Nj.default||Nj,Ej=Cj.default||Cj,$j=class extends O{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Wj),Vj=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new M(this,Ji())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=pa.now();return e(),{kernelMs:pa.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=pa.sizeFromShape(n),o=i*pa.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||pa.sizeFromShape(s);let o=pa.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=pa.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=pa.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Aj(e,t,n){if(null!=Dj)return Dj;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Oj&&null!=Oj[r]?Oj[r]:n+r}async function Fj(){let[e,t]=await Promise.all([Me().getAsync("WASM_HAS_SIMD_SUPPORT"),Me().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=Tj.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?Aj(e,t,null!=Mj?Mj:r):r+n}};zj&&(a.instantiateWasm=function(e){return(t,n)=>(pa.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(Aj(e,t,null!=Mj?Mj:"")));let s,i=!1;a.onAbort=()=>{i||Lj||(Lj=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Dj?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+_j.toString()],{type:"text/javascript"}),s=_j(a)):s=Ej(a),s.then((e=>{i=!0,Lj=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(r)}))}var Rj=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Dj=null,Mj=null,Oj={},Lj=!1,zj=!1;function Pj(e,t=!1){if(Yi(),Lj)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Dj=e,zj=t}function Bj(e,t=!1){if(Lj)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Mj=e;else{Oj=e;let t=Rj.filter((e=>null==Oj[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}zj=t}var Wj=-1,Vj=-1;function Uj(e){Wj=e}function Gj(){if(-1===Vj)throw new Error("WASM backend not initialized.");return Vj}var Hj="3.20.0";po("wasm",(async()=>{let{wasm:e}=await Fj();return new $j(e)}),2);var jj={tfjs:"3.20.0","tfjs-core":"3.20.0","tfjs-data":"3.20.0","tfjs-layers":"3.20.0","tfjs-converter":"3.20.0","tfjs-backend-cpu":"3.20.0","tfjs-backend-webgl":"3.20.0","tfjs-backend-wasm":"3.20.0"},qj={};function Kj(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}r(qj,{AnchorPosition:()=>Lq,DrawBox:()=>Wq,DrawBoxOptions:()=>Bq,DrawFaceLandmarks:()=>$K,DrawFaceLandmarksOptions:()=>EK,DrawTextField:()=>Pq,DrawTextFieldOptions:()=>zq,drawContour:()=>Kj,drawDetections:()=>Vq,drawFaceExpressions:()=>TK,drawFaceLandmarks:()=>AK});r({},{computeReshapedDimensions:()=>sq,getCenterPoint:()=>iq,isDimensions:()=>aq,isEven:()=>nq,isFloat:()=>tq,isTensor:()=>Yj,isTensor1D:()=>Zj,isTensor2D:()=>Jj,isTensor3D:()=>Qj,isTensor4D:()=>eq,isValidNumber:()=>lq,isValidProbablitiy:()=>uq,range:()=>oq,round:()=>rq});var Xj=class{constructor(e,t){if(!lq(e)||!lq(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new Xj(1/this.width,1/this.height)}};function Yj(e,t){return e instanceof Va&&e.shape.length===t}function Zj(e){return Yj(e,1)}function Jj(e){return Yj(e,2)}function Qj(e){return Yj(e,3)}function eq(e){return Yj(e,4)}function tq(e){return e%1!=0}function nq(e){return e%2==0}function rq(e,t=2){let n=10**t;return Math.floor(e*n)/n}function aq(e){return e&&e.width&&e.height}function sq({width:e,height:t},n){let r=n/Math.max(t,e);return new Xj(Math.round(e*r),Math.round(t*r))}function iq(e){return e.reduce(((e,t)=>e.add(t)),new hq(0,0)).div(new hq(e.length,e.length))}function oq(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function lq(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function uq(e){return lq(e)&&e>=0&&e<=1}var hq=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new hq(this.x+e.x,this.y+e.y)}sub(e){return new hq(this.x-e.x,this.y-e.y)}mul(e){return new hq(this.x*e.x,this.y*e.y)}div(e){return new hq(this.x/e.x,this.y/e.y)}abs(){return new hq(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new hq(Math.floor(this.x),Math.floor(this.y))}},pq=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(lq)}static assertIsValidBox(e,t,n=!1){if(!pq.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(lq),a=[n.x,n.y,n.width,n.height].every(lq);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];pq.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new hq(this.left,this.top)}get topRight(){return new hq(this.right,this.top)}get bottomLeft(){return new hq(this.left,this.bottom)}get bottomRight(){return new hq(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new pq({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new pq({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new pq({x:e,y:t,width:n,height:r})}rescale(e){let t=aq(e)?e.width:e,n=aq(e)?e.height:e;return new pq({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new pq({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new pq({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new pq({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new pq({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},dq=class extends pq{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},cq=class{constructor(e,t,n,r,a){this._imageDims=new Xj(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new pq(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new pq(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new cq(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},fq=class extends cq{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new fq(n,r,a)}};function mq(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function gq(e,t){return to((()=>{let[n,r,a]=t,s=fh([...e.shape.slice(0,3),1],n,"float32"),i=fh([...e.shape.slice(0,3),1],r,"float32"),o=fh([...e.shape.slice(0,3),1],a,"float32"),l=tu([s,i,o],3);return zh(e,l)}))}function yq(e){return 1/(1+Math.exp(-e))}var bq,xq=class extends pq{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},vq=class{constructor(e,t,n=new hq(0,0)){let{width:r,height:a}=t;this._imgDims=new Xj(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new hq(r,a)).add(n)))}get shift(){return new hq(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new hq(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new hq(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof fq?e.box.floor():new pq(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=iq(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new xq(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=function(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new dq(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},wq=class extends vq{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(iq)}},kq=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${rq(this.distance)})`:""}`}},Iq=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new Iq(e.label,t)}};function Sq(e){return e.detection instanceof fq}function Nq(e,t){return{...e,detection:t}}function Tq(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Cq(){return"object"==typeof a.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function _q(e){let t="";if(!e&&Cq())try{e=n("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function Eq(){let e=a.g.Canvas||a.g.HTMLCanvasElement,t=a.g.Image||a.g.HTMLImageElement,n=a.g.Video||a.g.HTMLVideoElement,r=a.g.fetch,s=_q();return{Canvas:e||class{},CanvasRenderingContext2D:a.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:a.g.ImageData||class{},Video:a.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...s}}function $q(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function Aq(e){bq=e}function Fq(){return $q()?Aq(Tq()):Cq()?Aq(Eq()):null}var Rq={getEnv:function(){if(!bq)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return bq},setEnv:Aq,initialize:Fq,createBrowserEnv:Tq,createFileSystem:_q,createNodejsEnv:Eq,monkeyPatch:function(e){if(bq||Fq(),!bq)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=bq.Canvas,Image:n=bq.Image}=e;bq.Canvas=t,bq.Image=n,bq.createCanvasElement=e.createCanvasElement||(()=>new t),bq.createImageElement=e.createImageElement||(()=>new n),bq.ImageData=e.ImageData||bq.ImageData,bq.Video=e.Video||bq.Video,bq.fetch=e.fetch||bq.fetch,bq.readFile=e.readFile||bq.readFile},isBrowser:$q,isNodejs:Cq};function Dq(e){return Rq.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function Mq(e){let{Canvas:t,CanvasRenderingContext2D:n}=Rq.getEnv();if(e instanceof n)return e;let r=Dq(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}Fq();var Oq,Lq=((Oq=Lq||{}).TOP_LEFT="TOP_LEFT",Oq.TOP_RIGHT="TOP_RIGHT",Oq.BOTTOM_LEFT="BOTTOM_LEFT",Oq.BOTTOM_RIGHT="BOTTOM_RIGHT",Oq),zq=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},Pq=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof Pq?e.text:e,this.anchor=t,this.options=new zq(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=Dq(e),n=Mq(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},Bq=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new zq({...s,...a})}},Wq=class{constructor(e,t={}){this.box=new pq(e),this.options=new Bq(t)}draw(e){let t=Mq(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new Pq([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function Vq(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof fq?t.score:Sq(t)?t.detection.score:void 0,r=t instanceof fq?t.box:Sq(t)?t.detection.box:new pq(t),a=n?`${rq(n)}`:void 0;new Wq(r,{label:a}).draw(e)}))}function Uq(e){let{Image:t,Video:n}=Rq.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function Gq(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=Rq.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function Hq(e){let{Image:t,Video:n}=Rq.getEnv();return e instanceof t?new Xj(e.naturalWidth,e.naturalHeight):e instanceof n?new Xj(e.videoWidth,e.videoHeight):new Xj(e.width,e.height)}function jq({width:e,height:t}){let{createCanvasElement:n}=Rq.getEnv(),r=n();return r.width=e,r.height=t,r}function qq(e,t){let{ImageData:n}=Rq.getEnv();if(!(e instanceof n||Uq(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||Hq(e),s=jq({width:r,height:a});return e instanceof n?Mq(s).putImageData(e,0,0):Mq(s).drawImage(e,0,0,r,a),s}function Kq(e){let{Image:t,Canvas:n,Video:r}=Rq.getEnv();return e instanceof t||e instanceof n||e instanceof r}var Xq=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(Qj(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(eq(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof Rq.getEnv().Canvas?e:qq(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return oq(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return sq({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,to((()=>{let n=oq(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof Va){let n=eq(r)?r:hh(r);return n=function(e,t=!1){return to((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,fh(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>wi(e,"float32")));return tu(h,i)}))}(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=zc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof Rq.getEnv().Canvas)return No.fromPixels(function(e,t,n=!1){let{Image:r,Canvas:a}=Rq.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return jq({width:1,height:1});let s=Hq(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=jq({width:t,height:t}),h=e instanceof a?e:qq(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&Mq(u).drawImage(h,d,c,o,l),u}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return rd(n.map((e=>wi(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function Yq(e){if(e instanceof Xq)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(Dq);return r.forEach(((e,r)=>{if(!Kq(e)&&!Qj(e)&&!eq(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(eq(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>Kq(e)&&function(e){return new Promise(((t,n)=>{function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof Rq.getEnv().Canvas||Uq(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}(e)))),new Xq(r,Array.isArray(e))}async function Zq(e,t){let{Canvas:n}=Rq.getEnv(),r=e;if(!(e instanceof n)){let t=await Yq(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await async function(e,t){let n=t||Rq.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(eq(e)?1:0),i=to((()=>e.as3D(r,a,s).toInt()));return await No.toPixels(i,n),i.dispose(),n}(a)}let a=Mq(r);return t.map((e=>e instanceof fq?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=jq({width:n,height:r});return n>0&&r>0&&Mq(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function Jq(e,t){if(!Qj(e)&&!eq(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(eq(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return to((()=>{let[n,r,a]=e.shape.slice(eq(e)?1:0);return t.map((e=>e instanceof fq?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>qp(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function Qq(e,t){let{fetch:n}=Rq.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function eK(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function tK(e,t){let{manifestUri:n,modelBaseUri:r}=eK(e,t),a=await async function(e){return(await Qq(e)).json()}(n);return Si.loadWeights(a,r)}function nK(e,t,n=!1){let{width:r,height:a}=n?Hq(t):t;return e.width=r,e.height=a,{width:r,height:a}}var rK=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Ga))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Ga)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=Cs(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await tK(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=Rq.getEnv(),{manifestUri:n,modelBaseUri:r}=eK(e,this.getDefaultModelName()),a=Si.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Va))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function aK(e,t,n){return to((()=>{let r=Bp(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=wl(r,t.bias),r}))}function sK(e,t,n=!1){return to((()=>{let r=$p(n?wl(wu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):aK(e,t.conv0,[2,2])),a=aK(r,t.conv1,[1,1]),s=aK($p(wl(r,a)),t.conv2,[1,1]);return $p(wl(r,wl(a,s)))}))}function iK(e,t,n=!1,r=!0){return to((()=>{let a=$p(n?wl(wu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):aK(e,t.conv0,r?[2,2]:[1,1])),s=aK(a,t.conv1,[1,1]),i=aK($p(wl(a,s)),t.conv2,[1,1]),o=aK($p(wl(a,wl(s,i))),t.conv3,[1,1]);return $p(wl(a,wl(s,wl(i,o))))}))}function oK(e,t,n="same",r=!1){return to((()=>{let a=wl(wu(e,t.filters,[1,1],n),t.bias);return r?$p(a):a}))}function lK(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function uK(e,t){return(n,r,a,s)=>{let i=ud(e(n*r*a*a),[a,a,n,r]),o=od(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function hK(e,t){return(n,r,a)=>{let s=ld(e(n*r),[n,r]),i=od(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var pK=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function dK(e,t){return(n,r,a)=>{let s=ud(e(9*n),[3,3,n,1]),i=ud(e(n*r),[1,1,n,r]),o=od(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new pK(s,i,o)}}function cK(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new pK(n,r,a)}}function fK(e,t){return(n,r,a)=>{let s=e[n];if(!Yj(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function mK(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function gK(e,t){let n=uK(e,t),r=dK(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function yK(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function bK(e,t){let n=fK(e,t),r=yK(n),a=cK(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var xK=class extends rK{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return to((()=>{let n=iK(gq(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=iK(n,t.dense1),n=iK(n,t.dense2),n=iK(n,t.dense3),n=Ql(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await Yq(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=bK(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return lK(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=mK(e),{extractDenseBlock4Params:a}=gK(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function vK(e,t){return to((()=>wl(Hi(e,t.weights),t.bias)))}function wK(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var kK=class extends rK{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return to((()=>{let n=e instanceof Xq?this.faceFeatureExtractor.forwardInput(e):e;return vK(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=mK(e),i=hK(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=wK(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=fK(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return lK(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},IK=["neutral","happy","sad","angry","fearful","disgusted","surprised"],SK=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);IK.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return IK.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function NK(e,t){return{...e,expressions:t}}function TK(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof SK?t:function(e){return e.expressions instanceof SK}(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=Sq(t)?t.detection.box.bottomLeft:r||new hq(0,0);new Pq(s.map((e=>`${e.expression} (${rq(e.probability)})`)),i).draw(e)}))}function CK(e){return Sq(e)&&e.landmarks instanceof vq&&e.unshiftedLandmarks instanceof vq&&e.alignedRect instanceof fq}function _K(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new fq(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;let r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var EK=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},$K=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new EK(t)}draw(e){let t=Mq(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof wq&&(t.strokeStyle=s,t.lineWidth=a,Kj(t,this.faceLandmarks.getJawOutline()),Kj(t,this.faceLandmarks.getLeftEyeBrow()),Kj(t,this.faceLandmarks.getRightEyeBrow()),Kj(t,this.faceLandmarks.getNose()),Kj(t,this.faceLandmarks.getLeftEye(),!0),Kj(t,this.faceLandmarks.getRightEye(),!0),Kj(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function AK(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof vq?t:CK(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new $K(n).draw(e)}))}function FK(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=mK(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=uK(e,t),r=dK(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},h={};oq(t,0,1).forEach((e=>{h[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let p={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:h,exit_flow:p}}}function RK(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=fK(e,t),r=yK(n),a=cK(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};oq(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return lK(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function DK(e,t,n){return wl(wu(e,t.filters,n,"same"),t.bias)}function MK(e,t,n=!0){let r=n?$p(e):e;return r=aK(r,t.separable_conv0,[1,1]),r=aK($p(r),t.separable_conv1,[1,1]),r=Kh(r,[3,3],[2,2],"same"),r=wl(r,DK(e,t.expansion_conv,[2,2])),r}var OK=class extends rK{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return to((()=>{let n=gq(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=$p(DK(n,t.entry_flow.conv_in,[2,2]));return r=MK(r,t.entry_flow.reduction_block_0,!1),r=MK(r,t.entry_flow.reduction_block_1),oq(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=aK($p(e),t.separable_conv0,[1,1]);return n=aK($p(n),t.separable_conv1,[1,1]),n=aK($p(n),t.separable_conv2,[1,1]),n=wl(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=MK(r,t.exit_flow.reduction_block),r=$p(aK(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await Yq(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return RK(e,this._numMainBlocks)}extractParams(e){return FK(e,this._numMainBlocks)}};var LK,zK=((LK=zK||{}).FEMALE="female",LK.MALE="male",LK),PK=class extends kK{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return to((()=>{let n=(e,t)=>rd([fh([68],e,"float32"),fh([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(fh([a,136],t,"float32")).sub(rd(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(rd(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return to((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await Yq(e))}async detectLandmarks(e){let t=await Yq(e),n=to((()=>gd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>nq(t))),s=r.filter(((e,t)=>!nq(t)));return new wq(Array(68).fill(0).map(((e,t)=>new hq(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},BK=class extends PK{constructor(e=new xK){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var WK=class extends rK{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return to((()=>{let n=sK(gq(wi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=sK(n,t.dense1),n=sK(n,t.dense2),n=Ql(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await Yq(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=bK(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return lK(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=mK(e),{extractDenseBlock3Params:a}=gK(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function VK(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=wu(e,s,n,a);return o=wl(o,i),o=function(e,t){return wl(Sl(e,t.weights),t.biases)}(o,t.scale),r?$p(o):o}function UK(e,t){return VK(e,t,[1,1],!1)}function GK(e,t){return VK(e,t,[2,2],!0,"valid")}function HK(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(tq(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return to((()=>bo(ud(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=od(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=od(e(n)),s=od(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function jK(e,t){let n=fK(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function qK(e,t){let n=function(e,t){return VK(e,t,[1,1],!0)}(e,t.conv1);return n=UK(n,t.conv2),n=wl(n,e),n=$p(n),n}function KK(e,t){let n=GK(e,t.conv1);n=UK(n,t.conv2);let r=Ql(e,2,2,"valid"),a=Qh(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Qh(e);n=tu([n,t],1);let r=[...n.shape];r[2]=1;let a=Qh(r);n=tu([n,a],2)}return r=s?tu([r,a],3):r,n=wl(r,n),n=$p(n),n}var XK=class extends rK{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return to((()=>{let n=GK(gq(wi(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Kh(n,3,2,"valid"),n=qK(n,t.conv32_1),n=qK(n,t.conv32_2),n=qK(n,t.conv32_3),n=KK(n,t.conv64_down),n=qK(n,t.conv64_1),n=qK(n,t.conv64_2),n=qK(n,t.conv64_3),n=KK(n,t.conv128_down),n=qK(n,t.conv128_1),n=qK(n,t.conv128_2),n=KK(n,t.conv256_down),n=qK(n,t.conv256_1),n=qK(n,t.conv256_2),n=KK(n,t.conv256_down_out);let r=n.mean([1,2]);return Hi(r,t.fc)}))}async forward(e){return this.forwardInput(await Yq(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await Yq(e),r=to((()=>gd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=jK(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!Jj(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return lK(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=mK(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=HK(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=to((()=>bo(ld(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function YK(e,t){return{...e,descriptor:t}}function ZK(e,t){return{...e,age:t}}function JK(e,t,n){return{...e,gender:t,genderProbability:n}}function QK(e,t){function n(n,r,a,s,i){let o=ud(e(n*r*a*a),[a,a,n,r]),l=od(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=ud(e(9*n),[3,3,n,1]),s=od(e(n)),i=od(e(n)),o=od(e(n)),l=od(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function eX(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=fK(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Qj(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return lK(e,t),{params:s,paramMappings:t}}function tX(e,t,n){return to((()=>{let r=wu(e,t.filters,n,"same");return r=wl(r,t.batch_norm_offset),gu(r,0,6)}))}function nX(e,t){return to((()=>{let n,r=tX(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return to((()=>{let r=Du(e,t.filters,n,"same");return r=lu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),gu(r,0,6)}))}(r,e.depthwise_conv,s),r=tX(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function rX(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function aX(e,t){let{sizes:n,centers:r}=function(e){let t=gd(bo(e,[1,0])),n=[zh(t[2],t[0]),zh(t[3],t[1])];return{sizes:n,centers:[wl(t[0],Il(n[0],2)),wl(t[1],Il(n[1],2))]}}(e),a=gd(bo(t,[1,0])),s=Il(Sl(uh(Il(a[2],5)),n[0]),2),i=wl(Sl(Il(a[0],10),n[0]),r[0]),o=Il(Sl(uh(Il(a[3],5)),n[1]),2),l=wl(Sl(Il(a[1],10),n[1]),r[1]);return bo(rd([zh(i,s),zh(l,o),wl(i,s),wl(l,o)]),[1,0])}function sX(e,t){return to((()=>{let n=e.shape[0];return{boxPredictionEncoding:Jl(oK(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Jl(oK(e,t.class_predictor),[n,-1,3])}}))}var iX=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},oX=class extends rK{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return to((()=>{let n=wi(e.toBatchTensor(512,!1),"float32"),r=nX(zh(Il(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return to((()=>{let r=tX(e,n.conv_0,[1,1]),a=tX(r,n.conv_1,[2,2]),s=tX(a,n.conv_2,[1,1]),i=tX(s,n.conv_3,[2,2]),o=tX(i,n.conv_4,[1,1]),l=tX(o,n.conv_5,[2,2]),u=tX(l,n.conv_6,[1,1]),h=tX(u,n.conv_7,[2,2]),p=sX(t,n.box_predictor_0),d=sX(e,n.box_predictor_1),c=sX(a,n.box_predictor_2),f=sX(i,n.box_predictor_3),m=sX(l,n.box_predictor_4),g=sX(h,n.box_predictor_5);return{boxPredictions:tu([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:tu([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return to((()=>{let r=e.shape[0],a=aX(Jl(dh(n.extra_dim,[r,1,1]),[-1,4]),Jl(e,[-1,4]));a=Jl(a,[r,a.shape[0]/r,4]);let s=nu(ru(t,[0,0,1],[-1,-1,-1])),i=ru(s,[0,0,0],[-1,-1,1]);return i=Jl(i,[r,i.shape[1]]),{boxes:gd(a),scores:gd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await Yq(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new iX(t),a=await Yq(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(l.dataSync()),h=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=rX(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new fq(u[e],new xq(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return eX(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=mK(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=QK(n,t),i=a(),o=s(),l={extra_dim:To(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};var lX=[new hq(.738768,.874946),new hq(2.42204,2.65704),new hq(4.30971,7.04493),new hq(10.246,4.59428),new hq(12.6868,11.8741)],uX=[new hq(1.603231,2.094468),new hq(6.041143,7.080126),new hq(2.882459,3.518061),new hq(4.266906,5.178857),new hq(9.041765,10.66308)],hX=[117.001,114.697,97.404],pX=e=>"number"==typeof e;function dX(e){return to((()=>{let t=Sl(e,nh(.10000000149011612));return wl($p(zh(e,t)),t)}))}function cX(e,t){return to((()=>{let n=pp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=wu(n,t.conv.filters,[1,1],"valid"),n=zh(n,t.bn.sub),n=Sl(n,t.bn.truediv),n=wl(n,t.conv.bias),dX(n)}))}function fX(e,t){return to((()=>{let n=pp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Bp(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=wl(n,t.bias),dX(n)}))}function mX(e,t){let n=uK(e,t);let r=dK(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=od(e(n)),s=od(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function gX(e,t){let n=fK(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:cK(n)}}var yX=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},bX=class extends rK{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!pX(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>pX(e.x)&&pX(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(pX)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=cX(e,t.conv0);return n=Kh(n,[2,2],[2,2],"same"),n=cX(n,t.conv1),n=Kh(n,[2,2],[2,2],"same"),n=cX(n,t.conv2),n=Kh(n,[2,2],[2,2],"same"),n=cX(n,t.conv3),n=Kh(n,[2,2],[2,2],"same"),n=cX(n,t.conv4),n=Kh(n,[2,2],[2,2],"same"),n=cX(n,t.conv5),n=Kh(n,[2,2],[1,1],"same"),n=cX(n,t.conv6),n=cX(n,t.conv7),oK(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?dX(oK(e,t.conv0,"valid",!1)):fX(e,t.conv0);return n=Kh(n,[2,2],[2,2],"same"),n=fX(n,t.conv1),n=Kh(n,[2,2],[2,2],"same"),n=fX(n,t.conv2),n=Kh(n,[2,2],[2,2],"same"),n=fX(n,t.conv3),n=Kh(n,[2,2],[2,2],"same"),n=fX(n,t.conv4),n=Kh(n,[2,2],[2,2],"same"),n=fX(n,t.conv5),n=Kh(n,[2,2],[1,1],"same"),n=t.conv6?fX(n,t.conv6):n,n=t.conv7?fX(n,t.conv7):n,oK(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return to((()=>{let r=wi(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?gq(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await Yq(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new yX(t),a=await Yq(e),s=await this.forwardInput(a,n),i=to((()=>gd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return function(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(mq(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new cq(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=gX(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return lK(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||bX.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=mK(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=mX(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),conv1:h(s,i,"conv1"),conv2:h(i,o,"conv2"),conv3:h(o,u,"conv3"),conv4:h(u,p,"conv4"),conv5:h(p,d,"conv5"),conv6:c?h(d,c,"conv6"):void 0,conv7:f?h(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,h,p,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,h,"conv4"),conv5:u(h,p,"conv5"),conv6:u(p,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=to((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?Xp(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):nh(0)]})),c=[],f=await p.array(),m=await h.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=yq(f[e][t][r][0]);if(!n||a>n){let n=(t+yq(m[e][t][r][0]))/l*i,s=(e+yq(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,h=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,p=n-u/2,f=s-h/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new dq(p,f,p+u,f+h),score:a,classScore:a*y,label:b,...g})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},xX=bX;xX.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var vX=class extends xX{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:uX,meanRgb:hX}:{anchors:lX,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new fq(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var wX=class extends yX{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},kX=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function IX(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map((e=>CK(e)?a(e):e.detection)),i=r||(t instanceof Va?await Jq(t,s):await Zq(t,s)),o=await n(i);return i.forEach((e=>e instanceof Va&&e.dispose())),o}var SX=[new hq(1.603231,2.094468),new hq(6.041143,7.080126),new hq(2.882459,3.518061),new hq(4.266906,5.178857),new hq(9.041765,10.66308)],NX=[117.001,114.697,97.404],TX=class extends xX{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:SX,meanRgb:NX,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new fq(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},CX={ssdMobilenetv1:new oX,tinyFaceDetector:new TX,tinyYolov2:new vX,faceLandmark68Net:new BK,faceLandmark68TinyNet:new class extends PK{constructor(e=new WK){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new XK,faceExpressionNet:new class extends kK{constructor(e=new xK){super("FaceExpressionNet",e)}forwardInput(e){return to((()=>Xp(this.runNet(e))))}async forward(e){return this.forwardInput(await Yq(e))}async predictExpressions(e){let t=await Yq(e),n=await this.forwardInput(t),r=await Promise.all(gd(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new SK(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends rK{constructor(e=new OK(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return to((()=>{let n=e instanceof Xq?this.faceFeatureExtractor.forwardInput(e):e,r=Ql(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:vK(r,t.fc.age).as1D(),gender:vK(r,t.fc.gender)}}))}forwardInput(e){return to((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Xp(n)}}))}async forward(e){return this.forwardInput(await Yq(e))}async predictAgeAndGender(e){let t=await Yq(e),n=await this.forwardInput(t),r=gd(n.age),a=gd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=mK(e),a=hK(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=wK(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=fK(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return lK(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},_X=class extends kX{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},EX=class extends _X{async run(){let e=await this.parentTask,t=await IX(e,this.input,(async e=>Promise.all(e.map((e=>CX.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>NK(e,t[n])))}withAgeAndGender(){return new FX(this,this.input)}},$X=class extends EX{withAgeAndGender(){return new RX(this,this.input)}withFaceDescriptors(){return new MX(this,this.input)}},AX=class extends kX{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},FX=class extends AX{async run(){let e=await this.parentTask,t=await IX(e,this.input,(async e=>Promise.all(e.map((e=>CX.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return ZK(JK(e,a,s),r)}))}withFaceExpressions(){return new EX(this,this.input)}},RX=class extends FX{withFaceExpressions(){return new $X(this,this.input)}withFaceDescriptors(){return new MX(this,this.input)}},DX=class extends kX{constructor(e,t){super(),this.parentTask=e,this.input=t}},MX=class extends DX{async run(){let e=await this.parentTask;return(await IX(e,this.input,(e=>Promise.all(e.map((e=>CX.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>YK(e[n],t)))}withFaceExpressions(){return new $X(this,this.input)}withAgeAndGender(){return new RX(this,this.input)}},OX=class extends kX{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?CX.faceLandmark68TinyNet:CX.faceLandmark68Net}},LX=class extends OX{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Va?await Jq(this.input,t):await Zq(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Va&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>_K(e,r[t])))}withFaceExpressions(){return new $X(this,this.input)}withAgeAndGender(){return new RX(this,this.input)}withFaceDescriptors(){return new MX(this,this.input)}},zX=class extends kX{constructor(e,t=new iX){super(),this.input=e,this.options=t}},PX=class extends zX{async run(){let e,{input:t,options:n}=this;if(n instanceof wX)e=CX.tinyFaceDetector.locateFaces(t,n);else if(n instanceof iX)e=CX.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof yX))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=CX.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>Nq({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new LX(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new EX(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new FX(this.runAndExtendWithFaceDetections(),this.input)}};function BX(e,t=new iX){return new PX(e,t)}var WX=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof Iq)return e;if(e instanceof Float32Array)return new Iq(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new Iq(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>function(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new kq(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new kq("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>Iq.fromJSON(e)));return new WX(t,e.distanceThreshold)}};function VX(e,t){let{width:n,height:r}=new Xj(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>VX(e,{width:n,height:r})));if(CK(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return _K(Nq(e,t),a)}return Sq(e)?Nq(e,e.detection.forSize(n,r)):e instanceof vq||e instanceof fq?e.forSize(n,r):e}function UX(e){switch(e.toLowerCase().trim()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function GX(e,t,n,r){const a=e.location.search,s=new URLSearchParams(a);for(const[e,t]of s)"number"==typeof n[e]?n[e]=parseInt(t,10):"boolean"==typeof n[e]?n[e]=UX(t):n[e]=t;"serviceWorker"in navigator&&(navigator.serviceWorker.register("./sw.js",{scope:"./"}).then((function(e){t.querySelector("footer").classList.remove("hidden")})).catch((function(e){})),function(e,t,n){const r=t.getElementById("butInstall");if(!r)return;let a;r.addEventListener("click",(e=>{r.classList.add("hidden"),a.prompt(),a.userChoice.then((e=>{}))})),e.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),a=e,n&&n.showInstall&&r.classList.remove("hidden")}))}(e,t,n)),r(e,t,n)}!function(e,t,n,r){!function(e,t,n,r,a){"loading"!==n.readyState?e(t,n,r,a):n.addEventListener("DOMContentLoaded",(function(s){e(t,n,r,a)}))}(GX,e,t,n,r)}(window,document,{modes:["yandexlavka","default"],mode:"yandexlavka",sound:!1},(function(e,t,n){const r=t.getElementById("imageUpload"),s=t.getElementById("video"),i=t.querySelector(".video_container"),o=t.querySelector(".image_container"),l=t.querySelector(".start_video"),u=t.querySelector(".main_header"),h=t.querySelector("footer"),p=t.querySelector(".processing");let d=null,c=function(){const e={unknown:"Хер с горы",petr:"Петруччо",serg:"Серж",sava:"Чемонин",lenya:"Лёня",chern:"Не лох",boys:"ЧернRк",glider:"Шурик"};return{convert:function(t,n){const r=e[t];return r?n&&"female"===n.gender&&"unknown"===t?"Незнакомка":r:t}}}();if(n.modes.includes(n.mode)&&"default"!==n.mode){let e=null;"diagnosis"===n.mode||"ira"===n.mode?e=a.e(967).then(a.bind(a,967)):"planeta"===n.mode?e=a.e(590).then(a.bind(a,590)):"max"===n.mode?e=a.e(352).then(a.bind(a,352)):"cat"===n.mode?e=a.e(833).then(a.bind(a,833)):"meshok"===n.mode?e=a.e(753).then(a.bind(a,753)):"yandexlavka"===n.mode?e=a.e(802).then(a.bind(a,802)):"membrana"===n.mode&&(e=a.e(327).then(a.bind(a,327))),e&&e.then((e=>{u.innerText=e.default.header,c=e.default.nameConvertor}))}let f="default";async function m(){i.classList.remove("hidden"),h.classList.add("hidden"),d&&clearInterval(d);const e={video:!0};try{navigator.mediaDevices.getUserMedia(e).then((function(e){s.srcObject=e})).catch((function(e){}))}catch(e){}}n.modes.includes(n.mode)&&(f=n.mode),Promise.all([async function(e){try{return(await fetch("/models/"+e+".json")).json()}catch(e){return(await fetch("/models/default.json")).json()}}(f),CX.faceRecognitionNet.loadFromUri("/models"),CX.faceLandmark68Net.loadFromUri("/models"),CX.ageGenderNet.loadFromUri("/models"),CX.ssdMobilenetv1.loadFromUri("/models")]).then((async function(e){const t=WX.fromJSON(e[0]);let n=null,a=null,u=null;function f(e,n){e.map((e=>t.findBestMatch(e.descriptor))).forEach(((t,r)=>{if(e.length>7&&"unknown"===t.label)return;const a=e[r],s=c.convert(t.label,a);if("unknown"!==s){new qj.DrawBox(a.detection.box,{label:s}).draw(n)}}))}r.addEventListener("click",(()=>{i.classList.remove("hidden"),h.classList.add("hidden")})),r.addEventListener("change",(async()=>{p.classList.remove("hidden"),n&&n.remove(),a&&a.remove(),n=await Gq(r.files[0]),o.append(n),a=qq(n),o.append(a);const e={width:n.width,height:n.height};nK(a,e);const t=VX(await BX(n).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),e);p.classList.add("hidden"),requestAnimationFrame((()=>{f(t,a)}))})),l.addEventListener("click",m),s.addEventListener("playing",(()=>{u&&u.remove();const e=qq(s);i.append(e),u=e;const t={width:s.getBoundingClientRect().width,height:s.getBoundingClientRect().height};nK(e,t),d&&clearInterval(d),d=setInterval((async()=>{const n=VX(await BX(s).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),t);e.getContext("2d").clearRect(0,0,e.width,e.height),f(n,e)}),300)}))}))}))})()})();