(()=>{var e,t,n={383:()=>{},614:()=>{},509:()=>{}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return n[e](s,s.exports,a),s.exports}a.m=n,a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+"."+{328:"edfe5a9a6486e9d9dec3",352:"3a3c6869f86c6ee240a5",387:"aefa56770dd24ac76b80",483:"6cb5e34b9ac4ce0eed7b",590:"5004a6c505a36744a40a",833:"c5be55c62d9166a638e5",967:"8dce5fcbaa5c0d665821"}[e]+".min.js",a.miniCssF=e=>{},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="nedanila:",a.l=(n,r,s,i)=>{if(e[n])e[n].push(r);else{var o,u;if(void 0!==s)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var h=l[c];if(h.getAttribute("src")==n||h.getAttribute("data-webpack")==t+s){o=h;break}}o||(u=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=n),e[n]=[r];var p=(t,r)=>{o.onerror=o.onload=null,clearTimeout(d);var a=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),t)return t(r)},d=setTimeout(p.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=p.bind(null,o.onerror),o.onload=p.bind(null,o.onload),u&&document.head.appendChild(o)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=s);var i=a.p+a.u(t),o=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,s,[i,o,u]=n,l=0;for(r in o)a.o(o,r)&&(a.m[r]=o[r]);if(u)u(a);for(t&&t(n);l<i.length;l++)s=i[l],a.o(e,s)&&e[s]&&e[s][0](),e[i[l]]=0},n=self.webpackChunknedanila=self.webpackChunknedanila||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e="/index.js",t=Object.defineProperty,n=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})};n({},{Abs:()=>We,Acos:()=>Ve,Acosh:()=>Ue,AdadeltaOptimizer:()=>Hp,AdagradOptimizer:()=>jp,AdamOptimizer:()=>qp,AdamaxOptimizer:()=>Kp,Add:()=>Ge,AddN:()=>He,All:()=>je,Any:()=>qe,ArgMax:()=>Ke,ArgMin:()=>Xe,Asin:()=>Ye,Asinh:()=>Je,Atan:()=>Ze,Atan2:()=>et,Atanh:()=>Qe,AvgPool:()=>tt,AvgPool3D:()=>rt,AvgPool3DGrad:()=>at,AvgPoolGrad:()=>nt,BackendWasm:()=>kW,BatchMatMul:()=>st,BatchToSpaceND:()=>it,Bincount:()=>ot,BroadcastTo:()=>ut,Callback:()=>Xk,CallbackList:()=>By,Cast:()=>lt,Ceil:()=>ct,ClipByValue:()=>ht,Complex:()=>pt,ComplexAbs:()=>dt,Concat:()=>ft,Conv2D:()=>mt,Conv2DBackpropFilter:()=>gt,Conv2DBackpropInput:()=>yt,Conv3D:()=>bt,Conv3DBackpropFilterV2:()=>xt,Conv3DBackpropInputV2:()=>vt,Cos:()=>wt,Cosh:()=>kt,CropAndResize:()=>Nt,Cumsum:()=>It,CustomCallback:()=>Uy,DataStorage:()=>z,DenseBincount:()=>St,DepthToSpace:()=>Ct,DepthwiseConv2dNative:()=>Tt,DepthwiseConv2dNativeBackpropFilter:()=>_t,DepthwiseConv2dNativeBackpropInput:()=>Et,Diag:()=>$t,Dilation2D:()=>At,Dilation2DBackpropFilter:()=>Rt,Dilation2DBackpropInput:()=>Ft,ENV:()=>Le,EarlyStopping:()=>Zk,Einsum:()=>Mt,Elu:()=>Ot,EluGrad:()=>zt,Environment:()=>De,Equal:()=>Pt,Erf:()=>Lt,Exp:()=>Bt,ExpandDims:()=>Wt,Expm1:()=>Vt,FFT:()=>Ut,Fill:()=>Gt,FlipLeftRight:()=>Ht,Floor:()=>jt,FloorDiv:()=>qt,FromPixels:()=>Or,FusedBatchNorm:()=>Kt,FusedConv2D:()=>Pr,FusedDepthwiseConv2D:()=>Br,GatherNd:()=>Yt,GatherV2:()=>Xt,GraphModel:()=>_N,Greater:()=>Jt,GreaterEqual:()=>Zt,History:()=>Vy,IFFT:()=>en,Identity:()=>Qt,Imag:()=>tn,InputSpec:()=>Cy,IsFinite:()=>nn,IsInf:()=>rn,IsNan:()=>an,KernelBackend:()=>L,LRN:()=>gn,LRNGrad:()=>yn,LayerVariable:()=>Iy,LayersModel:()=>Zb,LeakyRelu:()=>sn,Less:()=>on,LessEqual:()=>un,LinSpace:()=>ln,Log:()=>cn,Log1p:()=>hn,LogSoftmax:()=>mn,LogicalAnd:()=>pn,LogicalNot:()=>dn,LogicalOr:()=>fn,Max:()=>bn,MaxPool:()=>vn,MaxPool3D:()=>kn,MaxPool3DGrad:()=>In,MaxPoolGrad:()=>wn,MaxPoolWithArgmax:()=>Nn,Maximum:()=>xn,Mean:()=>Sn,Min:()=>Cn,Minimum:()=>Tn,MirrorPad:()=>_n,Mod:()=>En,MomentumOptimizer:()=>Yp,Multinomial:()=>$n,Multiply:()=>An,Neg:()=>Fn,NonMaxSuppressionV3:()=>Dn,NonMaxSuppressionV4:()=>Mn,NonMaxSuppressionV5:()=>On,NotEqual:()=>Rn,OP_SCOPE_SUFFIX:()=>Za,OneHot:()=>Ln,OnesLike:()=>zn,Optimizer:()=>Gp,Pack:()=>Pn,PadV2:()=>Bn,Pool:()=>Wn,Pow:()=>Vn,Prelu:()=>Un,Prod:()=>Gn,RMSPropOptimizer:()=>Jp,RNN:()=>sv,Range:()=>Hn,Rank:()=>ba,Real:()=>jn,RealDiv:()=>Dt,Reciprocal:()=>qn,Reduction:()=>Np,Relu:()=>Kn,Relu6:()=>er,Reshape:()=>Xn,ResizeBilinear:()=>Zn,ResizeBilinearGrad:()=>Qn,ResizeNearestNeighbor:()=>Yn,ResizeNearestNeighborGrad:()=>Jn,Reverse:()=>tr,RotateWithOffset:()=>zr,Round:()=>nr,Rsqrt:()=>rr,SGDOptimizer:()=>Xp,ScatterNd:()=>ar,Select:()=>sr,Selu:()=>ir,Sequential:()=>nx,Sigmoid:()=>hr,Sign:()=>cr,Sin:()=>ur,Sinh:()=>lr,Slice:()=>or,Softmax:()=>yr,Softplus:()=>pr,SpaceToBatchND:()=>mr,SparseFillEmptyRows:()=>br,SparseReshape:()=>xr,SparseToDense:()=>vr,SplitV:()=>gr,Sqrt:()=>dr,Square:()=>kr,SquaredDifference:()=>wr,Step:()=>Mr,StridedSlice:()=>Ir,Sub:()=>Nr,Sum:()=>fr,SymbolicTensor:()=>Ty,Tan:()=>Sr,Tanh:()=>Cr,Tensor:()=>ma,TensorBuffer:()=>pa,Tile:()=>Tr,TopK:()=>_r,Transform:()=>Er,Transpose:()=>$r,Unique:()=>Ar,Unpack:()=>Fr,UnsortedSegmentSum:()=>Rr,Variable:()=>ya,ZerosLike:()=>Dr,_FusedMatMul:()=>Lr,abs:()=>zo,acos:()=>Lo,acosh:()=>Po,add:()=>Ro,addN:()=>Bo,all:()=>Wo,any:()=>Vo,argMax:()=>Uo,argMin:()=>Go,asin:()=>Ho,asinh:()=>jo,atan:()=>qo,atan2:()=>Ko,atanh:()=>Xo,avgPool:()=>cu,avgPool3d:()=>hu,backend:()=>Ao,backend_util:()=>nd,basicLSTMCell:()=>gu,batchNorm:()=>bu,batchNorm2d:()=>xu,batchNorm3d:()=>vu,batchNorm4d:()=>wu,batchToSpaceND:()=>yu,bincount:()=>ku,booleanMaskAsync:()=>Ch,broadcastTo:()=>Iu,browser:()=>bi,buffer:()=>js,callbacks:()=>nI,cast:()=>qs,ceil:()=>Nu,clipByValue:()=>Su,clone:()=>Ks,complex:()=>es,concat:()=>pu,concat1d:()=>Cu,concat2d:()=>Tu,concat3d:()=>_u,concat4d:()=>Eu,constraints:()=>im,conv1d:()=>Au,conv2d:()=>$u,conv2dTranspose:()=>Ru,conv3d:()=>Du,conv3dTranspose:()=>Ou,copyRegisteredKernels:()=>Yr,cos:()=>zu,cosh:()=>Lu,cosineWindow:()=>Mh,cumsum:()=>Pu,customGrad:()=>_l,data:()=>AN,denseBincount:()=>Bu,deprecationWarn:()=>mo,depthToSpace:()=>Wu,depthwiseConv2d:()=>Vu,deregisterOp:()=>iI,device_util:()=>Ua,diag:()=>Uu,dilation2d:()=>Gu,disableDeprecationWarnings:()=>fo,dispose:()=>wo,disposeVariables:()=>go,div:()=>Mo,divNoNan:()=>Ju,dot:()=>Zu,dropout:()=>Rh,einsum:()=>Qu,elu:()=>el,enableDebugMode:()=>po,enableProdMode:()=>ho,enclosingPowerOfTwo:()=>Dh,engine:()=>yo,env:()=>Oe,equal:()=>Ku,erf:()=>tl,exp:()=>nl,expandDims:()=>rl,expm1:()=>al,eye:()=>il,fft:()=>th,fill:()=>ol,findBackend:()=>_o,findBackendFactory:()=>Eo,floor:()=>ul,floorDiv:()=>Do,fused:()=>zh,gather:()=>ll,gatherND:()=>Fh,gather_util:()=>Si,getBackend:()=>Co,getGradient:()=>Gr,getKernel:()=>Ur,getKernelsForBackend:()=>Hr,grad:()=>Il,grads:()=>Nl,greater:()=>cl,greaterEqual:()=>hl,ifft:()=>nh,imag:()=>pl,image:()=>Bp,inTopKAsync:()=>Oh,initializers:()=>jm,input:()=>ix,io:()=>Ys,irfft:()=>rh,isFinite:()=>dl,isInf:()=>fl,isNaN:()=>ml,keep:()=>ko,kernel_impls:()=>jd,layers:()=>py,leakyRelu:()=>gl,less:()=>yl,lessEqual:()=>bl,linalg:()=>Wp,linspace:()=>xl,loadGraphModel:()=>EN,loadLayersModel:()=>sx,localResponseNormalization:()=>vl,log:()=>wl,log1p:()=>kl,logSigmoid:()=>Fl,logSoftmax:()=>Ol,logSumExp:()=>Hl,logicalAnd:()=>jl,logicalNot:()=>ql,logicalOr:()=>Kl,logicalXor:()=>Xl,losses:()=>Vp,matMul:()=>di,math:()=>pi,max:()=>Rl,maxPool:()=>Yl,maxPool3d:()=>Jl,maxPoolWithArgmax:()=>Zl,maximum:()=>Ql,mean:()=>ec,memory:()=>bo,meshgrid:()=>rc,metrics:()=>_k,min:()=>ac,minimum:()=>sc,mirrorPad:()=>ic,mod:()=>oc,model:()=>rx,models:()=>Gk,moments:()=>lc,movingAverage:()=>Eh,mul:()=>Oo,multiRNNCell:()=>cc,multinomial:()=>hc,neg:()=>$l,nextFrame:()=>td,norm:()=>_h,notEqual:()=>pc,oneHot:()=>fi,ones:()=>nc,onesLike:()=>dc,op:()=>Qa,outerProduct:()=>fc,pad:()=>mc,pad1d:()=>gc,pad2d:()=>yc,pad3d:()=>bc,pad4d:()=>xc,pool:()=>wc,pow:()=>kc,prelu:()=>Ic,print:()=>Xs,prod:()=>Nc,profile:()=>xo,rand:()=>Sc,randomGamma:()=>_c,randomNormal:()=>Ec,randomUniform:()=>$c,range:()=>Ac,ready:()=>So,real:()=>Fc,reciprocal:()=>Rc,registerBackend:()=>$o,registerCallbackConstructor:()=>ox,registerGradient:()=>qr,registerKernel:()=>jr,registerOp:()=>aI,regularizers:()=>Hk,relu:()=>Dc,relu6:()=>Mc,removeBackend:()=>To,reshape:()=>lu,reverse:()=>Oc,reverse1d:()=>zc,reverse2d:()=>Lc,reverse3d:()=>Pc,reverse4d:()=>Bc,rfft:()=>sh,round:()=>Wc,rsqrt:()=>Vc,scalar:()=>Uc,scatterND:()=>$h,scatter_util:()=>Ti,selu:()=>Gc,separableConv2d:()=>Hc,sequential:()=>ax,serialization:()=>Ki,setBackend:()=>No,setPlatform:()=>Fo,setWasmPath:()=>AW,setWasmPaths:()=>FW,setdiff1dAsync:()=>jc,sigmoid:()=>du,sign:()=>qc,signal:()=>Pp,sin:()=>Kc,sinh:()=>Xc,slice:()=>fu,slice1d:()=>Yc,slice2d:()=>Jc,slice3d:()=>Zc,slice4d:()=>Qc,slice_util:()=>Ai,softmax:()=>eh,softplus:()=>Al,spaceToBatchND:()=>vc,sparse:()=>Up,sparseToDense:()=>Ah,spectral:()=>Lp,split:()=>ah,sqrt:()=>ih,square:()=>uc,squaredDifference:()=>oh,squeeze:()=>uh,stack:()=>lh,step:()=>ch,stridedSlice:()=>hh,sub:()=>Dl,sum:()=>Ml,sumOutType:()=>Aa,tan:()=>ph,tanh:()=>mu,tensor:()=>ns,tensor1d:()=>dh,tensor2d:()=>fh,tensor3d:()=>xi,tensor4d:()=>mh,tensor5d:()=>gh,tensor6d:()=>yh,tensor_util:()=>_a,test_util:()=>Zi,tidy:()=>vo,tile:()=>sl,time:()=>Io,topk:()=>bh,train:()=>Qp,transpose:()=>mi,truncatedNormal:()=>xh,unique:()=>vh,unregisterGradient:()=>Xr,unregisterKernel:()=>Kr,unsortedSegmentSum:()=>wh,unstack:()=>kh,upcastType:()=>$a,util:()=>Zr,valueAndGrad:()=>Sl,valueAndGrads:()=>Cl,variable:()=>Ih,variableGrads:()=>Tl,version:()=>qL,version_converter:()=>$N,version_core:()=>co,version_layers:()=>Sb,version_wasm:()=>RW,where:()=>Xu,whereAsync:()=>Sh,zeros:()=>tc,zerosLike:()=>Yu});var r=Object.create,s=Object.defineProperty,i=Object.getPrototypeOf,o=Object.prototype.hasOwnProperty,u=Object.getOwnPropertyNames,l=Object.getOwnPropertyDescriptor,c=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),h=(e,t)=>{for(var n in t)s(e,n,{get:t[n],enumerable:!0})},p=e=>{return((e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of u(t))o.call(e,r)||"default"===r||s(e,r,{get:()=>t[r],enumerable:!(n=l(t,r))||n.enumerable});return e})((t=s(null!=e?r(i(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0}),s(t,"__esModule",{value:!0})),e);var t},d=c((()=>{})),f=c(((e,t)=>{!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),m=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),g=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),y=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),b=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),x=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),v=c((()=>{})),w=c(((e,t)=>{!function(e,n){var r,s=this,i=256,o=n.pow(i,6),u=n.pow(2,52),l=2*u,c=255;function h(t,a,c){var h=[],y=m(f((a=1==a?{entropy:!0}:a||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,g(e)]}}():t,3),h),b=new p(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),e),(a.pass||c||function(e,t,r,a){return a&&(a.S&&d(a,b),e.state=function(){return d(b,{})}),r?(n.random=e,t):e})(x,y,"global"in a?a.global:this==n,a.state)}function p(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function d(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=h,m(n.random(),e),"object"==typeof t&&t.exports){t.exports=h;try{r=v()}catch(e){}}else"function"==typeof define&&a.amdO&&define((function(){return h}))}([],Math)})),k=c(((e,t)=>{var n=f(),r=m(),a=g(),s=y(),i=b(),o=x(),u=w();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u})),I=c(((e,t)=>{!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),N=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),C=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=c(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=c(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),E=c(((e,t)=>{!function(e,n,r){var s,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function h(t,a,c){var h=[],y=m(f((a=1==a?{entropy:!0}:a||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,a=r&&r.plugins;return[+new Date,e,a,e.screen,g(n)]}}():t,3),h),b=new p(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),n),(a.pass||c||function(e,t,n,a){return a&&(a.S&&d(a,b),e.state=function(){return d(b,{})}),n?(r.random=e,t):e})(x,y,"global"in a?a.global:this==r,a.state)}function p(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function d(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=h;try{s=v()}catch(e){}}else"function"==typeof define&&a.amdO?define((function(){return h})):r.seedrandom=h}("undefined"!=typeof self?self:e,[],Math)})),$=c(((e,t)=>{var n=I(),r=N(),a=S(),s=C(),i=T(),o=_(),u=E();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u})),A=c((()=>{})),F=c((()=>{})),R=c((()=>{})),D=c((()=>{})),M=c(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){function t(){return A.buffer!=z&&te(A.buffer),L}function n(){return A.buffer!=z&&te(A.buffer),P}function s(){return A.buffer!=z&&te(A.buffer),B}function i(){return A.buffer!=z&&te(A.buffer),W}function o(){return A.buffer!=z&&te(A.buffer),V}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var h,p={};for(h in c)c.hasOwnProperty(h)&&(p[h]=c[h]);var d=[],f=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(z=c.buffer);var v,w,k,I,N,S="";function C(e){return c.locateFile?c.locateFile(e,S):S+e}if(y){var T;S=g?F().dirname(S)+"/":"//",v=function(e,t){return I||(I=a(383)),N||(N=F()),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),G(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof cn))throw e})),process.on("unhandledRejection",we),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{T=R()}catch(e){throw e}a.g.Worker=T.Worker}else b?("undefined"!=typeof read&&(v=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(G("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?d=scriptArgs:void 0!==arguments&&(d=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.lastIndexOf("/")+1):"",y?(v=function(e,t){return I||(I=a(383)),N||(N=F()),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),G(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),w=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(a.g.performance=D().performance);var _,E=c.print||void 0,$=c.printErr||void 0;for(h in p)p.hasOwnProperty(h)&&(c[h]=p[h]);p=null,c.arguments&&(d=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(f=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(_=c.wasmBinary);var A,M,O=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var z,L,P,B,W,V,U=!1;function G(e,t){e||we("Assertion failed: "+t)}function H(e){var t=c["_"+e];return G(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function j(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);J(e,t=an(n),n)}return t},array:function(e){var t=an(e.length);return Q(e,t),t}},i=H(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=nn()),o[l]=c(r[l])):o[l]=r[l]}var h,p=i.apply(null,o);return h=p,p="string"===t?X(h):"boolean"===t?Boolean(h):h,0!==u&&rn(u),p}function q(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?H(e):function(){return j(e,t,n,arguments)}}function K(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function X(e,t){return e?K(n(),e,t):""}function Y(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function J(e,t,r){return Y(e,n(),t,r)}function Z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function Q(e,n){t().set(e,n)}function ee(e,t){return e%t>0&&(e+=t-e%t),e}function te(e){z=e,c.HEAP8=L=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=B=new Int32Array(e),c.HEAPU8=P=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=W=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=V=new Float64Array(e)}var ne,re=c.INITIAL_MEMORY||16777216;if(x)A=c.wasmMemory,z=c.buffer;else if(c.wasmMemory)A=c.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:re/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw $("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");A&&(z=A.buffer),re=z.byteLength,te(z);var ae=[],se=[],ie=[],oe=[],ue=[];function le(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)fe(c.preRun.shift());Re(ae)}}function ce(){x||Re(se)}function he(){x||Re(ie)}function pe(){}function de(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)me(c.postRun.shift());Re(ue)}}function fe(e){ae.unshift(e)}function me(e){ue.unshift(e)}x||se.push({func:function(){Vt()}});var ge=0,ye=null,be=null;function xe(e){G(!x,"addRunDependency cannot be used in a pthread worker"),ge++,c.monitorRunDependencies&&c.monitorRunDependencies(ge)}function ve(e){if(ge--,c.monitorRunDependencies&&c.monitorRunDependencies(ge),0==ge&&(null!==ye&&(clearInterval(ye),ye=null),be)){var t=be;be=null,t()}}function we(e){c.onAbort&&c.onAbort(e),$(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function ke(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var Ie="data:application/octet-stream;base64,";function Ne(e){return ke(e,Ie)}var Se="file://";function Ce(e){return ke(e,Se)}var Te="tfjs-backend-wasm-threaded-simd.wasm";function _e(e){try{if(e==Te&&_)return new Uint8Array(_);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){we(e)}}function Ee(){if(!_&&(m||g)){if("function"==typeof fetch&&!Ce(Te))return fetch(Te,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Te+"'";return e.arrayBuffer()})).catch((function(){return _e(Te)}));if(w)return new Promise((function(e,t){w(Te,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return _e(Te)}))}function $e(){var e={a:Wt};function t(e,t){var n=e.exports;if(c.asm=n,ne=c.asm.F,M=t,!x){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||ve()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Ee().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){$("failed to asynchronously prepare wasm: "+e),we(e)}))}if(x||xe(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return $("Module.instantiateWasm callback failed with error: "+e),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||Ne(Te)||Ce(Te)||"function"!=typeof fetch?r(n):fetch(Te,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return $("wasm streaming compile failed: "+e),$("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}Ne(Te)||(Te=C(Te));var Ae={9816:function(){throw"Canceled!"},9834:function(e,t){setTimeout((function(){Jt(e,t)}),0)}};function Fe(){Pe.initRuntime()}function Re(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ne.get(n)():ne.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function De(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),ln>>2),a=0;if(r==e&&Atomics.compareExchange(s(),ln>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Me(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Oe(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function ze(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}c._emscripten_futex_wake=De;var Le,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Ut(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Ut(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),tn(e,!g,1),Yt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();x&&qt()&&Kt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),De(e+0,2147483647),tn(0,0,0)},threadExit:function(e){var t=qt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(qt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Gt(t),Gt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Gt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[un>>2]=0;try{e()}finally{s()[un>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=qt()){var s=Pe.pthreads[r.targetThread];return s&&s.worker.postMessage(n.data,r.transferList),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Xt();else if("spawnThread"===a)Ot(n.data);else if("cleanupThread"===a)ze(r.thread);else if("killThread"===a)Me(r.thread);else if("cancelThread"===a)Oe(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)E("Thread "+r.threadId+": "+r.text);else if("printErr"===a)$("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{pn(r.returnCode)}catch(e){if(e instanceof cn)return;throw e}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):$("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){$("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:A,wasmModule:M})},allocateUnusedWorker:function(){var e=C("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Be(e,t){sn(e,t),rn(e)}function We(){return O}function Ve(e,t){return ne.get(e)(t)}function Ue(e,t,n,r){we("Assertion failed: "+X(e)+", at: "+[t?X(t):"unknown filename",n,r?X(r):"unknown function"])}function Ge(e,t){_main(e,t)}function He(e){return s()[Ht()>>2]=e,e}function je(e,t){if(x)return et(1,1,e,t)}function qe(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Ke(){we()}function Xe(e,t,n){var r=rt(t,n);return Ae[e].apply(null,r)}function Ye(e,t){}function Je(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),ln>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),ln>>2,0),-73;if(0==Atomics.exchange(s(),ln>>2,0))break;if(Xt(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),ln>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ze(e,t,r){n().copyWithin(e,t,t+r)}function Qe(){return y?a(614).cpus().length:navigator.hardwareConcurrency}function et(e,t){for(var n=arguments.length-2,r=nn(),a=n,s=an(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Qt(e,a,s,t);return rn(r),c}c.establishStackSpace=Be,c.getNoExitRuntime=We,c.invokeEntryPoint=Ve,Le=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var tt=[],nt=[];function rt(e,t){var r;for(nt.length=0,t>>=2;r=n()[e++];){var a=r<105;a&&1&t&&t++,nt.push(a?o()[t++>>1]:s()[t]),++t}return nt}function at(e,t,n){tt.length=t;for(var r=n>>3,a=0;a<t;a++)tt[a]=o()[r+a];return(e<0?Ae[-e-1]:Bt[e]).apply(null,tt)}function st(){return n().length}function it(e){try{return A.grow(e-z.byteLength+65535>>>16),te(A.buffer),1}catch(e){}}function ot(e){var t=st();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),it(Math.min(n,ee(Math.max(e,a),65536))))return!0}return!1}var ut={inEventHandler:0,removeAllEventListeners:function(){for(var e=ut.eventHandlers.length-1;e>=0;--e)ut._removeHandler(e);ut.eventHandlers=[],ut.deferredCalls=[]},registerRemoveEventListeners:function(){ut.removeEventListenersRegistered||(oe.push(ut.removeAllEventListeners),ut.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ut.deferredCalls){var s=ut.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ut.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ut.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ut.deferredCalls.length;++t)ut.deferredCalls[t].targetFunction==e&&(ut.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ut.inEventHandler&&ut.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ut.canPerformEventHandlerRequests())for(var e=0;e<ut.deferredCalls.length;++e){var t=ut.deferredCalls[e];ut.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target!=e||t&&t!=ut.eventHandlers[n].eventTypeString||ut._removeHandler(n--)},_removeHandler:function(e){var t=ut.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ut.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ut.inEventHandler,ut.currentEventHandler=e,ut.runDeferredCalls(),e.handlerFunc(t),ut.runDeferredCalls(),--ut.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ut.eventHandlers.push(e),ut.registerRemoveEventListeners();else for(var n=0;n<ut.eventHandlers.length;++n)ut.eventHandlers[n].target==e.target&&ut.eventHandlers[n].eventTypeString==e.eventTypeString&&ut._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=nn(),o=an(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,en(0,e,637534208,t,r,o),rn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function lt(e){var t=Z(e)+1,n=Ut(t);return J(e,n,t),n}function ct(e,t,n,r){var a=nn(),i=an(12),o=0;t&&(o=lt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,en(0,e,657457152,0,o,i),rn(a)}function ht(e,t,n,r){ct(e,t=t?X(t):"",n,r)}function pt(e){return e>2?X(e):e}var dt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ft(e){return e=pt(e),dt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function mt(e){return ft(e)}function gt(e,t,n){var r=mt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ht(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function yt(e,t,n){return x?et(2,1,e,t,n):gt(e,t,n)}function bt(e,t,n){return mt(e)?gt(e,t,n):yt(e,t,n)}function xt(e){}function vt(e,t){}function wt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function kt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function It(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function Nt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var St={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){St.lastError||(St.lastError=e)},getNewId:function(e){for(var t=St.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=X(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?St.registerContext(n,t):0},registerContext:function(e,t){var n=Ut(8);s()[n+4>>2]=qt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),St.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&St.initExtensions(r),n},makeContextCurrent:function(e){return St.currentContext=St.contexts[e],c.ctx=Et=St.currentContext&&St.currentContext.GLctx,!(e&&!Et)},getContext:function(e){return St.contexts[e]},deleteContext:function(e){St.currentContext===St.contexts[e]&&(St.currentContext=null),"object"==typeof ut&&ut.removeAllHandlersOnTarget(St.contexts[e].GLctx.canvas),St.contexts[e]&&St.contexts[e].GLctx.canvas&&(St.contexts[e].GLctx.canvas.GLctxObject=void 0),Gt(St.contexts[e].handle),St.contexts[e]=null},initExtensions:function(e){if(e||(e=St.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;wt(t),kt(t),It(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),Nt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=St.programs[e],n=St.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Et.getProgramParameter(t,35718),s=0;s<a;++s){var i=Et.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Et.getUniformLocation(t,o);if(u){var l=St.getNewId(St.uniforms);r[o]=[i.size,l],St.uniforms[l]=u;for(var c=1;c<i.size;++c){var h=o+"["+c+"]";u=Et.getUniformLocation(t,h),l=St.getNewId(St.uniforms),St.uniforms[l]=u}}}}},Ct=["default","low-power","high-performance"];function Tt(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Ct[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=mt(e);return i?a.explicitSwapControl?0:St.createContext(i,a):0}function _t(e,t){return Tt(e,t)}var Et,$t={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$t.buffers[e];0===t||10===t?((1===e?E:$)(K(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $t.varargs+=4,s()[$t.varargs-4>>2]},getStr:function(e){return X(e)},get64:function(e,t){return e}};function At(e){return x?et(3,1,e):0}function Ft(e,t,n,r,a){if(x)return et(4,1,e,t,n,r,a)}function Rt(e,t,r,a){if(x)return et(5,1,e,t,r,a);for(var i=0,o=0;o<r;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)$t.printChar(e,n()[u+c]);i+=l}return s()[a>>2]=i,0}function Dt(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Mt(e,t){Pe.threadExitHandlers.push((function(){ne.get(e)(t)}))}function Ot(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Ut(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=jt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function zt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return $("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return $("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return Zt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=on(16,o):G((u-=o)>0);for(var h=Ut(228),p=0;p<57;++p)i()[(h>>2)+p]=0;s()[e>>2]=h,s()[h+12>>2]=h;var d=h+152;s()[d>>2]=d;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Ot(f),0}function Lt(e){if(x)return et(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return He(28),-1}x||Pe.initMainThreadBlock();var Pt,Bt=[null,je,yt,At,Ft,Rt,Lt],Wt={e:Ue,r:Ge,x:qe,b:Ke,y:Xe,j:Ye,c:Je,d:De,f:Le,p:Ze,z:Qe,u:at,q:ot,v:bt,i:xt,t:vt,w:_t,m:At,n:Ft,g:Rt,o:Fe,a:A||c.wasmMemory,k:Dt,l:Mt,h:zt,s:Lt},Vt=($e(),c.___wasm_call_ctors=function(){return(Vt=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)}),Ut=(c._init=function(){return(c._init=c.asm.B).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.C).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.D).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.E).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.G).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.H).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.I).apply(null,arguments)},c._All=function(){return(c._All=c.asm.J).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.K).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.L).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.M).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.N).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.O).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.P).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Q).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.R).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.S).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.T).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.U).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.V).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.W).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.X).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Y).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.Z).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm._).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.$).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.aa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ba).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ca).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.da).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ea).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.fa).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ga).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ha).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ia).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ja).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.ka).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.la).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ma).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.na).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.oa).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.pa).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.qa).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.ra).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.sa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ta).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.ua).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.va).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.wa).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.xa).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.ya).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.za).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Aa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ba).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ca).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Da).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ea).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Fa).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Ga).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ha).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Ia).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ja).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Ka).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.La).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ma).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Na).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Oa).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Pa).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Qa).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Ra).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Sa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ta).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Ua).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Va).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Wa).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Xa).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Ya).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Za).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm._a).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.$a).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.ab).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.bb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.cb).apply(null,arguments)},c._malloc=function(){return(Ut=c._malloc=c.asm.db).apply(null,arguments)}),Gt=c._free=function(){return(Gt=c._free=c.asm.eb).apply(null,arguments)},Ht=c.___errno_location=function(){return(Ht=c.___errno_location=c.asm.fb).apply(null,arguments)},jt=c._emscripten_get_global_libc=function(){return(jt=c._emscripten_get_global_libc=c.asm.gb).apply(null,arguments)},qt=c._pthread_self=function(){return(qt=c._pthread_self=c.asm.hb).apply(null,arguments)},Kt=c.___pthread_tsd_run_dtors=function(){return(Kt=c.___pthread_tsd_run_dtors=c.asm.ib).apply(null,arguments)},Xt=c._emscripten_main_thread_process_queued_calls=function(){return(Xt=c._emscripten_main_thread_process_queued_calls=c.asm.jb).apply(null,arguments)},Yt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.kb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Yt=c._emscripten_register_main_browser_thread_id=c.asm.lb).apply(null,arguments)}),Jt=c.__emscripten_do_dispatch_to_thread=function(){return(Jt=c.__emscripten_do_dispatch_to_thread=c.asm.mb).apply(null,arguments)},Zt=c._emscripten_sync_run_in_main_thread_4=function(){return(Zt=c._emscripten_sync_run_in_main_thread_4=c.asm.nb).apply(null,arguments)},Qt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Qt=c._emscripten_run_in_main_runtime_thread_js=c.asm.ob).apply(null,arguments)},en=c.__emscripten_call_on_thread=function(){return(en=c.__emscripten_call_on_thread=c.asm.pb).apply(null,arguments)},tn=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.qb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(tn=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)}),nn=c.stackSave=function(){return(nn=c.stackSave=c.asm.sb).apply(null,arguments)},rn=c.stackRestore=function(){return(rn=c.stackRestore=c.asm.tb).apply(null,arguments)},an=c.stackAlloc=function(){return(an=c.stackAlloc=c.asm.ub).apply(null,arguments)},sn=c._emscripten_stack_set_limits=function(){return(sn=c._emscripten_stack_set_limits=c.asm.vb).apply(null,arguments)},on=c._memalign=function(){return(on=c._memalign=c.asm.wb).apply(null,arguments)},un=c.__emscripten_allow_main_runtime_queued_calls=9808,ln=c.__emscripten_main_thread_futex=11432;function cn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function hn(e){if(e=e||d,!(ge>0)){if(x)return u(c),ce(),void postMessage({cmd:"loaded"});le(),ge>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Pt||(Pt=!0,c.calledRun=!0,U||(ce(),he(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),de()))}}function pn(e,t){if(!t||!O||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new cn(e);O||(Pe.terminateAllThreads(),pe(),c.onExit&&c.onExit(e),U=!0),f(e,new cn(e))}}if(c.cwrap=q,c.PThread=Pe,c.PThread=Pe,c.wasmMemory=A,c.ExitStatus=cn,be=function e(){Pt||hn(),Pt||(be=e)},c.run=hn,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(O=!1,Pe.initWorker()),hn(),e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=s)})),O=c(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){var t,n,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r}));var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,h=!1,p=!1;l="object"==typeof window,c="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!l&&!h&&!c;var d,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}h?(b=c?F().dirname(b)+"/":"//",d=function(e,t){return g||(g=a(383)),y||(y=F()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof De))throw e})),process.on("unhandledRejection",ae),s.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(d=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=s.print||void 0,I=s.printErr||void 0;for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(v=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var N=!1;function S(e,t){e||ae("Assertion failed: "+t)}function C(e){var t=s["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function T(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);L(e,t=Re(n),n)}return t},array:function(e){var t=Re(e.length);return P(e,t),t}},i=C(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ae()),o[l]=c(r[l])):o[l]=r[l]}var h,p=i.apply(null,o);return h=p,p="string"===t?O(h):"boolean"===t?Boolean(h):h,0!==u&&Fe(u),p}function _(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?C(e):function(){return T(e,t,n,arguments)}}var E,$,A,R,D="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function M(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&D)return D.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function O(e,t){return e?M(A,e,t):""}function z(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function L(e,t,n){return z(e,A,t,n)}function P(e,t){$.set(e,t)}function B(e,t){return e%t>0&&(e+=t-e%t),e}function W(e){E=e,s.HEAP8=$=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=R=new Int32Array(e),s.HEAPU8=A=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var V,U=[],G=[],H=[],j=[];function q(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)J(s.preRun.shift());fe(U)}function K(){fe(G)}function X(){fe(H)}function Y(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Z(s.postRun.shift());fe(j)}function J(e){U.unshift(e)}function Z(e){j.unshift(e)}G.push({func:function(){Ee()}});var Q=0,ee=null,te=null;function ne(e){Q++,s.monitorRunDependencies&&s.monitorRunDependencies(Q)}function re(e){if(Q--,s.monitorRunDependencies&&s.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){s.onAbort&&s.onAbort(e),I(e+=""),N=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var ue="file://";function le(e){return se(e,ue)}var ce="tfjs-backend-wasm.wasm";function he(e){try{if(e==ce&&v)return new Uint8Array(v);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function pe(){if(!v&&(l||c)){if("function"==typeof fetch&&!le(ce))return fetch(ce,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ce+"'";return e.arrayBuffer()})).catch((function(){return he(ce)}));if(f)return new Promise((function(e,t){f(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(ce)}))}function de(){var e={a:_e};function t(e,t){var n=e.exports;s.asm=n,W((w=s.asm.i).buffer),V=s.asm.o,re()}function r(e){t(e.instance)}function a(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||oe(ce)||le(ce)||"function"!=typeof fetch?a(r):fetch(ce,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?V.get(n)():V.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function me(){ae()}function ge(e,t,n){A.copyWithin(e,t,t+n)}function ye(){return A.length}function be(e){try{return w.grow(e-E.byteLength+65535>>>16),W(w.buffer),1}catch(e){}}function xe(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),be(Math.min(n,B(Math.max(e,a),65536))))return!0}return!1}oe(ce)||(ce=x(ce));var ve={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=ve.buffers[e];0===t||10===t?((1===e?k:I)(M(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return ve.varargs+=4,R[ve.varargs-4>>2]},getStr:function(e){return O(e)},get64:function(e,t){return e}};function we(e){return 0}function ke(e,t,n,r,a){}function Ie(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=R[t+8*s>>2],o=R[t+(8*s+4)>>2],u=0;u<o;u++)ve.printChar(e,A[i+u]);a+=o}return R[r>>2]=a,0}function Ne(){return 6}function Se(e){return R[$e()>>2]=e,e}function Ce(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Se(28),-1}var Te,_e={a:me,d:ge,e:xe,f:we,c:ke,b:Ie,g:Ne,h:Ce},Ee=(de(),s.___wasm_call_ctors=function(){return(Ee=s.___wasm_call_ctors=s.asm.j).apply(null,arguments)}),$e=(s._init=function(){return(s._init=s.asm.k).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.l).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.m).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.n).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.p).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.q).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.r).apply(null,arguments)},s._All=function(){return(s._All=s.asm.s).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.t).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.u).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.v).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.w).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.x).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.y).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.z).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.A).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.B).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.C).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.D).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.E).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.F).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.G).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.H).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.I).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.J).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.K).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.L).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.M).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.N).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.O).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.P).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Q).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.R).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.S).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.T).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.U).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.V).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.W).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.X).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.Y).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Z).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm._).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.$).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.aa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ba).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ca).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.da).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ea).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.fa).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.ga).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ha).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.ia).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.ja).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.ka).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.la).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ma).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.na).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.oa).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.pa).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.qa).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.ra).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.sa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ta).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.ua).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.va).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.wa).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.xa).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.ya).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.za).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Aa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ba).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ca).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Da).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ea).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Fa).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Ga).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ha).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Ia).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ja).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Ka).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.La).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ma).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Na).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Oa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Pa).apply(null,arguments)},s.___errno_location=function(){return($e=s.___errno_location=s.asm.Qa).apply(null,arguments)}),Ae=s.stackSave=function(){return(Ae=s.stackSave=s.asm.Ra).apply(null,arguments)},Fe=s.stackRestore=function(){return(Fe=s.stackRestore=s.asm.Sa).apply(null,arguments)},Re=s.stackAlloc=function(){return(Re=s.stackAlloc=s.asm.Ta).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Me(e){function n(){Te||(Te=!0,s.calledRun=!0,N||(K(),X(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Y()))}e=e||u,Q>0||(q(),Q>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=_,te=function e(){Te||Me(),Te||(te=e)},s.run=Me,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return Me(),e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModule=s)})),z=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},L=class{refCount(e){return P("refCount")}incRef(e){return P("incRef")}timerAvailable(){return!0}time(e){return P("time")}read(e){return P("read")}readSync(e){return P("readSync")}numDataIds(){return P("numDataIds")}disposeData(e,t){return P("disposeData")}write(e,t,n){return P("write")}move(e,t,n,r,a){return P("move")}memory(){return P("memory")}floatPrecision(){return P("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return P("dispose")}};function P(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function B(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function W(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function V(e,t,n){return Math.max(e,Math.min(t,n))}function U(e){return e%2==0?e:e+1}function G(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function H(e,t){const n=Math.random();return t*n+(1-n)*e}function j(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function K(e,t,n=""){q(Q(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function X(e){q(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Y(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||fe(e)&&!n)for(let r=0;r<e.length;++r)Y(e[r],t,n);else t.push(e);return t}function J(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Z(e){return 0===e.length}function Q(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ee(e){return e%1==0}function te(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ne(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function re(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return B(t),t}function ae(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function se(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function ie(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function oe(e,t){const n=t.length;return q((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),q(e.every((e=>ee(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ue(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:oe(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function le(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ce(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function he(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function pe(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function de(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function fe(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function me(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ge(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ye(e){return"string"==typeof e||e instanceof String}function be(e){return"boolean"==typeof e}function xe(e){return"number"==typeof e}function ve(e){return Array.isArray(e)?ve(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":xe(e)?"float32":ye(e)?"string":be(e)?"bool":"float32"}function we(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ke(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ie(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ne(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Ne(e+t*o,i,n,r)}return a}function Se(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ne(0,e,t,n)}function Ce(e,t){const n=Te(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Te(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _e(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Se(e,new Float32Array(n));if("int32"===t)return Se(e,new Int32Array(n));if("bool"===t)return Se(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ee(e){e.forEach((t=>{q(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function $e(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ae(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Fe(e){return e&&e.then&&"function"==typeof e.then}var Re="tfjsflags",De=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Me,this.populateURLFlags()}setPlatform(e,t){this.platform,this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Fe(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Re in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}};function Me(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Oe(){return Le}var ze,Le=null;function Pe(){if(null==ze){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ze=e}return ze}function Be(e,t){const n=function(){const e=Pe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var We="Abs",Ve="Acos",Ue="Acosh",Ge="Add",He="AddN",je="All",qe="Any",Ke="ArgMax",Xe="ArgMin",Ye="Asin",Je="Asinh",Ze="Atan",Qe="Atanh",et="Atan2",tt="AvgPool",nt="AvgPoolGrad",rt="AvgPool3D",at="AvgPool3DGrad",st="BatchMatMul",it="BatchToSpaceND",ot="Bincount",ut="BroadcastTo",lt="Cast",ct="Ceil",ht="ClipByValue",pt="Complex",dt="ComplexAbs",ft="Concat",mt="Conv2D",gt="Conv2DBackpropFilter",yt="Conv2DBackpropInput",bt="Conv3D",xt="Conv3DBackpropFilterV2",vt="Conv3DBackpropInputV2",wt="Cos",kt="Cosh",It="Cumsum",Nt="CropAndResize",St="DenseBincount",Ct="DepthToSpace",Tt="DepthwiseConv2dNative",_t="DepthwiseConv2dNativeBackpropFilter",Et="DepthwiseConv2dNativeBackpropInput",$t="Diag",At="Dilation2D",Ft="Dilation2DBackpropInput",Rt="Dilation2DBackpropFilter",Dt="RealDiv",Mt="Einsum",Ot="Elu",zt="EluGrad",Lt="Erf",Pt="Equal",Bt="Exp",Wt="ExpandDims",Vt="Expm1",Ut="FFT",Gt="Fill",Ht="FlipLeftRight",jt="Floor",qt="FloorDiv",Kt="FusedBatchNorm",Xt="GatherV2",Yt="GatherNd",Jt="Greater",Zt="GreaterEqual",Qt="Identity",en="IFFT",tn="Imag",nn="IsFinite",rn="IsInf",an="IsNan",sn="LeakyRelu",on="Less",un="LessEqual",ln="LinSpace",cn="Log",hn="Log1p",pn="LogicalAnd",dn="LogicalNot",fn="LogicalOr",mn="LogSoftmax",gn="LRN",yn="LRNGrad",bn="Max",xn="Maximum",vn="MaxPool",wn="MaxPoolGrad",kn="MaxPool3D",In="MaxPool3DGrad",Nn="MaxPoolWithArgmax",Sn="Mean",Cn="Min",Tn="Minimum",_n="MirrorPad",En="Mod",$n="Multinomial",An="Multiply",Fn="Neg",Rn="NotEqual",Dn="NonMaxSuppressionV3",Mn="NonMaxSuppressionV4",On="NonMaxSuppressionV5",zn="OnesLike",Ln="OneHot",Pn="Pack",Bn="PadV2",Wn="Pool",Vn="Pow",Un="Prelu",Gn="Prod",Hn="Range",jn="Real",qn="Reciprocal",Kn="Relu",Xn="Reshape",Yn="ResizeNearestNeighbor",Jn="ResizeNearestNeighborGrad",Zn="ResizeBilinear",Qn="ResizeBilinearGrad",er="Relu6",tr="Reverse",nr="Round",rr="Rsqrt",ar="ScatterNd",sr="Select",ir="Selu",or="Slice",ur="Sin",lr="Sinh",cr="Sign",hr="Sigmoid",pr="Softplus",dr="Sqrt",fr="Sum",mr="SpaceToBatchND",gr="SplitV",yr="Softmax",br="SparseFillEmptyRows",xr="SparseReshape",vr="SparseToDense",wr="SquaredDifference",kr="Square",Ir="StridedSlice",Nr="Sub",Sr="Tan",Cr="Tanh",Tr="Tile",_r="TopK",Er="Transform",$r="Transpose",Ar="Unique",Fr="Unpack",Rr="UnsortedSegmentSum",Dr="ZerosLike",Mr="Step",Or="FromPixels",zr="RotateWithOffset",Lr="_FusedMatMul",Pr="FusedConv2D",Br="FusedDepthwiseConv2D",Wr=Be("kernelRegistry",(()=>new Map)),Vr=Be("gradRegistry",(()=>new Map));function Ur(e,t){const n=Jr(e,t);return Wr.get(n)}function Gr(e){return Vr.get(e)}function Hr(e){const t=Wr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function jr(e){const{kernelName:t,backendName:n}=e,r=Jr(t,n);Wr.has(r),Wr.set(r,e)}function qr(e){const{kernelName:t}=e;Vr.has(t)&&Oe().getBool("DEBUG"),Vr.set(t,e)}function Kr(e,t){const n=Jr(e,t);if(!Wr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Wr.delete(n)}function Xr(e){if(!Vr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Vr.delete(e)}function Yr(e,t){Hr(e).forEach((e=>{jr(Object.assign({},e,{backendName:t}))}))}function Jr(e,t){return`${t}_${e}`}var Zr={};function Qr(e,t){return"string"===t?ra(e):ea([e],t)}function ea(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Y(e)),Oe().getBool("DEBUG")&&he(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ta(){return Oe().platform.now()}function na(e,t){return Oe().platform.fetch(e,t)}function ra(e,t="utf-8"){return t=t||"utf-8",Oe().platform.encode(e,t)}function aa(e,t="utf-8"){return t=t||"utf-8",Oe().platform.decode(e,t)}h(Zr,{arraysEqual:()=>Q,assert:()=>q,assertNonNegativeIntegerDimensions:()=>Ee,assertNonNull:()=>X,assertShapesMatch:()=>K,bytesFromStringArray:()=>ge,bytesPerElement:()=>me,checkConversionForErrors:()=>he,clamp:()=>V,computeStrides:()=>Ie,createScalarValue:()=>Qr,createShuffledIndices:()=>re,decodeString:()=>aa,distSquared:()=>j,encodeString:()=>ra,fetch:()=>na,flatten:()=>Y,getArrayFromDType:()=>ce,getTypedArrayFromDType:()=>le,hasEncodingLoss:()=>de,indexToLoc:()=>Ae,inferDtype:()=>ve,inferFromImplicitShape:()=>ie,isBoolean:()=>be,isFunction:()=>we,isInt:()=>ee,isNumber:()=>xe,isPromise:()=>Fe,isScalarShape:()=>Z,isString:()=>ye,isTypedArray:()=>fe,isValidDtype:()=>pe,locToIndex:()=>$e,makeOnesTypedArray:()=>Ce,makeZerosNestedTypedArray:()=>_e,makeZerosTypedArray:()=>Te,nearestDivisor:()=>ke,nearestLargerEven:()=>U,now:()=>ta,parseAxisParam:()=>oe,randUniform:()=>H,repeatedTry:()=>se,rightPad:()=>ae,shuffle:()=>B,shuffleCombo:()=>W,sizeFromShape:()=>J,sizeToSquarishShape:()=>ne,squeezeShape:()=>ue,sum:()=>G,tanh:()=>te,toNestedArray:()=>Se,toTypedArray:()=>ea});function sa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const n=e[t];if(isNaN(n)||!isFinite(n))return!0}return!1}var ia=class{logKernelProfile(e,t,n,r,a,s){"number"==typeof r?ae(`${r}ms`,9):r.error,ae(e,25),t.rank,t.size,ae(t.shape.toString(),14);let i="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;i+=`${e}: ${a}D ${a>0?r:""} `}}}};function oa(e,t,n,r){const a=Ie(t),s=function(e,t,n,r){const a=J(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?ha(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ua(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=ca(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function ua(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ye(e)?`'${e}'`:"bool"===n?la(e):parseFloat(e.toFixed(7)).toString(),ae(r,t)}function la(e){return 0===e?"false":"true"}function ca(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[ua(ha(e)[0],0,n)]}return"bool"===n?[la(e[0])]:[e[0].toString()]}if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ha(r),s=ha(s)),["["+r.map(((e,t)=>ua(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ua(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ha(e):Array.from(e)).map(((e,t)=>ua(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...ca(e.slice(r,s),l,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...ca(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...ca(e.slice(r,s),l,n,c,a,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function ha(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var pa=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=J(e),null!=n){const e=n.length;q(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ce(t,this.size),this.strides=Ie(e)}set(e,...t){0===t.length&&(t=[0]),q(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return da().makeTensor(this.values,this.shape,this.dtype)}},da=null,fa=null;var ma=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=J(e),this.strides=Ie(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fa.buffer(this.shape,this.dtype,e)}bufferSync(){return fa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Se(this.shape,e,"complex64"===this.dtype)}arraySync(){return Se(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=da().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>aa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=da().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>aa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await da().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(da().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fa.print(this,e)}clone(){return this.throwIfDisposed(),fa.clone(this)}toString(e=!1){return oa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),da().makeVariable(this,e,t,n)}};function ga(){return Be("Tensor",(()=>ma))}Object.defineProperty(ma,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ga();var ya=class extends ma{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Q(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);da().disposeTensor(this),this.dataId=e.dataId,da().incRef(this,null)}dispose(){da().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ya,Symbol.hasInstance,{value:e=>e instanceof ma&&null!=e.assign&&e.assign instanceof Function});var ba,xa,va,wa,ka,Ia,Na,Sa,Ca,Ta,_a={};h(_a,{assertTypesMatch:()=>Ra,getTensorsInContainer:()=>Ma,isTensorInList:()=>Da,makeTypesMatch:()=>Fa}),(xa=ba||(ba={})).R0="R0",xa.R1="R1",xa.R2="R2",xa.R3="R3",xa.R4="R4",xa.R5="R5",xa.R6="R6",(wa=va||(va={})).float32="float32",wa.int32="int32",wa.bool="int32",wa.complex64="complex64",(Ia=ka||(ka={})).float32="float32",Ia.int32="int32",Ia.bool="bool",Ia.complex64="complex64",(Sa=Na||(Na={})).float32="float32",Sa.int32="float32",Sa.bool="float32",Sa.complex64="complex64",(Ta=Ca||(Ca={})).float32="complex64",Ta.int32="complex64",Ta.bool="complex64",Ta.complex64="complex64";var Ea={float32:Na,int32:va,bool:ka,complex64:Ca};function $a(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ea[e][t]}function Aa(e){return $a(e,"int32")}function Fa(e,t){if(e.dtype===t.dtype)return[e,t];const n=$a(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ra(e,t){q(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Da(e,t){return t.some((t=>t.id===e.id))}function Ma(e){const t=[];return Oa(e,t,new Set),t}function Oa(e,t,n){if(null==e)return;if(e instanceof ma)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Oa(r,t,n))}}function za(e){return null!=e.kernelName}var La=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},Pa=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new La}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return!(e in this.registryFactory)&&(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ia)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=ta();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:ta()-i})}if(Oe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const t=r[e];t.data().then((e=>{sa(e,t.dtype)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){Hr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Hr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof L||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Pa.nextTensorId++}nextVariableId(){return Pa.nextVariableId++}clone(e){const t=Wa.runKernel(Qt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Wa.runKernel(lt,t,n)}})),[],{}),t}runKernel(e,t,n){if(!(null!=Ur(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=za(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(za(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=Ur(t,this.backendName);q(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=za(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Gr(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(q(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ye(e[0])&&(a=e.map((e=>ra(e))));const s=r.write(a,t,n),i=new ma(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=ge(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new ma(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new ya(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*me(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ya||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*me(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Gr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Te(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ma(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(q(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));q(a instanceof ma,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Ce(J(e),"float32");return Wa.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!Q(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Va);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return q(we(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;q(t.every((e=>e instanceof ma)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),q(n.value instanceof ma,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),q(we(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];q(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),q(s.every((e=>e instanceof ma)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ta(),n=await this.backend.time(e);return n.wallMs=ta()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new La;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ba(){const e=Pe();if(null==e._tfengine){const t=new De(e);e._tfengine=new Pa(t)}var t;return t=e._tfengine.ENV,Le=t,da=()=>e._tfengine,e._tfengine}Pa.nextTensorId=0,Pa.nextVariableId=0;var Wa=Ba();function Va(e,t){const n={a:e,b:t};return Wa.runKernel(Ge,n)}var Ua={};function Ga(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ha(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}h(Ua,{isBrowser:()=>Ha,isMobile:()=>Ga});var ja=Oe();function qa(e,t){let n=e;if(fe(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||fe(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Oe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ka(e,r,[]),r}function Ka(e,t,n){if(n=n||[],!Array.isArray(e)&&!fe(e))return void q(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));q(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),q(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ka(e[t],r,n.concat(t))}function Xa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ya(e,t,n,r="numeric"){if(e instanceof ma)return Xa(r,e.dtype,t,n),e;let a=ve(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Xa(r,a,t,n),null==e||!fe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=qa(e,a);fe(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?ea(e,a):Y(e,[],!0);return Wa.makeTensor(i,s,a)}function Ja(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ya(e,`${t}[${a}]`,n,r)))}ja.registerFlag("DEBUG",(()=>!1),(e=>{})),ja.registerFlag("IS_BROWSER",(()=>Ha())),ja.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ja.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ja.registerFlag("PROD",(()=>!1)),ja.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ja.getBool("DEBUG"))),ja.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ja.registerFlag("IS_TEST",(()=>!1)),ja.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ja.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var Za="__op";function Qa(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Za;const a=(...e)=>{Wa.startScope(n);try{const t=r(...e);return Fe(t),Wa.endScope(t),t}catch(e){throw Wa.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var es=Qa({complex_:function(e,t){const n=Ya(e,"real","complex"),r=Ya(t,"imag","complex");K(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Wa.runKernel(pt,a)}});function ts(e,t,n,r){if(null==r&&(r=ve(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!fe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ee(t);const e=J(t),r=J(n);q(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==J(t.slice(e));q(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return fe(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ea(e,r):Y(e,[],!0),Wa.makeTensor(e,t,r)}function ns(e,t,n){return ts(e,t,qa(e,n),n)}var rs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function as(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:is(await Promise.all(r)),specs:n}}function ss(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=J(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=rs[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ps()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=J(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=rs[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=ns(e,o,"float32"),i=ns(r,o,"float32");n[t]=es(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=ns(l,o,i))}return n}function is(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var os="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function us(e){return os?Buffer.byteLength(e):new Blob([e]).size}function ls(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function cs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function hs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:us(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:us(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ps(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var ds=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ds.instance&&(ds.instance=new ds),ds.instance}static registerSaveRouter(e){ds.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ds.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ds.getHandlers(e,"save")}static getLoadHandlers(e,t){return ds.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?ds.getInstance().loadRouters:ds.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}},fs=e=>ds.registerSaveRouter(e),ms=e=>ds.registerLoadRouter(e),gs=e=>ds.getSaveHandlers(e),ys=(e,t)=>ds.getLoadHandlers(e,t),bs="tensorflowjs",xs="models_store",vs="model_info_store";function ws(){if(!Oe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ks(e){const t=e.result;t.createObjectStore(xs,{keyPath:"modelPath"}),t.createObjectStore(vs,{keyPath:"modelPath"})}var Is=class{constructor(e){if(this.indexedDB=ws(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(bs,1);r.onupgradeneeded=()=>ks(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(xs,"readonly"),r=t.objectStore(xs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=hs(t),s=a.transaction(vs,"readwrite");let i=s.objectStore(vs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(xs,"readwrite");const o=u.objectStore(xs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(vs);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Is.URL_SCHEME="indexeddb://";var Ns=e=>{return Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Is.URL_SCHEME)?(t=e.slice(Is.URL_SCHEME.length),new Is(t)):null;var t};ds.registerSaveRouter(Ns),ds.registerLoadRouter(Ns);var Ss="/",Cs="tensorflowjs_models",Ts="info",_s="model_topology",Es="weight_specs",$s="weight_data",As="model_metadata";function Fs(e){return{info:[Cs,e,Ts].join(Ss),topology:[Cs,e,_s].join(Ss),weightSpecs:[Cs,e,Es].join(Ss),weightData:[Cs,e,$s].join(Ss),modelMetadata:[Cs,e,As].join(Ss)}}function Rs(e){const t=e.split(Ss);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ss)}var Ds=class{constructor(e){if(!Oe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Fs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=hs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(os)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(os){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};Ds.URL_SCHEME="localstorage://";var Ms=e=>{return Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ds.URL_SCHEME)?(t=e.slice(Ds.URL_SCHEME.length),new Ds(t)):null;var t};ds.registerSaveRouter(Ms),ds.registerLoadRouter(Ms);var Os="://",zs=class{constructor(){this.managers={}}static getInstance(){return null==zs.instance&&(zs.instance=new zs),zs.instance}static registerManager(e,t){q(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Os)&&(e=e.slice(0,e.indexOf(Os))),q(e.length>0,(()=>"scheme must not be an empty string."));const n=zs.getInstance();q(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Ls(e){if(-1===e.indexOf(Os))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zs.getSchemes().join(",")}`);return{scheme:e.split(Os)[0],path:e.split(Os)[1]}}async function Ps(e,t,n=!1){q(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=ds.getLoadHandlers(e);q(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),q(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=ds.getSaveHandlers(t);q(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),q(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=Ls(e).scheme,u=Ls(e).path,l=o===Ls(e).scheme,c=await a.load();n&&l&&await zs.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await zs.getManager(o).removeModel(u),h.modelArtifactsInfo}async function Bs(){const e=zs.getSchemes(),t={};for(const n of e){const e=await zs.getManager(n).listModels();for(const r in e){t[n+Os+r]=e[r]}}return t}async function Ws(e){const t=Ls(e);return zs.getManager(t.scheme).removeModel(t.path)}async function Vs(e,t){return Ps(e,t,!1)}async function Us(e,t){return Ps(e,t,!0)}if(Oe().get("IS_BROWSER")){Oe().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{zs.registerManager(Ds.URL_SCHEME,new class{constructor(){q(Oe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),q("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Cs+Ss,n=Ss+Ts;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Rs(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=Fs(e=(t=e).startsWith(Ds.URL_SCHEME)?t.slice(Ds.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}})}catch(e){}try{zs.registerManager(Is.URL_SCHEME,new class{constructor(){this.indexedDB=ws()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(bs,1);n.onupgradeneeded=()=>ks(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(vs,"readonly"),s=a.objectStore(vs).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Is.URL_SCHEME)?t.slice(Is.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(bs,1);r.onupgradeneeded=()=>ks(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(vs,"readwrite"),i=s.objectStore(vs),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(xs,"readwrite");const r=u.objectStore(xs).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Gs,Hs=()=>d();function js(e,t="float32",n){return t=t||"float32",Ee(e),new pa(e,t,n)}Oe().get("IS_NODE")&&Oe().setPlatform("node",new class{constructor(){this.util=a(509),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Oe().global.fetch?Oe().global.fetch(e,t):(null==Gs&&(Gs=Hs()),Gs(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var qs=Qa({cast_:function(e,t){const n=Ya(e,"x","cast");if(!pe(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Wa.runKernel(lt,r,a)}});var Ks=Qa({clone_:function(e){const t={x:Ya(e,"x","clone","string_or_numeric")};return Wa.runKernel(Qt,t)}});function Xs(e,t=!1){}Ba(),fa={buffer:js,cast:qs,clone:Ks,print:Xs};var Ys={};h(Ys,{browserFiles:()=>Qs,browserHTTPRequest:()=>ui,concatenateArrayBuffers:()=>ls,copyModel:()=>Vs,decodeWeights:()=>ss,encodeWeights:()=>as,fromMemory:()=>ci,getLoadHandlers:()=>ys,getModelArtifactsInfoForJSON:()=>hs,getSaveHandlers:()=>gs,http:()=>oi,isHTTPScheme:()=>si,listModels:()=>Bs,loadWeights:()=>ni,moveModel:()=>Us,registerLoadRouter:()=>ms,registerSaveRouter:()=>fs,removeModel:()=>Ws,weightsLoaderFactory:()=>ri,withSaveHandler:()=>hi});function Js(e){return new Promise((e=>setTimeout(e))).then(e)}var Zs=class{constructor(e){if(!Oe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Zs.URL_SCHEME)&&(e=e.slice(Zs.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Js((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Js((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:hs(e)}}}};Zs.URL_SCHEME="downloads://";function Qs(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(e){return void r(e)}const l=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),l.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=c.indexOf(e);if(h[a]=r,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:l,weightData:ls(h),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>cs(e.name))),a={};for(const s of e)s.paths.forEach((e=>{const s=cs(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}(e)}function ei(e,t,n,r){var a,s,i;q(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,q((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),q(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),q(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++o/e.length*(r-n);return t(s),a})),a))))}async function ti(e,t){null==t&&(t={});const n=null==t.fetchFunc?Oe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await ei(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await ei(a,t.onProgress,.5,1)}async function ni(e,t="",n,r){return ri((e=>ti(e,{requestInit:r})))(e,t,n)}function ri(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=rs[u]*J(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=ss(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}ds.registerSaveRouter((e=>Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zs.URL_SCHEME)?function(e="model"){return new Zs(e)}(e.slice(Zs.URL_SCHEME.length)):null));var ai=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(q("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Oe().platform.fetch,q(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&q(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:hs(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const h={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:a,convertedBy:s,format:i};null!=o&&(h.signature=o),null!=u&&(h.userDefinedMetadata=u);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[s,ls(await ti(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function si(e){return null!=e.match(ai.URL_SCHEME_REGEX)}ai.URL_SCHEME_REGEX=/^https?:\/\//;var ii=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>si(e))):si(e),n)return oi(e,t)}return null};function oi(e,t){return new ai(e,t)}function ui(e,t){return oi(e,t)}ds.registerSaveRouter(ii),ds.registerLoadRouter(ii);var li=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function ci(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return new li(t?e:{modelTopology:e})}return new li({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function hi(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var pi={};h(pi,{confusionMatrix:()=>yi});var di=Qa({matMul_:function(e,t,n=!1,r=!1){let a=Ya(e,"a","matMul"),s=Ya(t,"b","matMul");[a,s]=Fa(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Wa.runKernel(st,i,o)}});var fi=Qa({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ya(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Wa.runKernel(Ln,a,s)}});var mi=Qa({transpose_:function(e,t){const n=Ya(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{q(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Wa.runKernel($r,r,a)}});var gi,yi=Qa({confusionMatrix_:function(e,t,n){const r=Ya(e,"labels","confusionMatrix"),a=Ya(t,"predictions","confusionMatrix");q(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),q(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),q(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),q(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),q(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=fi(qs(r,"int32"),n),i=fi(qs(a,"int32"),n),o=mi(s),u=di(o,i);return qs(u,"int32")}}),bi={};function xi(e,t,n){if(X(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=qa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ts(e,t,r,n)}function vi(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Ur(Or,Wa.backendName)){const n={pixels:e},r={numChannels:t};return Wa.runKernel(Or,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==gi&&(gi=document.createElement("canvas").getContext("2d")),gi.canvas.width=u,gi.canvas.height=l,gi.drawImage(e,0,0,u,l),c=gi.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return xi(h,[l,u,t],"int32")}function wi(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function ki(e,t=3){let n=null;if(Oe().getBool("WRAP_TO_IMAGEBITMAP")&&wi(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return vi(n,t)}async function Ii(e,t){let n=Ya(e,"img","toPixels");if(!(e instanceof ma)){const e=n;n=qs(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}h(bi,{fromPixels:()=>Ni,fromPixelsAsync:()=>ki,toPixels:()=>Ii});var Ni=Qa({fromPixels_:vi}),Si={};function Ci(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===J(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Ie(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}h(Si,{prepareAndValidate:()=>Ci});var Ti={};function _i(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Ei(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}_i(n,t,e)}function $i(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:J(t.shape)/o,sliceSize:i,strides:[...Ie(n.slice(0,a)),1],outputSize:J(n)}}h(Ti,{calculateShapes:()=>$i,validateInput:()=>Ei,validateUpdateShape:()=>_i});var Ai={};function Fi(e,t,n){const r=e.shape.length;q(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),q(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)q(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Ri(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Di(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Mi(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Oi(e,t,n){return n<=e?n:n-(t-1)}function zi(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Li(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Pi(i,u,l,r,e),h=Bi(o,u,l,a,e),p=Mi(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Vi(i,r,s,e,t,u),h[t]=Ui(o,a,s,e,t,u),p[t]=Wi(s,t,u);return{begin:c,end:h,strides:p}}function Pi(e,t,n,r,a){const s=[...a],i=zi(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=Oi(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Bi(e,t,n,r,a){const s=[...a],i=zi(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=Oi(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=V(0,s[e],a[e])}return s}function Wi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Vi(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=V(0,i,u-1),i}function Ui(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?V(0,i,u):V(-1,i,u-1),i}function Gi(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Hi(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ji(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{q(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(q(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function qi(e,t,n,r,a,s,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const p=Ri(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-l.length,f=Ri(o),m=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=Li(m,p,d,l,c,h,a,s,i);l=g,c=y,h=b;const x=Ri(u);x.forEach((e=>{c[e]=l[e]+1,h[e]=1}));const v=Di(l,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:c,$strides:h,size:v,newShape:m,outShape:w}}h(Ai,{assertParamsValid:()=>Fi,computeFlatOffset:()=>Hi,computeOutShape:()=>Di,getNormalizedAxes:()=>Li,isSliceContinous:()=>Gi,maskToAxes:()=>Ri,parseSliceParams:()=>ji,sliceInfo:()=>qi,startForAxis:()=>Vi,startIndicesWithElidedDims:()=>Pi,stopForAxis:()=>Ui,stopIndicesWithElidedDims:()=>Bi,stridesForAxis:()=>Wi,stridesWithElidedDims:()=>Mi});var Ki={};h(Ki,{Serializable:()=>Xi,SerializationMap:()=>Yi,registerClass:()=>Ji});var Xi=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Yi=class{constructor(){this.classNameMap={}}static getMap(){return null==Yi.instance&&(Yi.instance=new Yi),Yi.instance}static register(e){Yi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ji(e){q(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),q("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),q(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Yi.register(e)}var Zi={};h(Zi,{TEST_EPSILON_FLOAT16:()=>Qi,encodeStrings:()=>lo,expectArrayBuffersEqual:()=>uo,expectArraysClose:()=>eo,expectArraysEqual:()=>ao,expectNumbersClose:()=>so,expectPromiseToFail:()=>ro,expectValuesInRange:()=>oo,testEpsilon:()=>to});var Qi=.1;function eo(e,t,n){return null==n&&(n=to()),no(e,t,((e,t)=>io(e,t,n)))}function to(){return 32===Wa.backend.floatPrecision()?.001:Qi}function no(e,t,n){let r=!0;if((fe(e)||fe(t))&&(r=!1),fe(e)&&fe(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=qa(e),r=qa(t);if(!Q(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=fe(e)?e:Y(e),s=fe(t)?t:Y(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ro(e,t){e().then((()=>t.fail()),(()=>t()))}function ao(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ye(e)||ye(e[0])||ye(t)||ye(t[0])?no(e,n,((e,t)=>e==t)):no(e,t,((e,t)=>io(e,t,0)))}function so(e,t,n){if(null==n&&(n=to()),!io(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function io(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function oo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function uo(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function lo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?lo(n):e[t]=ra(n)}return e}var co="3.6.0";function ho(){Oe().set("PROD",!0)}function po(){Oe().set("DEBUG",!0)}function fo(){Oe().set("DEPRECATION_WARNINGS_ENABLED",!1)}function mo(e){Oe().getBool("DEPRECATION_WARNINGS_ENABLED")}function go(){Wa.disposeVariables()}function yo(){return Wa}function bo(){return Wa.memory()}function xo(e){return Wa.profile(e)}function vo(e,t){return Wa.tidy(e,t)}function wo(e){Ma(e).forEach((e=>e.dispose()))}function ko(e){return Wa.keep(e)}function Io(e){return Wa.time(e)}function No(e){return Wa.setBackend(e)}function So(){return Wa.ready()}function Co(){return Wa.backendName}function To(e){Wa.removeBackend(e)}function _o(e){return Wa.findBackend(e)}function Eo(e){return Wa.findBackendFactory(e)}function $o(e,t,n=1){return Wa.registerBackend(e,t,n)}function Ao(){return Wa.backend}function Fo(e,t){Oe().setPlatform(e,t)}var Ro=Qa({add_:function(e,t){let n=Ya(e,"a","add"),r=Ya(t,"b","add");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(Ge,a)}});var Do=Qa({floorDiv_:function(e,t){let n=Ya(e,"a","floorDiv"),r=Ya(t,"b","floorDiv");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(qt,a)}});var Mo=Qa({div_:function(e,t){let n=Ya(e,"a","div"),r=Ya(t,"b","div");if([n,r]=Fa(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Do(n,r);const a={a:n,b:r};return Wa.runKernel(Dt,a,{})}});var Oo=Qa({mul_:function(e,t){let n=Ya(e,"a","mul"),r=Ya(t,"b","mul");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(An,a)}});var zo=Qa({abs_:function(e){const t=Ya(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Wa.runKernel(dt,e)}{const e={x:t};return Wa.runKernel(We,e)}}});var Lo=Qa({acos_:function(e){const t={x:Ya(e,"x","acos")};return Wa.runKernel(Ve,t)}});var Po=Qa({acosh_:function(e){const t={x:Ya(e,"x","acosh")};return Wa.runKernel(Ue,t)}});var Bo=Qa({addN_:function(e){q(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),q(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ya(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Q(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Wa.runKernel(He,r)}});var Wo=Qa({all_:function(e,t=null,n=!1){const r={x:Ya(e,"x","all","bool")},a={axis:t,keepDims:n};return Wa.runKernel(je,r,a)}});var Vo=Qa({any_:function(e,t=null,n=!1){const r={x:Ya(e,"x","any","bool")},a={axis:t,keepDims:n};return Wa.runKernel(qe,r,a)}});var Uo=Qa({argMax_:function(e,t=0){const n={x:Ya(e,"x","argMax")},r={axis:t};return Wa.runKernel(Ke,n,r)}});var Go=Qa({argMin_:function(e,t=0){const n={x:Ya(e,"x","argMin")},r={axis:t};return Wa.runKernel(Xe,n,r)}});var Ho=Qa({asin_:function(e){const t={x:Ya(e,"x","asin")};return Wa.runKernel(Ye,t)}});var jo=Qa({asinh_:function(e){const t={x:Ya(e,"x","asinh")};return Wa.runKernel(Je,t)}});var qo=Qa({atan_:function(e){const t={x:Ya(e,"x","atan")};return Wa.runKernel(Ze,t)}});var Ko=Qa({atan2_:function(e,t){let n=Ya(e,"a","atan2"),r=Ya(t,"b","atan2");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(et,a)}});var Xo=Qa({atanh_:function(e){const t={x:Ya(e,"x","atanh")};return Wa.runKernel(Qe,t)}});function Yo(e,t,n,r,a="NHWC",s){return Qo(e,[...t,e[3]],n,s,r,null,null,uu(a))}function Jo(e,t,n,r,a,s,i="channelsLast"){const[o,u]=nu(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Qo(e,l,n,r,a,s,!1,i)}function Zo(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=ru(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return eu(e,c,n,r,a,!1,h,s)}function Qo(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=nu(n),[y,b]=nu(r),x=au(p,y),v=au(d,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=tu(e,t,n));const s=e[0],i=e[1],o=su((s-t+2*r)/n+1,a),u=su((i-t+2*r)/n+1,a);return[o,u]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=su((t-s+p+d)/r+1,o),h=su((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,x,v,s,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function eu(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=ru(n),[v,w,k]=ru(r),I=au(d,v),N=au(f,w),S=au(m,k),{padInfo:C,outDepth:T,outHeight:_,outWidth:E}=function(e,t,n,r,a,s,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=tu(e,t,r));const i=e[0],o=e[1],u=e[2],l=su((i-t+2*a)/r+1,s),c=su((o-t+2*a)/r+1,s),h=su((u-t+2*a)/r+1,s);return[l,c,h,n]}([t,n,r,1],o,1,a,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(d-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,l,c,h,y,b,x,I,N,S,o),$=s?g*p:g;let A;return"channelsFirst"===i?A=[u,$,T,_,E]:"channelsLast"===i&&(A=[u,T,_,E,$]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:T,outHeight:_,outWidth:E,outChannels:$,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function tu(e,t,n,r=1){const a=au(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function nu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ru(e){return"number"==typeof e?[e,e,e]:e}function au(e,t){return t<=1?e:e+(e-1)*(t-1)}function su(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function iu(e){const[t,n,r]=nu(e);return 1===t&&1===n&&1===r}function ou(e,t){return iu(e)||iu(t)}function uu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}var lu=Qa({reshape_:function(e,t){const n={x:Ya(e,"x","reshape","string_or_numeric")},r={shape:t};return Wa.runKernel(Xn,n,r)}});var cu=Qa({avgPool_:function(e,t,n,r,a){const s=Ya(e,"x","avgPool","float32");q(ou(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=lu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),q(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&q(ee(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Wa.runKernel(tt,u,l);return c=qs(c,s.dtype),o?lu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var hu=Qa({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=Ya(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=lu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),q("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&q(ee(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=Wa.runKernel(rt,l,c);return h=qs(h,o.dtype),u?lu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var pu=Qa({concat_:function(e,t=0){q(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ja(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ks(n[0]);const r=n,a={axis:t};return Wa.runKernel(ft,r,a)}});var du=Qa({sigmoid_:function(e){const t={x:Ya(e,"x","sigmoid")};return Wa.runKernel(hr,t)}});var fu=Qa({slice_:function(e,t,n){const r=Ya(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Wa.runKernel(or,a,s)}});var mu=Qa({tanh_:function(e){const t={x:Ya(e,"x","tanh")};return Wa.runKernel(Cr,t)}});var gu=Qa({basicLSTMCell_:function(e,t,n,r,a,s){const i=Ya(e,"forgetBias","basicLSTMCell"),o=Ya(t,"lstmKernel","basicLSTMCell"),u=Ya(n,"lstmBias","basicLSTMCell"),l=Ya(r,"data","basicLSTMCell"),c=Ya(a,"c","basicLSTMCell"),h=Ya(s,"h","basicLSTMCell"),p=pu([l,h],1),d=di(p,o),f=Ro(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=fu(f,[0,0],y),x=fu(f,[0,g],y),v=fu(f,[0,2*g],y),w=fu(f,[0,3*g],y),k=Ro(Oo(du(b),mu(x)),Oo(c,du(Ro(i,v))));return[k,Oo(mu(k),du(w))]}});var yu=Qa({batchToSpaceND_:function(e,t,n){const r=Ya(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));q(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),q(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),q(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return Wa.runKernel(it,s,i)}});var bu=Qa({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=Ya(e,"x","batchNorm"),o=Ya(t,"mean","batchNorm"),u=Ya(n,"variance","batchNorm");let l,c;null!=a&&(l=Ya(a,"scale","batchNorm")),null!=r&&(c=Ya(r,"offset","batchNorm")),q(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),q(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),q(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?lu(e,[1,1,1,e.size]):2===e.rank?lu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?lu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},d=Wa.runKernel(Kt,h,p);return lu(d,i.shape)}});var xu=Qa({batchNorm2d_:function(e,t,n,r,a,s){const i=Ya(e,"x","batchNorm"),o=Ya(t,"mean","batchNorm"),u=Ya(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ya(a,"scale","batchNorm")),null!=r&&(c=Ya(r,"offset","batchNorm")),q(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),q(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),q(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&q(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),bu(i,o,u,c,l,s)}});var vu=Qa({batchNorm3d_:function(e,t,n,r,a,s){const i=Ya(e,"x","batchNorm"),o=Ya(t,"mean","batchNorm"),u=Ya(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ya(a,"scale","batchNorm")),null!=r&&(c=Ya(r,"offset","batchNorm")),q(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),q(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),q(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&q(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),bu(i,o,u,c,l,s)}});var wu=Qa({batchNorm4d_:function(e,t,n,r,a,s){const i=Ya(e,"x","batchNorm"),o=Ya(t,"mean","batchNorm"),u=Ya(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ya(a,"scale","batchNorm")),null!=r&&(c=Ya(r,"offset","batchNorm")),q(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),q(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),q(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&q(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),bu(i,o,u,c,l,s)}});var ku=Qa({bincount_:function(e,t,n){const r=Ya(e,"x","bincount"),a=Ya(t,"weights","bincount");q("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),q(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return Wa.runKernel(ot,s,i)}});var Iu=Qa({broadcastTo_:function(e,t){let n=Ya(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=lu(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ks(n);const i={x:n},o={reps:s};return Wa.runKernel(Tr,i,o)}});var Nu=Qa({ceil_:function(e){const t={x:Ya(e,"x","ceil")};return Wa.runKernel(ct,t)}});var Su=Qa({clipByValue_:function(e,t,n){const r=Ya(e,"x","clipByValue");q(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return Wa.runKernel(ht,a,s)}});var Cu=Qa({concat1d_:function(e){return pu(e,0)}});var Tu=Qa({concat2d_:function(e,t){return pu(e,t)}});var _u=Qa({concat3d_:function(e,t){return pu(e,t)}});var Eu=Qa({concat4d_:function(e,t){return pu(e,t)}});var $u=Qa({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ya(e,"x","conv2d"),u=Ya(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=lu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),q(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&q(ee(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];q(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),q(ou(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Wa.runKernel(mt,p,d);return c?lu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Au=Qa({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Ya(e,"x","conv1d"),u=Ya(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=lu(o,[1,o.shape[0],o.shape[1]])),q(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),q(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&q(ee(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),q(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),q(ou(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),q("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=lu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=lu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=$u(p,h,[1,n],r,"NHWC",[1,s],i);return lu(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});var Fu=Qa({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=lu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),q(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),q(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),q(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];q(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),q(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&q(ee(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:u,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Wa.runKernel(yt,p,d);return l?lu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Ru=Qa({conv2dTranspose_:function(e,t,n,r,a,s){const i=Ya(e,"x","conv2dTranspose"),o=Ya(t,"filter","conv2dTranspose");return Fu(n,i,o,r,a,"NHWC",s)}});var Du=Qa({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Ya(e,"x","conv3d"),o=Ya(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=lu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),q(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),q(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),q(ou(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),q("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=Wa.runKernel(bt,c,h);return l?lu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Mu=Qa({conv3DBackpropInput_:function(e,t,n,r,a){q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=lu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];q(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),q(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),q(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),q(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),q(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=Wa.runKernel(vt,c,h);return o?lu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Ou=Qa({conv3dTranspose_:function(e,t,n,r,a){const s=Ya(e,"x","conv3dTranspose"),i=Ya(t,"filter","conv3dTranspose");return Mu(n,s,i,r,a)}});var zu=Qa({cos_:function(e){const t={x:Ya(e,"x","cos")};return Wa.runKernel(wt,t)}});var Lu=Qa({cosh_:function(e){const t={x:Ya(e,"x","cosh")};return Wa.runKernel(kt,t)}});var Pu=Qa({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ya(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Wa.runKernel(It,a,s)}});var Bu=Qa({denseBincount_:function(e,t,n,r=!1){const a=Ya(e,"x","denseBincount"),s=Ya(t,"weights","denseBincount");q("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),q(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),q(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return Wa.runKernel(St,i,o)}});var Wu=Qa({depthToSpace_:function(e,t,n="NHWC"){const r=Ya(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];q(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),q(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),q(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return Wa.runKernel(Ct,o,u)}});var Vu=Qa({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ya(e,"x","depthwiseConv2d"),u=Ya(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=lu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),q(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),q(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&q(ee(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},d=Wa.runKernel(Tt,h,p);return c?lu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Uu=Qa({diag_:function(e){const t={x:Ya(e,"x","diag")};return Wa.runKernel($t,t)}});var Gu=Qa({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Ya(e,"x","dilation2d"),o=Ya(t,"filter","dilation2d");q(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),q(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),q("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=lu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},p=Wa.runKernel(At,c,h);return l?lu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});function Hu(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function ju(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function qu(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}var Ku=Qa({equal_:function(e,t){let n=Ya(e,"a","equal"),r=Ya(t,"b","equal");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(Pt,a)}});var Xu=Qa({where_:function(e,t,n){const r=Ya(t,"a","where"),a=Ya(n,"b","where"),s=Ya(e,"condition","where","bool"),i=qu(qu(s.shape,r.shape),a.shape),o={condition:Iu(s,i),t:Iu(r,i),e:Iu(a,i)};return Wa.runKernel(sr,o)}});var Yu=Qa({zerosLike_:function(e){const t={x:Ya(e,"x","zerosLike")};return Wa.runKernel(Dr,t)}});var Ju=Qa({divNoNan_:function(e,t){let n=Ya(e,"a","div"),r=Ya(t,"b","div");[n,r]=Fa(n,r);const a=Mo(n,r),s=Yu(a),i=Ku(r,s);return Xu(i,s,a)}});var Zu=Qa({dot_:function(e,t){const n=Ya(e,"t1","dot"),r=Ya(t,"t2","dot");q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(q(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=lu(n,[1,-1]),t=lu(r,[-1,1]),a=di(e,t);return lu(a,[])}if(1===n.rank&&2===r.rank){const e=lu(n,[1,-1]),t=lu(r,[r.shape[0],r.shape[1]]),a=di(e,t);return lu(a,[a.size])}if(2===n.rank&&1===r.rank){const e=lu(r,[-1,1]),t=di(n,e);return lu(t,[t.size])}{const e=lu(r,[r.shape[0],r.shape[1]]);return di(n,e)}}});var Qu=Qa({einsum_:function(e,...t){const n=t.map(((e,t)=>Ya(e,`tensors${t}`,"einsum"))),r={equation:e};return Wa.runKernel(Mt,n,r)}});var el=Qa({elu_:function(e){const t={x:Ya(e,"x","elu")};return Wa.runKernel(Ot,t)}});var tl=Qa({erf_:function(e){let t=Ya(e,"x","erf");q("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=qs(t,"float32"));const n={x:t};return Wa.runKernel(Lt,n)}});var nl=Qa({exp_:function(e){const t={x:Ya(e,"x","exp")};return Wa.runKernel(Bt,t)}});var rl=Qa({expandDims_:function(e,t=0){const n=Ya(e,"x","expandDims","string_or_numeric");q(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Wa.runKernel(Wt,r,a)}});var al=Qa({expm1_:function(e){const t={x:Ya(e,"x","expm1")};return Wa.runKernel(Vt,t)}});var sl=Qa({tile_:function(e,t){const n=Ya(e,"x","tile","string_or_numeric");q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Wa.runKernel(Tr,r,a)}});var il=Qa({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=js([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=lu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return sl(rl(i,0),[n[0],1,1]);if(2===n.length)return sl(rl(rl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return sl(rl(rl(rl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ol(e,t,n){const r={shape:e,value:t,dtype:n};return Wa.runKernel(Gt,{},r)}var ul=Qa({floor_:function(e){const t={x:Ya(e,"x","floor")};return Wa.runKernel(jt,t)}});var ll=Qa({gather_:function(e,t,n=0,r=0){const a={x:Ya(e,"x","gather"),indices:Ya(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Wa.runKernel(Xt,a,s)}});var cl=Qa({greater_:function(e,t){let n=Ya(e,"a","greater"),r=Ya(t,"b","greater");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(Jt,a)}});var hl=Qa({greaterEqual_:function(e,t){let n=Ya(e,"a","greaterEqual"),r=Ya(t,"b","greaterEqual");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(Zt,a)}});var pl=Qa({imag_:function(e){const t={input:Ya(e,"input","imag")};return Wa.runKernel(tn,t)}});var dl=Qa({isFinite_:function(e){const t={x:Ya(e,"x","isFinite")};return Wa.runKernel(nn,t)}});var fl=Qa({isInf_:function(e){const t={x:Ya(e,"x","isInf")};return Wa.runKernel(rn,t)}});var ml=Qa({isNaN_:function(e){const t={x:Ya(e,"x","isNaN")};return Wa.runKernel(an,t)}});var gl=Qa({leakyRelu_:function(e,t=.2){const n={x:Ya(e,"x","leakyRelu")},r={alpha:t};return Wa.runKernel(sn,n,r)}});var yl=Qa({less_:function(e,t){let n=Ya(e,"a","less"),r=Ya(t,"b","less");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(on,a)}});var bl=Qa({lessEqual_:function(e,t){let n=Ya(e,"a","lessEqual"),r=Ya(t,"b","lessEqual");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(un,a)}});function xl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Wa.runKernel(ln,{},r)}var vl=Qa({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Ya(e,"x","localResponseNormalization");q(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),q(ee(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=lu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=Wa.runKernel(gn,u,l);return o?lu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var wl=Qa({log_:function(e){const t={x:Ya(e,"x","log")};return Wa.runKernel(cn,t)}});var kl=Qa({log1p_:function(e){const t={x:Ya(e,"x","log1p")};return Wa.runKernel(hn,t)}});function Il(e){return q(we(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ya(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ya(n,"dy","tf.grad"):null;return Wa.tidy((()=>{const{value:t,grads:n}=Wa.gradients((()=>e(r)),[r],a);return null!=a&&K(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),El(n),n[0]}))}}function Nl(e){return q(we(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{q(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ja(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ya(n,"dy","tf.grads"):null;return Wa.tidy((()=>{const{value:t,grads:n}=Wa.gradients((()=>e(...r)),r,a);return null!=a&&K(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),El(n),n}))}}function Sl(e){return q(we(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{q(t instanceof ma,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),q(null==n||n instanceof ma,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=Wa.gradients((()=>e(t)),[t],n);return El(r),{grad:r[0],value:a}}}function Cl(e){return q(we(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{q(Array.isArray(t)&&t.every((e=>e instanceof ma)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),q(null==n||n instanceof ma,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Wa.gradients((()=>e(...t)),t,n);return null!=n&&K(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),El(r.grads),r}}function Tl(e,t){q(we(e),(()=>"The f passed in variableGrads(f) must be a function")),q(null==t||Array.isArray(t)&&t.every((e=>e instanceof ya)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Wa.registeredVariables)t.push(Wa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;q((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=Wa.gradients(e,t,null,!0);q(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),q(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function _l(e){return Wa.customGrad(e)}function El(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var $l=Qa({neg_:function(e){const t={x:Ya(e,"x","neg")};return Wa.runKernel(Fn,t)}});var Al=Qa({softplus_:function(e){const t={x:Ya(e,"x","softplus")};return Wa.runKernel(pr,t)}});var Fl=Qa({logSigmoid_:function(e){const t=Ya(e,"x","logSigmoid");return _l((e=>({value:$l(Al($l(e))),gradFunc:t=>Oo(t,du($l(e)))})))(t)}});var Rl=Qa({max_:function(e,t=null,n=!1){const r={x:Ya(e,"x","max")},a={reductionIndices:t,keepDims:n};return Wa.runKernel(bn,r,a)}});var Dl=Qa({sub_:function(e,t){let n=Ya(e,"a","sub"),r=Ya(t,"b","sub");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(Nr,a)}});var Ml=Qa({sum_:function(e,t=null,n=!1){let r=Ya(e,"x","sum");"bool"===r.dtype&&(r=qs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Wa.runKernel(fr,a,s)}});var Ol=Qa({logSoftmax_:function(e,t=-1){const n=Ya(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return _l(((e,n)=>{const r=Rl(e,t,!0),a=Dl(e,r),s=Dl(qs(a,"float32"),wl(Ml(nl(a),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,a=nl(r);return Dl(e,Oo(Ml(e,t,!0),a))}}}))(n)}});function zl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ll(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Pl(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Bl(e,t){return Ll(e,t.map((e=>1)),t)}function Wl(e,t,n){q(zl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Vl(e,t){if(zl(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ul(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Gl(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Hl=Qa({logSumExp_:function(e,t=null,n=!1){const r=Ya(e,"x","logSumExp"),a=oe(t,r.shape),s=Rl(r,a,!0),i=Dl(r,s),o=nl(i),u=Ml(o,a),l=wl(u),c=Ro(lu(s,l.shape),l);if(n){const e=Bl(c.shape,a);return lu(c,e)}return c}});var jl=Qa({logicalAnd_:function(e,t){const n=Ya(e,"a","logicalAnd","bool"),r=Ya(t,"b","logicalAnd","bool");qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(pn,a)}});var ql=Qa({logicalNot_:function(e){const t={x:Ya(e,"x","logicalNot","bool")};return Wa.runKernel(dn,t)}});var Kl=Qa({logicalOr_:function(e,t){const n=Ya(e,"a","logicalOr","bool"),r=Ya(t,"b","logicalOr","bool");qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(fn,a)}});var Xl=Qa({logicalXor_:function(e,t){const n=Ya(e,"a","logicalXor","bool"),r=Ya(t,"b","logicalXor","bool");return qu(n.shape,r.shape),jl(Kl(e,t),ql(jl(e,t)))}});var Yl=Qa({maxPool_:function(e,t,n,r,a){const s=Ya(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=lu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),q(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),q(ou(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&q(ee(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Wa.runKernel(vn,u,l);return o?lu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Jl=Qa({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=Ya(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=lu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),q(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),q("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&q(ee(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Wa.runKernel(kn,l,c);return u?lu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Zl=Qa({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Ya(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Wa.runKernel(Nn,s,i);return{result:o[0],indexes:o[1]}}});var Ql=Qa({maximum_:function(e,t){let n=Ya(e,"a","maximum"),r=Ya(t,"b","maximum");[n,r]=Fa(n,r),"bool"===n.dtype&&(n=qs(n,"int32"),r=qs(r,"int32")),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(xn,a)}});var ec=Qa({mean_:function(e,t=null,n=!1){const r={x:Ya(e,"x","mean")},a={axis:t,keepDims:n};return Wa.runKernel(Sn,r,a)}});function tc(e,t="float32"){if("complex64"===t){const t=tc(e,"float32"),n=tc(e,"float32");return es(t,n)}const n=Te(J(e),t);return Wa.makeTensor(n,e,t)}function nc(e,t="float32"){if("complex64"===t){const t=nc(e,"float32"),n=tc(e,"float32");return es(t,n)}const n=Ce(J(e),t);return Wa.makeTensor(n,e,t)}function rc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ya(e,"x","meshgrid",e instanceof ma?e.dtype:"float32");if(void 0===t)return[r];let a=Ya(t,"y","meshgrid",t instanceof ma?t.dtype:"float32");const s=J(r.shape),i=J(a.shape);return"xy"===n?(r=lu(r,[1,-1]),a=lu(a,[-1,1]),[di(nc([i,1],r.dtype),r),di(a,nc([1,s],a.dtype))]):(r=lu(r,[-1,1]),a=lu(a,[1,-1]),[di(r,nc([1,i],r.dtype)),di(nc([s,1],a.dtype),a)])}var ac=Qa({min_:function(e,t=null,n=!1){const r={x:Ya(e,"x","min")},a={axis:t,keepDims:n};return Wa.runKernel(Cn,r,a)}});var sc=Qa({minimum_:function(e,t){let n=Ya(e,"a","minimum"),r=Ya(t,"b","minimum");[n,r]=Fa(n,r),"bool"===n.dtype&&(n=qs(n,"int32"),r=qs(r,"int32")),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(Tn,a)}});var ic=Qa({mirrorPad_:function(e,t,n){q("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ya(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");q(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)q(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),q(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return Wa.runKernel(_n,i,s)}});var oc=Qa({mod_:function(e,t){let n=Ya(e,"a","mod"),r=Ya(t,"b","mod");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(En,a)}});var uc=Qa({square_:function(e){const t=Ya(e,"x","square");return Wa.runKernel("Square",{x:t},{})}});var lc=Qa({moments_:function(e,t=null,n=!1){const r=oe(t,(e=Ya(e,"x","moments")).shape),a=ec(e,r,n);let s=a.shape;n||(s=Bl(a.shape,r));const i=uc(Dl(qs(e,"float32"),lu(a,s)));return{mean:a,variance:ec(i,r,n)}}});var cc=Qa({multiRNNCell_:function(e,t,n,r){const a=Ya(t,"data","multiRNNCell"),s=Ja(n,"c","multiRNNCell"),i=Ja(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var hc=Qa({multinomial_:function(e,t,n,r=!1){const a=Ya(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?lu(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=Wa.runKernel($n,o,u);return 1===i?lu(l,[l.size]):l}});var pc=Qa({notEqual_:function(e,t){let n=Ya(e,"a","notEqual"),r=Ya(t,"b","notEqual");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(Rn,a)}});var dc=Qa({onesLike_:function(e){const t={x:Ya(e,"x","onesLike")};return Wa.runKernel(zn,t)}});var fc=Qa({outerProduct_:function(e,t){const n=Ya(e,"v1","outerProduct"),r=Ya(t,"v2","outerProduct");q(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=lu(n,[-1,1]),s=lu(r,[1,-1]);return di(a,s)}});var mc=Qa({pad_:function(e,t,n=0){const r=Ya(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Wa.runKernel(Bn,s,a)}});var gc=Qa({pad1d_:function(e,t,n=0){return q(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),mc(e,[t],n)}});var yc=Qa({pad2d_:function(e,t,n=0){return q(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),mc(e,t,n)}});var bc=Qa({pad3d_:function(e,t,n=0){return q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),mc(e,t,n)}});var xc=Qa({pad4d_:function(e,t,n=0){return q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),mc(e,t,n)}});var vc=Qa({spaceToBatchND_:function(e,t,n){const r=Ya(e,"x","spaceToBatchND");q(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),q(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),q(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return Wa.runKernel(mr,a,s)}});var wc=Qa({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=Ya(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=lu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(ou(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Jo(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([l.inHeight,l.inWidth],c,h),m=p?r:"valid",g=p?o:vc(o,c,d),y=("avg"===n?()=>cu(g,t,s,m):()=>Yl(g,t,s,m))(),b=p?y:yu(y,c,f);return u?lu(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});var kc=Qa({pow_:function(e,t){let n=Ya(e,"base","pow"),r=Ya(t,"exp","pow");[n,r]=Fa(n,r);const a={a:n,b:r};return Wa.runKernel(Vn,a)}});var Ic=Qa({prelu_:function(e,t){const n={x:Ya(e,"x","prelu"),alpha:Ya(t,"alpha","prelu")};return Wa.runKernel(Un,n)}});var Nc=Qa({prod_:function(e,t=null,n=!1){let r=Ya(e,"x","prod");"bool"===r.dtype&&(r=qs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Wa.runKernel(Gn,a,s)}});var Sc=Qa({rand_:function(e,t,n){const r=J(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Wa.makeTensor(a,e,n)}}),Cc=p(k()),Tc=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Cc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var _c=Qa({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Cc.alea(a.toString()),this.randn=new Tc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=js(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Ec=Qa({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Tc(t,n,r,!1,a),i=js(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var $c=Qa({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=js(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Cc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Ac(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Wa.runKernel(Hn,{},a)}var Fc=Qa({real_:function(e){const t={input:Ya(e,"input","real")};return Wa.runKernel(jn,t)}});var Rc=Qa({reciprocal_:function(e){const t={x:Ya(e,"x","reciprocal")};return Wa.runKernel(qn,t)}});var Dc=Qa({relu_:function(e){const t={x:Ya(e,"x","relu")};return Wa.runKernel(Kn,t)}});var Mc=Qa({relu6_:function(e){const t={x:Ya(e,"x","relu6")};return Wa.runKernel(er,t)}});var Oc=Qa({reverse_:function(e,t){const n={x:Ya(e,"x","reverse")},r={dims:t};return Wa.runKernel(tr,n,r)}});var zc=Qa({reverse1d_:function(e){const t=Ya(e,"x","reverse");return q(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Oc(t,0)}});var Lc=Qa({reverse2d_:function(e,t){const n=Ya(e,"x","reverse");return q(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Oc(n,t)}});var Pc=Qa({reverse3d_:function(e,t){const n=Ya(e,"x","reverse");return q(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Oc(n,t)}});var Bc=Qa({reverse4d_:function(e,t){const n=Ya(e,"x","reverse");return q(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Oc(n,t)}});var Wc=Qa({round_:function(e){const t={x:Ya(e,"x","round")};return Wa.runKernel(nr,t)}});var Vc=Qa({rsqrt_:function(e){const t={x:Ya(e,"x","rsqrt")};return Wa.runKernel(rr,t)}});function Uc(e,t){if((fe(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&fe(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ts(e,[],[],t)}var Gc=Qa({selu_:function(e){const t={x:Ya(e,"x","selu")};return Wa.runKernel(ir,t)}});var Hc=Qa({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Ya(e,"x","separableConv2d"),u=Ya(t,"depthwiseFilter","separableConv2d"),l=Ya(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=lu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");q(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),q(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),q(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),q(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),q(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];q(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Vu(c,u,r,a,i,s),m=$u(f,l,1,"valid",i);return h?lu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var jc=async function(e,t){const n=Ya(e,"x","setdiff1d"),r=Ya(t,"y","setdiff1d");q(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),q(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),q(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new pa([o],n.dtype),l=new pa([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};var qc=Qa({sign_:function(e){const t={x:Ya(e,"x","sign")};return Wa.runKernel(cr,t)}});var Kc=Qa({sin_:function(e){const t={x:Ya(e,"x","sin")};return Wa.runKernel(ur,t)}});var Xc=Qa({sinh_:function(e){const t={x:Ya(e,"x","sinh")};return Wa.runKernel(lr,t)}});var Yc=Qa({slice1d_:function(e,t,n){const r=Ya(e,"x","slice1d");return q(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),fu(r,[t],[n])}});var Jc=Qa({slice2d_:function(e,t,n){const r=Ya(e,"x","slice2d");return q(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}});var Zc=Qa({slice3d_:function(e,t,n){const r=Ya(e,"x","slice3d");return q(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}});var Qc=Qa({slice4d_:function(e,t,n){const r=Ya(e,"x","slice4d");return q(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),fu(r,t,n)}});var eh=Qa({softmax_:function(e,t=-1){const n=Ya(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Wa.runKernel(yr,r,a)}});var th=Qa({fft_:function(e){q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Wa.runKernel(Ut,t)}});var nh=Qa({ifft_:function(e){q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Wa.runKernel(en,t)}});var rh=Qa({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=lu(e,[n,t]);r=nh(a)}else{const a=[n,2*(t-1)],s=lu(Fc(e),[n,t]),i=lu(pl(e),[n,t]),o=Oc(fu(s,[0,1],[n,t-2]),1),u=Oo(Oc(fu(i,[0,1],[n,t-2]),1),Uc(-1)),l=pu([s,o],1),c=pu([i,u],1),h=lu(es(l,c),[a[0],a[1]]);r=nh(h)}if(r=Fc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=lu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});var ah=Qa({split_:function(e,t,n=0){const r={x:Ya(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Wa.runKernel(gr,r,a)}});var sh=Qa({rfft_:function(e,t){q("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=fu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=pu([e,tc(r)],e.shape.length-1),n=t}else a=e;const s=Yu(a),i=lu(es(a,s),[r,n]),o=th(i),u=Math.floor(n/2)+1,l=Fc(o),c=pl(o),h=ah(l,[u,n-u],l.shape.length-1),p=ah(c,[u,n-u],c.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=u,lu(es(h[0],p[0]),d)}});var ih=Qa({sqrt_:function(e){const t={x:Ya(e,"x","sqrt")};return Wa.runKernel(dr,t)}});var oh=Qa({squaredDifference_:function(e,t){let n=Ya(e,"a","squaredDifference"),r=Ya(t,"b","squaredDifference");[n,r]=Fa(n,r),qu(n.shape,r.shape);const a={a:n,b:r};return Wa.runKernel(wr,a,{})}});var uh=Qa({squeeze_:function(e,t){const n=Ya(e,"x","squeeze");return lu(n,ue(n.shape,t).newShape)}});var lh=Qa({stack_:function(e,t=0){const n=Ja(e,"tensors","stack","string_or_numeric");q(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&q(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Wa.runKernel(Pn,r,a)}});var ch=Qa({step_:function(e,t=0){const n={x:Ya(e,"x","step")},r={alpha:t};return Wa.runKernel(Mr,n,r)}});var hh=Qa({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:Ya(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Wa.runKernel(Ir,l,c)}});var ph=Qa({tan_:function(e){const t={x:Ya(e,"x","tan")};return Wa.runKernel(Sr,t)}});function dh(e,t){X(e);const n=qa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ts(e,null,n,t)}function fh(e,t,n){if(X(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=qa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ts(e,t,r,n)}function mh(e,t,n){if(X(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=qa(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ts(e,t,r,n)}function gh(e,t,n){if(X(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=qa(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ts(e,t,r,n)}function yh(e,t,n){if(X(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=qa(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ts(e,t=t||r,r,n)}var bh=Qa({topk_:function(e,t=1,n=!0){const r=Ya(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=Wa.runKernel(_r,s,i);return{values:o,indices:u}}});var xh=Qa({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Tc(t,n,r,!0,a),i=js(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var vh=Qa({unique_:function(e,t=0){const n=Ya(e,"x","unique","string_or_numeric");q(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=Wa.runKernel(Ar,r,a);return{values:s,indices:i}}});var wh=Qa({unsortedSegmentSum_:function(e,t,n){const r=Ya(e,"x","unsortedSegmentSum"),a=Ya(t,"segmentIds","unsortedSegmentSum","int32");q(ee(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return Wa.runKernel(Rr,s,i)}});var kh=Qa({unstack_:function(e,t=0){const n=Ya(e,"x","unstack","string_or_numeric");q(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Wa.runKernel(Fr,r,a)}});function Ih(e,t=!0,n,r){return Wa.makeVariable(e,t,n,r)}function Nh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=js(e,"int32"),a=js([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Sh=async function(e){const t=Ya(e,"condition","whereAsync","bool"),n=await t.data(),r=Nh(t.shape,n);return e!==t&&t.dispose(),r};var Ch=async function(e,t,n){const r=Ya(e,"tensor","boolMask"),a=Ya(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;q(i>0,(()=>"mask cannot be scalar")),K(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=lu(r,l),h=lu(a,[-1]),p=await Sh(h),d=uh(p,[1]),f=ll(c,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function Th(e,t,n=null){if(0===e.rank)return zo(e);if(1!==e.rank&&null===n)return Th(lu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ml(zo(e),n);if(t===1/0)return Rl(zo(e),n);if(t===-1/0)return ac(zo(e),n);if("euclidean"===t||2===t)return ih(Ml(kc(zo(e),Uc(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Rl(Ml(zo(e),n[0]),n[1]-1);if(t===1/0)return Rl(Ml(zo(e),n[1]),n[0]);if(t===-1/0)return ac(Ml(zo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ih(Ml(uc(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var _h=Qa({norm_:function(e,t="euclidean",n=null,r=!1){const a=Th(e=Ya(e,"x","norm"),t,n);let s=a.shape;if(r){const t=oe(n,e.shape);s=Bl(a.shape,t)}return lu(a,s)}});var Eh=Qa({movingAverage_:function(e,t,n,r,a=!0){const s=Ya(e,"v","movingAverage"),i=Ya(t,"x","movingAverage"),o=Ya(n,"decay","movingAverage");Ra(s,i),q(Q(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Uc(1),l=Dl(u,o);let c=Oo(Dl(i,s),l);if(a){q(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ya(r,"step","movingAverage");c=Mo(c,Dl(u,kc(o,e)))}return Ro(s,c)}});var $h=Qa({scatterND_:function(e,t,n){const r=Ya(e,"indices","scatterND","int32"),a=Ya(t,"updates","scatterND");Ei(a,r,n);const s={indices:r,updates:a},i={shape:n};return Wa.runKernel(ar,s,i)}});var Ah=Qa({sparseToDense_:function(e,t,n,r=0){const a=Ya(e,"sparseIndices","sparseToDense","int32"),s=Ya(t,"sparseValues","sparseToDense"),i=Ya(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return Wa.runKernel(vr,o,u)}});var Fh=Qa({gatherND_:function(e,t){const n=Ya(t,"indices","gatherND","int32"),r={params:Ya(e,"x","gatherND"),indices:n};return Wa.runKernel(Yt,r)}});var Rh=Qa({dropout_:function(e,t,n,r){const a=Ya(e,"x","dropout");if(q("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),q(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ma?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(Q(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Mo(ul(Ro($c(s,0,1,"float32",r),i)),i);return Oo(a,o)}});function Dh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Mh(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return dh(a,"float32")}var Oh=async function(e,t,n=1){const r=Ya(e,"predictions","inTopK"),a=Ya(t,"targets","inTopK");q(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),q(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),K(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];q(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=le("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),ns(c,a.shape,"bool")},zh={};h(zh,{conv2d:()=>Uh,depthwiseConv2d:()=>jh,matMul:()=>qh});var Lh=Qa({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=lu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=lu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),q(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),q(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),q(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];q(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),q(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&q(ee(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={x:o,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Wa.runKernel(gt,h,p)}});function Ph(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Oo(e,ch(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Bh(e,t){let n=t;const r=ju(e.shape,t.shape);return r.length>0&&(n=Ml(n,r)),lu(n,e.shape)}function Wh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Dc(e);if("elu"===t)return el(e);if("relu6"===t)return Mc(e);if("prelu"===t)return Ic(e,n);if("leakyrelu"===t)return gl(e,r);if("sigmoid"===t)return du(e);throw new Error(`Unknown fused activation ${t}.`)}var Vh=(e,t)=>!(e>0)||"linear"===t;var Uh=Qa({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Vh(Wa.state.gradientDepth,u)){let h=$u(e,t,n,r,a,s,i);return null!=o&&(h=Ro(h,o)),Wh(h,u,l,c)}const h=Ya(e,"x","conv2d"),p=Ya(t,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=lu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),q(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),q(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&q(ee(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),q(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),q(ou(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),q("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Qo(d.shape,p.shape,n,s,r,i);let g,y;null!=o&&(g=Ya(o,"bias","fused conv2d"),[g]=Fa(g,h),qu(m.outShape,g.shape)),null!=l&&(y=Ya(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=Ph(e,o,u);q(iu(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[Fu(i.shape,c,a,n,r),Lh(i,c,a.shape,n,r)];if(null!=l){const e=Bh(l,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){return _l(((e,t,n)=>{let r=Wa.runKernel(Pr,x,v);return n([t,e,r]),f&&(r=lu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p)}return _l(((e,t,n,r)=>{let a=Wa.runKernel(Pr,x,v);return r([t,e,a,n]),f&&(a=lu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(d,p,g)}});var Gh=Qa({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=lu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=lu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Wa.runKernel(_t,l,c)}});var Hh=Qa({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=lu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=Wa.runKernel(Et,l,c);return u?lu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var jh=Qa({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Vh(Wa.state.gradientDepth,u)){let h=Vu(e,t,n,r,a,s,i);return null!=o&&(h=Ro(h,o)),Wh(h,u,l,c)}const h=Ya(e,"x","depthwiseConv2d"),p=Ya(t,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=lu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),q(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),q(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),q(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),q(ou(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&q(ee(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=Qo(d.shape,p.shape,n,s,r,i,!0);let g,y;null!=o&&(g=Ya(o,"bias","fused conv2d"),[g]=Fa(g,h),qu(m.outShape,g.shape)),null!=l&&(y=Ya(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{q(iu(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,h=Ph(e,l,u),p=Hh(o.shape,h,a,n,r,s,i),d=Gh(o,h,a.shape,n,r,s,i);if(null!=c){return[p,d,Bh(g,h)]}return[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){return _l(((e,t,n)=>{let r=Wa.runKernel(Br,x,v);return n([t,e,r]),f&&(r=lu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p)}return _l(((e,t,n,r)=>{let a=Wa.runKernel(Br,x,v);return r([t,e,a,n]),f&&(a=lu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(d,p,g)}});var qh=Qa({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Vh(Wa.state.gradientDepth,s)){let u=di(e,t,n,r);return null!=a&&(u=Ro(u,a)),Wh(u,s,i,o)}let u=Ya(e,"a","fused matMul"),l=Ya(t,"b","fused matMul");[u,l]=Fa(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=J(f),y=J(m);q(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),q(Q(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),q(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=u.shape.slice(0,-2).concat([p,d]),x=lu(u,n?[g,c,p]:[g,p,c]),v=lu(l,r?[y,d,h]:[y,h,d]);let w,k;null!=a&&(w=Ya(a,"bias","fused matMul"),[w]=Fa(w,u),qu(b,w.shape)),null!=i&&(k=Ya(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Ph(lu(e,u.shape),u,s);let h,p;if(n||r?!n&&r?(h=di(c,o,!1,!1),p=di(c,i,!0,!1)):n&&!r?(h=di(o,c,!1,!0),p=di(i,c,!1,!1)):(h=di(o,c,!0,!0),p=di(c,i,!0,!0)):(h=di(c,o,!1,!0),p=di(i,c,!0,!1)),null!=a){return[h,p,Bh(l,c)]}return[h,p]},N={a:x,b:v,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){return _l(((e,t,n)=>{const r=Wa.runKernel(Lr,N,S);return n([e,t,r]),{value:lu(r,b),gradFunc:I}}))(x,v)}return _l(((e,t,n,r)=>{const a=Wa.runKernel(Lr,N,S);return r([e,t,a,n]),{value:lu(a,b),gradFunc:I}}))(x,v,w)}});var Kh=Qa({hammingWindow_:function(e){return Mh(e,.54,.46)}});var Xh=Qa({hannWindow_:function(e){return Mh(e,.5,.5)}});var Yh=Qa({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(fu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=pu([fu(e,s,t-r),ol([r],a)]);i.push(o),s+=n}return 0===i.length?fh([],[0,t]):lu(pu(i),[i.length,t])}});var Jh=Qa({stft_:function(e,t,n,r,a=Xh){null==r&&(r=Dh(t));const s=Yh(e,t,n),i=Oo(s,a(t));return sh(i,r)}});var Zh=Qa({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Ya(e,"image","cropAndResize"),o=Ya(t,"boxes","cropAndResize","float32"),u=Ya(n,"boxInd","cropAndResize","int32"),l=o.shape[0];q(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),q(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),q(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),q(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),q(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),q("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return Wa.runKernel(Nt,c,h)}});var Qh=Qa({flipLeftRight_:function(e){const t=Ya(e,"image","flipLeftRight","float32");q(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Wa.runKernel(Ht,n,{})}});var ep=Qa({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ya(e,"image","rotateWithOffset","float32");q(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return Wa.runKernel(zr,s,i)}});function tp(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),q(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),q(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),q(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),q(1===t.rank,(()=>"scores must be a 1D tensor")),q(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),q(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var np=Qa({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ya(e,"boxes","nonMaxSuppression"),i=Ya(t,"scores","nonMaxSuppression"),o=tp(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Wa.runKernel(Dn,{boxes:s,scores:i},u)}});function rp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||ap)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function ap(e,t){return e>t?1:e<t?-1:0}function sp(e,t,n,r,a){return up(e,t,n,r,a,0)}function ip(e,t,n,r,a,s){return up(e,t,n,r,a,0,!1,s,!0)}function op(e,t,n,r,a,s){return up(e,t,n,r,a,s,!0)}function up(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(hp);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=lp(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*cp(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&rp(l,t,hp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function lp(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function cp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function hp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var pp=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ya(e,"boxes","nonMaxSuppressionAsync"),i=Ya(t,"scores","nonMaxSuppressionAsync"),o=tp(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=sp(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),dh(h,"int32")};var dp=Qa({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ya(e,"boxes","nonMaxSuppression"),o=Ya(t,"scores","nonMaxSuppression"),u=tp(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=Wa.runKernel(On,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});var fp=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ya(e,"boxes","nonMaxSuppressionAsync"),o=Ya(t,"scores","nonMaxSuppressionAsync"),u=tp(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=op(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:dh(p,"int32"),selectedScores:dh(d)}};var mp=Qa({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ya(e,"boxes","nonMaxSuppression"),o=Ya(t,"scores","nonMaxSuppression"),u=tp(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Wa.runKernel(Mn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});var gp=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ya(e,"boxes","nonMaxSuppressionAsync"),o=Ya(t,"scores","nonMaxSuppressionAsync"),u=tp(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ip(p,d,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:dh(f,"int32"),validOutputs:Uc(m,"int32")}};var yp=Qa({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ya(e,"images","resizeBilinear");q(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),q(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),q(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=lu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Wa.runKernel(Zn,o,u);return i?lu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var bp=Qa({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ya(e,"images","resizeNearestNeighbor");q(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),q(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),q("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),q(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=lu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Wa.runKernel(Yn,o,u);return i?lu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var xp=Qa({threshold_:function(e,t="binary",n=!1,r=.5){const a=Ya(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=Oo(dh([r]),255);if(q(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),q(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),q("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),q("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=ah(a,[1,1,1],-1);const e=Oo(i,.2989),t=Oo(o,.587),n=Oo(u,.114);l=Ro(Ro(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,s,i,o,u=dh([-1]),l=dh([0]),c=dh([0]);for(let h=0;h<e.size-1;h++){n=fu(e,0,h+1),r=fu(e,h+1),i=Mo(Ml(n),t),o=Mo(Ml(r),t);const p=Ml(Oo(n,Ac(0,n.size)));a=Mo(p,Ml(n));const d=ol(r.shape,n.size),f=Ro(Ac(0,r.size),d),m=Oo(r,f);s=Mo(Ml(m),Ml(r));const g=Dl(a,s),y=Dl(a,s),b=Oo(i,o);c=Oo(Oo(b,g),y);const x=cl(c,l);l=Xu(x,c,l),u=Xu(x,dh([h]),u)}return u}(ku(qs(Wc(l),"int32"),ns([]),256),s)}const h=n?bl(l,c):cl(l,c);return qs(Oo(h,255),"int32")}});var vp=Qa({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Ya(e,"image","transform","float32"),o=Ya(t,"transforms","transform","float32");q(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),q(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Wa.runKernel(Er,u,l)}});var wp=Qa({bandPart_:function(e,t,n){q(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),q(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ya(e,"a","bandPart");q(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=lu(Ac(0,s,1,"int32"),[-1,1]),u=Ac(0,i,1,"int32"),l=Dl(o,u),c=jl(bl(l,Uc(+t,"int32")),hl(l,Uc(-n,"int32"))),h=tc([s,i],r.dtype);return lu(lh(kh(lu(r,[-1,s,i])).map((e=>Xu(c,e,h)))),a)}});var kp=Qa({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,q(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)q(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ah(e,e.shape[0],0).map((e=>uh(e,[0])));q(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Wa.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Oo(Ml(Oo(n[r],e)),n[r]);e=Dl(e,t)}return Mo(e,_h(e,"euclidean"))})));return t?lh(n,0):n}});function Ip(e,t=!1){return Wa.tidy((()=>{q(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=il(n),s=Ks(e);const i=fh([[1]],[1,1]);let o=Ks(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=Wa.tidy((()=>{const t=fu(s,[e,e],[n-e,1]),u=_h(t),l=fu(s,[e,e],[1,1]),c=Xu(cl(l,0),fh([[-1]]),fh([[1]])),h=Dl(l,Oo(c,u)),p=Mo(t,h);o=1===p.shape[0]?Ks(i):pu([i,fu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=$l(Mo(di(c,h),u)),f=fu(s,[e,0],[n-e,r]),m=Oo(d,o),g=mi(o);if(0===e)s=Dl(f,di(m,di(g,f)));else{const t=Dl(f,di(m,di(g,f)));s=pu([fu(s,[0,0],[e,r]),t],0)}const y=mi(m),b=fu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Dl(b,di(di(b,o),y));else{const t=Dl(b,di(di(b,o),y));a=pu([fu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),wo([t,u,l])}return!t&&n>r&&(a=fu(a,[0,0],[n,r]),s=fu(s,[0,0],[r,r])),[a,s]}))}var Np,Sp,Cp=Qa({qr_:function(e,t=!1){if(q(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ip(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=kh(lu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=Ip(e,t);a.push(n),s.push(r)}));return[lu(lh(a,0),e.shape),lu(lh(s,0),e.shape)]}}});(Sp=Np||(Np={}))[Sp.NONE=0]="NONE",Sp[Sp.MEAN=1]="MEAN",Sp[Sp.SUM=2]="SUM",Sp[Sp.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var Tp=Qa({computeWeightedLoss_:function(e,t,n=Np.SUM_BY_NONZERO_WEIGHTS){const r=Ya(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ya(t,"weights","computeWeightedLoss"));const s=null==a?r:Oo(r,a);if(n===Np.NONE)return s;if(n===Np.SUM)return Ml(s);if(n===Np.MEAN){if(null==a)return ec(s);{const e=r.size/a.size,t=Mo(Ml(s),Ml(a));return e>1?Mo(t,Uc(e)):t}}if(n===Np.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Mo(Ml(s),Uc(r.size));{const e=Oo(a,nc(r.shape)),t=qs(Ml(pc(e,Uc(0))),"float32");return Mo(Ml(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var _p=Qa({absoluteDifference_:function(e,t,n,r=Np.SUM_BY_NONZERO_WEIGHTS){const a=Ya(e,"labels","absoluteDifference"),s=Ya(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ya(n,"weights","absoluteDifference")),K(a.shape,s.shape,"Error in absoluteDifference: ");const o=zo(Dl(a,s));return Tp(o,i,r)}});var Ep=Qa({cosineDistance_:function(e,t,n,r,a=Np.SUM_BY_NONZERO_WEIGHTS){const s=Ya(e,"labels","cosineDistance"),i=Ya(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ya(r,"weights","cosineDistance")),K(s.shape,i.shape,"Error in cosineDistance: ");const u=Uc(1),l=Dl(u,Ml(Oo(s,i),n,!0));return Tp(l,o,a)}});var $p=Qa({hingeLoss_:function(e,t,n,r=Np.SUM_BY_NONZERO_WEIGHTS){let a=Ya(e,"labels","hingeLoss");const s=Ya(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ya(n,"weights","hingeLoss")),K(a.shape,s.shape,"Error in hingeLoss: ");const o=Uc(1);a=Dl(Oo(Uc(2),a),o);const u=Dc(Dl(o,Oo(a,s)));return Tp(u,i,r)}});var Ap=Qa({huberLoss_:function(e,t,n,r=1,a=Np.SUM_BY_NONZERO_WEIGHTS){const s=Ya(e,"labels","huberLoss"),i=Ya(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ya(n,"weights","huberLoss")),K(s.shape,i.shape,"Error in huberLoss: ");const u=Uc(r),l=zo(Dl(i,s)),c=sc(l,u),h=Dl(l,c),p=Ro(Oo(Uc(.5),uc(c)),Oo(u,h));return Tp(p,o,a)}});var Fp=Qa({logLoss_:function(e,t,n,r=1e-7,a=Np.SUM_BY_NONZERO_WEIGHTS){const s=Ya(e,"labels","logLoss"),i=Ya(t,"predictions","logLoss");let o=null;null!=n&&(o=Ya(n,"weights","logLoss")),K(s.shape,i.shape,"Error in logLoss: ");const u=Uc(1),l=Uc(r),c=$l(Oo(s,wl(Ro(i,l)))),h=Oo(Dl(u,s),wl(Ro(Dl(u,i),l))),p=Dl(c,h);return Tp(p,o,a)}});var Rp=Qa({meanSquaredError_:function(e,t,n,r=Np.SUM_BY_NONZERO_WEIGHTS){const a=Ya(e,"labels","meanSquaredError"),s=Ya(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ya(n,"weights","meanSquaredError")),K(a.shape,s.shape,"Error in meanSquaredError: ");const o=oh(a,s);return Tp(o,i,r)}});var Dp=Qa({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Np.SUM_BY_NONZERO_WEIGHTS){let s=Ya(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ya(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ya(n,"weights","sigmoidCrossEntropy")),K(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Uc(r),t=Uc(1),n=Uc(.5);s=Ro(Oo(s,Dl(t,e)),Oo(n,e))}const u=function(e,t){const n=Ya(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ya(t,"logits","sigmoidCrossEntropyWithLogits");K(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Dc(r),s=Oo(r,n),i=kl(nl($l(zo(r))));return Ro(Dl(a,s),i)}(s,i);return Tp(u,o,a)}});var Mp=Qa({softmaxCrossEntropy_:function(e,t,n,r=0,a=Np.SUM_BY_NONZERO_WEIGHTS){let s=Ya(e,"onehotLabels","softmaxCrossEntropy");const i=Ya(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ya(n,"weights","softmaxCrossEntropy")),K(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Uc(r),t=Uc(1),n=Uc(s.shape[1]);s=Ro(Oo(s,Dl(t,e)),Mo(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return _l(((e,t,r)=>{const a=Hl(t,[n],!0),s=Dl(qs(t,"float32"),a);r([e,s]);const i=$l(Oo(s,e));return{value:Ml(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Bl(e.shape,[n]);return[Oo(lu(e,s),Dl(qs(r,"float32"),nl(a))),Oo(lu(e,s),Dl(nl(a),qs(r,"float32")))]}}}))(e,t)}(s,i);return Tp(u,o,a)}});var Op=Qa({sparseFillEmptyRows_:function(e,t,n,r){const a=Ya(e,"indices","sparseFillEmptyRows"),s=Ya(t,"values","sparseFillEmptyRows"),i=Ya(n,"denseShape","sparseFillEmptyRows"),o=Ya(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=Wa.runKernel(br,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});var zp=Qa({sparseReshape_:function(e,t,n){const r=Ya(e,"inputIndices","sparseReshape"),a=Ya(t,"inputShape","sparseReshape"),s=Ya(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Wa.runKernel(xr,i);return{outputIndices:o[0],outputShape:o[1]}}}),Lp={fft:th,ifft:nh,rfft:sh,irfft:rh},Pp={hammingWindow:Kh,hannWindow:Xh,frame:Yh,stft:Jh},Bp={flipLeftRight:Qh,resizeNearestNeighbor:bp,resizeBilinear:yp,rotateWithOffset:ep,cropAndResize:Zh,nonMaxSuppression:np,nonMaxSuppressionAsync:pp,nonMaxSuppressionWithScore:dp,nonMaxSuppressionWithScoreAsync:fp,nonMaxSuppressionPadded:mp,nonMaxSuppressionPaddedAsync:gp,threshold:xp,transform:vp},Wp={bandPart:wp,gramSchmidt:kp,qr:Cp},Vp={absoluteDifference:_p,computeWeightedLoss:Tp,cosineDistance:Ep,hingeLoss:$p,huberLoss:Ap,logLoss:Fp,meanSquaredError:Rp,sigmoidCrossEntropy:Dp,softmaxCrossEntropy:Mp},Up={sparseFillEmptyRows:Op,sparseReshape:zp},Gp=class extends Xi{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return wo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Tl(e,t)}dispose(){null!=this.iterations_&&wo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Uc(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Gp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Hp=class extends Gp{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Wa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Wa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:vo((()=>Yu(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:vo((()=>Yu(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;vo((()=>{const e=Ro(Oo(s,this.rho),Oo(uc(a),1-this.rho)),t=Oo(Mo(ih(Ro(i,this.epsilon)),ih(Ro(s,this.epsilon))),a),n=Ro(Oo(i,this.rho),Oo(uc(t),1-this.rho));s.assign(e),i.assign(n);const o=Ro(Oo(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(wo(this.accumulatedGrads.map((e=>e.variable))),wo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Hp.className="Adadelta",Ji(Hp);var jp=class extends Gp{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Wa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:vo((()=>ol(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;vo((()=>{const e=Ro(s,uc(a));s.assign(e);const t=Ro(Oo(Mo(a,ih(Ro(e,Wa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&wo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};jp.className="Adagrad",Ji(jp);var qp=class extends Gp{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],vo((()=>{this.accBeta1=Uc(t).variable(),this.accBeta2=Uc(n).variable()})),null==r&&(this.epsilon=Wa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);vo((()=>{const n=Dl(1,this.accBeta1),r=Dl(1,this.accBeta2);t.forEach(((t,a)=>{const s=Wa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:vo((()=>Yu(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:vo((()=>Yu(s).variable(false)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Ro(Oo(o,this.beta1),Oo(i,1-this.beta1)),c=Ro(Oo(u,this.beta2),Oo(uc(i),1-this.beta2)),h=Mo(l,n),p=Mo(c,r);o.assign(l),u.assign(c);const d=Ro(Oo(Mo(h,Ro(ih(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(Oo(this.accBeta1,this.beta1)),this.accBeta2.assign(Oo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&wo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&wo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),vo((()=>{this.accBeta1.assign(kc(this.beta1,this.iterations_+1)),this.accBeta2.assign(kc(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};qp.className="Adam",Ji(qp);var Kp=class extends Gp{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],vo((()=>{this.iteration=Uc(0).variable(),this.accBeta1=Uc(t).variable()})),null==r&&(this.epsilon=Wa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);vo((()=>{const n=Dl(1,this.accBeta1),r=Mo(-this.learningRate,Ro(Oo(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Wa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Yu(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Yu(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Ro(Oo(o,this.beta1),Oo(i,1-this.beta1)),c=Oo(u,this.beta2),h=zo(i),p=Ql(c,h);o.assign(l),u.assign(p);const d=Ro(Oo(Mo(r,n),Mo(l,Ro(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign(Ro(this.iteration,1)),this.accBeta1.assign(Oo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&wo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&wo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Kp.className="Adamax",Ji(Kp);var Xp=class extends Gp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Wa.registeredVariables[t];vo((()=>{const e=Ro(Oo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ko(Uc(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Xp.className="SGD",Ji(Xp);var Yp=class extends Xp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Uc(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Wa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:vo((()=>Yu(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&vo((()=>{let e;const t=Ro(Oo(this.m,a),s);e=this.useNesterov?Ro(Oo(this.c,Ro(s,Oo(t,this.m))),r):Ro(Oo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&wo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Yp.className="Momentum",Ji(Yp);var Jp=class extends Gp{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Wa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Wa.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:vo((()=>Yu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:vo((()=>Yu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:vo((()=>Yu(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;vo((()=>{const e=Ro(Oo(i,this.decay),Oo(uc(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Ro(Oo(t,this.decay),Oo(s,1-this.decay)),u=Mo(Oo(s,this.learningRate),ih(Dl(e,Ro(uc(a),this.epsilon)))),l=Ro(Oo(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Dl(r,l);r.assign(c)}else{const e=Ro(Oo(i,this.decay),Oo(uc(s),1-this.decay)),t=Ro(Oo(o,this.momentum),Mo(Oo(s,this.learningRate),ih(Ro(e,this.epsilon))));i.assign(e),o.assign(t);const n=Dl(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&wo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&wo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&wo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Jp.className="RMSProp",Ji(Jp);var Zp=class{static sgd(e){return new Xp(e)}static momentum(e,t,n=!1){return new Yp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Jp(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new qp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Hp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Kp(e,t,n,r,a)}static adagrad(e,t=.1){return new jp(e,t)}},Qp={sgd:Zp.sgd,momentum:Zp.momentum,adadelta:Zp.adadelta,adagrad:Zp.adagrad,rmsprop:Zp.rmsprop,adamax:Zp.adamax,adam:Zp.adam},ed="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function td(){return new Promise((e=>ed((()=>e()))))}var nd={};function rd(e,t){const n=e[0].length;e.forEach(((e,t)=>{q(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),q(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)q(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function ad(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}h(nd,{ERF_A1:()=>gd,ERF_A2:()=>yd,ERF_A3:()=>bd,ERF_A4:()=>xd,ERF_A5:()=>vd,ERF_P:()=>md,PARALLELIZE_THRESHOLD:()=>sd,SELU_SCALE:()=>fd,SELU_SCALEALPHA:()=>dd,applyActivation:()=>Wh,assertAndGetBroadcastShape:()=>qu,assertAxesAreInnerMostDims:()=>Wl,assertParamsConsistent:()=>rd,assignToTypedArray:()=>_d,axesAreInnerMostDims:()=>zl,calculateShapes:()=>$i,checkEinsumDimSizes:()=>Md,combineLocations:()=>Ll,complexWithEvenIndex:()=>Sd,complexWithOddIndex:()=>Cd,computeConv2DInfo:()=>Qo,computeConv3DInfo:()=>eu,computeDefaultPad:()=>tu,computeDilation2DInfo:()=>Yo,computeOptimalWindowSize:()=>id,computeOutAndReduceShapes:()=>Pl,computeOutShape:()=>ad,computePool2DInfo:()=>Jo,computePool3DInfo:()=>Zo,convertConv2DDataFormat:()=>uu,decodeEinsumEquation:()=>Rd,eitherStridesOrDilationsAreOne:()=>ou,expandShapeToKeepDim:()=>Bl,exponent:()=>$d,exponents:()=>Ed,fromStringArrayToUint8:()=>Hd,fromUint8ToStringArray:()=>Gd,getAxesPermutation:()=>Vl,getBroadcastDims:()=>Hu,getComplexWithIndex:()=>Td,getEinsumComputePath:()=>Od,getEinsumPermutation:()=>Dd,getFusedBiasGradient:()=>Bh,getFusedDyActivation:()=>Ph,getImageCenter:()=>od,getInnerMostAxes:()=>Gl,getPermuted:()=>ld,getReductionAxes:()=>ju,getReshaped:()=>ud,getReshapedPermuted:()=>cd,getSliceBeginCoords:()=>hd,getSliceSize:()=>pd,getUndoAxesPermutation:()=>Ul,isIdentityPermutation:()=>zd,log:()=>kd,mergeRealAndImagArrays:()=>Id,prepareAndValidate:()=>Ci,prepareSplitSize:()=>Pd,segment_util:()=>Bd,shouldFuse:()=>Vh,slice_util:()=>Ai,splitRealAndImagArrays:()=>Nd,tupleValuesAreOne:()=>iu,upcastType:()=>$a,validateInput:()=>Ei,validateUpdateShape:()=>_i,warn:()=>wd});var sd=30;function id(e){return e<=sd?e:ke(e,Math.floor(Math.sqrt(e)))}function od(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ud(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function ld(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function cd(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function hd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pd(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var dd=1.7580993408473768,fd=1.0507009873554805,md=.3275911,gd=.254829592,yd=-.284496736,bd=1.421413741,xd=-1.453152027,vd=1.061405429;function wd(...e){Oe().getBool("IS_TEST")}function kd(...e){Oe().getBool("IS_TEST")}function Id(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Nd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Sd(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Cd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Td(e,t){return{real:e[2*t],imag:e[2*t+1]}}function _d(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ed(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function $d(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Ad="->",Fd=/->/g;function Rd(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Fd,"").length)/Ad.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(Ad);q(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Dd(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Md(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:q(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Od(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Ld(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function zd(e){return e.every(((e,t)=>e===t))}function Ld(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Pd(e,t,n=0){let r=[];if("number"==typeof t)q(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{q(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}q(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}var Bd={};function Wd(e,t){let n,r=!1;for(e<=sd?(n=e,r=!0):n=ke(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ke(e,n+1);return n}function Vd(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Ud(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Gd(e){try{return e.map((e=>aa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Hd(e){return e.map((e=>ra(e)))}h(Bd,{collectGatherOpShapeInfo:()=>Ud,computeOutShape:()=>Vd,segOpComputeOptimalWindowSize:()=>Wd});var jd={};h(jd,{nonMaxSuppressionV3Impl:()=>sp,nonMaxSuppressionV4Impl:()=>ip,nonMaxSuppressionV5Impl:()=>op,whereImpl:()=>Nh});var qd={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,ch(qs(n,"float32"),-1))}}},Kd={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=uc(qs(n,"float32")),r=ih(Dl(Uc(1),t));return $l(Mo(e,r))}}}},Xd={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ih(Dl(uc(qs(n,"float32")),1));return Mo(e,t)}}}},Yd={kernelName:Ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{let t=e;const r=ju(n.shape,a);return r.length>0&&(t=Ml(t,r)),lu(t,n.shape)},b:()=>{let t=e;const n=ju(r.shape,a);return n.length>0&&(t=Ml(t,n)),lu(t,r.shape)}}}},Jd={kernelName:He,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Zd={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yu(n)}}},Qd={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Yu(n)}}},ef={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,ih(Dl(Uc(1),uc(qs(n,"float32")))))}}},tf={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ih(Ro(Uc(1),uc(qs(n,"float32"))));return Mo(e,t)}}}},nf={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{const t=Ro(uc(n),uc(r));let s=Oo(e,Mo(r,t));const i=ju(n.shape,a);return i.length>0&&(s=Ml(s,i)),lu(s,n.shape)},b:()=>{const t=Ro(uc(n),uc(r));let s=$l(Oo(e,Mo(n,t)));const i=ju(r.shape,a);return i.length>0&&(s=Ml(s,i)),lu(s,r.shape)}}}},rf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Ro(uc(qs(n,"float32")),1))}}},af={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Dl(Uc(1),uc(qs(n,"float32"))))}}};var sf=Qa({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Ya(e,"dy","avgPool3dGrad"),o=Ya(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=lu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=lu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),q(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),q(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&q(ee(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const h={dy:u,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},d=Wa.runKernel(at,h,p);return c?lu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),of={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>sf(e,r,a,s,i,o)}}};var uf=Qa({avgPoolGrad_:function(e,t,n,r,a){const s=Ya(e,"dy","avgPoolGrad"),i=Ya(t,"input","avgPoolGrad");q(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=lu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=lu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),q(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),q(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},p=Wa.runKernel(nt,c,h);return l?lu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),lf={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>uf(e,r,a,s,i)}}},cf={kernelName:st,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>di(e,a,!1,!1),b:()=>di(e,r,!0,!1)}:s&&!i?{a:()=>di(a,e,!1,!0),b:()=>di(r,e,!1,!1)}:{a:()=>di(a,e,!0,!0),b:()=>di(e,r,!0,!0)}:{a:()=>di(e,a,!1,!0),b:()=>di(r,e,!0,!1)}}},hf={kernelName:it,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>vc(e,r,a)}}},pf={kernelName:ut,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Ml(e,o,!0)}}},df={kernelName:lt,gradFunc:e=>({x:()=>e.clone()})},ff={kernelName:ct,gradFunc:e=>({x:()=>Yu(e)})},mf={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Xu(jl(hl(r,a),bl(r,s)),e,Yu(e))}}},gf={kernelName:dt,inputsToSave:["x"],gradFunc:qd.gradFunc},yf={kernelName:ft,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=oe(a,t[0].shape)[0],i=r.map((e=>e[s]));return ah(e,i,s).map((e=>()=>e))}},bf={kernelName:mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return q(iu(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Fu(r.shape,e,a,i,o,u),filter:()=>Lh(r,e,a.shape,i,o,u)}}},xf={kernelName:yt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>$u(e,a,s,i,o,1,u),filter:()=>Lh(e,r,a.shape,s,i,o,u)}}};var vf=Qa({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=lu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=lu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),q(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),q(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),q(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),q(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),q(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return Wa.runKernel(xt,o,u)}}),wf={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;q(iu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Mu(i.shape,e,o,a,s),filter:()=>vf(i,e,o.shape,a,s)}}},kf={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo($l(Kc(qs(n,"float32"))),e)}}},If={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Xc(qs(n,"float32")),e)}}},Nf={kernelName:It,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Vl([a],r.rank);let n=Pu(e,a,s,!i);return null!=t&&(n=mi(n,t)),n}}}},Sf={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;q(iu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return q(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),q(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),q(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),q(ou(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&q(ee(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Hh(u.shape,e,l,a,s,r,i),filter:()=>Gh(u,e,l.shape,a,s,r,i)}}},Cf={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Wa.runKernel(Ft,s,n),filter:()=>Wa.runKernel(Rt,i,n)}}},Tf={kernelName:Ot,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Wa.runKernel(zt,r)}}},_f={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oo(nl($l(uc(n))),2/Math.sqrt(Math.PI));return{x:()=>Oo(e,r)}}},Ef={kernelName:Bt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,n)}}},$f={kernelName:Wt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>lu(e,n.shape)}}},Af={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,nl(n))}}},Ff={kernelName:jt,gradFunc:e=>({x:()=>Yu(e)})},Rf={kernelName:qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{const t=Mo(e,qs(r,"float32")),s=ju(n.shape,a);return s.length>0?lu(Ml(t,s),n.shape):t},b:()=>{let t=Oo(e,qs(n,"float32"));const s=ju(r.shape,a);s.length>0&&(t=lu(Ml(t,s),r.shape));const i=uc(r);return $l(Mo(t,qs(i,"float32")))}}}},Df={kernelName:Kt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Uc(1):o,l=ju(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=Dl(a,s),p=Oo(e,u),d=Vc(Ro(i,Uc(r))),f=Oo(Oo(Oo(d,d),d),Uc(-.5));return{x:()=>1===s.rank?lu(Oo(Oo(e,sl(lu(d,[1,1,1,s.shape[0]]),c)),u),a.shape):lu(Oo(Oo(e,d),u),a.shape),mean:()=>{let e=Oo(Oo(d,Uc(-1)),p);return 1===s.rank&&(e=Ml(e,l)),lu(e,s.shape)},variance:()=>{let e=Oo(Oo(f,h),p);return 1===s.rank&&(e=Ml(e,l)),lu(e,s.shape)},scale:()=>{const t=Oo(h,d);let n=Oo(e,t);return 1===s.rank&&(n=Ml(n,l)),lu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Ml(t,l)),lu(t,s.shape)}}}},Mf={kernelName:Xt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=oe(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=Of(0,u),p=Of(u+1,u+1+c),d=zf([o,[n],l]),f=lu(e,d),m=lu(a,[n]),g=zf([[u],h,p]),y=mi(f,g);let b=wh(y,m,r.shape[i]);const x=Ul(g);return b=mi(b,x),b},indices:()=>a}}};function Of(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function zf(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Lf={kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Yu(n),b:()=>Yu(r)}}},Pf={kernelName:Qt,gradFunc:e=>({x:()=>qs(e,"float32")})},Bf={kernelName:nn,gradFunc:e=>({x:()=>Yu(e)})},Wf={kernelName:rn,gradFunc:e=>({x:()=>Yu(e)})},Vf={kernelName:an,gradFunc:e=>({x:()=>Yu(e)})},Uf={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=cl(r,0);return{x:()=>Xu(s,e,Oo(e,a))}}},Gf={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Ro(n,1))}}},Hf={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,qs(n,"float32"))}}},jf={kernelName:mn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=nl(r);return Dl(e,Oo(Ml(e,a,!0),t))}}}};var qf=Qa({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return Wa.runKernel(yn,o,u)}}),Kf={kernelName:gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>qf(r,a,e,s,i,o,u)}}};function Xf(e,t,n,r){return t.rank<n.rank&&(t=lu(t,Bl(t.shape,r))),e.rank<n.rank&&(e=lu(e,Bl(e.shape,r))),{x:()=>Oo(e,qs(Ku(n,t),e.dtype))}}var Yf={kernelName:bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Xf(e,t[1],s,oe(a,s.shape));return{x:()=>i.x()}}},Jf={kernelName:xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oo(e,qs(hl(n,r),"float32")),b:()=>Oo(e,qs(yl(n,r),"float32"))}}};var Zf=Qa({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Ya(e,"dy","maxPool3dGrad"),u=Ya(t,"input","maxPool3dGrad"),l=Ya(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=lu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=lu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=lu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),q(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),q(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),q(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&q(ee(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Wa.runKernel(In,f,m);return d?lu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Qf={kernelName:kn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Zf(e,r,a,s,i,o,u)}}};var em=Qa({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Ya(e,"dy","maxPoolGrad"),u=Ya(t,"input","maxPoolGrad"),l=Ya(n,"output","maxPoolGrad");q(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),q(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),q(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&q(ee(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Wa.runKernel(wn,c,h)}}),tm={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>fu(e,s,r.shape)}}},nm={kernelName:mr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>yu(e,r,a)}}},rm={kernelName:gr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pu(e,r)}}};var am=[qd,Kd,Xd,Yd,Jd,Zd,Qd,ef,tf,nf,rf,af,of,lf,cf,hf,pf,df,ff,mf,gf,yf,xf,bf,wf,kf,If,Nf,Sf,Cf,{kernelName:Dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{const t=Mo(e,qs(r,"float32")),s=ju(n.shape,a);return s.length>0?lu(Ml(t,s),n.shape):t},b:()=>{let t=Oo(e,qs(n,"float32"));const s=ju(r.shape,a);s.length>0&&(t=lu(Ml(t,s),r.shape));const i=uc(r);return $l(Mo(t,qs(i,"float32")))}}}},Tf,_f,Ef,$f,Af,Rf,Ff,Df,Mf,Lf,Pf,Bf,Wf,Vf,Uf,Gf,Hf,jf,Kf,Yf,Yf,Jf,Qf,{kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>em(e,r,a,s,i,o)}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=oe(a,r.shape),i=J(Pl(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=lu(e,t);return Mo(Oo(n,nc(r.shape,"float32")),i)}}}},{kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Xf(e,i,s,oe(a,s.shape));return{x:()=>o.x()}}},{kernelName:Tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Oo(e,qs(bl(n,r),"float32")),b:()=>Oo(e,qs(cl(n,r),"float32"))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>fu(e,s,r.shape)}}},{kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{const t=ju(n.shape,a);return t.length>0?lu(Ml(e,t),n.shape):e},b:()=>{const t=Oo(e,$l(ul(Mo(n,r)))),s=ju(r.shape,a);return s.length>0?lu(Ml(t,s),r.shape):t}}}},{kernelName:An,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{const t=Oo(e,qs(r,"float32")),s=ju(n.shape,a);return s.length>0?lu(Ml(t,s),n.shape):t},b:()=>{const t=Oo(e,qs(n,"float32")),s=ju(r.shape,a);return s.length>0?lu(Ml(t,s),r.shape):t}}}},{kernelName:Fn,gradFunc:e=>({x:()=>$l(e)})},{kernelName:Ln,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>tc(n.shape,"float32")}}},{kernelName:zn,gradFunc:e=>({x:()=>Yu(e)})},{kernelName:Pn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return kh(e,r).map((e=>()=>e))}},tm,tm,{kernelName:Vn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=qu(s.shape,i.shape);return{a:()=>{const t=qs(i,"float32");let n=Oo(e,Oo(t,kc(s,Dl(t,Uc(1)))));const r=ju(s.shape,o);return r.length>0&&(n=Ml(n,r)),lu(n,s.shape)},b:()=>{const t=cl(s,0),n=Xu(t,wl(s),Yu(s));let r=Oo(e,Oo(a,n));const u=ju(i.shape,o);return u.length>0&&(r=Ml(r,u)),lu(r,i.shape)}}}},{kernelName:Un,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=cl(n,0);return{x:()=>Xu(a,e,Oo(e,r)),alpha:()=>{let t=Xu(a,Yu(e),Oo(e,n));const s=ju(r.shape,e.shape);return s.length>0&&(t=Ml(t,s)),lu(t,r.shape)}}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,$l(uc(n)))}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Oo(bl(n,6),ch(n));return{x:()=>Oo(e,qs(r,"float32"))}}},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,qs(ch(n),"float32"))}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lu(e,n.shape)}}},{kernelName:Zn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Wa.runKernel(Qn,a,n)}}},{kernelName:Yn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Wa.runKernel(Jn,a,n)}}},{kernelName:tr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=oe(r,e.shape);return{x:()=>Oc(e,a)}}},{kernelName:nr,gradFunc:e=>({x:()=>Yu(e)})},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$l(Mo(e,Oo(kc(n,1.5),2)))}}},{kernelName:sr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>qs(Yu(n),"float32"),t:()=>Oo(e,qs(n,e.dtype)),e:()=>Oo(e,qs(ql(n),e.dtype))}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=cl(n,Uc(0)),r=Uc(dd),a=Uc(fd),s=Oo(e,a),i=Oo(Oo(e,r),nl(qs(n,"float32")));return Xu(t,s,i)}}}},{kernelName:hr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Oo(n,Dl(Uc(1),n)))}}},{kernelName:cr,gradFunc:e=>({x:()=>Yu(e)})},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(zu(qs(n,"float32")),e)}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Lu(qs(n,"float32")),e)}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=ji(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>mc(e,l)}}},{kernelName:yr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Oo(e,r);return{logits:()=>Dl(s,Oo(Ml(s,[a],true),r))}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,du(n))}}},nm,nm,rm,rm,{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,Oo(ih(qs(n,"float32")),2))}}},{kernelName:wr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Uc(2);return{a:()=>Oo(e,Oo(a,Dl(n,r))),b:()=>Oo(e,Oo(a,Dl(r,n)))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(e,Oo(qs(n,"float32"),2))}}},{kernelName:Mr,gradFunc:e=>({x:()=>Yu(e)})},{kernelName:Nr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=qu(n.shape,r.shape);return{a:()=>{let t=e;const r=ju(n.shape,a);return r.length>0&&(t=Ml(t,r)),lu(t,n.shape)},b:()=>{let t=e;const n=ju(r.shape,a);return n.length>0&&(t=Ml(t,n)),lu($l(t),r.shape)}}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;oe(s,r.shape).forEach((e=>{a[e]=1}));const i=lu(e,a),o=Oo(i,nc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mo(e,uc(zu(n)))}}},{kernelName:Cr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oo(Dl(Uc(1),uc(n)),e)}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Yu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Ro(t,fu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Ro(t,fu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Ro(t,fu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Ro(t,fu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:$r,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Ul(a);return{x:()=>mi(e,s)}}},{kernelName:Fr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>lh(e,a)}}},{kernelName:Rr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ql(t,Yu(t)),r=ll(e,n);let a=hl(t,Uc(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=rl(a,e+1);a=jl(a,nc(r.shape,"bool"));const i=Yu(r);return Xu(a,r,i)}(e,n)}}},{kernelName:Dr,gradFunc:e=>({x:()=>Yu(e)})}];for(const e of am)qr(e);ga().prototype.abs=function(){return this.throwIfDisposed(),zo(this)},ga().prototype.acos=function(){return this.throwIfDisposed(),Lo(this)},ga().prototype.acosh=function(){return this.throwIfDisposed(),Po(this)},ga().prototype.add=function(e){return this.throwIfDisposed(),Ro(this,e)},ga().prototype.all=function(e,t){return this.throwIfDisposed(),Wo(this,e,t)},ga().prototype.any=function(e,t){return this.throwIfDisposed(),Vo(this,e,t)},ga().prototype.argMax=function(e){return this.throwIfDisposed(),Uo(this,e)},ga().prototype.argMin=function(e){return this.throwIfDisposed(),Go(this,e)},ga().prototype.asScalar=function(){return this.throwIfDisposed(),q(1===this.size,(()=>"The array must have only 1 element.")),lu(this,[])},ga().prototype.asType=function(e){return this.throwIfDisposed(),qs(this,e)},ga().prototype.as1D=function(){return this.throwIfDisposed(),lu(this,[this.size])},ga().prototype.as2D=function(e,t){return this.throwIfDisposed(),lu(this,[e,t])},ga().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),lu(this,[e,t,n])},ga().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),lu(this,[e,t,n,r])},ga().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),lu(this,[e,t,n,r,a])},ga().prototype.asin=function(){return this.throwIfDisposed(),Ho(this)},ga().prototype.asinh=function(){return this.throwIfDisposed(),jo(this)},ga().prototype.atan=function(){return this.throwIfDisposed(),qo(this)},ga().prototype.atan2=function(e){return this.throwIfDisposed(),Ko(this,e)},ga().prototype.atanh=function(){return this.throwIfDisposed(),Xo(this)},ga().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),cu(this,e,t,n,r)},ga().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),yu(this,e,t)},ga().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),bu(this,e,t,n,r,a)},ga().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Iu(this,e)},ga().prototype.cast=function(e){return this.throwIfDisposed(),qs(this,e)},ga().prototype.ceil=function(){return this.throwIfDisposed(),Nu(this)},ga().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Su(this,e,t)},ga().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ma&&(e=[e]),pu([this,...e],t)},ga().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Au(this,e,t,n,r,a,s)},ga().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Ru(this,e,t,n,r,a)},ga().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),$u(this,e,t,n,r,a,s)},ga().prototype.cos=function(){return this.throwIfDisposed(),zu(this)},ga().prototype.cosh=function(){return this.throwIfDisposed(),Lu(this)},ga().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Pu(this,e,t,n)},ga().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Wu(this,e,t)},ga().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Vu(this,e,t,n,r,a,s)},ga().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Gu(this,e,t,n,r,a)},ga().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ju(this,e)},ga().prototype.div=function(e){return this.throwIfDisposed(),Mo(this,e)},ga().prototype.dot=function(e){return this.throwIfDisposed(),Zu(this,e)},ga().prototype.elu=function(){return this.throwIfDisposed(),el(this)},ga().prototype.equal=function(e){return this.throwIfDisposed(),Ku(this,e)},ga().prototype.erf=function(){return this.throwIfDisposed(),tl(this)},ga().prototype.exp=function(){return this.throwIfDisposed(),nl(this)},ga().prototype.expandDims=function(e){return this.throwIfDisposed(),rl(this,e)},ga().prototype.expm1=function(){return this.throwIfDisposed(),al(this)},ga().prototype.fft=function(){return this.throwIfDisposed(),th(this)},ga().prototype.flatten=function(){return this.throwIfDisposed(),lu(this,[this.size])},ga().prototype.floor=function(){return this.throwIfDisposed(),ul(this)},ga().prototype.floorDiv=function(e){return this.throwIfDisposed(),Do(this,e)},ga().prototype.gather=function(e,t){return this.throwIfDisposed(),ll(this,e,t)},ga().prototype.greaterEqual=function(e){return this.throwIfDisposed(),hl(this,e)},ga().prototype.greater=function(e){return this.throwIfDisposed(),cl(this,e)},ga().prototype.ifft=function(){return this.throwIfDisposed(),nh(this)},ga().prototype.irfft=function(){return this.throwIfDisposed(),rh(this)},ga().prototype.isFinite=function(){return this.throwIfDisposed(),dl(this)},ga().prototype.isInf=function(){return this.throwIfDisposed(),fl(this)},ga().prototype.isNaN=function(){return this.throwIfDisposed(),ml(this)},ga().prototype.leakyRelu=function(e){return this.throwIfDisposed(),gl(this,e)},ga().prototype.lessEqual=function(e){return this.throwIfDisposed(),bl(this,e)},ga().prototype.less=function(e){return this.throwIfDisposed(),yl(this,e)},ga().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),vl(this,e,t,n,r)},ga().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fl(this)},ga().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ol(this,e)},ga().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},ga().prototype.log=function(){return this.throwIfDisposed(),wl(this)},ga().prototype.log1p=function(){return this.throwIfDisposed(),kl(this)},ga().prototype.logicalAnd=function(e){return this.throwIfDisposed(),jl(this,e)},ga().prototype.logicalNot=function(){return this.throwIfDisposed(),ql(this)},ga().prototype.logicalOr=function(e){return this.throwIfDisposed(),Kl(this,e)},ga().prototype.logicalXor=function(e){return this.throwIfDisposed(),Xl(this,e)},ga().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),di(this,e,t,n)},ga().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Yl(this,e,t,n,r)},ga().prototype.max=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},ga().prototype.maximum=function(e){return this.throwIfDisposed(),Ql(this,e)},ga().prototype.mean=function(e,t){return this.throwIfDisposed(),ec(this,e,t)},ga().prototype.min=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},ga().prototype.minimum=function(e){return this.throwIfDisposed(),sc(this,e)},ga().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},ga().prototype.mod=function(e){return this.throwIfDisposed(),oc(this,e)},ga().prototype.mul=function(e){return this.throwIfDisposed(),Oo(this,e)},ga().prototype.neg=function(){return this.throwIfDisposed(),$l(this)},ga().prototype.norm=function(e,t,n){return this.throwIfDisposed(),_h(this,e,t,n)},ga().prototype.notEqual=function(e){return this.throwIfDisposed(),pc(this,e)},ga().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),fi(this,e,t,n)},ga().prototype.onesLike=function(){return this.throwIfDisposed(),dc(this)},ga().prototype.pad=function(e,t){return this.throwIfDisposed(),mc(this,e,t)},ga().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),wc(this,e,t,n,r,a)},ga().prototype.pow=function(e){return this.throwIfDisposed(),kc(this,e)},ga().prototype.prelu=function(e){return this.throwIfDisposed(),Ic(this,e)},ga().prototype.prod=function(e,t){return this.throwIfDisposed(),Nc(this,e,t)},ga().prototype.reciprocal=function(){return this.throwIfDisposed(),Rc(this)},ga().prototype.relu=function(){return this.throwIfDisposed(),Dc(this)},ga().prototype.relu6=function(){return this.throwIfDisposed(),Mc(this)},ga().prototype.reshapeAs=function(e){return this.throwIfDisposed(),lu(this,e.shape)},ga().prototype.reshape=function(e){return this.throwIfDisposed(),lu(this,e)},ga().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),yp(this,e,t,n)},ga().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),bp(this,e,t,n)},ga().prototype.reverse=function(e){return this.throwIfDisposed(),Oc(this,e)},ga().prototype.rfft=function(){return this.throwIfDisposed(),sh(this)},ga().prototype.round=function(){return this.throwIfDisposed(),Wc(this)},ga().prototype.rsqrt=function(){return this.throwIfDisposed(),Vc(this)},ga().prototype.selu=function(){return this.throwIfDisposed(),Gc(this)},ga().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Hc(this,e,t,n,r,a,s)},ga().prototype.sigmoid=function(){return this.throwIfDisposed(),du(this)},ga().prototype.sign=function(){return this.throwIfDisposed(),qc(this)},ga().prototype.sin=function(){return this.throwIfDisposed(),Kc(this)},ga().prototype.sinh=function(){return this.throwIfDisposed(),Xc(this)},ga().prototype.slice=function(e,t){return this.throwIfDisposed(),fu(this,e,t)},ga().prototype.softmax=function(e){return this.throwIfDisposed(),eh(this,e)},ga().prototype.softplus=function(){return this.throwIfDisposed(),Al(this)},ga().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},ga().prototype.split=function(e,t){return this.throwIfDisposed(),ah(this,e,t)},ga().prototype.sqrt=function(){return this.throwIfDisposed(),ih(this)},ga().prototype.square=function(){return this.throwIfDisposed(),uc(this)},ga().prototype.squaredDifference=function(e){return this.throwIfDisposed(),oh(this,e)},ga().prototype.squeeze=function(e){return this.throwIfDisposed(),uh(this,e)},ga().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ma?[this,e]:[this,...e];return lh(n,t)},ga().prototype.step=function(e){return this.throwIfDisposed(),ch(this,e)},ga().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),hh(this,e,t,n,r,a,s,i,o)},ga().prototype.sub=function(e){return this.throwIfDisposed(),Dl(this,e)},ga().prototype.sum=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},ga().prototype.tan=function(){return this.throwIfDisposed(),ph(this)},ga().prototype.tanh=function(){return this.throwIfDisposed(),mu(this)},ga().prototype.tile=function(e){return this.throwIfDisposed(),sl(this,e)},ga().prototype.toBool=function(){return this.throwIfDisposed(),qs(this,"bool")},ga().prototype.toFloat=function(){return this.throwIfDisposed(),qs(this,"float32")},ga().prototype.toInt=function(){return this.throwIfDisposed(),qs(this,"int32")},ga().prototype.topk=function(e,t){return this.throwIfDisposed(),bh(this,e,t)},ga().prototype.transpose=function(e){return this.throwIfDisposed(),mi(this,e)},ga().prototype.unique=function(e){return this.throwIfDisposed(),vh(this,e)},ga().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),wh(this,e,t)},ga().prototype.unstack=function(e){return this.throwIfDisposed(),kh(this,e)},ga().prototype.where=function(e,t){return this.throwIfDisposed(),Xu(e,this,t)},ga().prototype.zerosLike=function(){return this.throwIfDisposed(),Yu(this)};var sm,im={};function om(){return null==sm&&(sm=Ao().epsilon()),sm}h(im,{maxNorm:()=>Vm,minMaxNorm:()=>Hm,nonNeg:()=>Gm,unitNorm:()=>Um});var um=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,um.prototype)}},lm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lm.prototype)}},cm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cm.prototype)}},hm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hm.prototype)}},pm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pm.prototype)}};function dm(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function fm(e,t){if(!e)throw new pm(t)}function mm(e,t){let n=0;for(const r of e)r===t&&n++;return n}function gm(e){return 1===e.length?e[0]:e}function ym(e){return Array.isArray(e)?e:[e]}function bm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function xm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var vm={};function wm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function km(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>km(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?km(t):e[n]=t.value)}}}function Im(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in vm)s=vm[a];else if(s=t[a],null==s)throw new cm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new cm(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in vm?[o,u]=vm.className:i in t&&([o,u]=t[i]),null==o)throw new cm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(vm))e[t]=vm[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},vm);for(const e of Object.keys(n))vm[e]=n[e];km(s.config);const r=u(o,s.config,n,a);return vm=Object.assign({},t),r}{const e=Object.assign({},vm);for(const e of Object.keys(n))vm[e]=n[e];const t=new o(s.config);return vm=Object.assign({},e),t}}}function Nm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Sm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Cm(e){if(null==e)throw new cm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Tm(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new cm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function _m(e,t,n=0,r=1/0){return fm(n>=0),fm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Em(e,t){Array.isArray(e)?(Zr.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Em(e,`element ${n+1} of ${t}`)))):Zr.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${$m(e)}.`))}function $m(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>$m(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Am(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Fm(e,t){return vo((()=>ih(Ml(Oo(e,e),t,!0))))}var Rm=class extends Ki.Serializable{getConfig(){return{}}},Dm=class extends Rm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vo((()=>{const t=Fm(e,this.axis),n=Su(t,0,this.maxValue);return Oo(e,Mo(n,Ro(om(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Dm.className="MaxNorm",Ki.registerClass(Dm);var Mm=class extends Rm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vo((()=>Mo(e,Ro(om(),Fm(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Mm.className="UnitNorm",Ki.registerClass(Mm);var Om=class extends Rm{apply(e){return Dc(e)}};Om.className="NonNeg",Ki.registerClass(Om);var zm=class extends Rm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return vo((()=>{const t=Fm(e,this.axis),n=Ro(Oo(this.rate,Su(t,this.minValue,this.maxValue)),Oo(1-this.rate,t));return Oo(e,Mo(n,Ro(om(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};zm.className="MinMaxNorm",Ki.registerClass(zm);var Lm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pm(e){return wm(e)}function Bm(e,t={}){return Im(e,Ki.SerializationMap.getMap().classNameMap,t,"constraint")}function Wm(e){if(null==e)return null;if("string"==typeof e){return Bm({className:e in Lm?Lm[e]:e,config:{}})}return e instanceof Rm?e:Bm(e)}function Vm(e){return new Dm(e)}function Um(e){return new Mm(e)}function Gm(){return new Om}function Hm(e){return new zm(e)}var jm={};h(jm,{constant:()=>Qg,glorotNormal:()=>iy,glorotUniform:()=>sy,heNormal:()=>oy,heUniform:()=>uy,identity:()=>ry,leCunNormal:()=>ly,leCunUniform:()=>cy,ones:()=>Zg,orthogonal:()=>hy,randomNormal:()=>ty,randomUniform:()=>ey,truncatedNormal:()=>ny,varianceScaling:()=>ay,zeros:()=>Jg});var qm=["channelsFirst","channelsLast"],Km=["nearest","bilinear"],Xm=["valid","same","causal"],Ym=["max","avg"],Jm=["sum","mul","concat","ave"],Zm=new Map;function Qm(e){Tm(qm,"DataFormat",e)}function eg(e){Tm(Xm,"PaddingMode",e)}function tg(e){Tm(Ym,"PoolMode",e)}var ng=[];function rg(e,t){ng.push(e);try{const e=t();return ng.pop(),e}catch(e){throw ng.pop(),e}}function ag(e){if(!og(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ng.length?"":ng.join("/")+"/")+e}function sg(e){if(!og(e))throw new Error("Not a valid tensor name: '"+e+"'");Zm.has(e)||Zm.set(e,0);const t=Zm.get(e);if(Zm.set(e,Zm.get(e)+1),t>0){const n=`${e}_${t}`;return Zm.set(n,1),n}return e}var ig=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function og(e){return!!e.match(ig)}function ug(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function lg(e){return dh(e=Array.isArray(e)?new Float32Array(e):e)}function cg(e){return ac(lg(e)).dataSync()[0]}function hg(e){return Rl(lg(e)).dataSync()[0]}function pg(e,t){if(t<e)throw new cm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function dg(e,t){return e.asType(t)}function fg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function mg(e,t,n){return vo((()=>{switch(e.rank){case 1:return Yc(e,t,n);case 2:return Jc(e,[t,0],[n,e.shape[1]]);case 3:return Zc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Qc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return fu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return fu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new cm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gg(e,t,n){return vo((()=>{switch(e.rank){case 1:return Yc(e,t,n);case 2:return Jc(e,[0,t],[e.shape[0],n]);case 3:return Zc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Qc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new cm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yg(e,t,n,r){return vo((()=>{switch(e.rank){case 1:return Yc(e,t,n);case 2:switch(r){case 1:return mg(e,t,n);case 2:return gg(e,t,n);default:throw new cm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return mg(e,t,n);case 2:return Zc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return gg(e,t,n);default:throw new cm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return mg(e,t,n);case 2:return Qc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Qc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return gg(e,t,n);default:throw new cm(`The axis is not within the rank of the tensor ${r}`)}default:throw new cm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pu(e,t)}function xg(e,t){switch(e.rank){case 1:return Cu([e,t]);case 2:return Tu([e,t],0);case 3:return _u([e,t],0);case 4:return Eu([e,t],0);default:throw new cm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new cm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return sl(e,t)}function wg(e,t=0,n=1,r,a){return Ec(e,t,n,r,a)}function kg(e,t,n,r){if(e.rank<2||t.rank<2)throw new hm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new hm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,s=!1;return zh.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?Sg(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([u,-1]);const h=[...a,...l],p=!1,d=!1;return zh.matMul({a:e,b:t,transposeA:p,transposeB:d,bias:r?Sg(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Ig(e,t,n){return vo((()=>(t=Array.isArray(t)?dh(t,"int32"):t.toInt(),ll(e,t,n))))}function Ng(e){return Oo(e,e)}function Sg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new cm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new cm(`Unsupported input rank by biasAdd: ${t.rank}`)}function Cg(e,t,n){return vo((()=>(null==n&&(n="channelsLast"),Qm(n),e.add(Sg(e.rank,t,n)))))}function Tg(e,t,n,r){return vo((()=>Rh(e,t,n,r)))}function _g(e,t,n=!1){return n?e():t()}var Eg=["fanIn","fanOut","fanAvg"],$g=["normal","uniform","truncatedNormal"];var Ag=class extends Ki.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Fg=class extends Ag{apply(e,t){return tc(e,t)}};Fg.className="Zeros",Ki.registerClass(Fg);var Rg=class extends Ag{apply(e,t){return nc(e,t)}};Rg.className="Ones",Ki.registerClass(Rg);var Dg=class extends Ag{constructor(e){if(super(),"object"!=typeof e)throw new cm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new cm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return vo((()=>Oo(Uc(this.value),nc(e,t))))}getConfig(){return{value:this.value}}};Dg.className="Constant",Ki.registerClass(Dg);var Mg=class extends Ag{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return $c(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Mg.className="RandomUniform",Ki.registerClass(Mg);var Og=class extends Ag{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hm(`randomNormal does not support dType ${t}.`);return wg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Og.className="RandomNormal",Ki.registerClass(Og);var zg=class extends Ag{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hm(`truncatedNormal does not support dType ${t}.`);return xh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};zg.className="TruncatedNormal",Ki.registerClass(zg);var Lg=class extends Ag{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return vo((()=>{if(2!==e.length||e[0]!==e[1])throw new cm("Identity matrix initializer can only be used for 2D square matrices.");return Oo(this.gain,il(e[0]))}))}getConfig(){return{gain:this.gain}}};Lg.className="Identity",Ki.registerClass(Lg);var Pg=class extends Ag{constructor(e){if(super(),e.scale<0)throw new cm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Tm(Eg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Tm($g,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Qm(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ug(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ug(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ug(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hm(`${this.getClassName()} does not support dType ${t}.`);return xh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return $c(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Pg.className="VarianceScaling",Ki.registerClass(Pg);var Bg=class extends Pg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Bg.className="GlorotUniform",Ki.registerClass(Bg);var Wg=class extends Pg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Wg.className="GlorotNormal",Ki.registerClass(Wg);var Vg=class extends Pg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Vg.className="HeNormal",Ki.registerClass(Vg);var Ug=class extends Pg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Ug.className="HeUniform",Ki.registerClass(Ug);var Gg=class extends Pg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Gg.className="LeCunNormal",Ki.registerClass(Gg);var Hg=class extends Pg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Pg.className}};Hg.className="LeCunNormal",Ki.registerClass(Hg);var jg=class extends Ag{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new hm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return vo((()=>{if(e.length<2)throw new hm("Shape must be at least 2D.");e[0],e[1];const t=wg(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Wp.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Oo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};jg.className="Orthogonal",Ki.registerClass(jg);var qg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Kg(e,t={}){return Im(e,Ki.SerializationMap.getMap().classNameMap,t,"initializer")}function Xg(e){return wm(e)}function Yg(e){if("string"==typeof e){const t=e in qg?qg[e]:e;if("GlorotNormal"===t)return new Wg;if("GlorotUniform"===t)return new Bg;if("HeNormal"===t)return new Vg;if("HeUniform"===t)return new Ug;if("LeCunNormal"===t)return new Gg;if("LeCunUniform"===t)return new Hg;{const e={};return e.className=t,e.config={},Kg(e)}}return e instanceof Ag?e:Kg(e)}function Jg(){return new Fg}function Zg(){return new Rg}function Qg(e){return new Dg(e)}function ey(e){return new Mg(e)}function ty(e){return new Og(e)}function ny(e){return new zg(e)}function ry(e){return new Lg(e)}function ay(e){return new Pg(e)}function sy(e){return new Bg(e)}function iy(e){return new Wg(e)}function oy(e){return new Vg(e)}function uy(e){return new Ug(e)}function ly(e){return new Gg(e)}function cy(e){return new Hg(e)}function hy(e){return new jg(e)}var py={};h(py,{Layer:()=>Ay,RNN:()=>sv,RNNCell:()=>iv,activation:()=>Tw,add:()=>Ow,alphaDropout:()=>Ck,average:()=>zw,averagePooling1d:()=>jw,averagePooling2d:()=>Xw,averagePooling3d:()=>Zw,avgPool1d:()=>qw,avgPool2d:()=>Yw,avgPool3d:()=>Qw,avgPooling1d:()=>Kw,avgPooling2d:()=>Jw,avgPooling3d:()=>ek,batchNormalization:()=>Uw,bidirectional:()=>bk,concatenate:()=>Lw,conv1d:()=>bw,conv2d:()=>xw,conv2dTranspose:()=>vw,conv3d:()=>ww,conv3dTranspose:()=>kw,convLstm2d:()=>fk,convLstm2dCell:()=>mk,cropping2D:()=>Nw,dense:()=>_w,depthwiseConv2d:()=>Cw,dot:()=>Vw,dropout:()=>Ew,elu:()=>pw,embedding:()=>Mw,flatten:()=>Aw,gaussianDropout:()=>Sk,gaussianNoise:()=>Nk,globalAveragePooling1d:()=>tk,globalAveragePooling2d:()=>nk,globalMaxPool1d:()=>vk,globalMaxPool2d:()=>wk,globalMaxPooling1d:()=>rk,globalMaxPooling2d:()=>ak,gru:()=>uk,gruCell:()=>lk,input:()=>ix,inputLayer:()=>hw,layerNormalization:()=>Gw,leakyReLU:()=>fw,lstm:()=>ck,lstmCell:()=>hk,masking:()=>Tk,maxPool1d:()=>kk,maxPool2d:()=>Ik,maxPooling1d:()=>sk,maxPooling2d:()=>ik,maxPooling3d:()=>ok,maximum:()=>Pw,minimum:()=>Bw,multiply:()=>Ww,permute:()=>Dw,prelu:()=>mw,reLU:()=>dw,repeatVector:()=>Fw,reshape:()=>Rw,rnn:()=>gk,separableConv2d:()=>Iw,simpleRNN:()=>pk,simpleRNNCell:()=>dk,softmax:()=>gw,spatialDropout1d:()=>$w,stackedRNNCells:()=>yk,thresholdedReLU:()=>yw,timeDistributed:()=>xk,upSampling2d:()=>Sw,zeroPadding2d:()=>Hw});var dy=0;function fy(){return dy++}var my={};function gy(e=""){return e in my||(my[e]=0),my[e]+=1,e+my[e].toString()}function yy(e){return Array.isArray(e)&&Array.isArray(e[0])}function by(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function xy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new cm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function vy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new cm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function wy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var ky="Variable",Iy=class{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=fy(),n=null==n?ky:n,this.originalName=ag(n),this.name=sg(this.originalName),this.trainable_=r,this.constraint=a,this.val=Ih(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Ny(e){return e.map((e=>e.read()))}function Sy(e){e.forEach((e=>{e[0].write(e[1])}))}var Cy=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ty=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=fy(),null!=s&&(this.originalName=ag(s),this.name=sg(this.originalName)),this.rank=t.length}},_y=0,Ey=class{constructor(e,t){this.callArgs=t,this.id=_y++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},$y=0,Ay=class extends Ki.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$y++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=bm(e)+"_"+gy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new lm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new cm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return gm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return gm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new um(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new um(`Layer ${this.name} is not connected, no input to return.`);return gm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new um(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new um(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return gm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ym(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ym(this.inputSpec);if(e.length!==t.length)throw new cm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new cm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new cm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new cm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new cm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new cm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new cm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ym(e);let r=!0;for(const e of n)if(!(e instanceof Ty)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Ty){a=!1;break}if(r===a)throw new cm("Arguments to apply() must be all SymbolicTensors or all Tensors");return rg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ym(e))t.push(n.shape);this.build(gm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ym(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=gm(s),null!=this.activityRegularizer)throw new hm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ym(e);const t=[];for(const n of e)t.push(n.shape);return gm(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Ty(s,n,this,ym(e),t,this.name,r))):new Ty(s,r,this,ym(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new hm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new um(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new um(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new lm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return wy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ny(e?this.trainableWeights:this.weights)}setWeights(e){vo((()=>{const t=this.weights;if(t.length!==e.length)throw new cm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ny(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!Zr.arraysEqual(s.shape,o.shape))throw new cm(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Sy(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new cm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Yg("zeros"));const o=r.apply(t,n),u=new Iy(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ym(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ym(e);t=ym(t),n=ym(n),r=ym(r),a=by(a),s=by(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Ey({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Fy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Fy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var Ry,Dy,My=class extends Ay{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:gy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new cm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new cm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new cm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Ty(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ey({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new cm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Oy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new cm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new My({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function zy(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];wo(r)}}function Ly(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}My.className="InputLayer",Ki.registerClass(My),(Dy=Ry||(Ry={}))[Dy.SILENT=0]="SILENT",Dy[Dy.VERBOSE=1]="VERBOSE";var Py=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},By=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},Wy=class extends Py{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=vo((()=>Ro(this.totals[e],Oo(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:vo((()=>{const n=Oo(Mo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ko(t[e])})))}},Vy=class extends Py{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}},Uy=class extends Py{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Zr.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Zr.now();return(...a)=>{const s=Zr.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await zy(n),r.push(this.yield(e,t,n))),r.push(td()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await zy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await zy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(td()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await zy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await zy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(td()):Zr.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await zy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await zy(e),await this.trainEnd(e))}};function Gy(e,t){if(null==e&&(e={}),e instanceof Py)return[e];if(Array.isArray(e)&&e[0]instanceof Py)return e;return ym(e).map((e=>new Uy(e,t)))}var Hy=class{constructor(){}static registerCallbackConstructor(e,t){Zr.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Hy.checkForDuplicate(t),null==Hy.constructors[e]&&(Hy.constructors[e]=[]),Hy.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hy.constructors){Hy.constructors[+t].forEach((t=>{if(t===e)throw new cm("Duplicate callback constructor.")}))}}static clear(){Hy.constructors={}}static createCallbacks(e){const t=[];for(const n in Hy.constructors){const r=+n;e>=r&&t.push(...Hy.constructors[r])}return t.map((e=>new e))}};function jy(e,t,n,r,a,s,i,o,u){const l=new Vy,c=[new Wy,...Hy.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new By(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function qy(e,t={},n=!1){return Im(e,Ki.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ky(e,t){return vo((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=Ml(Ng(e),t,!0),r=ol(n.shape,om()),a=ih(Ql(n,r));return Mo(e,a)}))}function Xy(e,t){return vo((()=>ec(Ng(Dl(t,e)),-1)))}function Yy(e,t){return vo((()=>ec(zo(Dl(t,e)),-1)))}function Jy(e,t){return vo((()=>{const n=Dl(e,t),r=Su(zo(e),om(),Number.MAX_VALUE),a=zo(Mo(n,r));return Oo(100,ec(a,-1))}))}function Zy(e,t,n=!1){return vo((()=>{if(n)t=eh(t);else{const e=Ml(t,t.shape.length-1,!0);t=Mo(t,e)}return t=Su(t,om(),1-om()),$l(Ml(Oo(e.toFloat(),wl(t)),t.shape.length-1))}))}function Qy(e,t,n=!1){return vo((()=>{const r=ul(function(e){const t=[ug(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=Su(t,om(),1-om())).shape;return Zy(fi(r,a[a.length-1]).reshape(a),t,n)}))}function eb(e,t){return vo((()=>{let n;return n=Su(t,om(),1-om()),n=wl(Mo(n,Dl(1,n))),ec(function(e,t){if(!Zr.arraysEqual(e.shape,t.shape))throw new cm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return vo((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function tb(e,t){return vo((()=>{const n=Ky(e,-1),r=Ky(t,-1),a=Oo(n,r);return $l(Ml(a,-1))}))}Hy.constructors={};var nb={meanSquaredError:Xy,meanAbsoluteError:Yy,meanAbsolutePercentageError:Jy,meanSquaredLogarithmicError:function(e,t){return vo((()=>{const n=Su(t,om(),Number.MAX_VALUE),r=wl(Ro(1,n)),a=Su(e,om(),Number.MAX_VALUE),s=wl(Ro(1,a));return ec(Ng(Dl(r,s)),-1)}))},squaredHinge:function(e,t){return vo((()=>{const n=Ql(0,Dl(1,Oo(e,t)));return ec(Ng(n),-1)}))},hinge:function(e,t){return vo((()=>{const n=Ql(0,Dl(1,Oo(e,t)));return ec(n,-1)}))},categoricalHinge:function(e,t){return vo((()=>{const n=Ml(Oo(e,t),-1),r=Rl(Oo(Dl(1,e),t),-1);return Ql(0,Ro(1,Dl(r,n)))}))},logcosh:function(e,t){return vo((()=>{const n=Math.log(2),r=Dl(t,e),a=Dl(Ro(r,Al(Oo(-2,r))),n);return ec(a,-1)}))},categoricalCrossentropy:Zy,sparseCategoricalCrossentropy:Qy,binaryCrossentropy:eb,kullbackLeiblerDivergence:function(e,t){return vo((()=>{const n=Su(e,om(),1),r=Su(t,om(),1);return Ml(Oo(e,wl(Mo(n,r))),-1)}))},poisson:function(e,t){return vo((()=>{const n=wl(Ro(om(),t));return ec(Dl(t,Oo(e,n)),-1)}))},cosineProximity:tb};function rb(e){if("string"==typeof e){if(e in nb)return nb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new cm(t)}return e}function ab(e,t){return vo((()=>{const n=Oo(.5,dc(t)),r=dg(cl(t,n),e.dtype);return ec(Ku(e,r),-1)}))}function sb(e,t){return vo((()=>dg(Ku(Uo(e,-1),Uo(t,-1)),"float32")))}function ib(e,t){return vo((()=>jl(e.equal(1),t.equal(1)).sum().cast("float32")))}function ob(e,t){return vo((()=>{const n=ib(e,t),r=function(e,t){return vo((()=>jl(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return Xu(cl(a,0),n.div(a),0).cast("float32")}))}function ub(e,t){return vo((()=>{const n=ib(e,t),r=function(e,t){return vo((()=>jl(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),a=n.add(r);return Xu(cl(a,0),n.div(a),0).cast("float32")}))}function lb(e,t){return eb(e,t)}function cb(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Ku(e,t).asType("float32")}var hb=Zy,pb=Qy,db={binaryAccuracy:ab,categoricalAccuracy:sb,precision:ob,categoricalCrossentropy:hb,sparseCategoricalCrossentropy:pb,mse:Xy,MSE:Xy,mae:Yy,MAE:Yy,mape:Jy,MAPE:Jy,cosine:tb};function fb(e){if("string"==typeof e&&e in db)return db[e];if("string"!=typeof e&&null!=e)return e;throw new cm(`Unknown metric ${e}`)}function mb(e){if(fm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(nb))if(nb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(db))if(db[n]===e){t=n;break}return void 0!==t?t:e.name}}function gb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!yb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){JSON.stringify(e).length}}function yb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!yb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!yb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function bb(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),xb(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?vb(o[e],n,r):wb(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?wy(e.collectedTrainableWeights):wy(e.trainableWeights);return t}(e),l=wy(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function xb(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function vb(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}xb([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function wb(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];xb([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)xb(["","","",s[e]],t,r)}function kb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ib(e,t){if(null===e)return null;if("string"==typeof e)return xm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];kb(t,a,r)?n.push(r):n.push(Ib(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=xm(n);t[e]=Ib(r,e)}}return t}}function Nb(e,t){if(null==e)return null;if("string"==typeof e)return bm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];kb(t,a,r)?n.push(r):n.push(Nb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=bm(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Nb(r,n):r}return t}}var Sb="3.6.0";var Cb=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Cb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new cm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return qs(t,e.dtype)}catch(n){throw new cm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ty){if(null==this.id2Value[e.id])throw new cm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new cm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ty){if(null==this.id2Value[e.id])throw new cm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new cm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&wo(this.id2Mask)}},Tb={},_b={};function Eb(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==Tb[c]){const e=function(e,t){Zr.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Ab(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Ab(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:$b(r)}}(i,t);h=e.sorted,p=e.recipientCounts,Tb[c]=h,_b[c]=p}h=Tb[c],p={},a||Object.assign(p,_b[c]);const d=new Cb(t);for(let e=0;e<h.length;++e){if(null!=r){const e=bo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof My)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ym(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Fb(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||wo(f)}return d.disposeMasks(),s?u:u[0]}function $b(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ab(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Fb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Rb=class extends Ay{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=gy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Sm(this.inputs).length!==this.inputs.length)throw new cm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Sm(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;fm(0===n,"input layer has >1 nodes"),fm(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof My))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new lm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Rb.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Nm);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Rb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Nm);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new lm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new lm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ey({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new cm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new cm(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new cm(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new cm(`${e.length} of ${r} weights are not set: ${e}`)}Sy(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Sb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Nb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return vo((()=>{e=ym(e);const n=new Cb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Eb(this.outputs,n,t)}))}computeMask(e,t){return vo((()=>{let n;return e=ym(e),n=null==t?dm(null,e.length):ym(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=by(e);if(t.length!==this.inputLayers.length)throw new cm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Nm);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=by(t.computeOutputShape(gm(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];fm(t in n),a.push(n[t])}return gm(a)}runInternalGraph(e,t){null==t&&(t=dm(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Nm);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=ym(t.call(e,l)),u=ym(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=ym(t.call(r,l)),u=ym(t.computeMask(r,i));if(t.activityRegularizer)throw new hm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){fm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Rb?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Rb.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new cm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new cm("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new cm(`No such layer: ${e}`)}calculateLosses(){return vo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Rb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Rb.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Rb.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Rb.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Rb.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(gm(n),r)}function u(e){const n=e.name,s=qy(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new cm(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Cm(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];fm(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];fm(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new cm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){vo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Db(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Mb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=vo((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());wo(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),dh(a,"float32")}return null}function Ob(e,t){return Oo(e,t)}function zb(e,t){let n,r;const a=t;n=a.xs,r=a.ys,Zr.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Lb("input",e.inputNames,n),i=Lb("output",e.outputNames,r),o=s[0].shape[0];Zr.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Zr.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)Zr.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Zr.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Lb(e,t,n){if(n instanceof ma)return[n];if(Array.isArray(n))return Zr.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new cm(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Pb(e,t,n){const r=null!=n.batchesPerEpoch;if(Zr.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Zr.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Zr.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Zr.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Zr.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Bb(n.validationData))Zr.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new hm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Gy(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=jy(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done)break;if(null!=t.value){const{xs:r,ys:a}=zb(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Db(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Mb(a[e],null,t[e]))}const l=r.concat(a).concat(i),d=o(l);wo(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];s[t]=n,ko(n)}await p.onBatchEnd(h,s),Ly(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Bb(n.validationData)?ym(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ym(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Bb(e){return"function"==typeof e.iterator}function Wb(e){Zr.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Vb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>mg(e,t,n-t))):mg(e,t,n-t)}function Ub(e,t){return vo((()=>null==e?null:Array.isArray(e)?e.map((e=>Ub(e,t))):Ig(e,"int32"===t.dtype?t:t.toInt())))}function Gb(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Hb(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Wb(h);const p=!1,d=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,h);a=d[0],s=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new hm("validationData including sample weights is not supported yet."):new cm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Vb(a,e,t),a=Vb(a,0,e),l=Vb(s,e,t),s=Vb(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,v;m?(e.makeTestFunction(),x=e.testFunction,v=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],v=b.slice());const w=Gy(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,c,h,p,d,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==d))throw new cm("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,a,d,"steps_per_epoch");let y;null!=g&&(y=pg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=jy(o,i,s,p,g,d,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await b.onEpochBegin(i);const s={};if(null!=d)throw new hm("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new hm("batch shuffling is not implemneted yet");c&&Zr.shuffle(y);const i=dh(y),o=Gb(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),vo((()=>{const p=o[c][0],d=o[c][1],f=mg(i,p,d-p);h.batch=c,h.size=d-p;const g=Ub(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,ko(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];ko(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),Ly(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null,null)}finally{e.isTraining=!1,qb(a,t),qb(s,n),qb(u,i),qb(l,o),null!=c&&wo(c)}}function jb(e){const t=[];e instanceof ma&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(fg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function qb(e,t){if(null==e)return;const n=[];if(t instanceof ma)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ma)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Kb(e){return Array.isArray(e)}function Xb(e){return!function(e){return e instanceof ma}(e)&&!Kb(e)}function Yb(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Kb(e)&&e.length>0)t=!0;else if(Xb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new cm(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Xb(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new cm(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Kb(e)){if((e=e).length!==t.length)throw new cm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new cm(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=jb(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new cm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new cm(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Jb(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new cm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new cm(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new cm(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new cm(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var Zb=class extends Rb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new cm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");bb(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Qp.adagrad(.01),Adadelta:()=>Qp.adadelta(1,.95,om()),Adam:()=>Qp.adam(.001,.9,.999,om()),Adamax:()=>Qp.adamax(.002,.9,.999,om(),0),RMSProp:()=>Qp.rmsprop(.001,.9,0,om()),SGD:()=>Qp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new cm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Gp))throw new cm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new cm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>rb(e)))}else{const n=rb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new cm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)e.loss[n],t.push(rb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],rg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};rg("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===eb?-1!==["accuracy","acc"].indexOf(i)?r=ab:-1!==["crossentropy","ce"].indexOf(i)&&(r=lb):this.lossFunctions[e]===Qy?-1!==["accuracy","acc"].indexOf(i)?r=cb:-1!==["crossentropy","ce"].indexOf(i)&&(r=pb):-1!==["accuracy","acc"].indexOf(i)?r=sb:-1!==["crossentropy","ce"].indexOf(i)&&(r=hb),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=fb(i);s=e,n=""+mb(i)}let t;rg(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Wb(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return gm(this.testLoop(i,s,r,n.verbose,n.steps))}finally{qb(a[0],e),qb(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new hm("Verbose mode is not implemented yet.");Zr.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=vo((()=>{if(t.value){const{xs:n,ys:r}=zb(e,t.value),i=n.concat(r),l=vo((()=>a(i)));if(wo(i),0===u)for(let e=0;e<l.length;++e)s.push(Uc(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=vo((()=>Ro(s[e],Oo(c,t)))),u>0&&wo(n)}wo(l),o+=c,++u}return s})),t.done)break}for(let e=0;e<s.length;++e){const t=s[e];s[e]=Mo(s[e],o),wo(t)}return gm(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new cm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new cm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new cm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Cb;if(e instanceof ma&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new cm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new cm(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Eb(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=dm(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new cm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return vo((()=>{const r=this.checkNumSamples(e);if(n)throw new hm("Verbose predictLoop() is not implemented yet.");const a=Gb(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){vo((()=>{const n=a[t][0],r=a[t][1],s=Vb(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Cb(i);return Eb(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)))}return gm(s.map((e=>pu(e,0))))}))}predict(e,t={}){const n=jb(e);Jb(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Wb(r),this.predictLoop(n,r)}finally{qb(n,e)}}predictOnBatch(e){Jb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new lm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Qy?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=Sm(e.map((e=>e.shape[0])));r.sort();const a=Sm(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new cm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new cm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!Zr.arraysEqual(r,a))throw new cm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Yb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Yb(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Xy,eb,Zy];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Zy&&1===s.shape[s.shape.length-1])throw new cm(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new cm(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new cm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Db(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Mb(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return vo((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new hm("Verbose mode is not implemented yet.");if(null!=a)throw new hm("steps mode in testLoop() is not implemented yet");{const r=Gb(s,n),a=dh(pg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=mg(a,s,o-s),l=Ub(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Uc(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Ro(i[e],Oo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Mo(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(mm(e,r)>1){a+=`_${mm(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Cb(e),o=Eb(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Ob(n,a[e]));const s=ec(n);t.push(s),u=0===e?n:Ro(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=ec(t(r[a],o[a]))}ko(n),s.push(n)}return u=ec(u),this.calculateLosses().forEach((e=>{u=Ro(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>vo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Cb(s),o=Eb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=ec(r(a[e],o[e]));n=0===e?s:Ro(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=ec(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return Hb(this,e,t,n)}async fitDataset(e,t){return Pb(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return wo(s),gm(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=bo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-bo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=bm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>bm(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=bm(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[bm(mb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>bm(mb(e))));{const e={};for(const t in this.metrics)e[t]=bm(mb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=qy(Ib(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=xm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>xm(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=xm(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>xm(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=xm(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ys.getSaveHandlers(e);if(0===t.length)throw new cm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new cm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new cm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ys.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Sb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ys.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Ys.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;gb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){gb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Zb.className="Model",Ki.registerClass(Zb);var Qb=class extends Zb{};async function ex(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=qy(Ib(n),t);if(null!=e.weightsManifest){const t=await Ys.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),wo(t)}return r}async function tx(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ys.getLoadHandlers(e,t);if(0===n.length)n.push(Ys.browserHTTPRequest(e,t));else if(n.length>1)throw new cm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new cm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=qy(Ib(a),t,i),u=r.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new cm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ys.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),wo(e),wo(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Qb.className="Functional",Ki.registerClass(Qb);var nx=class extends Zb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:gy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new cm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof nx||e instanceof Zb;let n;if(t){if(n=e,1!==n.outputs.length)throw new cm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new cm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new cm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Oy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new cm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new cm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Fy(this.outputs[0])}this.inboundNodes=[],new Ey({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:dm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(vy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new lm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new lm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new lm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new lm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new cm("Legacy serialization format not supported yet.");a=t}else Zr.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof nx))throw new hm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=qy(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new cm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new cm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function rx(e){return new Zb(e)}function ax(e){return new nx(e)}function sx(e,t){return null==t&&(t={}),tx(e,t)}function ix(e){return Oy(e)}function ox(e,t){Hy.registerCallbackConstructor(e,t)}nx.className="Sequential",Ki.registerClass(nx);var ux=class extends Ki.Serializable{getConfig(){return{}}},lx=class extends ux{apply(e,t=1){return function(e,t=1){if(1!==t)throw new hm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return el(e)}(e,t)}};lx.className="elu",Ki.registerClass(lx);var cx=class extends ux{apply(e){return Gc(e)}};cx.className="selu",Ki.registerClass(cx);var hx=class extends ux{apply(e){return Dc(e)}};hx.className="relu",Ki.registerClass(hx);var px=class extends ux{apply(e){return vo((()=>sc(6,Dc(e))))}};px.className="relu6",Ki.registerClass(px);var dx=class extends ux{apply(e){return e}};dx.className="linear",Ki.registerClass(dx);var fx=class extends ux{apply(e){return du(e)}};fx.className="sigmoid",Ki.registerClass(fx);var mx=class extends ux{apply(e){return function(e){return vo((()=>{const t=Ro(.5,Oo(.2,e));return Su(t,0,1)}))}(e)}};mx.className="hardSigmoid",Ki.registerClass(mx);var gx=class extends ux{apply(e){return Al(e)}};gx.className="softplus",Ki.registerClass(gx);var yx=class extends ux{apply(e){return function(e){return vo((()=>Mo(e,zo(e).add(1))))}(e)}};yx.className="softsign",Ki.registerClass(yx);var bx=class extends ux{apply(e){return mu(e)}};bx.className="tanh",Ki.registerClass(bx);var xx=class extends ux{apply(e,t=-1){return eh(e,t)}};xx.className="softmax",Ki.registerClass(xx);var vx=class extends ux{apply(e,t=-1){return Ol(e,t)}};vx.className="logSoftmax",Ki.registerClass(vx);var wx=class extends ux{apply(e,t=1){return vo((()=>du(e.mul(t)).mul(e)))}};wx.className="swish",Ki.registerClass(wx);var kx=class extends ux{apply(e){return vo((()=>Oo(e,mu(Al(e)))))}};function Ix(e){return e.getClassName()}function Nx(e,t={}){return Im(e,Ki.SerializationMap.getMap().classNameMap,t,"activation")}function Sx(e){if(null==e){const e={className:"linear",config:{}};return Nx(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Nx(t)}return e instanceof ux?e:Nx(e)}function Cx(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}kx.className="mish",Ki.registerClass(kx);var Tx=class extends Ki.Serializable{},_x=class extends Tx{constructor(e){super(),Cx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return vo((()=>{let t=tc([1]);return this.hasL1&&(t=Ro(t,Ml(Oo(this.l1,zo(e))))),this.hasL2&&(t=Ro(t,Ml(Oo(this.l2,Ng(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};_x.className="L1L2",Ki.registerClass(_x);var Ex={l1l2:"L1L2"};function $x(e){return wm(e)}function Ax(e,t={}){return Im(e,Ki.SerializationMap.getMap().classNameMap,t,"regularizer")}function Fx(e){if(null==e)return null;if("string"==typeof e){return Ax({className:e in Ex?Ex[e]:e,config:{}})}return e instanceof Tx?e:Ax(e)}var Rx=class extends Ay{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=xy(e);let n=Dc(e);return null!=this.maxValue&&(n=Su(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Rx.className="ReLU",Ki.registerClass(Rx);var Dx=class extends Ay{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xy(e);return gl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Dx.className="LeakyReLU",Ki.registerClass(Dx);var Mx=class extends Ay{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Yg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Fx(e.alphaRegularizer),this.alphaConstraint=Wm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new cm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=vy(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Cy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=xy(e),Ic(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Xg(this.alphaInitializer),alphaRegularizer:$x(this.alphaRegularizer),alphaConstraint:Pm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Mx.className="PReLU",Ki.registerClass(Mx);var Ox=class extends Ay{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new hm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xy(e);return el(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ox.className="ELU",Ki.registerClass(Ox);var zx=class extends Ay{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=xy(e);return n.mul(dg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};zx.className="ThresholdedReLU",Ki.registerClass(zx);var Lx=class extends Ay{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new xx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=xy(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Px(e,t,n){if("number"==typeof e)return dm(e,t);if(e.length!==t)throw new cm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new cm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Bx(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Wx(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+hg([n-t,0]);else{if("same"!==r)throw new cm(`Unsupport padding mode: ${r}.`);e*=t}return e}function Vx(e,t){return vo((()=>(Qm(t),"channelsFirst"===t?mi(e,[0,2,3,1]):e)))}function Ux(e,t){return vo((()=>(Qm(t),"channelsFirst"===t?mi(e,[0,2,3,4,1]):e)))}function Gx(e,t,n,r=[1,1],a="valid",s,i,o=null){return vo((()=>{if(null==s&&(s="channelsLast"),Qm(s),3!==e.rank&&4!==e.rank)throw new cm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new cm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Vx(e,s);if("causal"===a)throw new hm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=zh.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=mi(u,[0,3,1,2])),u}))}Lx.className="Softmax",Ki.registerClass(Lx);var Hx=class extends Ay{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hx.verifyArgs(t),this.rank=e,Em(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new hm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Px(t.kernelSize,e,"kernelSize"),this.strides=Px(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,eg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Qm(this.dataFormat),this.activation=Sx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Wm(t.biasConstraint),this.biasRegularizer=Fx(t.biasRegularizer),this.activityRegularizer=Fx(t.activityRegularizer),this.dilationRate=Px(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new cm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new cm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new cm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(fm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!_m(e.kernelSize,"number",1,3))throw new cm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ix(this.activation),useBias:this.useBias,biasInitializer:Xg(this.biasInitializer),biasRegularizer:$x(this.biasRegularizer),activityRegularizer:$x(this.activityRegularizer),biasConstraint:Pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},jx=class extends Hx{constructor(e,t){super(e,t),this.kernel=null,jx.verifyArgs(t),this.filters=t.filters,Em(this.filters,"filters"),this.kernelInitializer=Yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Wm(t.kernelConstraint),this.kernelRegularizer=Fx(t.kernelRegularizer)}build(e){e=vy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return vo((()=>{let t;e=xy(e);const n=null==this.bias?null:this.bias.read(),r=Am(this.activation.getClassName());if(null!=r&&2===this.rank)t=Gx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return vo((()=>{if(null==s&&(s="channelsLast"),Qm(s),3!==e.shape.length)throw new cm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new cm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new cm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=mi(e,[0,2,1])),"causal"===a)throw new hm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Au(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Cg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Gx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new hm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return vo((()=>{if(null==s&&(s="channelsLast"),Qm(s),4!==e.rank&&5!==e.rank)throw new cm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new cm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Ux(e,s);if("causal"===a)throw new hm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Du(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Cg(o,n)),"channelsFirst"===s&&(o=mi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=vy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Bx(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Xg(this.kernelInitializer),kernelRegularizer:$x(this.kernelRegularizer),kernelConstraint:Pm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new cm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},qx=class extends jx{constructor(e){super(2,e),qx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_m(e.kernelSize,"number",1,2))throw new cm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};qx.className="Conv2D",Ki.registerClass(qx);var Kx=class extends jx{constructor(e){super(3,e),Kx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new cm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Kx.className="Conv3D",Ki.registerClass(Kx);var Xx=class extends qx{constructor(e){if(super(e),this.inputSpec=[new Cy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new cm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=vy(e)).length)throw new cm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return vo((()=>{let t=xy(e);if(4!==t.shape.length)throw new cm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,Wx(i,c,u,this.padding),Wx(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=mi(t,[0,2,3,1]));let d=Ru(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=mi(d,[0,3,1,2])),null!=this.bias&&(d=Cg(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=vy(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Wx(t[r],o,s,this.padding),t[a]=Wx(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};Xx.className="Conv2DTranspose",Ki.registerClass(Xx);var Yx=class extends Kx{constructor(e){if(super(e),this.inputSpec=[new Cy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new cm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=vy(e)).length)throw new cm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return vo((()=>{let t=xy(e);if(5!==t.shape.length)throw new cm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Wx(o,d,c,this.padding),Wx(u,f,h,this.padding),Wx(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=mi(t,[0,2,3,4,1]));let y=Ou(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=mi(y,[0,4,1,2,3])),null!==this.bias&&(y=Cg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=vy(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Wx(t[r],l,i,this.padding),t[a]=Wx(t[a],c,o,this.padding),t[s]=Wx(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};Yx.className="Conv3DTranspose",Ki.registerClass(Yx);var Jx=class extends jx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new cm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new cm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new cm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Yg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Fx(t.depthwiseRegularizer),this.depthwiseConstraint=Wm(t.depthwiseConstraint),this.pointwiseInitializer=Yg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Fx(t.pointwiseRegularizer),this.pointwiseConstraint=Wm(t.pointwiseConstraint)}build(e){if((e=vy(e)).length<this.rank+2)throw new cm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new cm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Cy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return vo((()=>{let t;if(e=xy(e),1===this.rank)throw new hm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=mi(e,[0,2,3,1])),t=Hc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Cg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=mi(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Xg(this.depthwiseInitializer),e.pointwiseInitializer=Xg(this.pointwiseInitializer),e.depthwiseRegularizer=$x(this.depthwiseRegularizer),e.pointwiseRegularizer=$x(this.pointwiseRegularizer),e.depthwiseConstraint=Pm(this.depthwiseConstraint),e.pointwiseConstraint=Pm(this.pointwiseConstraint),e}};Jx.className="SeparableConv";var Zx=class extends Jx{constructor(e){super(2,e)}};Zx.className="SeparableConv2D",Ki.registerClass(Zx);var Qx=class extends jx{constructor(e){super(1,e),Qx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_m(e.kernelSize,"number",1,1))throw new cm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Qx.className="Conv1D",Ki.registerClass(Qx);var ev=class extends Ay{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return vo((()=>{if(e=xy(e),"channelsLast"===this.dataFormat){const t=yg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=yg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ev.className="Cropping2D",Ki.registerClass(ev);var tv=class extends Ay{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Tm(Km,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return vo((()=>{let t=xy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=mi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return mi(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};tv.className="UpSampling2D",Ki.registerClass(tv);var nv=class extends Hx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Yg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Wm(e.depthwiseConstraint),this.depthwiseRegularizer=Fx(e.depthwiseRegularizer)}build(e){if((e=vy(e)).length<4)throw new cm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new cm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vo((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return vo((()=>{null==a&&(a="channelsLast"),Qm(a);let i=Vx(e,a);if(4!==e.rank)throw new cm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new cm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Vu(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=mi(i,[0,3,1,2])),i}))}(e=xy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Cg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=vy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Bx(t,this.kernelSize[0],this.padding,this.strides[0]),s=Bx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Xg(this.depthwiseInitializer),e.depthwiseRegularizer=$x(this.depthwiseRegularizer),e.depthwiseConstraint=Pm(this.depthwiseRegularizer),e}};function rv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new cm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function av(e,t,n,r=!1,a,s,i=!1,o=!1){return vo((()=>{const i=t.shape.length;if(i<3)throw new cm(`Input should be at least 3D, but is ${i}D.`);const u=[1,0].concat(pg(2,i));if(t=mi(t,u),null!=s)throw new hm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");null!=a&&((a=a.asType("bool").asType("float32")).rank===i-1&&(a=rl(a,-1)),a=mi(a,u)),r&&(t=Oc(t,0),null!=a&&(a=Oc(a,0)));const l=[];let c,h=n;const p=t.shape[0],d=kh(t);let f,m;null!=a&&(f=kh(a));for(let t=0;t<p;++t){const n=d[t],r=vo((()=>e(n,h)));if(null==a)c=r[0],h=r[1];else{const e=vo((()=>{const e=f[t],n=dc(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));c=e.output,h=e.newStates}o&&l.push(c)}if(o){m=lh(l,1)}return[c,m,h]}))}nv.className="DepthwiseConv2D",Ki.registerClass(nv);var sv=class extends Ay{constructor(e){let t;if(super(e),null==e.cell)throw new cm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new dv({cells:e.cell}):e.cell,null==t.stateSize)throw new cm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Cy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return pg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){yy(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return vo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new hm("Constants support is not implemented in RNN yet.");yy(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Cy({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Zr.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new cm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Cy({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){vo((()=>{if(!this.stateful)throw new um("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new cm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>tc([n,e]))):this.states_=[tc([n,this.cell.stateSize])];else if(null==e)wo(this.states_),null!=this.keptStates&&(wo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>tc([n,e]))):this.states_[0]=tc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):wo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Zr.arraysEqual(r.shape,s))throw new cm(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ko(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=rv(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Cy({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Ty){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return vo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=xy(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new cm(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll;const i={training:r},o=av(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return vo((()=>{let t=tc(e.shape);return t=Ml(t,[1,2]),t=fg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?vg(t,[1,e]):t)):this.cell.stateSize>1?[vg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===sv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=qy(t.cell,n);return new e(Object.assign(t,{cell:r}))}};sv.className="RNN",Ki.registerClass(sv);var iv=class extends Ay{},ov=class extends iv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Em(this.units,"units"),this.activation=Sx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fx(e.kernelRegularizer),this.recurrentRegularizer=Fx(e.recurrentRegularizer),this.biasRegularizer=Fx(e.biasRegularizer),this.kernelConstraint=Wm(e.kernelConstraint),this.recurrentConstraint=Wm(e.recurrentConstraint),this.biasConstraint=Wm(e.biasConstraint),this.dropout=cg([1,hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cg([1,hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=vy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vo((()=>{if(2!==(e=e).length)throw new cm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fv({ones:()=>dc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fv({ones:()=>dc(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=kg(null!=s?Oo(e,s):e,this.kernel.read()),null!=this.bias&&(a=Cg(a,this.bias.read())),null!=i&&(n=Oo(n,i));let o=Ro(a,kg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ix(this.activation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:$x(this.kernelRegularizer),recurrentRegularizer:$x(this.recurrentRegularizer),biasRegularizer:$x(this.biasRegularizer),activityRegularizer:$x(this.activityRegularizer),kernelConstraint:Pm(this.kernelConstraint),recurrentConstraint:Pm(this.recurrentConstraint),biasConstraint:Pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};ov.className="SimpleRNNCell",Ki.registerClass(ov);var uv=class extends sv{constructor(e){e.cell=new ov(e),super(e)}call(e,t){return vo((()=>{null!=this.cell.dropoutMask&&(wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};uv.className="SimpleRNN",Ki.registerClass(uv);var lv=class extends iv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new cm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Em(this.units,"units"),this.activation=Sx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fx(e.kernelRegularizer),this.recurrentRegularizer=Fx(e.recurrentRegularizer),this.biasRegularizer=Fx(e.biasRegularizer),this.kernelConstraint=Wm(e.kernelConstraint),this.recurrentConstraint=Wm(e.recurrentConstraint),this.biasConstraint=Wm(e.biasConstraint),this.dropout=cg([1,hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cg([1,hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=vy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return vo((()=>{if(2!==(e=e).length)throw new cm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fv({ones:()=>dc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fv({ones:()=>dc(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Oo(e,a[0]));let l=kg(e,this.kernel.read());this.useBias&&(l=Cg(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oo(r,s[0]));const c=this.recurrentKernel.read(),[h,p]=ah(c,[2*this.units,this.units],c.rank-1),d=kg(r,h),[f,m,g]=ah(l,3,l.rank-1),[y,b]=ah(d,2,d.rank-1);i=this.recurrentActivation.apply(Ro(f,y)),o=this.recurrentActivation.apply(Ro(m,b));const x=kg(Oo(o,r),p);u=this.activation.apply(Ro(g,x));const v=Ro(Oo(i,r),Oo(Ro(1,$l(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ix(this.activation),recurrentActivation:Ix(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:$x(this.kernelRegularizer),recurrentRegularizer:$x(this.recurrentRegularizer),biasRegularizer:$x(this.biasRegularizer),activityRegularizer:$x(this.activityRegularizer),kernelConstraint:Pm(this.kernelConstraint),recurrentConstraint:Pm(this.recurrentConstraint),biasConstraint:Pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};lv.className="GRUCell",Ki.registerClass(lv);var cv=class extends sv{constructor(e){e.implementation,e.cell=new lv(e),super(e)}call(e,t){return vo((()=>{null!=this.cell.dropoutMask&&(wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};cv.className="GRU",Ki.registerClass(cv);var hv=class extends iv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Em(this.units,"units"),this.activation=Sx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Fx(e.kernelRegularizer),this.recurrentRegularizer=Fx(e.recurrentRegularizer),this.biasRegularizer=Fx(e.biasRegularizer),this.kernelConstraint=Wm(e.kernelConstraint),this.recurrentConstraint=Wm(e.recurrentConstraint),this.biasConstraint=Wm(e.biasConstraint),this.dropout=cg([1,hg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=cg([1,hg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=vy(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ag{apply(t,r){const a=e.apply([n]),s=(new Rg).apply([n]),i=e.apply([2*n]);return xg(xg(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return vo((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new cm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fv({ones:()=>dc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fv({ones:()=>dc(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Oo(e,s[0]));let h=kg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Oo(r,i[0])),h=Ro(h,kg(r,this.recurrentKernel.read())),this.useBias&&(h=Cg(h,this.bias.read()));const[p,d,f,m]=ah(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Ro(Oo(u,a),Oo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Oo(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ix(this.activation),recurrentActivation:Ix(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$x(this.kernelRegularizer),recurrentRegularizer:$x(this.recurrentRegularizer),biasRegularizer:$x(this.biasRegularizer),activityRegularizer:$x(this.activityRegularizer),kernelConstraint:Pm(this.kernelConstraint),recurrentConstraint:Pm(this.recurrentConstraint),biasConstraint:Pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};hv.className="LSTMCell",Ki.registerClass(hv);var pv=class extends sv{constructor(e){e.implementation,e.cell=new hv(e),super(e)}call(e,t){return vo((()=>{null!=this.cell.dropoutMask&&(wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};pv.className="LSTM",Ki.registerClass(pv);var dv=class extends iv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return vo((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;yy(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{rg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(qy(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ny(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Sy(t)}};function fv(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Tg(t(),n),i=()=>_g(s,t,r);if(!a||a<=1)return ko(i().clone());return Array(a).fill(void 0).map(i).map((e=>ko(e.clone())))}dv.className="StackedRNNCells",Ki.registerClass(dv);var mv=class extends sv{constructor(e){if(e.unroll)throw new hm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new hm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Cy({ndim:5})]}call(e,t){return vo((()=>{if(null!=this.cell.dropoutMask&&(wo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new cm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return vo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=tc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){vo((()=>{if(!this.stateful)throw new um("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new cm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>tc(a))):this.states_=[tc(a)];else if(null==e)wo(this.states_),null!=this.keptStates&&(wo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>tc(a))):this.states_[0]=tc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):wo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!Zr.arraysEqual(n.shape,r))throw new cm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ko(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Bx(u,r[0],a,s[0],i[0]),h=Bx(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}};mv.className="ConvRNN2D";var gv=class extends hv{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Em(this.filters,"filters"),this.kernelSize=Px(n,2,"kernelSize"),this.kernelSize.forEach((e=>Em(e,"kernelSize"))),this.strides=Px(r||1,2,"strides"),this.strides.forEach((e=>Em(e,"strides"))),this.padding=a||"valid",eg(this.padding),this.dataFormat=s||"channelsLast",Qm(this.dataFormat),this.dilationRate=Px(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Em(e,"dilationRate")))}build(e){var t;e=vy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new cm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ag{apply(e,t){return bg([n.apply([r]),nc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return vo((()=>{if(3!==e.length)throw new cm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fv({ones:()=>dc(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Oo(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fv({ones:()=>dc(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[y,b,x,v]=ah(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?ah(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,N,this.padding);const[S,C,T,_]=ah(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,_);const E=this.recurrentActivation.apply(Ro(u,d)),$=this.recurrentActivation.apply(Ro(l,f)),A=Ro(Oo($,s),Oo(E,this.activation.apply(Ro(c,m)))),F=Oo(this.recurrentActivation.apply(Ro(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=$u(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Cg(a,n,this.dataFormat):a}recurrentConv(e,t){return $u(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};gv.className="ConvLSTM2DCell",Ki.registerClass(gv);var yv=class extends mv{constructor(e){const t=new gv(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};yv.className="ConvLSTM2D",Ki.registerClass(yv);var bv=class extends Ay{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return _g((()=>Tg(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};bv.className="Dropout",Ki.registerClass(bv);var xv=class extends bv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};xv.className="SpatialDropout1D",Ki.registerClass(xv);var vv=class extends Ay{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Em(this.units,"units"),this.activation=Sx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Wm(e.kernelConstraint),this.biasConstraint=Wm(e.biasConstraint),this.kernelRegularizer=Fx(e.kernelRegularizer),this.biasRegularizer=Fx(e.biasRegularizer),this.activityRegularizer=Fx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=vy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=vy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e),r=Am(this.activation.getClassName());let a;return null!=r?a=kg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=kg(n,this.kernel.read()),null!=this.bias&&(a=Cg(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Ix(this.activation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:$x(this.kernelRegularizer),biasRegularizer:$x(this.biasRegularizer),activityRegularizer:$x(this.activityRegularizer),kernelConstraint:Pm(this.kernelConstraint),biasConstraint:Pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};vv.className="Dense",Ki.registerClass(vv);var wv=class extends Ay{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=vy(e);for(const t of e.slice(1))if(null==t)throw new cm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ug(e,1)]}call(e,t){return vo((()=>{this.invokeCallHook(e,t);let n=xy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new cm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ug(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};wv.className="Flatten",Ki.registerClass(wv);var kv=class extends Ay{constructor(e){super(e),this.supportsMasking=!0,this.activation=Sx(e.activation)}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ix(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};kv.className="Activation",Ki.registerClass(kv);var Iv=class extends Ay{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return vo((()=>{return e=xy(e),t=e,n=this.n,vo((()=>{if(2!==t.shape.length)throw new cm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return vg(fg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Iv.className="RepeatVector",Ki.registerClass(Iv);var Nv=class extends Ay{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new cm("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=ug(e);if(null!==s){if(0===a||i%a!=0)throw new cm(n);r[s]=i/a}else if(i!==a)throw new cm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Nv.className="Reshape",Ki.registerClass(Nv);var Sv=class extends Ay{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=pg(1,e.dims.length+1);if(!Zr.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Cy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=vy(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return mi(xy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Sv.className="Permute",Ki.registerClass(Sv);var Cv=class extends Ay{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=xy(e);return Vo(pc(n,this.maskValue),-1)}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e),r=Vo(pc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}};Cv.className="Masking",Ki.registerClass(Cv);var Tv=class extends Ay{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ym(e.inputLength))}this.inputDim=e.inputDim,Em(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Em(this.outputDim,"outputDim"),this.embeddingsInitializer=Yg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Fx(e.embeddingsRegularizer),this.activityRegularizer=Fx(e.activityRegularizer),this.embeddingsConstraint=Wm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return vo((()=>this.maskZero?(e=xy(e),pc(e,Yu(e))):null))}computeOutputShape(e){if(e=vy(e),null==this.inputLength)return[...e,this.outputDim];const t=ym(this.inputLength);if(t.length!==e.length-1)throw new cm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new cm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return vo((()=>{this.invokeCallHook(e,t);let n=xy(e);"int32"!==n.dtype&&(n=dg(n,"int32"));return Ig(this.embeddings.read(),n.as1D()).reshape(vy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xg(this.embeddingsInitializer),embeddingsRegularizer:$x(this.embeddingsRegularizer),activityRegularizer:$x(this.activityRegularizer),embeddingsConstraint:Pm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Tv.className="Embedding",Ki.registerClass(Tv);var _v=class extends Ay{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new hm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new cm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[vy(e)]),(e=e).length<2)throw new cm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Sm(t),t.length>1)throw new cm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Sm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return vo((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=hg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=fg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=r.reshape([a].concat(ug(e.slice(1))));i=mi(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const a=pg(1,e).concat([0]);t.push(mi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=mi(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(pg(0,a-1));r=mi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Sm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return vo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new cm("`mask` should be an Array");if(!Array.isArray(e))throw new cm("`inputs` should be an Array");if(t.length!==e.length)throw new cm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:rl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=jl(n,t[e]);return n}))}},Ev=class extends _v{constructor(e){super(e)}mergeFunction(e){return vo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ro(t,e[n]);return t}))}};Ev.className="Add",Ki.registerClass(Ev);var $v=class extends _v{constructor(e){super(e)}mergeFunction(e){return vo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Oo(t,e[n]);return t}))}};$v.className="Multiply",Ki.registerClass($v);var Av=class extends _v{constructor(e){super(e)}mergeFunction(e){return vo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ro(t,e[n]);return Oo(1/e.length,t)}))}};Av.className="Average",Ki.registerClass(Av);var Fv=class extends _v{constructor(e){super(e)}mergeFunction(e){return vo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ql(t,e[n]);return t}))}};Fv.className="Maximum",Ki.registerClass(Fv);var Rv=class extends _v{constructor(e){super(e)}mergeFunction(e){return vo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sc(t,e[n]);return t}))}};Rv.className="Minimum",Ki.registerClass(Rv);var Dv=class extends _v{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new cm("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(Zr.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new cm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return vo((()=>bg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new cm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new cm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new cm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new cm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return vo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(dc(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(rl(t[n],-1)):r.push(t[n]);const a=pu(r,this.axis);return Wo(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Mv(e,t){for(;e<0;)e+=t;return e}Dv.className="Concatenate",Ki.registerClass(Dv);var Ov=class extends _v{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Zr.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new hm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new cm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new cm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Mv(t,e[n].shape.length))):[Mv(this.axes,n.shape.length),Mv(this.axes,r.shape.length)],this.normalize&&(n=Ky(n,t[0]),r=Ky(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new hm("batchDot is not implemented for tensors of 4D or higher rank yet");if(Zr.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Zr.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new hm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return vo((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Mv(this.axes,e.length),Mv(this.axes,t.length)],n}computeOutputShape(e){Zr.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new hm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Ov.className="Dot",Ki.registerClass(Ov);var zv=class extends Ay{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e);return _g((()=>wg(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}};zv.className="GaussianNoise",Ki.registerClass(zv);var Lv=class extends Ay{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return vo((()=>{this.invokeCallHook(e,t);const n=xy(e);if(this.rate>0&&this.rate<1){return _g((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(wg(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}};Lv.className="GaussianDropout",Ki.registerClass(Lv);var Pv=class extends Ay{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||xy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return vo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return _g((()=>{const t=xy(e),r=-1.7580993408473766;let a=hl($c(n),this.rate);a=dg(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>xy(e)),t.training||!1)}return e}))}};function Bv(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=xu(e,t,n,r,a,s);else if(3===e.rank)i=vu(e,t,n,r,a,s);else{if(4!==e.rank)throw new hm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=wu(e,t,n,r,a,s)}return i}function Wv(e,t,n,r,a=.001){return Zr.arraysEqual(r.slice().sort(),pg(0,e.rank-1))?function(e,t,n,r,a=.001){return vo((()=>{const s=lc(e,r),i=s.mean,o=s.variance;return[Bv(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return vo((()=>{const s=lc(e,r),i=s.mean,o=s.variance,u=[];for(const t of pg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),h=null==t?null:t.reshape(u),p=null==n?null:n.reshape(u);return[Bv(e,l,c,p,h,a),i,o]}))}(e,t,n,r,a)}Pv.className="AlphaDropout",Ki.registerClass(Pv);var Vv=class extends Ay{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yg(e.betaInitializer||"zeros"),this.gammaInitializer=Yg(e.gammaInitializer||"ones"),this.movingMeanInitializer=Yg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yg(e.movingVarianceInitializer||"ones"),this.betaConstraint=Wm(e.betaConstraint),this.gammaConstraint=Wm(e.gammaConstraint),this.betaRegularizer=Fx(e.betaRegularizer),this.gammaRegularizer=Fx(e.gammaRegularizer)}build(e){e=vy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new cm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Cy({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return vo((()=>{const n=null!=t.training&&t.training,r=xy(e),a=r.shape,s=a.length,i=pg(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=dm(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!Zr.arraysEqual(l,pg(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return Bv(r,e,t,n,a,this.epsilon)}return Bv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=Wv(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{vo((()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xg(this.betaInitializer),gammaInitializer:Xg(this.gammaInitializer),movingMeanInitializer:Xg(this.movingMeanInitializer),movingVarianceInitializer:Xg(this.movingVarianceInitializer),betaRegularizer:$x(this.betaRegularizer),gammaRegularizer:$x(this.gammaRegularizer),betaConstraint:Pm(this.betaConstraint),gammaConstraint:Pm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Vv.className="BatchNormalization",Ki.registerClass(Vv);var Uv=class extends Ay{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yg(e.betaInitializer||"zeros"),this.gammaInitializer=Yg(e.gammaInitializer||"ones"),this.betaRegularizer=Fx(e.betaRegularizer),this.gammaRegularizer=Fx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=vy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Sm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=xy(e),r=n.shape,a=r.length;return vo((()=>{let{mean:e,variance:t}=lc(n,this.axis,!0);const s=dm(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),Bv(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xg(this.betaInitializer),gammaInitializer:Xg(this.gammaInitializer),betaRegularizer:$x(this.betaRegularizer),gammaRegularizer:$x(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Uv.className="LayerNormalization",Ki.registerClass(Uv);var Gv=class extends Ay{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new cm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new cm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new cm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Cy({ndim:4})]}computeOutputShape(e){let t,n;return e=vy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return vo((()=>{return t=xy(e),n=this.padding,r=this.dataFormat,vo((()=>{if(4!==t.rank)throw new cm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new cm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new cm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],mc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Hv(e,t,n,r,a,s){return vo((()=>{let i;Qm(a),tg(s),eg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Vx(e,a);const o="same"===r?"same":"valid";return i="max"===s?Yl(e,t,n,o):cu(e,t,n,o),"channelsFirst"===a&&(i=mi(i,[0,3,1,2])),i}))}function jv(e,t,n,r,a,s){return vo((()=>{let i;Qm(a),tg(s),eg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Ux(e,a);const o="same"===r?"same":"valid";return i="max"===s?Jl(e,t,n,o):hu(e,t,n,o),"channelsFirst"===a&&(i=mi(i,[0,4,1,2,3])),i}))}Gv.className="ZeroPadding2D",Ki.registerClass(Gv);var qv=class extends Ay{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new cm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Em(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new cm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Em(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,eg(this.padding),this.inputSpec=[new Cy({ndim:3})]}computeOutputShape(e){const t=Bx((e=vy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return vo((()=>{this.invokeCallHook(e,t),e=fg(xy(e),2);const n=this.poolingFunction(xy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return uh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Kv=class extends qv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),Hv(e,t,n,r,a,"max")}};Kv.className="MaxPooling1D",Ki.registerClass(Kv);var Xv=class extends qv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),Hv(e,t,n,r,a,"avg")}};Xv.className="AveragePooling1D",Ki.registerClass(Xv);var Yv=class extends Ay{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new cm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Em(this.poolSize,"poolSize"),Em(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qm(this.dataFormat),eg(this.padding),this.inputSpec=[new Cy({ndim:4})]}computeOutputShape(e){e=vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Bx(t,this.poolSize[0],this.padding,this.strides[0]),n=Bx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return vo((()=>(this.invokeCallHook(e,t),this.poolingFunction(xy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Jv=class extends Yv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),Hv(e,t,n,r,a,"max")}};Jv.className="MaxPooling2D",Ki.registerClass(Jv);var Zv=class extends Yv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),Hv(e,t,n,r,a,"avg")}};Zv.className="AveragePooling2D",Ki.registerClass(Zv);var Qv=class extends Ay{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new cm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Em(this.poolSize,"poolSize"),Em(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qm(this.dataFormat),eg(this.padding),this.inputSpec=[new Cy({ndim:5})]}computeOutputShape(e){e=vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Bx(t,this.poolSize[0],this.padding,this.strides[0]),n=Bx(n,this.poolSize[1],this.padding,this.strides[1]),r=Bx(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return vo((()=>(this.invokeCallHook(e,t),this.poolingFunction(xy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},ew=class extends Qv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),jv(e,t,n,r,a,"max")}};ew.className="MaxPooling3D",Ki.registerClass(ew);var tw=class extends Qv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qm(a),eg(r),jv(e,t,n,r,a,"avg")}};tw.className="AveragePooling3D",Ki.registerClass(tw);var nw=class extends Ay{constructor(e){super(e),this.inputSpec=[new Cy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new hm}},rw=class extends nw{constructor(e){super(e||{})}call(e,t){return vo((()=>{const t=xy(e);return ec(t,1)}))}};rw.className="GlobalAveragePooling1D",Ki.registerClass(rw);var aw=class extends nw{constructor(e){super(e||{})}call(e,t){return vo((()=>{const t=xy(e);return Rl(t,1)}))}};aw.className="GlobalMaxPooling1D",Ki.registerClass(aw);var sw=class extends Ay{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qm(this.dataFormat),this.inputSpec=[new Cy({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new hm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},iw=class extends sw{call(e,t){return vo((()=>{const t=xy(e);return"channelsLast"===this.dataFormat?ec(t,[1,2]):ec(t,[2,3])}))}};iw.className="GlobalAveragePooling2D",Ki.registerClass(iw);var ow=class extends sw{call(e,t){return vo((()=>{const t=xy(e);return"channelsLast"===this.dataFormat?Rl(t,[1,2]):Rl(t,[2,3])}))}};ow.className="GlobalMaxPooling2D",Ki.registerClass(ow);var uw=class extends Ay{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=qy(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},lw=class extends uw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=vy(e)).length<3)throw new cm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=vy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return vo((()=>av(((e,n)=>[xy(this.layer.call(e,t)),[]]),e=xy(e),[],!1,null,null,!1,!0)[1]))}};lw.className="TimeDistributed",Ki.registerClass(lw);var cw=class extends uw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=qy(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=qy(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Tm(Jm,"BidirectionalMergeMode",a),e.weights)throw new hm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):gm(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=rv(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new cm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Cy({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new hm("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ty;for(const e of s)if(e instanceof Ty!==o)throw new cm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return vo((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=Oc(a,1)),"concat"===this.mergeMode?i=bg([r,a]):"sum"===this.mergeMode?i=Ro(r,a):"ave"===this.mergeMode?i=Oo(.5,Ro(r,a)):"mul"===this.mergeMode?i=Oo(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){rg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),rg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=qy(t.layer);if(delete t.layer,null!=t.numConstants)throw new hm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function hw(e){return new My(e)}function pw(e){return new Ox(e)}function dw(e){return new Rx(e)}function fw(e){return new Dx(e)}function mw(e){return new Mx(e)}function gw(e){return new Lx(e)}function yw(e){return new zx(e)}function bw(e){return new Qx(e)}function xw(e){return new qx(e)}function vw(e){return new Xx(e)}function ww(e){return new Kx(e)}function kw(e){return new Yx(e)}function Iw(e){return new Zx(e)}function Nw(e){return new ev(e)}function Sw(e){return new tv(e)}function Cw(e){return new nv(e)}function Tw(e){return new kv(e)}function _w(e){return new vv(e)}function Ew(e){return new bv(e)}function $w(e){return new xv(e)}function Aw(e){return new wv(e)}function Fw(e){return new Iv(e)}function Rw(e){return new Nv(e)}function Dw(e){return new Sv(e)}function Mw(e){return new Tv(e)}function Ow(e){return new Ev(e)}function zw(e){return new Av(e)}function Lw(e){return new Dv(e)}function Pw(e){return new Fv(e)}function Bw(e){return new Rv(e)}function Ww(e){return new $v(e)}function Vw(e){return new Ov(e)}function Uw(e){return new Vv(e)}function Gw(e){return new Uv(e)}function Hw(e){return new Gv(e)}function jw(e){return new Xv(e)}function qw(e){return jw(e)}function Kw(e){return jw(e)}function Xw(e){return new Zv(e)}function Yw(e){return Xw(e)}function Jw(e){return Xw(e)}function Zw(e){return new tw(e)}function Qw(e){return Zw(e)}function ek(e){return Zw(e)}function tk(e){return new rw(e)}function nk(e){return new iw(e)}function rk(e){return new aw(e)}function ak(e){return new ow(e)}function sk(e){return new Kv(e)}function ik(e){return new Jv(e)}function ok(e){return new ew(e)}function uk(e){return new cv(e)}function lk(e){return new lv(e)}function ck(e){return new pv(e)}function hk(e){return new hv(e)}function pk(e){return new uv(e)}function dk(e){return new ov(e)}function fk(e){return new yv(e)}function mk(e){return new gv(e)}function gk(e){return new sv(e)}function yk(e){return new dv(e)}function bk(e){return new cw(e)}function xk(e){return new lw(e)}cw.className="Bidirectional",Ki.registerClass(cw);var vk=rk,wk=ak,kk=sk,Ik=ik;function Nk(e){return new zv(e)}function Sk(e){return new Lv(e)}function Ck(e){return new Pv(e)}function Tk(e){return new Cv(e)}var _k={};function Ek(e,t){return ab(e,t)}function $k(e,t){return lb(e,t)}function Ak(e,t){return cb(e,t)}function Fk(e,t){return sb(e,t)}function Rk(e,t){return hb(e,t)}function Dk(e,t){return ob(e,t)}function Mk(e,t){return ub(e,t)}function Ok(e,t){return tb(e,t)}function zk(e,t){return Yy(e,t)}function Lk(e,t){return Jy(e,t)}function Pk(e,t){return Jy(e,t)}function Bk(e,t){return Jy(e,t)}function Wk(e,t){return Xy(e,t)}function Vk(e,t){return Xy(e,t)}function Uk(e,t){return Xy(e,t)}h(_k,{MAPE:()=>Pk,MSE:()=>Vk,binaryAccuracy:()=>Ek,binaryCrossentropy:()=>$k,categoricalAccuracy:()=>Fk,categoricalCrossentropy:()=>Rk,cosineProximity:()=>Ok,mape:()=>Bk,meanAbsoluteError:()=>zk,meanAbsolutePercentageError:()=>Lk,meanSquaredError:()=>Wk,mse:()=>Uk,precision:()=>Dk,recall:()=>Mk,sparseCategoricalAccuracy:()=>Ak});var Gk={};h(Gk,{modelFromJSON:()=>ex});var Hk={};function jk(e){return new _x(e)}function qk(e){return Cx(t=e),new _x({l1:null!=t?t.l1:null,l2:0});var t}function Kk(e){return Cx(t=e),new _x({l2:null!=t?t.l2:null,l1:0});var t}h(Hk,{l1:()=>qk,l1l2:()=>jk,l2:()=>Kk});var Xk=class extends Py{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Zb))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Yk(e,t){return e<t}function Jk(e,t){return e>t}var Zk=class extends Xk{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new hm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=Yk:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Jk:this.monitorFunc=Yk,this.monitorFunc===Yk&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Yk?1/0:-1/0}async onEpochEnd(e,t){await zy(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return t}};var Qk,eI,tI,nI={earlyStopping:function(e){return new Zk(e)}};(eI=Qk||(Qk={}))[eI.DT_INVALID=0]="DT_INVALID",eI[eI.DT_FLOAT=1]="DT_FLOAT",eI[eI.DT_DOUBLE=2]="DT_DOUBLE",eI[eI.DT_INT32=3]="DT_INT32",eI[eI.DT_UINT8=4]="DT_UINT8",eI[eI.DT_INT16=5]="DT_INT16",eI[eI.DT_INT8=6]="DT_INT8",eI[eI.DT_STRING=7]="DT_STRING",eI[eI.DT_COMPLEX64=8]="DT_COMPLEX64",eI[eI.DT_INT64=9]="DT_INT64",eI[eI.DT_BOOL=10]="DT_BOOL",eI[eI.DT_QINT8=11]="DT_QINT8",eI[eI.DT_QUINT8=12]="DT_QUINT8",eI[eI.DT_QINT32=13]="DT_QINT32",eI[eI.DT_BFLOAT16=14]="DT_BFLOAT16",eI[eI.DT_FLOAT_REF=101]="DT_FLOAT_REF",eI[eI.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",eI[eI.DT_INT32_REF=103]="DT_INT32_REF",eI[eI.DT_UINT8_REF=104]="DT_UINT8_REF",eI[eI.DT_INT16_REF=105]="DT_INT16_REF",eI[eI.DT_INT8_REF=106]="DT_INT8_REF",eI[eI.DT_STRING_REF=107]="DT_STRING_REF",eI[eI.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",eI[eI.DT_INT64_REF=109]="DT_INT64_REF",eI[eI.DT_BOOL_REF=110]="DT_BOOL_REF",eI[eI.DT_QINT8_REF=111]="DT_QINT8_REF",eI[eI.DT_QUINT8_REF=112]="DT_QUINT8_REF",eI[eI.DT_QINT32_REF=113]="DT_QINT32_REF",eI[eI.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(tI||(tI={}));var rI={};function aI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};rI[e]=n}function sI(e){return rI[e]}function iI(e){delete rI[e]}function oI(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return uI(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type){return t.inputNames.slice(e,i).map((e=>uI(e,n,r,a)))}const o=uI(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:Zr.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function uI(e,t,n,r){const[a,s]=hI(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[cI(a,e)]));return void 0!==i?t[cI(a,i)][s]:void 0}function lI(e,t){const[n,r]=hI(e);return[cI(n,t&&t.currentContextId),r]}function cI(e,t){return t?`${e}-${t}`:e}function hI(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function pI(e,t,n){let r=oI("pad",e,t,n);if("explicit"===r){r=oI("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function dI(e){return e.kept?e:Ks(e)}var fI={};h(fI,{json:()=>mI});var mI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gI={};h(gI,{json:()=>yI});var yI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bI={};h(bI,{json:()=>xI});var xI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],vI={};h(vI,{json:()=>wI});var wI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],kI={};h(kI,{json:()=>II});var II=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],NI={};h(NI,{json:()=>SI});var SI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CI={};h(CI,{json:()=>TI});var TI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_I={};h(_I,{json:()=>EI});var EI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],$I={};h($I,{json:()=>AI});var AI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],FI={};h(FI,{json:()=>RI});var RI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],DI={};h(DI,{json:()=>MI});var MI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],OI={};h(OI,{json:()=>zI});var zI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],LI={};h(LI,{json:()=>PI});var PI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],BI={};h(BI,{json:()=>WI});var WI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],VI={};h(VI,{json:()=>UI});var UI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],GI={};h(GI,{json:()=>HI});var HI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],jI={};h(jI,{json:()=>qI});var qI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],KI=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[fI,gI,bI,vI,kI,NI,CI,DI,FI,_I,OI,LI,BI,VI,GI,jI,$I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=lI(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=lI(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=lI(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=sI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=YI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=YI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=iN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=iN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=ZI(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=ZI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=sN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=sN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=JI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=JI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=uN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=uN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=aN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=aN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=oN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=tN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=tN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=nN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=nN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=eN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=eN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=lI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:QI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=lI(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=lI(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function XI(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Oe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function YI(e,t,n,r=!1){const a=e[t];return null!=a?XI(a.s,r):n}function JI(e,t,n){const r=e[t];return r?r.b:n}function ZI(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function QI(e){switch("string"==typeof e&&(e=Qk[e]),e){case Qk.DT_FLOAT:return"float32";case Qk.DT_INT32:case Qk.DT_INT64:case Qk.DT_INT8:case Qk.DT_UINT8:return"int32";case Qk.DT_BOOL:return"bool";case Qk.DT_DOUBLE:return"float32";case Qk.DT_STRING:return"string";default:return null}}function eN(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function tN(e,t,n){const r=e[t];return r&&r.type?QI(r.type):n}function nN(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>QI(e))):n}function rN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function aN(e,t,n){const r=e[t];return r&&r.shape?rN(r.shape):n}function sN(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function iN(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>XI(e,r))):n}function oN(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>rN(e))):n}function uN(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function lN(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Zr.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];Zr.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function cN(e){return"number"!=typeof e&&!e.some((e=>e<0))}function hN(e,t,n){let r=pN(e,n);const a=!cN(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=pN(e.shape,r)})),!cN(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function pN(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var dN=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);lN(t,e.shape,"TensorList shape mismatch: "),ko(e)})),this.idTensor=Uc(0),this.maxNumElements=r,ko(this.idTensor)}get id(){return this.idTensor.id}copy(){return new dN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);lN(e,this.elementShape,"TensorList shape mismatch: ");const r=hN(this.elementShape,this.tensors,e);return vo((()=>{const e=this.tensors.map((e=>lu(e,r)));return lh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=hN(this.elementShape,this.tensors,e),r=this.tensors.pop();return lN(r.shape,e,"TensorList shape mismatch: "),lu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(lN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ko(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);lN(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=hN(this.elementShape,this.tensors,t);return lu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);lN(this.elementShape,t.shape,"TensorList shape mismatch: "),ko(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);lN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=hN(this.elementShape,this.tensors,n);return 0===e.length?ns([],[0].concat(r)):vo((()=>{const t=e.map((e=>lu(this.tensors[e],r)));return lh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);lN(this.elementShape,t,"TensorList shape mismatch: ");const n=hN(this.elementShape,this.tensors,t);return 0===this.size()?ns([],[0].concat(n)):vo((()=>{const e=this.tensors.map((e=>lu(e,n)));return pu(e,0)}))}};var fN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=oI("thenBranch",e,t,n),a=oI("elseBranch",e,t,n),s=oI("cond",e,t,n),i=oI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=oI("body",e,t,n),a=oI("cond",e,t,n),s=oI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[dI(oI("pred",e,t,n))];case"Switch":{const r=oI("pred",e,t,n);let a=oI("data",e,t,n);return a.kept||(a=dI(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==uI(e,t,n)));if(r){return[dI(uI(r,t,n))]}return}case"Enter":{const r=oI("frameName",e,t,n),a=oI("tensor",e,t,n);return n.enterFrame(r),[dI(a)]}case"Exit":{const r=oI("tensor",e,t,n);return n.exitFrame(),[dI(r)]}case"NextIteration":{const r=oI("tensor",e,t,n);return n.nextIteration(),[dI(r)]}case"TensorArrayV3":{const r=oI("size",e,t,n),a=oI("dtype",e,t,n),s=oI("elementShape",e,t,n),i=oI("dynamicSize",e,t,n),o=oI("clearAfterRead",e,t,n),u=oI("identicalElementShapes",e,t,n),l=oI("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Uc(0),ko(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),lN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ko(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ns([],[0].concat(this.elementShape));const n=this.readMany(e);return lN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),lh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ns([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return lN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,kh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];vo((()=>{t=lu(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=lu(fu(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Uc(1)]}case"TensorArrayWriteV3":{const r=oI("tensorArrayId",e,t,n),a=oI("index",e,t,n),s=oI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=oI("tensorArrayId",e,t,n),a=oI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=oI("tensorArrayId",e,t,n),a=oI("indices",e,t,n),s=oI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=oI("tensorArrayId",e,t,n),a=oI("indices",e,t,n),s=oI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=oI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=oI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=oI("tensorArrayId",e,t,n),a=oI("tensor",e,t,n),s=oI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=oI("tensorArrayId",e,t,n);return[Uc(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=oI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=oI("tensorListId",e,t,n),a=oI("index",e,t,n),s=oI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=oI("tensorListId",e,t,n),a=oI("index",e,t,n),s=oI("elementShape",e,t,n),i=oI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=oI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new dN([],n,e.dtype,r),i=kh(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(oI("tensor",e,t,n),r,oI("elementShape",e,t,n),oI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=oI("elementShape",e,t,n),a=oI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new dN([],e,t,n)}(r,a,oI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=oI("tensorListId",e,t,n),a=oI("indices",e,t,n),s=oI("elementShape",e,t,n),i=oI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=oI("tensorListId",e,t,n),a=oI("elementShape",e,t,n),s=oI("elementDType",e,t,n),i=oI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);lN(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=kh(e);return new dN(a,t,r)}(oI("tensor",e,t,n),oI("elementShape",e,t,n),oI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=oI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=oI("dtype",e,t,n),i=oI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=oI("tensorListId",e,t,n),a=oI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=oI("tensorListId",e,t,n),a=oI("elementShape",e,t,n),s=oI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=oI("tensor",e,t,n),a=oI("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=pN(e.shape.slice(1),n),i=0===r?0:e.size/r,o=vo((()=>{const n=[];e=lu(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=lu(fu(e,o,u),s)}return e.dispose(),n})),u=new dN([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,oI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function mN(e,t,n){const[r,a]=oI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=oI("numArgs",e,t,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=oI("strides",e,t,n),c=pI(e,t,n),h=oI("dataFormat",e,t,n).toUpperCase(),p=oI("dilations",e,t,n),[d,f]=oI("args",e,t,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:a,leakyreluAlpha:oI("leakyreluAlpha",e,t,n)}}function gN(e,t,n){return{boxes:oI("boxes",e,t,n),scores:oI("scores",e,t,n),maxOutputSize:oI("maxOutputSize",e,t,n),iouThreshold:oI("iouThreshold",e,t,n),scoreThreshold:oI("scoreThreshold",e,t,n),softNmsSigma:oI("softNmsSigma",e,t,n)}}var yN=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=oI("keyDType",e,t,n),s=oI("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Uc(0),this.tensorMap=new Map,ko(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Uc(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),vo((()=>{const e=kh(t),r=n.length,a=e.length;Zr.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];ko(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return vo((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return lh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=oI("tableHandle",e,t,n,r),s=oI("keys",e,t,n),i=oI("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=oI("tableHandle",e,t,n,r),s=oI("keys",e,t,n),i=oI("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=oI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function bN(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return vo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Ro(oI("a",e,t,n),oI("b",e,t,n))];case"AddN":return[Bo(oI("tensors",e,t,n))];case"FloorMod":case"Mod":return[oc(oI("a",e,t,n),oI("b",e,t,n))];case"Mul":return[Oo(oI("a",e,t,n),oI("b",e,t,n))];case"RealDiv":case"Div":return[Mo(oI("a",e,t,n),oI("b",e,t,n))];case"DivNoNan":return[Ju(oI("a",e,t,n),oI("b",e,t,n))];case"FloorDiv":return[Do(oI("a",e,t,n),oI("b",e,t,n))];case"Sub":return[Dl(oI("a",e,t,n),oI("b",e,t,n))];case"Minimum":return[sc(oI("a",e,t,n),oI("b",e,t,n))];case"Maximum":return[Ql(oI("a",e,t,n),oI("b",e,t,n))];case"Pow":return[kc(oI("a",e,t,n),oI("b",e,t,n))];case"SquaredDifference":return[oh(oI("a",e,t,n),oI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return vo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[zo(oI("x",e,t,n))];case"Acos":return[Lo(oI("x",e,t,n))];case"Acosh":return[Po(oI("x",e,t,n))];case"Asin":return[Ho(oI("x",e,t,n))];case"Asinh":return[jo(oI("x",e,t,n))];case"Atan":return[qo(oI("x",e,t,n))];case"Atan2":return[Ko(oI("x",e,t,n),oI("y",e,t,n))];case"Atanh":return[Xo(oI("x",e,t,n))];case"Ceil":return[Nu(oI("x",e,t,n))];case"Complex":return[es(oI("real",e,t,n),oI("imag",e,t,n))];case"Cos":return[zu(oI("x",e,t,n))];case"Cosh":return[Lu(oI("x",e,t,n))];case"Elu":return[el(oI("x",e,t,n))];case"Erf":return[tl(oI("x",e,t,n))];case"Exp":return[nl(oI("x",e,t,n))];case"Expm1":return[al(oI("x",e,t,n))];case"Floor":return[ul(oI("x",e,t,n))];case"Log":return[wl(oI("x",e,t,n))];case"Log1p":return[kl(oI("x",e,t,n))];case"Imag":return[pl(oI("x",e,t,n))];case"Neg":return[$l(oI("x",e,t,n))];case"Reciprocal":return[Rc(oI("x",e,t,n))];case"Real":return[Fc(oI("x",e,t,n))];case"Relu":return[Dc(oI("x",e,t,n))];case"Round":return[Wc(oI("x",e,t,n))];case"Selu":return[Gc(oI("x",e,t,n))];case"Sigmoid":return[du(oI("x",e,t,n))];case"Sin":return[Kc(oI("x",e,t,n))];case"Sign":return[qc(oI("x",e,t,n))];case"Sinh":return[Xc(oI("x",e,t,n))];case"Softplus":return[Al(oI("x",e,t,n))];case"Sqrt":return[ih(oI("x",e,t,n))];case"Square":return[uc(oI("x",e,t,n))];case"Tanh":return[mu(oI("x",e,t,n))];case"Tan":return[ph(oI("x",e,t,n))];case"ClipByValue":return[Su(oI("x",e,t,n),oI("clipValueMin",e,t,n),oI("clipValueMax",e,t,n))];case"Relu6":return[Mc(oI("x",e,t,n))];case"Rsqrt":return[Vc(uI(e.inputNames[0],t,n))];case"Prod":return[Nc(oI("x",e,t,n),oI("axes",e,t,n))];case"LeakyRelu":return[gl(oI("x",e,t,n),oI("alpha",e,t,n))];case"Prelu":return[Ic(oI("x",e,t,n),oI("alpha",e,t,n))];case"IsNan":return[ml(uI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return fN(e,t,n);case"convolution":return vo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=oI("stride",e,t,n),a=oI("pad",e,t,n),s=oI("dataFormat",e,t,n).toUpperCase(),i=oI("dilation",e,t,n);return[Au(oI("x",e,t,n),oI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=oI("strides",e,t,n),a=pI(e,t,n),s=oI("dataFormat",e,t,n).toUpperCase(),i=oI("dilations",e,t,n);return[$u(oI("x",e,t,n),oI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=mN(e,t,n);return[zh.conv2d({x:oI("x",e,t,n),filter:oI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=mN(e,t,n);return[zh.depthwiseConv2d({x:oI("x",e,t,n),filter:oI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=oI("outputShape",e,t,n),a=oI("strides",e,t,n),s=pI(e,t,n);return[Ru(oI("x",e,t,n),oI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=oI("strides",e,t,n),a=pI(e,t,n),s=oI("dilations",e,t,n),i=oI("dataFormat",e,t,n).toUpperCase();return[Vu(oI("input",e,t,n),oI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("dataFormat",e,t,n).toUpperCase(),i=oI("dilations",e,t,n);return[Du(oI("x",e,t,n),oI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("kernelSize",e,t,n);return[cu(oI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("kernelSize",e,t,n);return[Yl(oI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("kernelSize",e,t,n),i=oI("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Zl(oI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("kernelSize",e,t,n);return[hu(oI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("kernelSize",e,t,n);return[Jl(oI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=oI("strides",e,t,n),a=oI("pad",e,t,n),s=oI("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Gu(oI("x",e,t,n),oI("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return vo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=oI("shape",e,t,n),a=oI("dtype",e,t,n);return[ol(r,oI("value",e,t,n),a)]}case"LinSpace":return[xl(oI("start",e,t,n),oI("stop",e,t,n),oI("num",e,t,n))];case"Multinomial":{const r=oI("logits",e,t,n),a=oI("numSamples",e,t,n),s=oI("seed",e,t,n);return[hc(r,a,s)]}case"OneHot":{const r=oI("indices",e,t,n),a=oI("depth",e,t,n),s=oI("onValue",e,t,n),i=oI("offValue",e,t,n);return[fi(r,a,s,i)]}case"Ones":return[nc(oI("shape",e,t,n),oI("dtype",e,t,n))];case"OnesLike":return[dc(oI("x",e,t,n))];case"RandomUniform":return[$c(oI("shape",e,t,n),oI("minval",e,t,n),oI("maxval",e,t,n),oI("dtype",e,t,n))];case"Range":return[Ac(oI("start",e,t,n),oI("stop",e,t,n),oI("step",e,t,n),oI("dtype",e,t,n))];case"TruncatedNormal":{const r=oI("shape",e,t,n),a=oI("mean",e,t,n),s=oI("stdDev",e,t,n),i=oI("seed",e,t,n);return[xh(r,a,s,oI("dtype",e,t,n),i)]}case"Zeros":return[tc(oI("shape",e,t,n),oI("dtype",e,t,n))];case"ZerosLike":return[Yu(oI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=gN(e,t,n),l=await Bp.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gN(e,t,n),u=oI("padToMaxOutputSize",e,t,n),l=await Bp.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gN(e,t,n);return[await Bp.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=qs(oI("condition",e,t,n),"bool"),a=[await Sh(r)];return r.dispose(),a}case"ListDiff":return jc(oI("x",e,t,n),oI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return vo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=oI("x",e,t,n),a=oI("k",e,t,n),s=oI("sorted",e,t,n),i=bh(r,a,s);return[i.values,i.indices]}case"Unique":{const r=oI("x",e,t,n),a=vh(r);return[a.values,a.indices]}case"UniqueV2":{const r=oI("x",e,t,n),a=oI("axis",e,t,n),s=vh(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return vo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=oI("images",e,t,n),a=oI("size",e,t,n),s=oI("alignCorners",e,t,n),i=oI("halfPixelCenters",e,t,n);return[Bp.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=oI("images",e,t,n),a=oI("size",e,t,n),s=oI("alignCorners",e,t,n),i=oI("halfPixelCenters",e,t,n);return[Bp.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=oI("image",e,t,n),a=oI("boxes",e,t,n),s=oI("boxInd",e,t,n),i=oI("cropSize",e,t,n),o=oI("method",e,t,n),u=oI("extrapolationValue",e,t,n);return[Bp.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return vo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=oI("default",e,t,n);return[uI(e.name,t,n)||r];case"Placeholder":return[uI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[dI(oI("x",e,t,n))];case"IdentityN":return oI("x",e,t,n).map((e=>dI(e)));case"Snapshot":return[dI(oI("x",e,t,n))];case"Shape":return[dh(oI("x",e,t,n).shape,"int32")];case"ShapeN":return oI("x",e,t,n).map((e=>dh(e.shape)));case"Size":return[Uc(oI("x",e,t,n).size,"int32")];case"Rank":return[Uc(oI("x",e,t,n).rank,"int32")];case"NoOp":return[Uc(1)];case"Print":const a=oI("x",e,t,n),s=oI("data",e,t,n);oI("message",e,t,n),oI("summarize",e,t,n);for(let e=0;e<s.length;e++);return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return vo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Ku(oI("a",e,t,n),oI("b",e,t,n))];case"NotEqual":return[pc(oI("a",e,t,n),oI("b",e,t,n))];case"Greater":return[cl(oI("a",e,t,n),oI("b",e,t,n))];case"GreaterEqual":return[hl(oI("a",e,t,n),oI("b",e,t,n))];case"Less":return[yl(oI("a",e,t,n),oI("b",e,t,n))];case"LessEqual":return[bl(oI("a",e,t,n),oI("b",e,t,n))];case"LogicalAnd":return[jl(oI("a",e,t,n),oI("b",e,t,n))];case"LogicalNot":return[ql(oI("a",e,t,n))];case"LogicalOr":return[Kl(oI("a",e,t,n),oI("b",e,t,n))];case"Select":case"SelectV2":return[Xu(oI("condition",e,t,n),oI("a",e,t,n),oI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return vo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[di(oI("a",e,t,n),oI("b",e,t,n),oI("transposeA",e,t,n),oI("transposeB",e,t,n))];case"Einsum":return[Qu(oI("equation",e,t,n),...oI("tensors",e,t,n))];case"Transpose":return[mi(oI("x",e,t,n),oI("perm",e,t,n))];case"_FusedMatMul":const[r,a]=oI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=oI("numArgs",e,t,n),u=oI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=oI("args",e,t,n);return[zh.matMul({a:oI("a",e,t,n),b:oI("b",e,t,n),transposeA:oI("transposeA",e,t,n),transposeB:oI("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return vo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[bu(oI("x",e,t,n),oI("mean",e,t,n),oI("variance",e,t,n),oI("offset",e,t,n),oI("scale",e,t,n),oI("epsilon",e,t,n))];case"LRN":return[vl(oI("x",e,t,n),oI("radius",e,t,n),oI("bias",e,t,n),oI("alpha",e,t,n),oI("beta",e,t,n))];case"Softmax":return[eh(oI("x",e,t,n))];case"LogSoftmax":return[Ol(oI("x",e,t,n))];case"SparseToDense":return[Ah(oI("sparseIndices",e,t,n),oI("outputShape",e,t,n),oI("sparseValues",e,t,n),oI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return vo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[Rl(oI("x",e,t,n),r,a)]}case"Mean":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[ec(oI("x",e,t,n),r,a)]}case"Min":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[ac(oI("x",e,t,n),r,a)]}case"Sum":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[Ml(oI("x",e,t,n),r,a)]}case"All":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[Wo(oI("x",e,t,n),r,a)]}case"Any":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[Vo(oI("x",e,t,n),r,a)]}case"ArgMax":{const r=oI("axis",e,t,n);return[Uo(oI("x",e,t,n),r)]}case"ArgMin":{const r=oI("axis",e,t,n);return[Go(oI("x",e,t,n),r)]}case"Prod":{const r=oI("axis",e,t,n),a=oI("keepDims",e,t,n);return[Nc(oI("x",e,t,n),r,a)]}case"Cumsum":{const r=oI("axis",e,t,n),a=oI("exclusive",e,t,n),s=oI("reverse",e,t,n);return[Pu(oI("x",e,t,n),r,a,s)]}case"Bincount":const r=oI("x",e,t,n),a=oI("weights",e,t,n),s=oI("size",e,t,n);return[ku(r,a,s)];case"DenseBincount":{const r=oI("x",e,t,n),a=oI("weights",e,t,n),s=oI("size",e,t,n),i=oI("binaryOutput",e,t,n);return[Bu(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return vo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=oI("n",e,t,n),a=oI("axis",e,t,n);let s=oI("tensors",e,t,n);return s=s.slice(0,r),[pu(s,a)]}case"Gather":{const r=oI("x",e,t,n),a=oI("indices",e,t,n);return[ll(r,qs(a,"int32"),0)]}case"GatherV2":{const r=oI("axis",e,t,n),a=oI("batchDims",e,t,n),s=oI("x",e,t,n),i=oI("indices",e,t,n);return[ll(s,qs(i,"int32"),r,a)]}case"Reverse":{const r=oI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=oI("x",e,t,n);return[Oc(s,a)]}case"ReverseV2":{const r=oI("axis",e,t,n),a=oI("x",e,t,n);return[Oc(a,r)]}case"Slice":{const r=oI("begin",e,t,n),a=oI("size",e,t,n);return[fu(oI("x",e,t,n),r,a)]}case"StridedSlice":{const r=oI("begin",e,t,n),a=oI("end",e,t,n),s=oI("strides",e,t,n),i=oI("beginMask",e,t,n),o=oI("endMask",e,t,n),u=oI("ellipsisMask",e,t,n),l=oI("newAxisMask",e,t,n),c=oI("shrinkAxisMask",e,t,n),h=oI("x",e,t,n);return[hh(h,r,a,s,i,o,u,l,c)]}case"Pack":return vo((()=>{const r=oI("axis",e,t,n),a=oI("tensors",e,t,n),s=a[0].shape,i=uh(a[0]).shape,o=a.map((e=>{const t=Zr.arraysEqual(e.shape,s);if(!t&&!Zr.arraysEqual(uh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:lu(e,s)}));return[lh(o,r)]}));case"Unpack":{const r=oI("axis",e,t,n),a=oI("tensor",e,t,n);return kh(a,r)}case"Tile":{const r=oI("reps",e,t,n);return[sl(oI("x",e,t,n),r)]}case"Split":case"SplitV":{const r=oI("axis",e,t,n),a=oI("numOrSizeSplits",e,t,n),s=oI("x",e,t,n);return ah(s,a,r)}case"ScatterNd":{const r=oI("indices",e,t,n),a=oI("values",e,t,n),s=oI("shape",e,t,n);return[$h(r,a,s)]}case"GatherNd":{const r=oI("x",e,t,n),a=oI("indices",e,t,n);return[Fh(r,a)]}case"SparseToDense":{const r=oI("sparseIndices",e,t,n),a=oI("outputShape",e,t,n),s=oI("sparseValues",e,t,n),i=oI("defaultValue",e,t,n);return[Ah(r,s,a,s.dtype===i.dtype?i:qs(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return vo((()=>((e,t,n)=>{switch(e.op){case"SparseReshape":{const{outputIndices:r,outputShape:a}=Up.sparseReshape(oI("inputIndices",e,t,n),oI("inputShape",e,t,n),oI("newShape",e,t,n));return[r,a]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return vo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[th(oI("x",e,t,n))];case"IFFT":return[nh(oI("x",e,t,n))];case"RFFT":return[sh(oI("x",e,t,n))];case"IRFFT":return[rh(oI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return vo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[qs(oI("x",e,t,n),oI("dtype",e,t,n))];case"ExpandDims":{const r=oI("axis",e,t,n);return[rl(oI("x",e,t,n),r)]}case"Squeeze":{const r=oI("axis",e,t,n);return[uh(oI("x",e,t,n),r)]}case"Reshape":return[lu(oI("x",e,t,n),oI("shape",e,t,n))];case"MirrorPad":return[ic(oI("x",e,t,n),oI("padding",e,t,n),oI("mode",e,t,n))];case"PadV2":case"Pad":return[mc(oI("x",e,t,n),oI("padding",e,t,n),oI("constantValue",e,t,n))];case"SpaceToBatchND":{const r=oI("blockShape",e,t,n),a=oI("paddings",e,t,n);return[vc(oI("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=oI("blockShape",e,t,n),a=oI("crops",e,t,n);return[yu(oI("x",e,t,n),r,a)]}case"DepthToSpace":{const r=oI("blockSize",e,t,n),a=oI("dataFormat",e,t,n).toUpperCase();return[Wu(oI("x",e,t,n),r,a)]}case"BroadcastTo":return[Iu(oI("x",e,t,n),oI("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return yN(e,t,n,r);case"custom":const a=sI(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return uI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return uI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ZI(this.node.rawAttrs,e,t);if(null!=n.s)return YI(this.node.rawAttrs,e,t);if(null!=n.b)return JI(this.node.rawAttrs,e,t);if(null!=n.shape)return aN(this.node.rawAttrs,e,t);if(null!=n.type)return tN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return sN(this.node.rawAttrs,e,t);if(null!=n.list.s)return iN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return oN(this.node.rawAttrs,e,t);if(null!=n.list.b)return uN(this.node.rawAttrs,e,t);if(null!=n.list.type)return nN(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Zr.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var xN=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function vN(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>hI(e)[0]));let c=[];null!=r&&(c=r.map((e=>hI(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(NN(e)||SN(e)||CN(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var wN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],kN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],IN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function NN(e){return wN.indexOf(e.op)>=0}function SN(e){return kN.indexOf(e.op)>=0}function CN(e){return IN.indexOf(e.op)>=0}var TN=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new TN(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=vN(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>hI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[hI(e)[0]])),a=t.map((e=>hI(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return vo((()=>{const n=new xN(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=hI(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=bN(t,r,n,this._resourceManager);if(Zr.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>uI(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[cI(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new xN(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>uI(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[hI(e)[0]])),i=n.map((e=>hI(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=vN(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=hI(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(s,p,t,d,g,m,i,f,u);await Promise.all(e)}const y=o.filter((e=>!NN(e)&&!uI(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&oI("isConstant",e.node,r,n)&&([c]=lI(e.node.name,n)),null==r[e.node.name]){const h=bN(e.node,r,n,this._resourceManager);c||([c]=lI(e.node.name,n));const p=n.currentContext;Zr.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=lI(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!uI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!uI(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=hI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));Zr.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&Zr.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=hI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=hI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},_N=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ys.browserHTTPRequest(e,this.loadOptions);else{const t=Ys.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Ys.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ys.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new TN(KI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=KI.Instance.transformGraph(e.modelInitializer);this.initializer=new TN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Ys.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ma||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function EN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new _N(e,t);return await n.load(),n}var $N="3.6.0",AN={};h(AN,{CSVDataset:()=>IS,Dataset:()=>hS,FileDataSource:()=>OS,TextLineDataset:()=>gS,URLDataSource:()=>zS,array:()=>dS,csv:()=>LS,func:()=>PS,generator:()=>BS,microphone:()=>VS,version_data:()=>US,webcam:()=>WS,zip:()=>fS});var FN=p($()),RN=p($());function DN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(PN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=DN(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function MN(e,t=zN){return ON(e,t)}function ON(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(PN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=ON(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function zN(e){return null===e?null:PN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function LN(e,t){const n=new Map;DN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Zr.isPromise(t)){const r=await t;n.set(e,r)}}return DN(e,t,n)}function PN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ma))}function BN(e){return DN(e,WN)}function WN(e){return e instanceof ma?{value:e.clone(),recurse:!1}:PN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var VN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},UN=class extends VN{constructor(){super(UN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function GN(e){return new XN(e)}function HN(e){return new YN(e)}UN.INITIAL_CAPACITY=32;var jN,qN,KN=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new rS(this,e)}filter(e){return new tS(this,e)}map(e){return new nS(this,e)}mapAsync(e){return new aS(this,e)}serialMapAsync(e){return new aS(this,e).serial()}flatmap(e){return new iS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new eS(this,e,t)}columnMajorBatch(e,t=!0,n=zN){return this.rowMajorBatch(e,t).map((e=>MN(e,n)))}concatenate(e,t){return new oS(GN([this,e]),t)}take(e){return e<0||null==e?this:new QN(this,e)}skip(e){return e<0||null==e?this:new ZN(this,e)}prefetch(e){return new lS(this,e)}shuffle(e,t){return new cS(this,e,t)}serial(){return new JN(this)}},XN=class extends KN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:BN(e),done:!1}}},YN=class extends KN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},JN=class extends KN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},ZN=class extends KN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;wo(e.value)}return this.upstream.next()}},QN=class extends KN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},eS=class extends KN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},tS=class extends KN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;wo(e.value)}}},nS=class extends KN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=_a.getTensorsInContainer(e.value),n=this.transform(e.value),r=_a.getTensorsInContainer(n);for(const e of t)_a.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},rS=class extends KN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},aS=class extends KN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=_a.getTensorsInContainer(e.value),n=await this.transform(e.value),r=_a.getTensorsInContainer(n);for(const e of t)_a.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},sS=class extends KN{constructor(){super(),this.outputQueue=new UN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},iS=class extends sS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=_a.getTensorsInContainer(e.value),n=this.transform(e.value),r=_a.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)_a.isTensorInList(e,r)||e.dispose();return!0}},oS=class extends KN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(qN=jN||(jN={}))[qN.FAIL=0]="FAIL",qN[qN.SHORTEST=1]="SHORTEST",qN[qN.LONGEST=2]="LONGEST";var uS=class extends KN{constructor(e,t=jN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await LN(this.iterators,(function(e){if(e instanceof KN){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case jN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case jN.SHORTEST:return{value:null,done:!0};case jN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},lS=class extends KN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new VN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},cS=class extends lS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=RN.alea(n||Zr.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},hS=class{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return Zr.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),pS((async()=>(await n.iterator()).columnMajorBatch(e,t,mS)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,pS((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,pS((async()=>(await t.iterator()).filter((t=>vo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return pS((async()=>(await t.iterator()).map((t=>vo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return pS((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return pS((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,pS((async()=>{const n=HN((async()=>({value:await t.iterator(),done:!1})));return r=n.take(e),new oS(r,a);var r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,pS((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=FN.alea(t||Zr.now().toString());return pS((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,pS((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function pS(e,t=null){return new class extends hS{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function dS(e){return pS((async()=>GN(e)),e.length)}function fS(e){if(!PN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return pS((async()=>function(e,t=jN.FAIL){return new uS(e,t)}(await LN(e,(e=>{if(e instanceof hS)return{value:e.iterator(),recurse:!1};if(PN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),jN.SHORTEST)),t)}function mS(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof ma||Zr.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ma?lh(e):ns(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}hS.MAX_BUFFER_SIZE=1e4;var gS=class extends hS{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},yS='"',bS=Symbol("out"),xS=Symbol("field"),vS=Symbol("quote"),wS=Symbol("quoteafterquote"),kS=Symbol("quoteinquote"),IS=class extends hS{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new gS(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Zr.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Zr.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Zr.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=bS;for(let t=0;t<a;t++)switch(s){case bS:switch(e.charAt(t)){case yS:r=t+1,s=vS;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=bS;break;default:s=xS,r=t}break;case xS:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=bS,r=t+1}break;case vS:switch(e.charAt(t)){case yS:s=wS}break;case wS:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=bS,r=t+1;break;case yS:s=vS;break;default:s=kS}break;case kS:switch(e.charAt(t)){case yS:s=vS}}if(s===wS?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},NS=class extends KN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Oe().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new NS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(Zr.sizeFromShape(t));return n.set(e,n.length-e.length),ns(n,t)}},SS=class extends KN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=dh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=fh([r,n,s,a],[1,4])}else this.cropBox=fh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Oe().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new SS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Zr.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=bi.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return vo((()=>{const t=rl(qs(e,"float32"),0);let n;n=Bp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return lu(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},CS=class{},TS=class extends KN{split(e){return new _S(this,e)}},_S=class extends TS{constructor(e,t){super(),this.upstream=e,this.impl=new ES(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},ES=class extends sS{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},$S=class extends KN{decodeUTF8(){return new AS(this)}},AS=class extends TS{constructor(e){super(),this.upstream=e,this.impl=new FS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},FS=class extends sS{constructor(e){if(super(),this.upstream=e,Oe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=A();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Oe().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},RS=class extends $S{constructor(e,t={}){super(),this.file=e,this.options=t,Zr.assert(e instanceof Uint8Array||!!Oe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}};var DS=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function MS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var OS=class extends CS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(MS(this.input)&&Oe().get("IS_NODE")){const e=a(383);this.input=e.readFileSync(this.input.substr(7))}return new RS(this.input,this.options)}},zS=class extends CS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return MS(this.url)?new OS(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;"string"==typeof e?n=e:(n=e.url,r=DS(e));const a=await Zr.fetch(n,r);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new RS(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}};function LS(e,t={}){return new IS(new zS(e),t)}function PS(e){const t=HN(e);return pS((async()=>t))}function BS(e){return pS((async()=>{const t=await e();return HN((()=>t.next()))}))}async function WS(e,t){return SS.create(e,t)}async function VS(e){return NS.create(e)}var US="3.6.0";function GS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Zr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var HS=jd.whereImpl,jS=class extends L{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new z(this,yo())}nextDataId(){return jS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Oe().get("IS_NODE")&&nd.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Zr.isString(n[0])){const a=n.map((e=>Zr.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return nd.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Zr.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return js(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return yo().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Zr.now();e();return{kernelMs:Zr.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){GS([e],"where");const t=this.readSync(e.dataId);return HS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};jS.nextDataId=0;var qS={};function KS(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}h(qS,{addImpl:()=>uC,bincountImpl:()=>pC,bincountReduceImpl:()=>dC,ceilImpl:()=>yC,concatImpl:()=>vC,expImpl:()=>wC,expm1Impl:()=>NC,floorImpl:()=>TC,gatherV2Impl:()=>$C,greaterImpl:()=>AC,lessImpl:()=>DC,linSpaceImpl:()=>zC,logImpl:()=>LC,maxImpl:()=>WC,maximumImpl:()=>VC,minimumImpl:()=>HC,multiplyImpl:()=>KC,negImpl:()=>ZC,notEqualImpl:()=>eT,prodImpl:()=>iT,rangeImpl:()=>uT,rsqrtImpl:()=>lT,simpleAbsImpl:()=>KS,sliceImpl:()=>pT,sparseFillEmptyRowsImpl:()=>mT,sparseReshapeImpl:()=>gT,squaredDifferenceImpl:()=>yT,stridedSliceImpl:()=>vT,subImpl:()=>wT,tileImpl:()=>ST,topKImpl:()=>CT,transposeImpl:()=>rT,uniqueImpl:()=>TT});var XS={kernelName:We,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;GS(t,"abs");let r=new Float32Array(Zr.sizeFromShape(t.shape));return r=KS(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function YS(e){return(t,n,r,a,s)=>{const i=nd.assertAndGetBroadcastShape(t,n),o=i.length,u=Zr.computeStrides(i),l=Zr.sizeFromShape(i),c=Zr.getTypedArrayFromDType(s,l),h=t.length,p=n.length,d=Zr.computeStrides(t),f=Zr.computeStrides(n),m=nd.getBroadcastDims(t,i),g=nd.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=Zr.indexToLoc(t,o,u),s=n.slice(-h);m.forEach((e=>s[e]=0));const i=Zr.locToIndex(s,h,d),l=n.slice(-p);g.forEach((e=>l[e]=0));const y=Zr.locToIndex(l,p,f);c[t]=e(r[i],a[y])}return[c,i]}}function JS(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var ZS={kernelName:pt,backendName:"cpu",kernelFunc:JS};function QS(e,t,n="float32"){if("complex64"===n){return JS({inputs:{real:QS(e,t,"float32"),imag:QS(e,t,"float32")},backend:e})}const r=Zr.makeZerosTypedArray(Zr.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function eC(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var tC={kernelName:Qt,backendName:"cpu",kernelFunc:eC};function nC(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var rC={kernelName:jn,backendName:"cpu",kernelFunc:nC};function aC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return eC({inputs:{x:a},backend:n});const e=QS(n,a.shape,a.dtype),t=aC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=JS({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=nC({inputs:{input:a},backend:n}),t=aC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Zr.hasEncodingLoss(a.dtype,s)){const e=eC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Zr.toTypedArray([0],a.dtype),[r,s]=YS(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var sC={kernelName:lt,backendName:"cpu",kernelFunc:aC};function iC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;GS([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c=r||s.dtype,[h,p]=t(s.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=aC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=aC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=JS({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function oC(e){return(t,n,r,a,s,i)=>{const o=nd.assertAndGetBroadcastShape(t,n),u=Zr.sizeFromShape(o),l=o.length,c=Zr.computeStrides(o),h=Zr.getTypedArrayFromDType("float32",u),p=Zr.getTypedArrayFromDType("float32",u),d=nd.getBroadcastDims(t,o),f=nd.getBroadcastDims(n,o),m=nd.mergeRealAndImagArrays(r,a),g=nd.mergeRealAndImagArrays(s,i),y=t.length,b=Zr.computeStrides(t),x=n.length,v=Zr.computeStrides(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=Zr.indexToLoc(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const a=Zr.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=Zr.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}var uC=YS(((e,t)=>e+t)),lC=oC(((e,t,n,r)=>({real:e+n,imag:t+r}))),cC=iC(Ge,uC,lC),hC={kernelName:Ge,backendName:"cpu",kernelFunc:cC};function pC(e,t,n,r,a){const s=Zr.sizeFromShape(r),i=Zr.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function dC(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=js([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function fC(e){return(t,n,r)=>{const a=Zr.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function mC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(GS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=Zr.sizeFromShape(i.shape),c=n||i.dtype,h=Zr.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function gC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(GS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}var yC=fC((e=>Math.ceil(e))),bC=gC(ct,yC),xC={kernelName:ct,backendName:"cpu",kernelFunc:bC};function vC(e,t,n,r){const a=Zr.getArrayFromDType(n,Zr.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Zr.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?nd.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var wC=fC((e=>Math.exp(e))),kC=gC(Bt,wC),IC={kernelName:Bt,backendName:"cpu",kernelFunc:kC},NC=fC((e=>Math.expm1(e))),SC=gC(Vt,NC),CC={kernelName:Vt,backendName:"cpu",kernelFunc:SC},TC=fC((e=>Math.floor(e))),_C=gC(jt,TC),EC={kernelName:jt,backendName:"cpu",kernelFunc:_C};function $C(e,t,n){const r=js(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}var AC=YS(((e,t)=>e>t?1:0)),FC=iC(Jt,AC,null,"bool"),RC={kernelName:Jt,backendName:"cpu",kernelFunc:FC},DC=YS(((e,t)=>e<t?1:0)),MC=iC(on,DC,null,"bool"),OC={kernelName:on,backendName:"cpu",kernelFunc:MC};function zC(e,t,n){const r=(t-e)/(n-1),a=Zr.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var LC=fC((e=>Math.log(e))),PC=gC(cn,LC),BC={kernelName:cn,backendName:"cpu",kernelFunc:PC};function WC(e,t,n,r){const a=Zr.getTypedArrayFromDType(r,Zr.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>s&&(s=t)}a[n]=s}return a}var VC=YS(((e,t)=>Math.max(e,t))),UC=iC(xn,VC),GC={kernelName:xn,backendName:"cpu",kernelFunc:UC},HC=YS(((e,t)=>Math.min(e,t))),jC=iC(Tn,HC),qC={kernelName:Tn,backendName:"cpu",kernelFunc:jC},KC=YS(((e,t)=>e*t)),XC=oC(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),YC=iC(An,KC,XC),JC={kernelName:An,backendName:"cpu",kernelFunc:YC};function ZC(e,t,n){const r=Zr.createScalarValue(-1,n);return KC([],t,r,e,n)}var QC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;GS(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=ZC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},eT=YS(((e,t)=>e!==t?1:0)),tT=iC(Rn,eT,null,"bool"),nT={kernelName:Rn,backendName:"cpu",kernelFunc:tT};function rT(e,t,n,r,a){const s=t.length,i=Zr.sizeFromShape(t),o=Zr.computeStrides(t),u=Zr.computeStrides(a),l=Zr.getTypedArrayFromDType(n,Zr.sizeFromShape(a));for(let t=0;t<i;++t){const n=Zr.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[Zr.locToIndex(a,s,u)]=e[t]}return l}function aT(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;GS(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=rT(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var sT={kernelName:$r,backendName:"cpu",kernelFunc:aT};function iT(e,t,n,r){const[a,s]=nd.computeOutAndReduceShapes(e,r),i=$a(t,"int32"),o=Zr.makeZerosTypedArray(Zr.sizeFromShape(a),i),u=Zr.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var oT={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;GS(a,"prod");const o=a.shape.length,u=Zr.parseAxisParam(s,a.shape),l=nd.getAxesPermutation(u,o);let c=u,h=a;const p=[];null!=l&&(h=aT({inputs:{x:a},backend:n,attrs:{perm:l}}),p.push(h),c=nd.getInnerMostAxes(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=iT(h.shape,h.dtype,d,c);let y=m;return i&&(y=nd.expandShapeToKeepDim(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function uT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Zr.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=Zr.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var lT=fC((e=>1/Math.sqrt(e))),cT=gC(rr,lT),hT={kernelName:rr,backendName:"cpu",kernelFunc:cT};function pT(e,t,n,r,a){const s=Ai.isSliceContinous(r,t,n),i=Zr.sizeFromShape(n),o=Zr.computeStrides(r);if(s){const n=Ai.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=js(r,a,"string"===a?nd.fromUint8ToStringArray(e):e),l=js(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?nd.fromStringArrayToUint8(l.values):l.values}function dT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;GS(a,"slice");const[o,u]=Ai.parseSliceParams(a,s,i);Ai.assertParamsValid(a,o,u);const l=pT(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var fT={kernelName:or,backendName:"cpu",kernelFunc:dT};function mT(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[Zr.getArrayFromDType(n,0),[0,h],Zr.getArrayFromDType(a,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=Zr.getArrayFromDType(n,t*h),p=Zr.getArrayFromDType(a,t),d=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=d[n],i=(0===n?0:f[n-1])+a;d[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e){if(0===d[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}}return[s,[o,h],p,l,c]}}function gT(e,t,n,r,a){const s=Zr.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const h=Zr.sizeFromShape(u);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${u}`);const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=Zr.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}var yT=YS(((e,t)=>{const n=e-t;return n*n})),bT=iC(wr,yT),xT={kernelName:wr,backendName:"cpu",kernelFunc:bT};function vT(e,t,n,r){const a=js(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var wT=YS(((e,t)=>e-t)),kT=oC(((e,t,n,r)=>({real:e-n,imag:t-r}))),IT=iC(Nr,wT,kT),NT={kernelName:Nr,backendName:"cpu",kernelFunc:IT};function ST(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=js(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}function CT(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=Zr.getTypedArrayFromDType(n,i*r),l=Zr.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));const i=t*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=s[e].value,h[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[js(c,n,u),js(c,"int32",l)]}function TT(e,t,n,r){const a=Zr.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new pa(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new pa(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[a]=h[1],{outputValues:p.values,outputShape:d,indices:o}}$o("cpu",(()=>new jS),1);var _T=mC(Ot,(e=>e>=0?e:Math.exp(e)-1)),ET={kernelName:Ot,backendName:"cpu",kernelFunc:_T};function $T(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;GS([a],"leakyRelu");const i=Zr.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=Zr.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}var AT={kernelName:sn,backendName:"cpu",kernelFunc:$T},FT=YS(((e,t)=>e<0?t*e:e));function RT(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;GS([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=FT(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}var DT={kernelName:Un,backendName:"cpu",kernelFunc:RT},MT=mC(Kn,(e=>Math.max(0,e))),OT={kernelName:Kn,backendName:"cpu",kernelFunc:MT},zT=mC(er,(e=>Math.min(Math.max(0,e),6))),LT={kernelName:er,backendName:"cpu",kernelFunc:zT},PT=mC(hr,(e=>1/(1+Math.exp(-e)))),BT={kernelName:hr,backendName:"cpu",kernelFunc:PT};function WT(e,t,n,r,a){if("linear"===n)return eC({inputs:{x:t},backend:e});if("relu"===n)return MT({inputs:{x:t},backend:e});if("elu"===n)return _T({inputs:{x:t},backend:e});if("relu6"===n)return zT({inputs:{x:t},backend:e});if("prelu"===n)return RT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return $T({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return PT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function VT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Zr.sizeFromShape(a.shape),o=Zr.inferFromImplicitShape(s,i),u=Zr.sizeFromShape(o);Zr.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var UT={kernelName:Xn,backendName:"cpu",kernelFunc:VT};function GT(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;GS([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],d=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Zr.sizeFromShape(f),y=Zr.sizeFromShape(m),b=g===y||1===g||1===y;Zr.assert(u>=2&&l>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,d]);Zr.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[y,d,h]:[y,h,d],w=VT({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),k=VT({inputs:{x:s},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],S=o?k.shape[1]:k.shape[2],C=Math.max(g,y),T=n.data.get(w.dataId).values,_=n.data.get(k.dataId).values,E=Zr.computeStrides(w.shape),$=Zr.computeStrides(k.shape),[A,F,R]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,M,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],z=N*S,L=js([C,N,S],w.dtype),P=L.values,B=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=B)for(let n=0;n<S;n+=B)for(let r=0;r<I;r+=B){const a=Math.min(t+B,N),s=Math.min(n+B,S),i=Math.min(r+B,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*A,s=Math.min(e,y-1)*O;n+=T[r+o*F+a*R]*_[a*D+t*M+s]}P[e*z+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,L.dtype,L.values)}var HT={kernelName:st,backendName:"cpu",kernelFunc:GT};var jT={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=GT({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=cC({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=WT(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}},qT=mC(Ve,(e=>Math.acos(e))),KT={kernelName:Ve,backendName:"cpu",kernelFunc:qT},XT=mC(Ue,(e=>Math.acosh(e))),YT={kernelName:Ue,backendName:"cpu",kernelFunc:XT};var JT={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;GS(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=js(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var ZT={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;GS(a,"all");const o=Zr.parseAxisParam(s,a.shape);let u=o;const l=nd.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=aT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=nd.getInnerMostAxes(u.length,a.shape.length)),nd.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,p]=nd.computeOutAndReduceShapes(c.shape,u),d=Zr.sizeFromShape(p),f=Zr.makeZerosTypedArray(Zr.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=VT({inputs:{x:g},backend:n,attrs:{shape:nd.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var QT={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;GS(a,"any");const o=Zr.parseAxisParam(s,a.shape);let u=o;const l=nd.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=aT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=nd.getInnerMostAxes(u.length,a.shape.length)),nd.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,p]=nd.computeOutAndReduceShapes(c.shape,u),d=Zr.sizeFromShape(p),f=Zr.makeZerosTypedArray(Zr.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=VT({inputs:{x:g},backend:n,attrs:{shape:nd.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var e_={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;GS(a,"argMax");let i=Zr.parseAxisParam(s,a.shape);const o=nd.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=aT({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=nd.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],nd.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=nd.computeOutAndReduceShapes(u.shape,i),p=Zr.sizeFromShape(c),d=Zr.makeZerosTypedArray(p,"int32"),f=Zr.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};var t_={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;GS(a,"argMin");let i=Zr.parseAxisParam(s,a.shape);const o=nd.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=aT({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=nd.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],nd.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=nd.computeOutAndReduceShapes(u.shape,i),p=Zr.sizeFromShape(c),d=Zr.makeZerosTypedArray(p,"int32"),f=Zr.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},n_=mC(Ye,(e=>Math.asin(e))),r_={kernelName:Ye,backendName:"cpu",kernelFunc:n_},a_=mC(Je,(e=>Math.asinh(e))),s_={kernelName:Je,backendName:"cpu",kernelFunc:a_},i_=mC(Ze,(e=>Math.atan(e))),o_={kernelName:Ze,backendName:"cpu",kernelFunc:i_},u_=YS(((e,t)=>Math.atan2(e,t))),l_=iC(et,u_),c_={kernelName:et,backendName:"cpu",kernelFunc:l_},h_=mC(Qe,(e=>Math.atanh(e))),p_={kernelName:Qe,backendName:"cpu",kernelFunc:h_};function d_(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=js(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function f_(e,t,n,r,a=!1,s=!1){const i=js(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=js(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(w,e,n,o,t)}}return i}function m_(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=js(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*i-m;let C=S;for(;C<0;)C+=l;const T=Math.min(a.inDepth,p+S),_=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,d+i),w=_+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(a.inWidth,f+i),g=w+n*N;let k=b,I=0,S=0;for(let n=C;n<T;n+=l){const a=x+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/S:k}}}}return x}var g_={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;GS(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;Zr.assert(nd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=nd.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Zr.arraysEqual(l.inShape,l.outShape))c=eC({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Zr.computeStrides(a.shape),r=d_(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};var y_={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;GS(a,"avgPool3d");const c=nd.computePool3DInfo(a.shape,s,i,1,o,u,l),h=m_(n.data.get(a.dataId).values,a.shape,a.dtype,Zr.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};var b_={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;GS([a,s],"avgPool3DGrad");const c=nd.computePool3DInfo(s.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,N=k-1-c.padInfo.left,S=w-1-c.padInfo.top,C=js(s.shape,"float32"),T=1/(f*m*g),_=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-S,o=a-N;let u=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;u+=_.get(e,r,a,s,t)}}}C.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};var x_={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;GS([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=nd.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=js(i.shape,"float32"),k=1/(d*f),I=n.data.get(a.dataId).values,N=js(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;i+=N.get(e,r,a,t)}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var v_={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;Zr.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Zr.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Zr.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),GS([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var w_={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;GS([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=nd.getReshaped(a.shape,s,o),l=nd.getPermuted(u.length,s.length),c=nd.getReshapedPermuted(a.shape,s,o),h=nd.getSliceBeginCoords(i,s.length),p=nd.getSliceSize(c,i,s.length),d=VT({inputs:{x:a},backend:n,attrs:{shape:u}}),f=aT({inputs:{x:d},backend:n,attrs:{perm:l}}),m=VT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=dT({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var k_={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=pC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},I_=mC(ht,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),N_={kernelName:ht,backendName:"cpu",kernelFunc:I_},S_={kernelName:dt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Zr.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function C_(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var T_={kernelName:tn,backendName:"cpu",kernelFunc:C_};function __(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Zr.parseAxisParam(a,t[0].shape)[0];let i=nd.computeOutShape(t.map((e=>e.shape)),s);if(0===Zr.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Zr.sizeFromShape(e.shape)>0));if(1===o.length)return eC({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(nd.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>nC({inputs:{input:e},backend:n}))),t=o.map((e=>C_({inputs:{input:e},backend:n}))),r=__({inputs:e,backend:n,attrs:{axis:s}}),a=__({inputs:t,backend:n,attrs:{axis:s}}),i=JS({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=Zr.sizeFromShape(e.shape.slice(s));return VT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=nd.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],p=vC(c,i,t[0].dtype,h),d=nd.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(d,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var E_={kernelName:ft,backendName:"cpu",kernelFunc:__};function $_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;GS([a,s],"conv2d");const h=nd.convertConv2DDataFormat(u),p=nd.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new pa(p.outShape,a.dtype),w=Zr.computeStrides(a.shape),k=Zr.computeStrides(s.shape),I=w[0],N=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],T=v.strides[0],_=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<p.outHeight;++e){const r=n+e*_,a=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*S;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=A[a+e*C];for(let e=0;e<p.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var A_={kernelName:mt,backendName:"cpu",kernelFunc:$_};var F_={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;GS([a,s],"conv2dBackpropFilter");const h=nd.convertConv2DDataFormat(u),p=nd.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new pa(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new pa(a.shape,a.dtype,w),N=new pa(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*N.get(l,c,e,o):I.get(l,i,t,n)*N.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var R_={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;GS([a,s],"conv2dBackpropInput");const h=Zr.computeStrides(s.shape),p=Zr.computeStrides(a.shape);let d=nd.convertConv2DDataFormat(l);const f=nd.computeConv2DInfo(i,s.shape,o,1,u,c,!1,d),m=new pa(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:T,outChannels:_,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;d=f.dataFormat;const R=I-1-f.padInfo.top,D=N-1-f.padInfo.left,M="channelsLast"===d,O=m.strides[0],z=M?m.strides[1]:m.strides[2],L=M?m.strides[2]:1,P=M?1:m.strides[1],B=p[0],W=M?p[1]:p[2],V=M?p[2]:1,U=M?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<T;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),l=Math.min($,(N+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+v*(N-1-(r*F-o))+w*t;for(let e=0;e<_;++e){c+=y[s+U*e]*b[i+e]}}}g[O*e+z*n+L*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var D_={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;GS([a,s],"conv3d");const l=nd.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new pa(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,N=Zr.computeStrides(a.shape),S=Zr.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=l.inDepth)continue;const s=e*S[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*S[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*S[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var M_={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;GS([a,s],"conv3dBackpropFilterV2");const l=Zr.computeStrides(a.shape),c=Zr.computeStrides(s.shape),h=nd.computeConv3DInfo(a.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new pa(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,C,T,_]=c,E=n.data.get(a.dataId).values,[$,A,F,R]=l,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/p)),n=Math.min(h.outDepth,(h.inDepth+D-e)/p),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/d)),i=Math.min(h.outHeight,(h.inHeight+O-a)/d),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-D)*A+h,n=m*C+y;for(let e=s;e<i;++e){const s=(a+e*d-O)*F+t,i=e*T+n;for(let e=u;e<l;++e){const t=e*_+i;g+=E[(r+e*f-M)*R+s+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var O_={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;GS([a],"conv3dBackpropInputV2");const l=Zr.computeStrides(a.shape),c=Zr.computeStrides(s.shape),h=nd.computeConv3DInfo(u,s.shape,o,1,i),p=new pa(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[N,S,C,T]=c,{batchSize:_,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=$-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<_;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(z,(E+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(L,($+o)/W);for(let c=0;c<M;++c){const h=c-H,p=Math.max(0,Math.ceil(h/V)),_=Math.min(P,(A+h)/V);let F=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=p;i<_;++i){const o=x*e+v*n+w*r+k*i,u=N*(E-1-a)+S*($-1-s)+C*(A-1-(i*V-h))+T*t;for(let e=0;e<O;++e){F+=b[o+e]*I[u+e]}}}}d[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},z_=mC(wt,(e=>Math.cos(e))),L_={kernelName:wt,backendName:"cpu",kernelFunc:z_},P_=mC(kt,(e=>Math.cosh(e))),B_={kernelName:kt,backendName:"cpu",kernelFunc:P_};var W_={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=a.shape,f=s.shape[0],[m,g]=o,y=js([f,m,g,d],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=Zr.computeStrides(a.shape),k=Zr.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const p=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const d=l+(c-l)*b,f=p+(v[s]-p)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<d;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var V_={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;GS(a,"cumsum");const u=nd.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=aT({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=nd.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=$a(l.dtype,"int32"),p=Zr.makeZerosTypedArray(Zr.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=aT({inputs:{x:g},backend:n,attrs:{perm:nd.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};var U_={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=pC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=dC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var G_={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Zr.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),Zr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,p=l*s,d=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*d;for(let t=0;t<d;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],a.dtype,m)}};function H_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;GS([a,s],"depthwiseConv2DNative");const c=Zr.computeStrides(a.shape),h=Zr.computeStrides(s.shape);let p=u;null==p&&(p=[1,1]),Zr.assert(nd.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=nd.computeConv2DInfo(a.shape,s.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new pa(d.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],a=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=d.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const a=s+e*h[1],o=i+r*d.inChannels;let u=t,l=a;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)S[u+e]+=t*N[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var j_={kernelName:Tt,backendName:"cpu",kernelFunc:H_};var q_={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;GS([a,s],"depthwiseConv2dNativeBackpropFilter");const h=nd.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new pa(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new pa(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new pa(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/d)),s=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=a;e<s;++e){const n=r+e*d-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var K_={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;GS([a,s],"depthwiseConv2DNativeBackpropInput");const h=Zr.computeStrides(a.shape),p=Zr.computeStrides(s.shape),d=nd.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new pa(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[N,S,C]=p,{batchSize:T,filterHeight:_,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:z}=d,L=_-1-d.padInfo.top,P=E-1-d.padInfo.left,B=R/$;for(let e=0;e<T;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){const r=n-L,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(_+r)/O);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),l=Math.min(M,(E+o)/z);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=v*e+w*n+k*r,i=N*(_-1-a)+S*(E-1-(r*z-o))+C*t;for(let e=0;e<B;++e){c+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var X_={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=Zr.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=js([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Y_={kernelName:At,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=nd.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=Zr.sizeFromShape(C),_=C.length,E=Zr.getArrayFromDType(r.dtype,T);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const i=s*w-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const d=i+n*S;if(d>=0&&d<m){const i=Zr.locToIndex([e,s,d,o],c,Zr.computeStrides(r.shape)),f=Zr.locToIndex([t,n,o],p,Zr.computeStrides(a.shape)),m=l[i]+h[f];m>u&&(u=m)}}}E[Zr.locToIndex([e,t,s,o],_,Zr.computeStrides(C))]=u}}}return{dataId:u.write(Zr.toTypedArray(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},J_={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Zr.toNestedArray(r.shape,l.data.get(r.dataId).values),h=Zr.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=nd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);Zr.assert(s.rank===S.length,(()=>`Error in ${Rt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const C=Zr.toNestedArray(S,l.data.get(s.dataId).values),T=Zr.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}T[o][u][s]+=C[e][t][r][s]}}}return{dataId:l.write(Zr.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Z_={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Zr.toNestedArray(r.shape,l.data.get(r.dataId).values),h=Zr.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=nd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);Zr.assert(s.rank===S.length,(()=>`Error in ${Ft}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const C=Zr.toNestedArray(S,l.data.get(s.dataId).values),T=Zr.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*N;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}T[e][o][u][s]+=C[e][t][r][s]}}}return{dataId:l.write(Zr.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Q_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;GS(a,"sum"),o="bool"===a.dtype?aC({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):eC({inputs:{x:a},backend:n});const u=o.shape.length,l=Zr.parseAxisParam(s,o.shape),c=nd.getAxesPermutation(l,u);let h=l,p=o;null!=c&&(p=aT({inputs:{x:o},backend:n,attrs:{perm:c}}),h=nd.getInnerMostAxes(h.length,u)),nd.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[d,f]=nd.computeOutAndReduceShapes(p.shape,h);let m=QS(n,d,nd.upcastType(p.dtype,"int32"));const g=Zr.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=VT({inputs:{x:m},backend:n,attrs:{shape:nd.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}var eE={kernelName:fr,backendName:"cpu",kernelFunc:Q_};var tE={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=nd.decodeEinsumEquation(a,s.length);nd.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=nd.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=nd.getEinsumPermutation(d,u[t]);let a;nd.isIdentityPermutation(e)?a=s[t]:(a=aT({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);Zr.arraysEqual(a.shape,i)||(a=VT({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=YC({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=Q_({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}};var nE={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;GS([r,a],"eluGrad");const s=new Float32Array(Zr.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},rE=YS(((e,t)=>e===t?1:0)),aE=iC(Pt,rE,null,"bool"),sE={kernelName:Pt,backendName:"cpu",kernelFunc:aE},iE=nd.ERF_P,oE=nd.ERF_A1,uE=nd.ERF_A2,lE=nd.ERF_A3,cE=nd.ERF_A4,hE=nd.ERF_A5,pE=mC(Lt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+iE*n);return t*(1-((((hE*r+cE)*r+lE)*r+uE)*r+oE)*r*Math.exp(-n*n))})),dE={kernelName:Lt,backendName:"cpu",kernelFunc:pE};function fE(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(Zr.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),VT({inputs:{x:a},backend:n,attrs:{shape:o}})}var mE={kernelName:Wt,backendName:"cpu",kernelFunc:fE},gE=YS(((e,t)=>e/t)),yE=iC(Dt,gE),bE={kernelName:Dt,backendName:"cpu",kernelFunc:yE};function xE(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=Zr.sizeFromShape(l),h=Zr.getTypedArrayFromDType("float32",c),p=Zr.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=dT({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=dT({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=JS({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=vE(i,t,n),d=nd.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=nd.getComplexWithIndex(d,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=JS({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function vE(e,t,n){const r=Zr.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=wE(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Zr.createScalarValue(r,"float32")),i=eC({inputs:{x:s},backend:n}),u=bE.kernelFunc({inputs:{a:e,b:s},backend:n}),l=bE.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=nd.exponent(a*r,t,n),u=nd.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),nd.assignToTypedArray(r,s,i,a)}return r}(nd.mergeRealAndImagArrays(s,i),r,t);return nd.splitRealAndImagArrays(e)}var o}function wE(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=nd.mergeRealAndImagArrays(e,t),i=n/2,o=nd.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),p=a.makeTensorInfo(c,"float32",l),d=JS({inputs:{real:h,imag:p},backend:a}),f=nd.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=JS({inputs:{real:b,imag:x},backend:a}),w=wE(u,l,i,r,a),k=w.real,I=w.imag,N=[k.length],S=a.makeTensorInfo(N,"float32",k),C=a.makeTensorInfo(N,"float32",I),T=JS({inputs:{real:S,imag:C},backend:a}),_=wE(m,g,i,r,a),E=_.real,$=_.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=JS({inputs:{real:F,imag:R},backend:a}),M=nd.exponents(n,r),O=[M.real.length],z=a.makeTensorInfo(O,"float32",M.real),L=a.makeTensorInfo(O,"float32",M.imag),P=JS({inputs:{real:z,imag:L},backend:a}),B=YC({inputs:{a:P,b:D},backend:a}),W=cC({inputs:{a:T,b:B},backend:a}),V=IT({inputs:{a:T,b:B},backend:a}),U=nC({inputs:{input:W},backend:a}),G=nC({inputs:{input:V},backend:a}),H=C_({inputs:{input:W},backend:a}),j=C_({inputs:{input:V},backend:a}),q=__({inputs:[U,G],backend:a,attrs:{axis:0}}),K=__({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var kE={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Zr.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=VT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=xE(i,!1,n),u=VT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function IE(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Zr.inferDtype(a),o=Zr.getArrayFromDType(i,Zr.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var NE={kernelName:Gt,backendName:"cpu",kernelFunc:IE};var SE={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=Zr.getTypedArrayFromDType(r.dtype,Zr.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let r=0;r<u;r++){const a=r*l;for(let o=0;o<l;o++){const h=[i,e,r,o][2],p=Math.round(u-h),d=t+n+a+o;let f=c[d];if(p>=0&&p<u){f=c[t+n+p*l+o]}s[d]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},CE=YS(((e,t)=>Math.floor(e/t))),TE=iC(qt,CE,null,"int32"),_E={kernelName:qt,backendName:"cpu",kernelFunc:TE};var EE={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=$_({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=cC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=WT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var $E={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=H_({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=cC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=WT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var AE={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Zr.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=nd.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=js([l,c],r.dtype),d=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let r=0;r<o;r++){const a=d[e*o+r];n+=a*h[r],t.push(a)}if(n<0||n>=s/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)p.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(u,p.dtype,p.values)}};var FE={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;GS([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=Zr.sizeFromShape(s.shape),c=Zr.parseAxisParam(i,a.shape)[0],h=nd.segment_util.collectGatherOpShapeInfo(a,s,c,u),p=VT({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),d=VT({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),f=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],m=n.bufferSync(d),g=$C(n.bufferSync(p),m,f);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},RE=YS(((e,t)=>e>=t?1:0)),DE=iC(Zt,RE,null,"bool"),ME={kernelName:Zt,backendName:"cpu",kernelFunc:DE};var OE={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Zr.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=VT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=xE(i,!0,n),u=VT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},zE=mC(nn,(e=>Number.isFinite(e)?1:0),"bool"),LE={kernelName:nn,backendName:"cpu",kernelFunc:zE},PE=mC(rn,(e=>Math.abs(e)===1/0?1:0),"bool"),BE={kernelName:rn,backendName:"cpu",kernelFunc:PE},WE=mC(an,(e=>Number.isNaN(e)?1:0),"bool"),VE={kernelName:an,backendName:"cpu",kernelFunc:WE},UE=YS(((e,t)=>e<=t?1:0)),GE=iC(un,UE,null,"bool"),HE={kernelName:un,backendName:"cpu",kernelFunc:GE};var jE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=zC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},qE=mC(hn,(e=>Math.log1p(e))),KE={kernelName:hn,backendName:"cpu",kernelFunc:qE},XE=YS(((e,t)=>e&&t)),YE=iC(pn,XE,null,"bool"),JE={kernelName:pn,backendName:"cpu",kernelFunc:YE},ZE=mC(dn,(e=>e?0:1),"bool"),QE={kernelName:dn,backendName:"cpu",kernelFunc:ZE},e$=YS(((e,t)=>e||t)),t$=iC(fn,e$,null,"bool"),n$={kernelName:fn,backendName:"cpu",kernelFunc:t$};var r$={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;GS(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,p=Zr.sizeFromShape(a.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}};var a$={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;GS(i,"LRNGrad");const h=Zr.sizeFromShape(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function s$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=Zr.parseAxisParam(s,u);let h=c;const p=nd.getAxesPermutation(h,l);let d=o.data.get(a.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=rT(d,u,a.dtype,p,e),h=nd.getInnerMostAxes(h.length,l),u=e}GS(a,"max"),nd.assertAxesAreInnerMostDims("max",h,l);const[f,m]=nd.computeOutAndReduceShapes(u,h),g=WC(d,Zr.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;if(i){b=nd.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:a.dtype}}var i$={kernelName:bn,backendName:"cpu",kernelFunc:s$};var o$={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;GS(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;Zr.assert(nd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=nd.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Zr.arraysEqual(l.inShape,l.outShape))c=eC({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Zr.computeStrides(a.shape),r=d_(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};var u$={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;GS(a,"maxPool3d");const c=nd.computePool3DInfo(a.shape,s,i,1,o,u,l),h=m_(n.data.get(a.dataId).values,a.shape,a.dtype,Zr.computeStrides(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};var l$={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;GS([a,s],"maxPool3DGrad");const c=nd.computePool3DInfo(s.shape,i,o,1,u,l),h=function(e,t){const n=js(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-d;let p=l;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-d,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*c*h+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,N=js(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=b*x*v-1-h.get(e,r,s,l,t)===n*x*v+a*v+i?1:0;if(0===p)continue;u+=S.get(e,r,s,l,t)*p}}}N.set(u,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var c$={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;GS([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=nd.computePool2DInfo(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=js(p.outShape,o.dtype,f_(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=js(o.shape,"float32"),N=n.data.get(a.dataId).values,S=js(a.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;if(0===u)continue;i+=S.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var h$={kernelName:Nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;GS(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=nd.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=d_(e,0,n,Zr.computeStrides(t),a,"max"),i=f_(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};var p$={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Zr.parseAxisParam(s,a.shape),u=nd.computeOutAndReduceShapes(a.shape,o)[1],l=Zr.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const p=aC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=yE({inputs:{a:p,b:h},backend:n});c.push(d);const f=Q_({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var d$={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;GS(a,"min");const o=Zr.parseAxisParam(s,a.shape);let u=o;const l=nd.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=aT({inputs:{x:a},backend:n,attrs:{perm:l}}),u=nd.getInnerMostAxes(u.length,a.shape.length)),nd.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,p]=nd.computeOutAndReduceShapes(c.shape,u),d=Zr.sizeFromShape(p),f=Zr.makeZerosTypedArray(Zr.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=VT({inputs:{x:g},backend:n,attrs:{shape:nd.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var f$={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;GS(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,d=Zr.computeStrides(a.shape),f=Zr.sizeFromShape(o),m=o.length,g=Zr.computeStrides(o),y=Zr.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=Zr.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=Zr.locToIndex(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},m$=YS(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),g$=iC(En,m$),y$={kernelName:En,backendName:"cpu",kernelFunc:g$},b$=p(k());function x$(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=Zr.parseAxisParam([o],a.shape),l=s$({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=nd.expandShapeToKeepDim(l.shape,u),h=VT({inputs:{x:l},backend:n,attrs:{shape:c}}),p=IT({inputs:{a,b:h},backend:n}),d=kC({inputs:{x:p},backend:n}),f=Q_({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=VT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=yE({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var v$={kernelName:yr,backendName:"cpu",kernelFunc:x$};var w$={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;GS(a,"multinomial");const u=o?a:x$({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,s],d=Zr.makeZerosTypedArray(Zr.sizeFromShape(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=b$.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}},k$=jd.nonMaxSuppressionV3Impl;var I$={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;GS(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=k$(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},N$=jd.nonMaxSuppressionV4Impl;var S$={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;GS(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=N$(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},C$=jd.nonMaxSuppressionV5Impl;var T$={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;GS(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=C$(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var _$={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;GS(a,"oneHot");const u=Zr.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function E$(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=nC({inputs:{input:r},backend:n}),t=E$({inputs:{x:e},backend:n}),a=C_({inputs:{input:r},backend:n}),s=E$({inputs:{x:a},backend:n}),i=JS({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return IE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var $$={kernelName:Dr,backendName:"cpu",kernelFunc:E$};var A$={kernelName:zn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=nC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=C_({inputs:{input:a},backend:r}),i=E$({inputs:{x:s},backend:r}),o=JS({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return IE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function F$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return fE({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Zr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Zr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=__({inputs:t.map((e=>{const t=fE({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var R$={kernelName:Pn,backendName:"cpu",kernelFunc:F$};var D$={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;GS(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=Zr.sizeFromShape(a.shape),h=a.shape.length,p=Zr.computeStrides(a.shape),d=Zr.sizeFromShape(o),f=o.length,m=Zr.computeStrides(o),g=Zr.getTypedArrayFromDType(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=Zr.indexToLoc(e,h,p).map(((e,t)=>e+u[t]));g[Zr.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},M$=YS(((e,t)=>Math.pow(e,t))),O$=iC(Vn,M$),z$={kernelName:Vn,backendName:"cpu",kernelFunc:O$};var L$={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=uT(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},P$=mC(qn,(e=>1/e)),B$={kernelName:qn,backendName:"cpu",kernelFunc:P$};var W$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;GS(a,"resizeBilinear");const u=Zr.computeStrides(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Zr.sizeFromShape([h,l,c,f])),y=[s&&l>1?p-1:p,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};var V$={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;GS([s,a],"resizeBilinearGrad");const o=Zr.computeStrides(a.shape),[u,l,c,h]=a.shape,[,p,d]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*l,k=p*a,I=u*l,N=u*a;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};var U$={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;GS(a,"resizeNearestNeighbor");const u=Zr.computeStrides(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?p-1:p,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}};var G$={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;GS([s,a],"resizeNearestNeighborGrad");const o=Zr.computeStrides(a.shape),u=Zr.computeStrides(s.shape),[l,c,h,p]=a.shape,[,d,f]=s.shape,m=new Float32Array(l*c*h*p),g=n.data.get(s.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-N/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*u[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var H$={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;GS(a,"reverse");const i=a.shape.length,o=Zr.parseAxisParam(s,a.shape);if(0===i)return eC({inputs:{x:a},backend:n});const u=new pa(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},j$={kernelName:zr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=Zr.getTypedArrayFromDType(r.dtype,Zr.sizeFromShape(r.shape)),[l,c,h,p]=r.shape,[d,f]=nd.getImageCenter(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<c){k=y[t+w*(h*p)+v*p+i]}u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},q$=mC(nr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),K$={kernelName:nr,backendName:"cpu",kernelFunc:q$};function X$(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,p=t.values;if(0===r)return js(n,t.dtype);const d=js(c,t.dtype);d.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?d.values[u*a+n]+=p[e*a+n]:d.values[u*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}var Y$={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=nd.calculateShapes(s,a,i),p=X$(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};var J$={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;GS([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=$a(a.dtype,s.dtype),h=Zr.makeZerosTypedArray(Zr.sizeFromShape(a.shape),c);let p=0;const d=0===i||i>1||1===a.shape.length?1:Zr.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},Z$=nd.SELU_SCALEALPHA,Q$=nd.SELU_SCALE,eA=mC(ir,(e=>e>=0?Q$*e:Z$*(Math.exp(e)-1))),tA={kernelName:ir,backendName:"cpu",kernelFunc:eA},nA=mC(cr,(e=>e<0?-1:e>0?1:0)),rA={kernelName:cr,backendName:"cpu",kernelFunc:nA},aA=mC(ur,(e=>Math.sin(e))),sA={kernelName:ur,backendName:"cpu",kernelFunc:aA},iA=mC(lr,(e=>Math.sinh(e))),oA={kernelName:lr,backendName:"cpu",kernelFunc:iA},uA=Math.log(1.1920928955078125e-7)+2,lA=mC(pr,(e=>{const t=e>-uA,n=e<uA,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),cA={kernelName:pr,backendName:"cpu",kernelFunc:lA};var hA={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;GS([a],"spaceToBatchND");const o=Zr.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=D$.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=nd.getReshaped(l.shape,s,o,!1),h=nd.getPermuted(c.length,s.length,!1),p=nd.getReshapedPermuted(l.shape,s,o,!1),d=VT({inputs:{x:l},backend:n,attrs:{shape:c}}),f=aT({inputs:{x:d},backend:n,attrs:{perm:h}}),m=VT({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};var pA={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=mT(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var dA={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=gT(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var fA={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=nd.calculateShapes(s,a,o),d=X$(n.bufferSync(a),n.bufferSync(s),o,p,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}};var mA={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Zr.parseAxisParam(i,a.shape)[0],u=nd.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=dT({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},gA=mC(dr,(e=>Math.sqrt(e))),yA={kernelName:dr,backendName:"cpu",kernelFunc:gA},bA={kernelName:kr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;GS(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},xA=mC(Mr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),vA={kernelName:Mr,backendName:"cpu",kernelFunc:xA};var wA={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;GS(a,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ai.sliceInfo(a.shape,s,i,o,u,l,c,h,p),x=VT({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(d){const e=dT({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=VT({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))v=n.makeTensorInfo(b,a.dtype,[]);else{const e=vT(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=VT({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},kA=mC(Sr,(e=>Math.tan(e))),IA={kernelName:Sr,backendName:"cpu",kernelFunc:kA},NA=mC(Cr,(e=>Math.tanh(e)));function SA(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Zr.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Zr.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Zr.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function CA(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function TA(e,t,n,r,a,s,i,o,u,l,c){return CA(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function _A(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*CA(e,t,n,r,a,s,i,h,p,l,c)+(u-p)*CA(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*CA(e,t,n,r,a,s,i,d,p,l,c)+(u-p)*CA(e,t,n,r,a,s,i,d,f,l,c))}var EA=[jT,XS,KT,YT,hC,JT,ZT,QT,e_,t_,r_,s_,o_,c_,p_,g_,y_,b_,x_,HT,v_,w_,k_,sC,xC,N_,ZS,S_,E_,F_,R_,A_,M_,O_,D_,L_,B_,W_,V_,U_,G_,j_,q_,K_,X_,Y_,Z_,J_,bE,tE,ET,nE,sE,dE,IC,mE,CC,kE,NE,SE,EC,_E,EE,$E,AE,FE,RC,ME,tC,OE,T_,LE,BE,VE,AT,OC,HE,jE,BC,KE,JE,QE,n$,r$,a$,GC,o$,u$,l$,c$,h$,i$,p$,d$,qC,f$,y$,w$,JC,QC,I$,S$,T$,nT,_$,A$,R$,D$,z$,DT,oT,L$,rC,B$,OT,LT,UT,W$,V$,U$,G$,H$,j$,K$,hT,Y$,J$,tA,BT,rA,sA,oA,fT,v$,cA,hA,pA,dA,fA,mA,yA,bA,xT,vA,wA,NT,eE,IA,{kernelName:Cr,backendName:"cpu",kernelFunc:NA},{kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;GS(a,"tile");const i=ST(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;GS(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=CT(o,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},sT,{kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=Zr.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=Zr.getTypedArrayFromDType(a.dtype,Zr.sizeFromShape(g));w.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=SA(c,p,o),m=SA(d,h,o);switch(i){case"nearest":s=TA(k,h,p,b,x,v,e,m,f,a,u);break;case"bilinear":s=_A(k,h,p,b,x,v,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;GS(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=TT(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=dT({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});p[e]=VT({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},{kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;GS(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=fE({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Zr.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=aE({inputs:{a:r,b:c},backend:n}),i=aC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=YC({inputs:{a:i,b:a},backend:n}),h=Q_({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=F$({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},$$];for(const e of EA)jr(e);var $A,AA,FA,RA,DA,MA,OA={},zA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function LA(e){if(!(e in OA)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete OA[e]}),!1),1===e)return t.getContext("webgl",zA)||t.getContext("experimental-webgl",zA);return t.getContext("webgl2",zA)}(e);if(null===t)return null;OA[e]=t}const t=OA[e];return t.isContextLost()?(delete OA[e],LA(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),OA[e])}function PA(e,t){return[t,e]}function BA(e){const t=Zr.sizeFromShape(e),n=Math.ceil(t/4);return Zr.sizeToSquarishShape(n)}function WA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function VA(e,t){const n=e;let r,a,s,i,o,u,l,c,h,p;return 2===Oe().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function UA(e,t){const n=t();return Oe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}(AA=$A||($A={}))[AA.DENSE=0]="DENSE",AA[AA.SHARED_BATCH=1]="SHARED_BATCH",(RA=FA||(FA={}))[RA.RENDER=0]="RENDER",RA[RA.UPLOAD=1]="UPLOAD",RA[RA.PIXELS=2]="PIXELS",RA[RA.DOWNLOAD=3]="DOWNLOAD",(MA=DA||(DA={}))[MA.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",MA[MA.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",MA[MA.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",MA[MA.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",MA[MA.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function GA(e){return!!(Oe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function HA(e,t){return nF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function jA(e,t){const n=nF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(UA(e,(()=>e.shaderSource(n,t))),UA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=XA.exec(t);if(null==n)return;const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>Zr.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);i.slice(0,r-1),i.slice(r-1,r),i.slice(r)}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var qA,KA,XA=/ERROR: [0-9]+:([0-9]+):/g;function YA(e,t){if(UA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function JA(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(UA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),UA(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),UA(e,(()=>e.enableVertexAttribArray(o))),!0)}function ZA(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),UA(e,(()=>e.activeTexture(e.TEXTURE0+n))),UA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function QA(e,t,n){UA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),UA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function eF(e,t){UA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),UA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function tF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function nF(e,t,n){const r=UA(e,(()=>t()));if(null==r)throw new Error(n);return r}function rF(e,t=2){return Zr.sizeFromShape(e.slice(0,e.length-t))}function aF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function sF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[rF(e),...aF(e)]),t}function iF(e){return e%2==0}function oF(e,t){if(e=e.slice(-2),t=t.slice(-2),Zr.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(iF(n)&&iF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&iF(e[0])&&iF(t[0])}function uF(e,t){return null!=e.getExtension(t)}function lF(e){try{if(null!=LA(e))return!0}catch(e){return!1}return!1}function cF(e){if(0===e)return!1;const t=LA(e);if(1!==e){if(uF(t,"EXT_color_buffer_float"))return hF(t);const e="EXT_color_buffer_half_float";if(uF(t,e)){const n=t.getExtension(e);return function(e,t){const n=VA(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!uF(t,"OES_texture_float"))return!1;if(!uF(t,"WEBGL_color_buffer_float"))return!1;return hF(t)}function hF(e){const t=VA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function pF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Zr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var dF=Oe();function fF(){let e,t,n,r,a,s,i,o,u,l;return 2===Oe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function mF(e,t,n="index"){const r=Zr.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function gF(e){const t=Zr.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}dF.registerFlag("HAS_WEBGL",(()=>dF.getNumber("WEBGL_VERSION")>0)),dF.registerFlag("WEBGL_VERSION",(()=>lF(2)?2:lF(1)?1:0)),dF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),dF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===dF.get("WEBGL_VERSION"))),dF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),dF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),dF.registerFlag("WEBGL_PACK",(()=>dF.getBool("HAS_WEBGL"))),dF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_CLIP",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_PACK_REDUCE",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_CONV_IM2COL",(()=>dF.getBool("WEBGL_PACK"))),dF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==qA){const t=LA(e);qA=t.getParameter(t.MAX_TEXTURE_SIZE)}return qA}(dF.getNumber("WEBGL_VERSION")))),dF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==KA){const t=LA(e);KA=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,KA)}(dF.getNumber("WEBGL_VERSION")))),dF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=dF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=LA(e);return t=uF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:uF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),dF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>dF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ua.isMobile())),dF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=LA(e);if(1===e){if(!uF(t,"OES_texture_float"))return!1}else if(!uF(t,"EXT_color_buffer_float"))return!1;return hF(t)}(dF.getNumber("WEBGL_VERSION")))),dF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!dF.getBool("WEBGL_FORCE_F16_TEXTURES")&&dF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),dF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>cF(dF.getNumber("WEBGL_VERSION")))),dF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=dF.getNumber("WEBGL_VERSION"))&&null!=LA(e).fenceSync;var e})),dF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>dF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),dF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),dF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ua.isMobile()&&dF.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));var yF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function bF(e){const t=fF();return function(e,t){const n=nF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(UA(e,(()=>e.shaderSource(n,t))),UA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function xF(e){return function(e,t){const n=nF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return UA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),UA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vF(e){return function(e,t){const n=nF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return UA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),UA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function wF(e,t,n,r,a,s){!function(e,t){const n=Oe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return nF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return UA(e,(()=>e.bindTexture(o,i))),UA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),UA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),UA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),UA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),UA(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),UA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function kF(e){return e.internalFormatFloat}function IF(e){return e.internalFormatHalfFloat}function NF(e){return e.downloadTextureFormat}function SF(e){return e.internalFormatPackedFloat}function CF(e){return e.internalFormatPackedHalfFloat}function TF(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=WA(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}var{getBroadcastDims:_F}=nd;function EF(e,t,n,r){const a=[];e.forEach((e=>{const t=Zr.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const s=a.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?AF(e):$F(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;a.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=_F(e.shapeInfo.logicalShape,t.logicalShape),u=PF(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===Zr.sizeFromShape(e.shapeInfo.logicalShape),m=1===Zr.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&Zr.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=PF(u),c=_F(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t));return r}(e,t,r))).join("\n"),o=t.texShape,u=fF(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${FF}\n    ${RF}\n    ${DF}\n  `}(u);t.isPacked?(c=function(e,t){switch(e.length){case 0:return OF();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Zr.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return OF();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(Zr.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=mF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=mF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=mF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=mF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=MF);return[p,l,h,s,c,i,n].join("\n")}function $F(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape,o=zF(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${LF(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=zF(t);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&Zr.arraysEqual(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=Zr.squeezeShape(t),o=s;if(o.length<t.length){const t=["row","col"];return`\n      ${$F(BF(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${WF(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${LF(e)}\n      }\n    `;const u=a[0],l=a[1],c=zF(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=Zr.squeezeShape(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${$F(BF(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${WF(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${LF(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const d=zF(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${d};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=Zr.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${$F(BF(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${WF(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${LF(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const d=zF(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=Zr.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${$F(BF(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${WF(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${LF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=zF(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Zr.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${$F(BF(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${WF(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${LF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=zF(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function AF(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=fF();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=fF();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=fF();if(null!=a&&Zr.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${AF(BF(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${WF(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2),l=u*Math.ceil(t[1]/2),c=fF();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;const d=fF();return`\n    vec4 ${a}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(e)}}var FF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function OF(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function zF(e){return`offset${e}`}function LF(e){const t=e.name,n=Zr.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function PF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function BF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function WF(e,t){return t.map((t=>e[t])).join(", ")}function VF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!Zr.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Zr.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}var{addImpl:UF,bincountImpl:GF,bincountReduceImpl:HF,ceilImpl:jF,concatImpl:qF,expImpl:KF,expm1Impl:XF,floorImpl:YF,gatherV2Impl:JF,greaterImpl:ZF,lessImpl:QF,linSpaceImpl:eR,logImpl:tR,maxImpl:nR,maximumImpl:rR,minimumImpl:aR,multiplyImpl:sR,negImpl:iR,prodImpl:oR,rangeImpl:uR,rsqrtImpl:lR,simpleAbsImpl:cR,sliceImpl:hR,sparseFillEmptyRowsImpl:pR,sparseReshapeImpl:dR,stridedSliceImpl:fR,subImpl:mR,tileImpl:gR,topKImpl:yR,transposeImpl:bR,uniqueImpl:xR}=qS;function vR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function wR(e,t){return 1===t?[e]:vR(e,t)}var kR=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${mF(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${gF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function IR(e,t,n,r,a){const s=function(e,t){switch(e){case DA.PACKED_2X2_FLOAT32:return SF(t);case DA.PACKED_2X2_FLOAT16:return CF(t);case DA.UNPACKED_FLOAT32:return kF(t);case DA.UNPACKED_FLOAT16:return IF(t);case DA.PACKED_4X1_UNSIGNED_BYTE:return NF(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=WA(e[0],e[1]);i=t*n}else{const[t,n]=PA(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function NR(e,t){if(e===FA.UPLOAD)return DA.PACKED_2X2_FLOAT32;if(e===FA.RENDER||null==e)return function(e){return Oe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?DA.PACKED_2X2_FLOAT32:DA.UNPACKED_FLOAT32:e?DA.PACKED_2X2_FLOAT16:DA.UNPACKED_FLOAT16}(t);if(e===FA.DOWNLOAD||e===FA.PIXELS)return DA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function SR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var CR=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},TR="return abs(x);",_R="return x;",ER=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},$R=jd.whereImpl,AR={};var FR=class extends L{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Oe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=LA(Oe().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Oe().getNumber("WEBGL_VERSION"))in AR||(AR[t]={}),AR[t]),this.gpgpu=new class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Oe().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){OA[e]=t}(t,e)):this.gl=LA(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Oe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=HA(this.gl,e),uF(this.gl,t))this.textureHalfFloatExtension=HA(this.gl,t);else if(Oe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),uF(this.gl,r))this.colorBufferHalfFloatExtension=HA(this.gl,r);else if(Oe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",uF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!uF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=xF(this.gl),this.indexBuffer=vF(this.gl),this.framebuffer=function(e){return nF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=VA(this.gl,this.textureHalfFloatExtension)}get debug(){return Oe().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;const e=this.gl;UA(e,(()=>e.finish())),UA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),UA(e,(()=>e.deleteFramebuffer(this.framebuffer))),UA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),UA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),UA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=PA(t,n);return wF(e,a,s,kF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=PA(t,n);return wF(e,a,s,IF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=PA(t,n);return wF(e,a,s,NF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){UA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?UA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):UA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),UA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;UA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),UA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),UA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=WA(t,n);return wF(e,a,s,CF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=WA(t,n);return wF(e,a,s,SF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(eF(this.gl,this.framebuffer),this.outputTexture=null),UA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=PA(t,n),i=new Uint8Array(t*n*4);return UA(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return TF(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();UA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return UA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),UA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),UA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Oe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return UA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=jA(t,e);null==this.vertexShader&&(this.vertexShader=bF(t));const r=function(e){return nF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return UA(t,(()=>t.attachShader(r,this.vertexShader))),UA(t,(()=>t.attachShader(r,n))),function(e,t){if(UA(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&YA(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return UA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),JA(e,t,"clipSpacePos",n,3,20,0)&&JA(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&UA(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&YA(this.gl,this.program),UA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return nF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),UA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){UA(e,(()=>ZA(e,t,r))),UA(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=WA(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&YA(this.gl,this.program),tF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),UA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),UA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=HA(this.gl,2===Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Zr.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||Zr.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),QA(this.gl,e,this.framebuffer),this.debug&&tF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(QA(this.gl,this.outputTexture,this.framebuffer),this.debug&&tF(this.gl)):eF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;QA(r,e,this.framebuffer),this.debug&&tF(r),this.outputTexture=e,UA(r,(()=>r.viewport(0,0,t,n))),UA(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),UA(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=NR(t,n),a=SR(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=IR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===DA.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===DA.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===DA.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===DA.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===DA.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=NR(n,r),s=SR(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=IR(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Oe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Oe().global.screen?1024:Oe().global.screen.height*Oe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new z(this,yo())}nextDataId(){return FR.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Oe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Oe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:FA.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Oe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:FA.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new ER(i,_R):new CR(i,_R);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=Zr.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=nd.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Zr.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new ER(r,_R):new CR(r,_R);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Oe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Oe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Oe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...BA(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=nd.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=Zr.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&yo().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Zr.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return js(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!GA(n)){if(Oe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Zr.sizeFromShape(t);if(Oe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...BA(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Oe().getBool("WEBGL_PACK")&&!0===r,i=s?sF(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=FA.DOWNLOAD;const t=fF();this.outputShape=e,this.userCode=`\n      ${yF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=FA.DOWNLOAD;const t=fF();this.outputShape=e,this.userCode=`\n      ${yF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=Zr.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Zr.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=Zr.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zr.now(),endMs:null}}endTimer(e){return Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Zr.now(),e)}async getQueryTime(e){if(Oe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return Oe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Zr.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){nd.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return $R(e.shape,t)}packedUnaryOp(e,t,n){const r=new ER(e.shape,t),a=this.compileAndRun(r,[e],n);return yo().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=cR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Oe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,TR,e.dtype);const t=new CR(e.shape,TR),n=this.compileAndRun(t,[e]);return yo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Zr.isString(n[0])){const a=n.map((e=>Zr.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return yo().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=wR("rc",t),r=PF(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=wR("rc",t),r=PF(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[rF(e.shape),...aF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[rF(t),...aF(t)],s=new kR(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=sF(r);let i;i=n?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$A.DENSE;const t=BA(e),n=fF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${mF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$A.DENSE;const t=BA(e),n=fF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${mF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===$A.DENSE){const t=BA(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===Zr.sizeFromShape(s.shape))return i.values=Zr.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Zr.sizeFromShape(t.shape)<=Oe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!oF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,u,l),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=t.userCode,s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=EF(s,o,a,t.packedInputs),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===Oe().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;p[r]=e.getUniformLocation(l,r,a),p[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,a)}return{program:t,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,l))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(e,t,n,r,a){VF(t.inShapeInfos,n),VF([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Oe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=s)if(n.isUniform)if(Zr.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));const f=Oe().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Zr.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Oe().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Oe().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=vo((()=>{if(!Oe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Oe().getBool("DEBUG");Oe().set("DEBUG",!1);const t=this.abs(Uc(1e-8)).dataSync()[0];if(Oe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Zr.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Oe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Zr.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Zr.squeezeShape(e);e=t.newShape}let r=Zr.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=rF(e);let n=2,a=2;return e.length&&([n,a]=aF(e)),r=t*(n/2)*(a/2),Zr.sizeToSquarishShape(r).map((e=>2*e))}return Zr.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=a){const e=sF(n);let s,i=c[1],h=c[0];const p=a instanceof Uint8Array;o?([i,h]=WA(c[0],c[1]),s=new class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=fF(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${gF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}(e,[h,i],p)):s=new class{constructor(e,t,n=!1){this.variableNames=["A"];const r=fF(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${gF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}(e,[h,i],p);const d=this.makeTensorInfo([h,i],r);this.texData.get(d.dataId).usage=p?FA.PIXELS:FA.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,a);const f=!0,m=this.runWebGLProgram(s,[d],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=Zr.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Zr.bytesPerElement(t)}};FR.nextDataId=0;Ua.isBrowser()&&$o("webgl",(()=>new FR),2);var RR=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=nd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},DR=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=nd.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===Zr.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${PF(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=wR("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function MR(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var OR={kernelName:Qt,backendName:"webgl",kernelFunc:MR};function zR(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=MR({inputs:{x:r},backend:n}),u=MR({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var LR={kernelName:pt,backendName:"webgl",kernelFunc:zR},PR="return (a < 0.) ? b * a : a;",BR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var WR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Zr.createScalarValue(s,"float32")),o=Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DR(BR,a.shape,i.shape):new RR(PR,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},VR="return (a < 0.) ? b * a : a;",UR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var GR={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DR(UR,r.shape,a.shape):new RR(VR,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function HR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Oe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ER(i.shape,t):new CR(i.shape,e),o.runWebGLProgram(l,[i],u)}}function jR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new RR(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],$a(n.dtype,r.dtype))})),s=zR({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||$a(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=a){const e=c.texData.get(u.dataId),t=c.texData.get(l.dataId),[n,r]=a(u.shape,l.shape,e.values,t.values,h),s=c.makeTensorInfo(r,h);return c.texData.get(s.dataId).values=n,s}let p;return p=Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new DR(t,u.shape,l.shape,n):new RR(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function qR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?UR:VR;if("leakyrelu"===e)return t?BR:PR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var KR=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},XR="return areal * breal - aimag * bimag;",YR="return areal * bimag + aimag * breal;",JR=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=nd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},ZR="return a * b;";function QR(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=nd.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new JR(XR,r.shape,a.shape),i=new JR(YR,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=zR({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=sR(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DR(ZR,r.shape,a.shape):new RR(ZR,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var eD={kernelName:An,backendName:"webgl",kernelFunc:QR};function tD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Zr.sizeFromShape(a.shape),u=Zr.inferFromImplicitShape(s,o),l=Zr.sizeFromShape(u);Zr.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||oF(a.shape,u)||null!==c.texture&&oF(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[rF(e.shape),...aF(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[rF(t),...aF(t)],i=new kR(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}var nD={kernelName:Xn,backendName:"webgl",kernelFunc:tD},rD=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${Zr.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},aD=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}};function sD(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=nd.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new rD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new rD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new aD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}function iD(e,t,n){const r=Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=PF(this.rank),a=vR("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=PF(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function oD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=Zr.parseAxisParam(a,e.shape);let o=i;const u=nd.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=iD(e,u,r),o=nd.getInnerMostAxes(o.length,s)),nd.assertAxesAreInnerMostDims("sum",o,s);const[h,p]=nd.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=nd.expandShapeToKeepDim(h,i));const f=Zr.sizeFromShape(p),m=tD({inputs:{x:c},attrs:{shape:[Zr.sizeFromShape(e.shape)/f,f]},backend:r}),g=sD(m,Aa(e.dtype),"sum",r),y=tD({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}var uD={kernelName:fr,backendName:"webgl",kernelFunc:oD};function lD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=bR(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype);i.texData.get(l.dataId).values=t}else l=iD(a,s,i);return l}var cD={kernelName:$r,backendName:"webgl",kernelFunc:lD};function hD({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Zr.sizeFromShape(m),b=Zr.sizeFromShape(g),x=y===b||1===y||1===b;Zr.assert(l>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([d,f]);Zr.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],k=r?[b,f,p]:[b,p,f],I=tD({inputs:{x:e},backend:a,attrs:{shape:w}}),N=tD({inputs:{x:t},backend:a,attrs:{shape:k}}),S=[I,N],C=Math.max(y,b),T=n?I.shape[1]:I.shape[2],_=null!=s,E=null!=i,$="leakyrelu"===u,A=null!=u?qR(u,!0):null;let F;if((1===d||1===f)&&T>1e3&&!1===(_||E||$||null!=A)){let e=I,t=N;n&&(e=lD({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=lD({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===f;let i=e;1!==f&&(i=tD({inputs:{x:e},backend:a,attrs:{shape:[C,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;s&&(u=tD({inputs:{x:t},backend:a,attrs:{shape:[C,1,T]}}),S.push(u));const l=QR({inputs:{a:i,b:u},backend:a});F=oD({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=$a(e.dtype,t.dtype),l=new KR(w,k,[C,d,f],n,r,_,A,E,$),c=[I,N];if(null!=s&&c.push(s),E&&c.push(i),$){const e=a.makeTensorInfo([],"float32",Zr.createScalarValue(o,"float32"));c.push(e),S.push(e)}F=a.runWebGLProgram(l,c,u)}const R=tD({inputs:{x:F},backend:a,attrs:{shape:v}});S.push(F);for(const e of S)a.disposeIntermediateTensorInfo(e);return R}var pD={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return hD({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},dD="return abs(x);";var fD={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=cR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Oe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,dD):new CR(r.shape,dD),n.runWebGLProgram(a,[r],r.dtype)}},mD=HR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gD={kernelName:Ve,backendName:"webgl",kernelFunc:mD},yD=HR({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bD={kernelName:Ue,backendName:"webgl",kernelFunc:yD},xD="return a + b;",vD=jR({opSnippet:xD,packedOpSnippet:xD,supportsComplex:!0,cpuKernelImpl:UF}),wD={kernelName:Ge,backendName:"webgl",kernelFunc:vD};var kD={kernelName:He,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return MR({inputs:{x:a[0]},backend:r});if(a.length>Oe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>$a(e,t))),i=a.map((e=>e.shape)),o=Oe().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var ID={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=Zr.parseAxisParam(s,a.shape);let l=u;const c=nd.getAxesPermutation(l,o);let h=a;null!=c&&(h=lD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=nd.getInnerMostAxes(l.length,o)),nd.assertAxesAreInnerMostDims("all",l,o);const[p,d]=nd.computeOutAndReduceShapes(h.shape,l),f=tD({inputs:{x:h},backend:n,attrs:{shape:[-1,Zr.sizeFromShape(d)]}}),m=sD(f,f.dtype,"all",n);let g;if(i){g=tD({inputs:{x:m},backend:n,attrs:{shape:nd.expandShapeToKeepDim(p,u)}})}else g=tD({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};var ND={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=Zr.parseAxisParam(s,a.shape);let l=u;const c=nd.getAxesPermutation(l,o);let h=a;null!=c&&(h=lD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=nd.getInnerMostAxes(l.length,o)),nd.assertAxesAreInnerMostDims("any",l,o);const[p,d]=nd.computeOutAndReduceShapes(h.shape,l),f=tD({inputs:{x:h},backend:n,attrs:{shape:[-1,Zr.sizeFromShape(d)]}}),m=sD(f,f.dtype,"any",n);let g;if(i){g=tD({inputs:{x:m},backend:n,attrs:{shape:nd.expandShapeToKeepDim(p,u)}})}else g=tD({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};function SD(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=nd.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=SD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function CD(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=nd.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Zr.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=PF(o),l=wR("coords",o);let c,h;if(1===s){h=o+1;const e=PF(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=wR("sourceLocR",h-1).concat("inIdx.r"),g=wR("sourceLocG",h-1).concat("inIdx.g"),y=wR("sourceLocB",h-1).concat("inIdx.b"),b=wR("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=CD(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function TD(e,t,n,r){const a=[n];if(nd.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Oe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=nd.computeOutAndReduceShapes(t.shape,a),o=Zr.sizeFromShape(i),u=tD({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const l=SD(e,u,r);n.push(l);const c=tD({inputs:{x:l},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return CD(e,t,r)}var _D={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=Zr.parseAxisParam(s,a.shape);const o=nd.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=lD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=nd.getInnerMostAxes(i.length,u.shape.length)),nd.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=TD(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};var ED={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=Zr.parseAxisParam(s,a.shape);const o=nd.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=lD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=nd.getInnerMostAxes(i.length,u.shape.length)),nd.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=TD(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},$D=HR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),AD={kernelName:Ye,backendName:"webgl",kernelFunc:$D},FD=HR({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),RD={kernelName:Je,backendName:"webgl",kernelFunc:FD},DD=HR({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),MD={kernelName:Ze,backendName:"webgl",kernelFunc:DD},OD=jR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zD={kernelName:et,backendName:"webgl",kernelFunc:OD},LD=HR({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),PD={kernelName:Qe,backendName:"webgl",kernelFunc:LD},BD=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},WD=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var VD={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pF(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;Zr.assert(nd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=nd.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Zr.arraysEqual(l.inShape,l.outShape))return MR({inputs:{x:a},backend:n});const c=new BD(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};var UD={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=nd.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new WD(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var GD={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=nd.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}};var HD={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;pF([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=nd.computePool2DInfo(i.shape,o,u,1,l),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[a],i.dtype)}};var jD={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return hD({a,b:s,transposeA:i,transposeB:o,backend:n})}},qD={kernelName:Kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;Zr.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Zr.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Zr.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=Oe().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],nd.assertAndGetBroadcastShape(e,t),nd.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(nd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(nd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],nd.assertAndGetBroadcastShape(e,t),nd.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(nd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(nd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}},KD=["x","y","z","w","u","v"];function XD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=Ai.parseSliceParams(a,s,i);if(Ai.assertParamsValid(a,o,u),0===Zr.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=hR(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=Ai.isSliceContinous(a.shape,o,u);if(l||!c){const e=Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=PF(this.rank),n=wR("coords",this.rank),r=wR("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=PF(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return KD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${KD[t]} = start[${t}] + coords.${KD[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ai.computeFlatOffset(t,Zr.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var YD={kernelName:or,backendName:"webgl",kernelFunc:XD},JD={kernelName:it,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Zr.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=nd.getReshaped(a.shape,s,o),l=nd.getPermuted(u.length,s.length),c=nd.getReshapedPermuted(a.shape,s,o),h=nd.getSliceBeginCoords(i,s.length),p=nd.getSliceSize(c,i,s.length),d=[],f=tD({inputs:{x:a},backend:n,attrs:{shape:u}}),m=lD({inputs:{x:f},backend:n,attrs:{perm:l}}),g=tD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=XD({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var ZD={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=GF(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},QD=jR({opSnippet:"return float(a != b);",dtype:"bool"}),eM={kernelName:Rn,backendName:"webgl",kernelFunc:QD};function tM(e){const{inputs:t,backend:n}=e,{input:r}=t;return MR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var nM={kernelName:jn,backendName:"webgl",kernelFunc:tM};var rM={kernelName:lt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return MR({inputs:{x:s},backend:r});const t=tc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=zR({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=tM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Zr.hasEncodingLoss(s.dtype,i)){const e=MR({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new CR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",Zr.getTypedArrayFromDType("bool",1)),t=QD({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},aM="return ceil(x);",sM=HR({opSnippet:aM,packedOpSnippet:aM,cpuKernelImpl:jF}),iM={kernelName:ct,backendName:"webgl",kernelFunc:sM};var oM={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Oe().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};function uM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var lM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[uM(r,a.complexTensorInfos.real),uM(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function cM(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function hM(e){const{inputs:t,backend:n}=e,{input:r}=t;return MR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var pM={kernelName:tn,backendName:"webgl",kernelFunc:hM};function dM(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>tM({inputs:{input:e},backend:n}))),a=e.map((e=>hM({inputs:{input:e},backend:n}))),s=dM(r,t,n),i=dM(a,t,n),o=zR({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=Zr.sizeFromShape(e.shape.slice(t));return tD({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=nd.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=qF(s,i,r,o),l=nd.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Oe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=dM(e.slice(0,r),t,n),s=dM(e.slice(r),t,n),i=dM([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=nd.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=PF(r),s=wR("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${cM(i,u,t)}),\n            vec2(${cM(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${cM(i,u,d)}),\n          vec2(${cM(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=nd.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>tD({inputs:{x:e},attrs:{shape:[-1,Zr.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=nd.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=tD({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function fM(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Zr.parseAxisParam(a,t[0].shape)[0],i=nd.computeOutShape(t.map((e=>e.shape)),s);if(0===Zr.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Zr.sizeFromShape(e.shape)>0));if(1===o.length)return MR({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return nd.assertParamsConsistent(u,s),dM(o,s,n)}var mM={kernelName:ft,backendName:"webgl",kernelFunc:fM},gM=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}};function yM({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>1e3,y=u[2]%2!=0&&!!l.isPacked;if(!g&&Oe().getBool("WEBGL_LAZILY_UNPACK")&&Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,Zr.assert(oF(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const g=tD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=hD({a:h,b:g,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);Zr.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,b.shape=n.outShape,f=MR({inputs:{x:y},backend:r}),f.shape=n.outShape,m.push(y)}else{const l=tD({inputs:{x:e},backend:r,attrs:{shape:[1,d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=tD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=hD({a:l,b:c,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=tD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function bM({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[m,g],b=[],x=tD({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=tD({inputs:{x:t},backend:r,attrs:{shape:[1,m,Zr.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);const w=new class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=a*r,m=fF(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}(y,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=tD({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);const N=null!=a,S=null!=s,C="leakyrelu"===o,T=o?qR(o,!0):null,_=new KR(I.shape,v.shape,[1,g,n.outChannels],!0,!1,N,T,S,C),E=[I,v];if(a&&E.push(a),S&&E.push(s),C){const e=r.makeTensorInfo([],"float32",Zr.createScalarValue(i,"float32"));E.push(e),b.push(e)}const $=r.runWebGLProgram(_,E,"float32"),A=tD({inputs:{x:$},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push($);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}var xM={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=nd.convertConv2DDataFormat(u),p=nd.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Oe().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])d=bM({x:a,filter:s,convInfo:p,backend:n});else{const e=new gM(p);d=n.runWebGLProgram(e,[a,s],"float32")}else d=yM({x:a,filter:s,convInfo:p,backend:n});const f=tD({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};var vM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=nd.convertConv2DDataFormat(u),p=nd.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var wM={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=nd.convertConv2DDataFormat(l),p=nd.computeConv2DInfo(i,s.shape,o,1,u,c,!1,h),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var kM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=nd.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}};var IM={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=nd.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}};var NM={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=nd.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},SM=HR({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),CM={kernelName:wt,backendName:"webgl",kernelFunc:SM},TM=HR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),_M={kernelName:kt,backendName:"webgl",kernelFunc:TM},EM={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},$M=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${AM(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${PF(r)} coords = getOutputCoords();\n        int end = ${FM(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${FM(r,"coords")} = idx;\n          val += getX(${AM(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function AM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function FM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var RM={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=nd.getAxesPermutation([s],u);let c=a;null!=l&&(c=lD({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=nd.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[h];let d=MR({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new $M(c.shape,!1,o),r=t.getCustomSetupFunc(e),a=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new $M(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=lD({inputs:{x:d},backend:n,attrs:{perm:nd.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}};var DM={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=GF(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=HF(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var MM={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Zr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,p=l*s,d=c/(s*s),f="NHWC"===i?[o,h,p,d]:[o,d,h,p],m=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}},OM=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}},zM=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<m;e++)y+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<m;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${e*p};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<(g+1)/2;t++){const n=2*t,r=n*d;if(y+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,y+=1===d&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<m)){const e=l%2==0?Zr.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,d>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):y+=1===e?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<m&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<m&&(y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<m&&(y+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<m&&(y+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let b="",x="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}};var LM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),Zr.assert(nd.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=nd.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let p;return p=Oe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new zM(h):new OM(h),n.runWebGLProgram(p,[a,s],"float32")}};var PM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=nd.computeConv2DInfo(a.shape,c,i,o,u,l,!0),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}};var BM={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=nd.computeConv2DInfo(c,s.shape,i,o,u,l,!0),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}};var WM={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Zr.sizeFromShape(r.shape),i=tD({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=tD({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};var VM={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=nd.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(h,[a,s],"float32");const p=tD({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}};var UM={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=nd.decodeEinsumEquation(a,s.length);nd.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=nd.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=nd.getEinsumPermutation(d,u[t]);let a;nd.isIdentityPermutation(e)?a=s[t]:(a=lD({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);Zr.arraysEqual(a.shape,i)||(a=tD({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=QR({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=oD({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},GM=HR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),HM={kernelName:Ot,backendName:"webgl",kernelFunc:GM},jM={kernelName:zt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Oe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new DR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new RR("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},qM=jR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),KM={kernelName:Pt,backendName:"webgl",kernelFunc:qM},XM=HR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${nd.ERF_P};\n  float a1 = ${nd.ERF_A1};\n  float a2 = ${nd.ERF_A2};\n  float a3 = ${nd.ERF_A3};\n  float a4 = ${nd.ERF_A4};\n  float a5 = ${nd.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),YM={kernelName:Lt,backendName:"webgl",kernelFunc:XM},JM="return exp(x);",ZM=HR({opSnippet:JM,packedOpSnippet:JM,cpuKernelImpl:KF}),QM={kernelName:Bt,backendName:"webgl",kernelFunc:ZM};function eO(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(Zr.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),tD({inputs:{x:s},backend:r,attrs:{shape:o}})}var tO={kernelName:Wt,backendName:"webgl",kernelFunc:eO},nO="return exp(x) - 1.0;",rO=HR({opSnippet:nO,packedOpSnippet:nO,cpuKernelImpl:XF}),aO={kernelName:Vt,backendName:"webgl",kernelFunc:rO},sO=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function iO(e,t,n){const r=n.texData.get(e.dataId),a=Zr.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=tD({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new sO("real",o,t),l=new sO("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=zR({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=tD({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}var oO={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return iO(r,!1,n)}};function uO(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||Zr.inferDtype(a),"string"===s){const e=Zr.getArrayFromDType(s,Zr.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}var lO,cO={kernelName:Gt,backendName:"webgl",kernelFunc:uO},hO={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},pO="return floor(x);",dO=HR({opSnippet:pO,packedOpSnippet:pO,cpuKernelImpl:YF}),fO={kernelName:jt,backendName:"webgl",kernelFunc:dO},mO=jR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),gO={kernelName:qt,backendName:"webgl",kernelFunc:mO},yO={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==lO&&(lO=document.createElement("canvas").getContext("2d")),lO.canvas.width=u,lO.canvas.height=l,lO.drawImage(a,0,0,u,l),a=lO.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=FA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const d=Oe().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];const t=fF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};var bO={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=nd.convertConv2DDataFormat(c),g=nd.computeConv2DInfo(a.shape,s.shape,u,h,l,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Oe().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=bM({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,u=d?qR(d,!1):null,l=new gM(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Zr.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=yM({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=tD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};var xO={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),Zr.assert(nd.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=nd.computeConv2DInfo(a.shape,s.shape,u,m,l,h,!0),y=Oe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?qR(p,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Zr.createScalarValue(d,"float32"));x.push(e),f.push(e)}let I;I=y?new zM(g,v,b,w,k):new OM(g,v,b,w,k);const N=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var vO={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,u,l,c]=nd.prepareAndValidate(r,a),h=tD({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=tD({inputs:{x:r},backend:n,attrs:{shape:[Zr.sizeFromShape(r.shape)/l,l]}}),d=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=PF(t.length),a=PF(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,c,[u,l]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=tD({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};var wO={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=Zr.parseAxisParam(i,a.shape)[0],l=nd.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=Zr.sizeFromShape(s.shape),h=[],p=tD({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=tD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=JF(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=PF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=tD({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},kO=jR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ZF,dtype:"bool"}),IO={kernelName:Jt,backendName:"webgl",kernelFunc:kO},NO=jR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),SO={kernelName:Zt,backendName:"webgl",kernelFunc:NO};var CO={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return iO(r,!0,n)}},TO=HR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),_O={kernelName:nn,backendName:"webgl",kernelFunc:TO},EO=HR({opSnippet:"return float(isinf(x));",dtype:"bool"}),$O={kernelName:rn,backendName:"webgl",kernelFunc:EO},AO=HR({opSnippet:"return float(isnan(x));",dtype:"bool"}),FO={kernelName:an,backendName:"webgl",kernelFunc:AO},RO=jR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:QF,dtype:"bool"}),DO={kernelName:on,backendName:"webgl",kernelFunc:RO},MO=jR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),OO={kernelName:un,backendName:"webgl",kernelFunc:MO};var zO={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=eR(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},LO=HR({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tR}),PO={kernelName:cn,backendName:"webgl",kernelFunc:LO},BO=HR({opSnippet:"return log(1.0 + x);"}),WO={kernelName:hn,backendName:"webgl",kernelFunc:BO},VO=jR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),UO={kernelName:pn,backendName:"webgl",kernelFunc:VO},GO=HR({opSnippet:"return float(!(x >= 1.0));"}),HO={kernelName:dn,backendName:"webgl",kernelFunc:GO},jO=jR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qO={kernelName:fn,backendName:"webgl",kernelFunc:jO},KO={kernelName:gn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Oe().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},XO={kernelName:yn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function YO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=Zr.parseAxisParam(s,a.shape);let l=u;const c=nd.getAxesPermutation(l,o),h=null!=c,p=n.shouldExecuteOnCPU([a]);let d=a;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=bR(e,a.shape,a.dtype,c,t);d=n.makeTensorInfo(t,a.dtype);n.texData.get(d.dataId).values=r}else d=iD(a,c,n);l=nd.getInnerMostAxes(l.length,o)}nd.assertAxesAreInnerMostDims("max",l,o);const[f,m]=nd.computeOutAndReduceShapes(d.shape,l);let g,y=f;if(i&&(y=nd.expandShapeToKeepDim(f,u)),p){const e=n.texData.get(d.dataId).values,t=nR(e,Zr.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=Zr.sizeFromShape(t),s=tD({inputs:{x:e},attrs:{shape:[Zr.sizeFromShape(e.shape)/a,a]},backend:r}),i=sD(s,e.dtype,"max",r),o=tD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}var JO={kernelName:bn,backendName:"webgl",kernelFunc:YO},ZO=jR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:rR}),QO={kernelName:xn,backendName:"webgl",kernelFunc:ZO};var ez={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pF(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;Zr.assert(nd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=nd.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Zr.arraysEqual(l.inShape,l.outShape))return MR({inputs:{x:a},backend:n});const c=new BD(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};var tz={kernelName:kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=nd.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new WD(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var nz={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=nd.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),p=new WD(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}};var rz={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;pF([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=nd.computePool2DInfo(o.shape,u,l,1,c,h),d=new BD(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var az={kernelName:Nn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;Zr.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];Zr.assert(nd.eitherStridesOrDilationsAreOne(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=nd.computePool2DInfo(r.shape,a,s,l,i),[h,p]=function(e,t,n,r){let a=new BD(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new BD(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,p]}};var sz={kernelName:Sn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=Zr.parseAxisParam(s,r.shape);let l=u;const c=nd.getAxesPermutation(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=bR(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=iD(r,c,i);d.push(f),l=nd.getInnerMostAxes(l.length,o)}nd.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=nd.computeOutAndReduceShapes(f.shape,l);let y=m;a&&(y=nd.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const a=Zr.sizeFromShape(t),s=tD({inputs:{x:e},attrs:{shape:[Zr.sizeFromShape(e.shape)/a,a]},backend:r}),i=sD(s,"float32","mean",r),o=tD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}};var iz={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=Zr.parseAxisParam(s,a.shape);let l=u;const c=nd.getAxesPermutation(l,o);let h=a;null!=c&&(h=lD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=nd.getInnerMostAxes(l.length,a.shape.length)),nd.assertAxesAreInnerMostDims("min",l,o);const[p,d]=nd.computeOutAndReduceShapes(h.shape,l),f=tD({inputs:{x:h},backend:n,attrs:{shape:[-1,Zr.sizeFromShape(d)]}}),m=sD(f,f.dtype,"min",n);let g;if(i){g=tD({inputs:{x:m},backend:n,attrs:{shape:nd.expandShapeToKeepDim(p,u)}})}else g=tD({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},oz=jR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:aR}),uz={kernelName:Tn,backendName:"webgl",kernelFunc:oz},lz={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=PF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=wR("rc",r),u=wR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=PF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},cz=jR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hz={kernelName:En,backendName:"webgl",kernelFunc:cz},pz=jR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),dz={kernelName:Dt,backendName:"webgl",kernelFunc:pz},fz="return a - b;",mz=jR({opSnippet:fz,packedOpSnippet:fz,supportsComplex:!0,cpuKernelImpl:mR}),gz={kernelName:Nr,backendName:"webgl",kernelFunc:mz};function yz(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Zr.parseAxisParam([s],a.shape),o=YO({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=nd.expandShapeToKeepDim(o.shape,i),l=tD({inputs:{x:o},backend:n,attrs:{shape:u}}),c=mz({inputs:{a,b:l},backend:n}),h=ZM({inputs:{x:c},backend:n}),p=oD({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=tD({inputs:{x:p},backend:n,attrs:{shape:u}}),f=pz({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}var bz={kernelName:yr,backendName:"webgl",kernelFunc:yz};var xz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:yz({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}(l,c,s),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},vz="return -x;";var wz={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=iR(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Oe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,vz):new CR(r.shape,vz),n.runWebGLProgram(a,[r],r.dtype)}},kz=jd.nonMaxSuppressionV3Impl;var Iz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){nd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=kz(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Nz=jd.nonMaxSuppressionV4Impl;var Sz={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){nd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=Nz(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Cz=jd.nonMaxSuppressionV5Impl;var Tz={kernelName:On,backendName:"webgl",kernelFunc:function(e){nd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=Cz(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},_z={kernelName:Ln,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=Zr.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=tD({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=tD({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function Ez(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=tM({inputs:{input:r},backend:n}),t=Ez({inputs:{x:e},backend:n}),a=hM({inputs:{input:r},backend:n}),s=Ez({inputs:{x:a},backend:n}),i=zR({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return uO({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var $z={kernelName:Dr,backendName:"webgl",kernelFunc:Ez};var Az={kernelName:zn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=tM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=hM({inputs:{input:a},backend:r}),i=Ez({inputs:{x:s},backend:r}),o=zR({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return uO({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var Fz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return eO({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Zr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Zr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=fM({inputs:t.map((e=>{const t=eO({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},Rz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=PF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=wR("rc",r),u=wR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=PF(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},Dz={kernelName:Bn,backendName:"webgl",kernelFunc:Rz},Mz=jR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Oz={kernelName:Vn,backendName:"webgl",kernelFunc:Mz};var zz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=Zr.parseAxisParam(s,a.shape);let c=l;const h=nd.getAxesPermutation(c,o);let p,d=a;if(null!=h&&(d=lD({inputs:{x:a},backend:n,attrs:{perm:h}}),c=nd.getInnerMostAxes(c.length,o),u.push(d)),nd.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:a}=oR(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=nd.computeOutAndReduceShapes(d.shape,c),r=Zr.sizeFromShape(t),s=tD({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=sD(s,Aa(a.dtype),"prod",n);p=tD({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(p);const e=nd.expandShapeToKeepDim(p.shape,l);p=tD({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Lz=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=uR(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Pz={kernelName:Hn,backendName:"webgl",kernelFunc:Lz},Bz=HR({opSnippet:"return 1.0 / x;"}),Wz={kernelName:qn,backendName:"webgl",kernelFunc:Bz},Vz=HR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Uz={kernelName:Kn,backendName:"webgl",kernelFunc:Vz},Gz=HR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Hz={kernelName:er,backendName:"webgl",kernelFunc:Gz};var jz={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Oe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};var qz={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var Kz={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Oe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};var Xz={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var Yz={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Zr.parseAxisParam(s,a.shape);if(0===i)return MR({inputs:{x:a},backend:n});const u=Oe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=wR("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=PF(n);var o;function u(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=PF(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},Jz={kernelName:zr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}(r.shape,s),[l,c]=nd.getImageCenter(i,r.shape[1],r.shape[2]),h=u.getCustomSetupFunc(l,c,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,h)}},Zz=HR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Qz={kernelName:nr,backendName:"webgl",kernelFunc:Zz},eL=HR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:lR}),tL={kernelName:rr,backendName:"webgl",kernelFunc:eL},nL=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=PF(a.length),u=PF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var rL={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=nd.calculateShapes(s,a,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const d=tD({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=tD({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new nL(u,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=tD({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var aL={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=PF(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],$a(a.dtype,s.dtype))}},sL=HR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${nd.SELU_SCALEALPHA};\n  float scale = ${nd.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),iL={kernelName:ir,backendName:"webgl",kernelFunc:sL},oL=HR({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),uL={kernelName:hr,backendName:"webgl",kernelFunc:oL},lL=HR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cL={kernelName:cr,backendName:"webgl",kernelFunc:lL},hL=HR({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),pL={kernelName:ur,backendName:"webgl",kernelFunc:hL},dL=HR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),fL={kernelName:lr,backendName:"webgl",kernelFunc:dL},mL=HR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),gL={kernelName:pr,backendName:"webgl",kernelFunc:mL},yL={kernelName:mr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Zr.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=Rz({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=nd.getReshaped(c.shape,s,o,!1),p=nd.getPermuted(h.length,s.length,!1),d=nd.getReshapedPermuted(c.shape,s,o,!1),f=tD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=lD({inputs:{x:f},backend:n,attrs:{perm:p}}),g=tD({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var bL={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=pR(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var xL={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=dR(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var vL={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=nd.calculateShapes(s,a,o),p=new nL(l,u,a.shape.length,s.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[s,a,i],s.dtype),f=tD({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}};var wL={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Zr.parseAxisParam(i,a.shape)[0],u=nd.prepareSplitSize(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=XD({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},kL=HR({opSnippet:"return sqrt(x);"}),IL={kernelName:dr,backendName:"webgl",kernelFunc:kL},NL=HR({opSnippet:"return x * x;"}),SL={kernelName:kr,backendName:"webgl",kernelFunc:NL},CL="return (a - b) * (a - b);",TL=jR({opSnippet:CL,packedOpSnippet:CL}),_L={kernelName:wr,backendName:"webgl",kernelFunc:TL};var EL={kernelName:Mr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new CR(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var $L={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ai.sliceInfo(a.shape,s,i,o,u,l,c,h,p),x=tD({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(d){const e=XD({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=tD({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))v=n.makeTensorInfo(b,a.dtype,[]);else{if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=js(x.shape,x.dtype,e),r=fR(b,t,m,f);v=n.makeTensorInfo(b,x.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=PF(n.length),s=PF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(f,m,b);v=n.runWebGLProgram(e,[x],x.dtype)}}const w=tD({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},AL=HR({opSnippet:"return tan(x);"}),FL={kernelName:Sr,backendName:"webgl",kernelFunc:AL},RL=HR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),DL={kernelName:Cr,backendName:"webgl",kernelFunc:RL};function ML(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Zr.decodeString(e))):e,r=js(a.shape,a.dtype,t),i=gR(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=PF(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var OL={kernelName:Tr,backendName:"webgl",kernelFunc:ML};var zL={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,l]=yR(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};var LL={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,p,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}};var PL={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;pF(s,"unique");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=xR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};var BL={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=XD({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=tD({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var WL=[KO,XO,pD,fD,gD,bD,wD,kD,ID,ND,_D,ED,AD,RD,zD,MD,PD,UD,VD,GD,HD,jD,qD,JD,ZD,rM,iM,oM,lM,LR,mM,vM,wM,xM,IM,NM,kM,CM,_M,EM,RM,DM,MM,PM,BM,LM,WM,VM,UM,HM,jM,KM,YM,QM,tO,aO,oO,cO,hO,fO,gO,yO,bO,xO,vO,wO,IO,SO,OR,CO,pM,_O,$O,FO,WR,DO,OO,zO,WO,PO,UO,HO,qO,JO,tz,ez,nz,rz,az,QO,sz,iz,uz,lz,hz,xz,eD,wz,Iz,Sz,Tz,eM,_z,Az,Fz,Dz,Oz,GR,zz,Pz,nM,dz,Wz,Hz,Uz,nD,jz,qz,Kz,Xz,Yz,Jz,Qz,tL,rL,aL,iL,uL,cL,pL,fL,YD,bz,gL,yL,bL,xL,vL,wL,IL,SL,_L,EL,$L,gz,uD,FL,DL,OL,zL,LL,cD,PL,BL,{kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=nd.getAxesPermutation([l],o);let h=a;null!=c&&(h=lD({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=nd.getInnerMostAxes(1,o)[0]);const p=nd.segment_util.computeOutShape(h.shape,l,i),d=Zr.sizeFromShape([h.shape[l]]),f=tD({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=Aa(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=nd.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),p=n.compileAndRun(h,[e,r],a);if(u.push(p),p.shape[1]===s)return p;const d=Lz({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=ML({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});u.push(d),u.push(f);return g(p,t,f,a,s)},y=tD({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=nd.getUndoAxesPermutation(c);b=lD({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},$z];for(const e of WL)jr(e);var VL,UL,GL,HL,jL,qL={"tfjs-core":co,"tfjs-backend-cpu":"3.6.0","tfjs-backend-webgl":"3.6.0","tfjs-data":US,"tfjs-layers":Sb,"tfjs-converter":$N,tfjs:"3.6.0"};(UL=VL||(VL={}))[UL.float32=0]="float32",UL[UL.int32=1]="int32",UL[UL.bool=2]="bool",UL[UL.string=3]="string",UL[UL.complex64=4]="complex64",(HL=GL||(GL={}))[HL.linear=0]="linear",HL[HL.relu=1]="relu",HL[HL.relu6=2]="relu6",HL[HL.prelu=3]="prelu",HL[HL.leakyrelu=4]="leakyrelu",HL[HL.sigmoid=5]="sigmoid";var KL={kernelName:Lr,backendName:"wasm",setupFunc:function(e){jL=e.wasm.cwrap(Lr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=GL[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=a.shape[0],v=n.makeOutput([x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return jL(p,k,a.shape.length,d,I,s.shape.length,u,l,g,f,m,h||0,w),v}};function XL(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===Zr.sizeFromShape(s.shape)||t(a,i),s}}}var YL=XL(We);function JL(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,h=null!=n?n:o.dtype,p=nd.assertAndGetBroadcastShape(o.shape,u.shape),d=s.makeOutput(p,h);if(0===Zr.sizeFromShape(p))return d;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(d.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,VL[o.dtype],g);if(t&&"float32"===o.dtype)return y(),d;const b=nd.getBroadcastDims(o.shape,p),x=nd.getBroadcastDims(u.shape,p),v=b.every(((e,t)=>e===t)),w=x.every(((e,t)=>e===t));if(v&&w)return y(),d;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}var ZL,QL=JL(Ge,!0);var eP={kernelName:He,backendName:"wasm",setupFunc:function(e){ZL=e.wasm.cwrap(He,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Zr.sizeFromShape(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return ZL(s,a.length,VL[r.dtype],i),r}};function tP(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var nP,rP={kernelName:Qt,backendName:"wasm",kernelFunc:tP};function aP(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=tP({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(u.shape).buffer);return nP(c,d,u.shape.length,VL[u.dtype],h,p,s.length),l}var sP,iP={kernelName:$r,backendName:"wasm",kernelFunc:aP,setupFunc:function(e){nP=e.wasm.cwrap($r,null,["number","array","number","number","number","array","number"])}};function oP(e,t,n){const r=e.shape,a=e.shape.length,s=Zr.parseAxisParam(t,r);let i=s;const o=nd.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=nd.getInnerMostAxes(i.length,a),u=aP({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var uP,lP={kernelName:je,backendName:"wasm",setupFunc:function(e){sP=e.wasm.cwrap(je,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:p}=oP(i,a,t);if(p){u=l,o=t.dataIdMap.get(l.dataId).id}const d=u.shape.length;nd.assertAxesAreInnerMostDims("all",c,d);const[f,m]=nd.computeOutAndReduceShapes(u.shape,c),g=Zr.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Zr.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;sP(o,g,e)}if(p&&t.disposeData(l.dataId),s){const e=nd.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var cP,hP={kernelName:qe,backendName:"wasm",setupFunc:function(e){uP=e.wasm.cwrap(qe,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:p}=oP(i,a,t);if(p){u=l,o=t.dataIdMap.get(l.dataId).id}const d=u.shape.length;nd.assertAxesAreInnerMostDims("any",c,d);const[f,m]=nd.computeOutAndReduceShapes(u.shape,c),g=Zr.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Zr.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;uP(o,g,e)}if(p&&t.disposeData(l.dataId),s){const e=nd.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var pP,dP={kernelName:Ke,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:h}=oP(s,a,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const p=u.shape.slice(0,-1),d=t.makeOutput(p,"int32"),f=t.dataIdMap.get(d.dataId).id,m=Zr.sizeFromShape(d.shape),g=u.shape[c[0]];return cP(o,VL[u.dtype],m,g,f),h&&t.disposeData(l.dataId),d},setupFunc:function(e){cP=e.wasm.cwrap(Ke,null,["number","number","number","number","number"])}};var fP={kernelName:tt,backendName:"wasm",setupFunc:function(e){pP=e.wasm.cwrap(tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=nd.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const v=r.makeOutput(c.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return pP(s,a.shape[0],a.shape[1],a.shape[2],h,p,d,f,m,g,y,b,x,w),v}};function mP(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Zr.sizeFromShape(r.shape),i=Zr.inferFromImplicitShape(a,s);return Zr.assert(s===Zr.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var gP,yP={kernelName:Xn,backendName:"wasm",kernelFunc:mP};var bP={kernelName:st,backendName:"wasm",setupFunc:function(e){gP=e.wasm.cwrap(st,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],d=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Zr.sizeFromShape(f),y=Zr.sizeFromShape(m),b=g===y||1===g||1===y;Zr.assert(u>=2&&l>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,d]);Zr.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[y,d,h]:[y,h,d],w=mP({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),k=mP({inputs:{x:s},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,N=n.dataIdMap.get(k.dataId).id,S=i?w.shape[2]:w.shape[1],C=o?k.shape[1]:k.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,C],w.dtype),E=n.dataIdMap.get(_.dataId).id,$=new Uint8Array(new Int32Array(w.shape).buffer),A=new Uint8Array(new Int32Array(k.shape).buffer);return gP(I,$,w.shape.length,N,A,k.shape.length,i,o,E),n.disposeData(w.dataId),n.disposeData(k.dataId),_.shape=x,_}};function xP(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var vP,wP={kernelName:lt,backendName:"wasm",kernelFunc:xP},kP=XL(ct);var IP={kernelName:ht,backendName:"wasm",setupFunc:function(e){vP=e.wasm.cwrap(ht,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return vP(o,s,i,l),u}};function NP(e,t,n,r,a){const s=Ai.isSliceContinous(r,t,n),i=Zr.sizeFromShape(n),o=Zr.computeStrides(r);if(s){const n=Ai.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=js(r,a,"string"===a?nd.fromUint8ToStringArray(e):e),l=js(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?nd.fromStringArrayToUint8(l.values):l.values}function SP(e){const{inputs:t,backend:n}=e,r=Zr.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=nd.computeOutShape(t.map((e=>e.shape)),r);const s=t.filter((e=>Zr.sizeFromShape(e.shape)>0));if(1===s.length)return tP({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===Zr.sizeFromShape(a))return i;const o=s.map((e=>e.shape));if(nd.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map((e=>{const t=Zr.sizeFromShape(e.shape.slice(r));return mP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=nd.computeOutShape(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=function(e,t,n,r){const a=Zr.getArrayFromDType(n,Zr.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Zr.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?nd.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(o,a,t[0].dtype,u),c=nd.computeOutShape(s.map((e=>e.shape)),r);i.shape=c;return n.dataIdMap.get(i.dataId).stringBytes=nd.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const u=Zr.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map((e=>{const t=Zr.sizeFromShape(e.shape.slice(r));return l+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let e=0;e<u;e++){let t=e*l;for(let n=0;n<h.length;n++){const r=c[n],a=e*r,s=h[n].subarray(a,a+r);p.set(s,t),t+=r}}return i}var CP,TP={kernelName:ft,backendName:"wasm",kernelFunc:SP};var _P,EP={kernelName:mt,backendName:"wasm",setupFunc:function(e){CP=e.wasm.cwrap(mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:p}=n,d=nd.convertConv2DDataFormat(p),f=nd.computeConv2DInfo(a.shape,s.shape,u,l,c,h,!1,d),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,C=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const _=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return CP(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,T,w,k,I,N,S,C,E),_}};var $P,AP,FP,RP={kernelName:yt,backendName:"wasm",setupFunc:function(e){_P=e.wasm.cwrap(yt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=nd.convertConv2DDataFormat(u),p=nd.computeConv2DInfo(c,s.shape,i,1,o,l,!1,h),{batchSize:d,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=p,N=f-1-p.padInfo.top,S=m-1-p.padInfo.left,C="channelsLast"===p.dataFormat,T=Zr.computeStrides(p.inShape),_=Zr.computeStrides(a.shape),[E,$,A]=Zr.computeStrides(s.shape),F=T[0],R=C?T[1]:T[2],D=C?T[2]:1,M=C?1:T[1],O=_[0],z=C?_[1]:_[2],L=C?_[2]:1,P=C?1:_[1],B=t.makeOutput(p.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return _P(V,U,d,f,m,y,b,g,v,w,x,k,I,N,S,E,$,A,F,R,D,M,O,z,L,P,W),B}},DP=XL(wt);(AP=$P||($P={}))[AP.bilinear=0]="bilinear",AP[AP.nearest=1]="nearest";var MP,OP={kernelName:Nt,backendName:"wasm",setupFunc:function(e){FP=e.wasm.cwrap(Nt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,p]=i,d=[c,h,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=xP({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(d,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return FP(g,y,b,c,w,h,p,$P[a],s,v),null!=f&&t.disposeData(f.dataId),x}};var zP,LP={kernelName:It,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap(It,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;Zr.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=nd.getAxesPermutation([s],u);let c=a;null!==l&&(c=aP({inputs:{x:a},attrs:{perm:l},backend:n}));const h=nd.getInnerMostAxes(1,u)[0];nd.assertAxesAreInnerMostDims("cumsum",[h],u);const p=n.makeOutput(c.shape,c.dtype),d=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;MP(f,i?1:0,o?1:0,d,m,VL[a.dtype]);let g=p;if(null!==l){g=aP({inputs:{x:p},attrs:{perm:nd.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)}return g}};var PP,BP={kernelName:Ct,backendName:"wasm",setupFunc:function(e){zP=e.wasm.cwrap(Ct,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;Zr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,p=l*s,d=c/(s*s),f="NHWC"===i?[o,h,p,d]:[o,d,h,p],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(Zr.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Zr.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return zP(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,v),m}};var WP={kernelName:Tt,backendName:"wasm",setupFunc:function(e){PP=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,p=null==l?[1,1]:l,d=nd.computeConv2DInfo(a.shape,s.shape,u,p,c,h,!0),f=d.filterHeight,m=d.filterWidth,g=d.padInfo.top,y=d.padInfo.right,b=d.padInfo.bottom,x=d.padInfo.left,v=d.dilationHeight,w=d.dilationWidth,k=d.strideHeight,I=d.strideWidth,N=d.inChannels,S=d.outChannels,C="SAME"===d.padInfo.type?1:0;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(d.outShape,"float32"),_=r.dataIdMap.get(T.dataId).id;return PP(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,C,v,w,k,I,N,S,_),T}},VP=JL(Pt,!1,"bool"),UP=XL(Bt);function GP(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(Zr.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),mP({inputs:{x:a},backend:r,attrs:{shape:o}})}var HP={kernelName:Wt,backendName:"wasm",kernelFunc:GP};var jP,qP={kernelName:Gt,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};var KP,XP={kernelName:Ht,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return jP(s,o,u,l,c,i),a},setupFunc:function(e){jP=e.wasm.cwrap(Ht,null,["number","number","number","number","number","number"])}},YP=XL(jt),JP=JL(qt,!1);var ZP,QP={kernelName:Kt,backendName:"wasm",setupFunc:function(e){KP=e.wasm.cwrap(Kt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Zr.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return KP(c,h,p,d,f,a,g),m}};var eB,tB={kernelName:Pr,backendName:"wasm",setupFunc:function(e){ZP=e.wasm.cwrap(Pr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=n,m=nd.computeConv2DInfo(a.shape,s.shape,u,c,l,p),g=GL[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return ZP(y,R,D,M,b,w,k,v,I,N,S,C,F,T,_,E,$,A,x,g,L,f||0,z),O}};var nB,rB={kernelName:Br,backendName:"wasm",setupFunc:function(e){eB=e.wasm.cwrap(Br,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=n,m=nd.computeConv2DInfo(a.shape,s.shape,u,c,l,p,!0),g=GL[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return eB(y,R,D,M,b,w,k,v,I,N,S,C,F,T,_,E,$,A,x,g,L,f||0,z),O}};var aB,sB={kernelName:Yt,backendName:"wasm",setupFunc:function(e){nB=e.wasm.cwrap(Yt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=Si.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,h=c[c.length-1],p=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return nB(p,VL[r.dtype],d,i,h,o,f,m),l}};var iB,oB={kernelName:Xt,backendName:"wasm",setupFunc:function(e){aB=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=Zr.parseAxisParam(i,a.shape)[0],l=nd.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=mP({inputs:{x:a},attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]},backend:t}),h=Zr.sizeFromShape(s.shape),p=mP({inputs:{x:s},attrs:{shape:[l.batchSize,h/l.batchSize]},backend:t}),d=[l.batchSize,l.outerSize,h/l.batchSize,l.sliceSize],f=t.makeOutput(d,a.dtype);if(0===Zr.sizeFromShape(a.shape))return f;const m=c.shape.length-1,g=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(p.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=new Uint8Array(new Int32Array(Zr.computeStrides(c.shape)).buffer),v=new Uint8Array(new Int32Array(Zr.computeStrides(d)).buffer);return aB(g,VL[a.dtype],x,m,y,l.batchSize,v,b),t.disposeData(c.dataId),t.disposeData(p.dataId),f.shape=l.outputShape,f}},uB=JL(Jt,!1,"bool"),lB=JL(Zt,!1,"bool");var cB,hB={kernelName:sn,backendName:"wasm",setupFunc:function(e){iB=e.wasm.cwrap(sn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,t.dtype);if(0!==Zr.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;iB(a,n,e)}return s}},pB=JL(on,!1,"bool"),dB=JL(un,!1,"bool"),fB=XL(cn),mB=JL(pn,!1,"bool");var gB,yB={kernelName:bn,backendName:"wasm",setupFunc:function(e){cB=e.wasm.cwrap(bn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:p}=oP(i,a,t);if(p){u=l,o=t.dataIdMap.get(l.dataId).id}const d=u.shape.length;nd.assertAxesAreInnerMostDims("max",c,d);const[f,m]=nd.computeOutAndReduceShapes(u.shape,c),g=Zr.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Zr.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;cB(o,g,e)}if(p&&t.disposeData(l.dataId),s){const e=nd.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},bB=JL(xn,!1);var xB,vB={kernelName:vn,backendName:"wasm",setupFunc:function(e){gB=e.wasm.cwrap(vn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=nd.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,p=c.filterWidth,d=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,v=c.strideWidth,w=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return gB(s,a.shape[0],a.shape[1],a.shape[2],h,p,d,f,m,g,y,b,x,v,w,k,N),I}};var wB,kB={kernelName:Sn,backendName:"wasm",setupFunc:function(e){xB=e.wasm.cwrap(Sn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=oP(i,a,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=nd.getInnerMostAxes(f.length,l.shape.length))}nd.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=nd.computeOutAndReduceShapes(l.shape,f),y=Zr.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=xP({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==Zr.sizeFromShape(l.shape)){const e=t.dataIdMap.get(x.dataId).id;xB(u,y,e)}if(d&&t.disposeData(c.dataId),s){const e=nd.expandShapeToKeepDim(x.shape,p);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}};var IB,NB,SB,CB={kernelName:Cn,backendName:"wasm",setupFunc:function(e){wB=e.wasm.cwrap(Cn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=oP(i,a,t);if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const f=l.shape.length;nd.assertAxesAreInnerMostDims("min",h,f);const[m,g]=nd.computeOutAndReduceShapes(l.shape,h),y=Zr.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==Zr.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;wB(u,y,e)}if(d&&t.disposeData(c.dataId),s){const e=nd.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},TB=JL(Tn,!1);(NB=IB||(IB={}))[NB.reflect=0]="reflect",NB[NB.symmetric=1]="symmetric";var _B,EB={kernelName:_n,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(h).buffer);return SB(i,l,t.shape.length,VL[t.dtype],p,d,IB[a],u),o},setupFunc:function(e){SB=e.wasm.cwrap(_n,null,["number","array","number","number","array","array","number","number"])}},$B=JL(An,!0),AB=XL(Fn);function FB(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var RB,DB={kernelName:Dn,backendName:"wasm",setupFunc:function(e){_B=e.wasm.cwrap(Dn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=_B(l,c,s,a,i),{pSelectedIndices:p,selectedSize:d,pSelectedScores:f,pValidOutputs:m}=FB(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([d],"int32",p)}};var MB,OB={kernelName:Mn,backendName:"wasm",setupFunc:function(e){RB=e.wasm.cwrap(Mn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=RB(c,h,s,a,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=FB(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",d),t.makeOutput([],"int32",g)]}};var zB,LB={kernelName:On,backendName:"wasm",setupFunc:function(e){MB=e.wasm.cwrap(On,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=MB(c,h,s,a,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=FB(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",d),t.makeOutput([f],"float32",m)]}},PB=JL(Rn,!1,"bool");var BB={kernelName:Ln,backendName:"wasm",setupFunc:function(e){zB=e.wasm.cwrap(Ln,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return zB(c,s,i,o,l),u}};var WB={kernelName:zn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var VB,UB={kernelName:Pn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return GP({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Zr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Zr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=SP({inputs:t.map((e=>{const t=GP({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}};var GB,HB={kernelName:Bn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),d=new Uint8Array(new Int32Array(h).buffer);return VB(i,l,t.shape.length,VL[t.dtype],p,d,a,u),o},setupFunc:function(e){VB=e.wasm.cwrap(Bn,null,["number","array","number","number","array","array","number","number"])}},jB=JL(Vn,!1);var qB,KB={kernelName:Un,backendName:"wasm",setupFunc:function(e){GB=e.wasm.cwrap(Un,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return GB(s,i,u),o}};var XB,YB={kernelName:Gn,backendName:"wasm",setupFunc:function(e){qB=e.wasm.cwrap(Gn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=oP(i,a,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=nd.getInnerMostAxes(f.length,l.shape.length))}nd.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=nd.computeOutAndReduceShapes(l.shape,f),y=Zr.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==Zr.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;qB(u,y,VL[b.dtype],e)}if(d&&t.disposeData(c.dataId),s){const e=nd.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},JB={kernelName:Hn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Zr.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=Zr.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},ZB=JL(Dt,!0),QB=XL(Kn),eW=XL(er);var tW,nW={kernelName:Zn,backendName:"wasm",setupFunc:function(e){XB=e.wasm.cwrap(Zn,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,h,p,d]=a.shape,f=[c,u,l,d];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=xP({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===Zr.sizeFromShape(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return XB(y,c,h,p,d,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}};var rW,aW={kernelName:tr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Zr.parseAxisParam(s,a.shape);if(0===a.shape.length)return tP({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);tW(u,c,i.length,h,a.shape.length,l);const p=mP({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){tW=e.wasm.cwrap(tr,null,["number","array","number","array","number","number"])}};var sW,iW,oW,uW,lW={kernelName:zr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,p,d,f]=a.shape,[m,g]=nd.getImageCenter(o,p,d),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return rW(l,h,p,d,f,s,m,g,b,y.length,c),u},setupFunc:function(e){rW=e.wasm.cwrap(zr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},cW=XL(nr);function hW(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Ai.parseSliceParams(t,n,r),o=Ai.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=Zr.computeStrides(t.shape),h=a.dataIdMap.get(l.dataId);if(o){const e=Ai.computeFlatOffset(s,c);if("string"===t.dtype)h.stringBytes=u.slice(e,e+Zr.sizeFromShape(i));else{a.typedArrayFromHeap(l).set(u.subarray(e,e+Zr.sizeFromShape(i)))}return l}if("string"===t.dtype){const e=NP(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const p=a.typedArrayFromHeap(l),d=t.shape.length;if(2===d)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],p,s,i);else if(3===d)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],h=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<h;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],p,s,i);else if(4===d)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],p=l+i[1],d=c+i[2],f=s[3];for(let s=u;s<h;s++)for(let u=l;u<p;u++)for(let l=c;l<d;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],p,s,i);else{const e=NP(u,s,i,t.shape,t.dtype);p.set(e)}return l}var pW,dW;var fW,mW,gW;var yW;var bW=[YL,QL,eP,lP,hP,dP,fP,bP,wP,kP,IP,TP,EP,RP,DP,OP,LP,BP,WP,VP,UP,HP,qP,XP,YP,JP,KL,QP,tB,rB,sB,oB,uB,lB,rP,hB,pB,dB,fB,mB,yB,bB,vB,kB,CB,TB,EB,$B,AB,DB,OB,LB,PB,BB,WB,UB,HB,jB,KB,YB,JB,ZB,QB,eW,yP,nW,aW,lW,XL(rr),cW,{kernelName:ar,backendName:"wasm",setupFunc:function(e){sW=e.wasm.cwrap(ar,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Zr.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Ti.calculateShapes(s,a,i),d=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return sW(d,f,VL[s.dtype],u,l,c,m,p,g),o}},{kernelName:sr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,p=a.shape.length,d=0===h||h>1||1===p?1:Zr.sizeFromShape(a.shape.slice(1));return iW(i,o,u,d,c),l},setupFunc:function(e){iW=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){oW=e.wasm.cwrap(hr,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Zr.sizeFromShape(a.shape)||oW(r,s),a}},XL(ur),{kernelName:or,backendName:"wasm",kernelFunc:hW},{kernelName:yr,backendName:"wasm",setupFunc:function(e){uW=e.wasm.cwrap(yr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=Zr.sizeFromShape(n.shape)/o;return 0===Zr.sizeFromShape(s.shape)||uW(a,i,o,u),s}},{kernelName:gr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Zr.parseAxisParam(i,a.shape)[0],u=nd.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=hW({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},XL(dr),XL(kr),JL(wr,!0),{kernelName:Mr,backendName:"wasm",setupFunc:function(e){pW=e.wasm.cwrap(Mr,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return pW(i,a,u),o}},{kernelName:Ir,backendName:"wasm",setupFunc:function(e){dW=e.wasm.cwrap(Ir,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));const{beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,d=nd.slice_util.maskToAxes(c);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==p)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=a.shape.length-s.length,m=nd.slice_util.maskToAxes(h),g=a.shape.slice();m.forEach((e=>{s[e]=0,i[e]=1,g.splice(e,0,1)}));const y=mP({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=nd.slice_util.getNormalizedAxes(y.shape,d,f,s,i,o,u,l,c);s=b,i=x,o=v;const w=nd.slice_util.maskToAxes(p);w.forEach((e=>{i[e]=s[e]+1,o[e]=1}));const k=nd.slice_util.computeOutShape(s,i,o),I=k.filter(((e,t)=>-1===w.indexOf(t)));if(o.every((e=>1===e))){const e=hW({inputs:{x:y},attrs:{begin:s,size:k},backend:t});t.disposeData(y.dataId);const n=mP({inputs:{x:e},attrs:{shape:I},backend:t});return t.disposeData(e.dataId),n}const N=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){const e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(Zr.computeStrides(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),u=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(I).buffer),c=new Uint8Array(new Int32Array(Zr.computeStrides(I)).buffer),h=t.dataIdMap.get(N.dataId).id;dW(e,n,y.shape.length,r,a,u,l,c,I.length,h)}t.disposeData(y.dataId);const S=mP({inputs:{x:N},attrs:{shape:I},backend:t});return t.disposeData(N.dataId),S}},JL(Nr,!0),{kernelName:fr,backendName:"wasm",setupFunc:function(e){fW=e.wasm.cwrap(fr,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:p,inputWasTransposed:d}=oP(i,a,t);let f=h;if(d){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=nd.getInnerMostAxes(f.length,l.shape.length))}nd.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=nd.computeOutAndReduceShapes(l.shape,f),y=Zr.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==Zr.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;fW(u,y,e)}if(d&&t.disposeData(c.dataId),s){const e=nd.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},XL(Sr),XL(Cr),{kernelName:Tr,backendName:"wasm",setupFunc:function(e){mW=e.wasm.cwrap(Tr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(c.dataId).id;return mW(s,u,a.shape.length,l,o.length,VL[c.dtype],h),c}},{kernelName:_r,backendName:"wasm",setupFunc:function(e){gW=e.wasm.cwrap(_r,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),p=t.dataIdMap.get(h.dataId).id;return gW(i,o,r.shape.length,VL[r.dtype],a,s,c,p),[l,h]}},{kernelName:Er,backendName:"wasm",setupFunc:function(e){yW=e.wasm.cwrap(Er,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=new Uint8Array(new Int32Array(Zr.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,v=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1}return yW(v,w,s.shape[0]>1,c,f,m,d,p,h,y,a.shape.length-1,k,I,u,x),b}},iP,{kernelName:Fr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<c.length;e++)h[s]=e,c[e]=hW({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:Dr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of bW)jr(e);var xW=Oe();xW.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),xW.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(xW.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var vW=p(M()),wW=p(O()),kW=class extends L{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new z(this,yo())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Zr.now();e();return{kernelMs:Zr.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=Zr.sizeFromShape(n),o=i*Zr.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);if("string"===n)return a;return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+Zr.sizeFromShape(r)*Zr.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=Zr.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Zr.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function IW(e,t,n){if(null!=CW)return CW;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=_W&&null!=_W[r]?_W[r]:n+r}async function NW(){const[e,t]=await Promise.all([Oe().getAsync("WASM_HAS_SIMD_SUPPORT"),Oe().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?IW(e,t,null!=TW?TW:r):r+n},$W&&(a.instantiateWasm=(s=IW(e,t,null!=TW?TW:""),(e,t)=>(Zr.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{if(o)return;if(EW)return;EW=!0;r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==CW?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+vW.default.toString()],{type:"text/javascript"}),i=(0,vW.default)(a)):i=(0,wW.default)(a),i.then((e=>{o=!0,EW=!1;e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var SW=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],CW=null,TW=null,_W={},EW=!1,$W=!1;function AW(e,t=!1){if(mo(),EW)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");CW=e,$W=t}function FW(e,t=!1){if(EW)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)TW=e;else{_W=e;const t=SW.filter((e=>null==_W[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}$W=t}var RW="3.6.0";$o("wasm",(async()=>{const{wasm:e}=await NW();return new kW(e)}),2);var DW={};function MW(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{const s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}n(DW,{AnchorPosition:()=>vV,DrawBox:()=>_V,DrawBoxOptions:()=>TV,DrawFaceLandmarks:()=>yU,DrawFaceLandmarksOptions:()=>gU,DrawTextField:()=>CV,DrawTextFieldOptions:()=>SV,drawContour:()=>MW,drawDetections:()=>EV,drawFaceExpressions:()=>dU,drawFaceLandmarks:()=>bU});n({},{computeReshapedDimensions:()=>jW,getCenterPoint:()=>qW,isDimensions:()=>HW,isEven:()=>UW,isFloat:()=>VW,isTensor:()=>zW,isTensor1D:()=>LW,isTensor2D:()=>PW,isTensor3D:()=>BW,isTensor4D:()=>WW,isValidNumber:()=>XW,isValidProbablitiy:()=>YW,range:()=>KW,round:()=>GW});var OW=class{constructor(e,t){if(!XW(e)||!XW(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new OW(1/this.width,1/this.height)}};function zW(e,t){return e instanceof ma&&e.shape.length===t}function LW(e){return zW(e,1)}function PW(e){return zW(e,2)}function BW(e){return zW(e,3)}function WW(e){return zW(e,4)}function VW(e){return e%1!=0}function UW(e){return e%2==0}function GW(e,t=2){const n=10**t;return Math.floor(e*n)/n}function HW(e){return e&&e.width&&e.height}function jW({width:e,height:t},n){const r=n/Math.max(t,e);return new OW(Math.round(e*r),Math.round(t*r))}function qW(e){return e.reduce(((e,t)=>e.add(t)),new JW(0,0)).div(new JW(e.length,e.length))}function KW(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function XW(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function YW(e){return XW(e)&&e>=0&&e<=1}var JW=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new JW(this.x+e.x,this.y+e.y)}sub(e){return new JW(this.x-e.x,this.y-e.y)}mul(e){return new JW(this.x*e.x,this.y*e.y)}div(e){return new JW(this.x/e.x,this.y/e.y)}abs(){return new JW(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new JW(Math.floor(this.x),Math.floor(this.y))}},ZW=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(XW)}static assertIsValidBox(e,t,n=!1){if(!ZW.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(XW),a=[n.x,n.y,n.width,n.height].every(XW);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];ZW.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new JW(this.left,this.top)}get topRight(){return new JW(this.right,this.top)}get bottomLeft(){return new JW(this.left,this.bottom)}get bottomRight(){return new JW(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new ZW({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new ZW({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new ZW({x:e,y:t,width:n,height:r})}rescale(e){const t=HW(e)?e.width:e,n=HW(e)?e.height:e;return new ZW({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new ZW({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,l=s-o,c=Math.min(u,e-i),h=Math.min(l,t-o);return new ZW({x:i,y:o,width:c,height:h}).floor()}shift(e,t){const{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new ZW({x:a,y:s,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new ZW({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},QW=class extends ZW{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},eV=class{constructor(e,t,n,r,a){this._imageDims=new OW(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new ZW(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new ZW(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new eV(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},tV=class extends eV{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new tV(n,r,a)}};function nV(e,t,n=!0){const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function rV(e,t){return vo((()=>{const[n,r,a]=t,s=ol([...e.shape.slice(0,3),1],n,"float32"),i=ol([...e.shape.slice(0,3),1],r,"float32"),o=ol([...e.shape.slice(0,3),1],a,"float32"),u=pu([s,i,o],3);return Dl(e,u)}))}function aV(e){return 1/(1+Math.exp(-e))}var sV,iV=class extends ZW{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},oV=class{constructor(e,t,n=new JW(0,0)){const{width:r,height:a}=t;this._imgDims=new OW(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new JW(r,a)).add(n)))}get shift(){return new JW(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new JW(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new JW(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){const n=e instanceof tV?e.box.floor():new ZW(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=qW(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new iV(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new QW(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},uV=class extends oV{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(qW)}},lV=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${GW(this.distance)})`:""}`}},cV=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){const t=e.descriptors.map((e=>new Float32Array(e)));return new cV(e.label,t)}};function hV(e){return e.detection instanceof tV}function pV(e,t){return{...e,...{detection:t}}}function dV(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function fV(e){let t="";if(!e)try{e=a(383)}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function mV(){const e=a.g.Canvas||a.g.HTMLCanvasElement,t=a.g.Image||a.g.HTMLImageElement,n=a.g.fetch,r=fV();return{Canvas:e||class{},CanvasRenderingContext2D:a.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:a.g.ImageData||class{},Video:a.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},fetch:n,...r}}function gV(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function yV(){return"object"==typeof a.g&&"undefined"!=typeof process&&!!process.version}function bV(e){sV=e}function xV(){return gV()?bV(dV()):yV()?bV(mV()):null}var vV,wV,kV={getEnv:function(){if(!sV)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return sV},setEnv:bV,initialize:xV,createBrowserEnv:dV,createFileSystem:fV,createNodejsEnv:mV,monkeyPatch:function(e){if(sV||xV(),!sV)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=sV.Canvas,Image:n=sV.Image}=e;sV.Canvas=t,sV.Image=n,sV.createCanvasElement=e.createCanvasElement||(()=>new t),sV.createImageElement=e.createImageElement||(()=>new n),sV.ImageData=e.ImageData||sV.ImageData,sV.Video=e.Video||sV.Video,sV.fetch=e.fetch||sV.fetch,sV.readFile=e.readFile||sV.readFile},isBrowser:gV,isNodejs:yV};function IV(e){return kV.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function NV(e){const{Canvas:t,CanvasRenderingContext2D:n}=kV.getEnv();if(e instanceof n)return e;const r=IV(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}xV(),(wV=vV||(vV={})).TOP_LEFT="TOP_LEFT",wV.TOP_RIGHT="TOP_RIGHT",wV.BOTTOM_LEFT="BOTTOM_LEFT",wV.BOTTOM_RIGHT="BOTTOM_RIGHT";var SV=class{constructor(e={}){const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||vV.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},CV=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof CV?e.text:e,this.anchor=t,this.options=new SV(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r=n===vV.BOTTOM_RIGHT||n===vV.TOP_RIGHT,a=n===vV.BOTTOM_LEFT||n===vV.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=IV(e),n=NV(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach(((e,t)=>{const r=o+c.x,a=o+c.y+(t+1)*s;n.fillText(e,r,a)}))}},TV=class{constructor(e={}){const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;const s={anchorPosition:vV.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new SV({...s,...a})}},_V=class{constructor(e,t={}){this.box=new ZW(e),this.options=new TV(t)}draw(e){const t=NV(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new CV([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function EV(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof tV?t.score:hV(t)?t.detection.score:void 0,r=t instanceof tV?t.box:hV(t)?t.detection.box:new ZW(t),a=n?`${GW(n)}`:void 0;new _V(r,{label:a}).draw(e)}))}function $V(e){const{Image:t,Video:n}=kV.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function AV(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));const r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));const e=kV.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function FV(e){const{Image:t,Video:n}=kV.getEnv();return e instanceof t?new OW(e.naturalWidth,e.naturalHeight):e instanceof n?new OW(e.videoWidth,e.videoHeight):new OW(e.width,e.height)}function RV({width:e,height:t}){const{createCanvasElement:n}=kV.getEnv(),r=n();return r.width=e,r.height=t,r}function DV(e,t){const{ImageData:n}=kV.getEnv();if(!(e instanceof n||$V(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||FV(e),s=RV({width:r,height:a});return e instanceof n?NV(s).putImageData(e,0,0):NV(s).drawImage(e,0,0,r,a),s}function MV(e){const{Image:t,Canvas:n,Video:r}=kV.getEnv();return e instanceof t||e instanceof n||e instanceof r}var OV=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(BW(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(WW(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof kV.getEnv().Canvas?e:DV(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return KW(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return jW({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,vo((()=>{const n=KW(this.batchSize,0,1).map((n=>{const r=this.getInput(n);if(r instanceof ma){let n=WW(r)?r:rl(r);return n=function(e,t=!1){return vo((()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,ol(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter((e=>!!e)).map((e=>qs(e,"float32")));return pu(c,i)}))}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=Bp.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof kV.getEnv().Canvas)return bi.fromPixels(function(e,t,n=!1){const{Image:r,Canvas:a}=kV.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return RV({width:1,height:1});const s=FV(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=RV({width:t,height:t}),c=e instanceof a?e:DV(e),h=Math.abs(o-u)/2,p=n&&o<u?h:0,d=n&&u<o?h:0;return c.width>0&&c.height>0&&NV(l).drawImage(c,p,d,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return lh(n.map((e=>qs(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function zV(e){if(e instanceof OV)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(IV);return r.forEach(((e,r)=>{if(!MV(e)&&!BW(e)&&!WW(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(WW(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>{return MV(e)&&(t=e,new Promise(((e,n)=>{if(t instanceof kV.getEnv().Canvas||$V(t))return e(null);function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}t.addEventListener("load",a),t.addEventListener("error",r)})));var t}))),new OV(r,Array.isArray(e))}async function LV(e,t){const{Canvas:n}=kV.getEnv();let r=e;if(!(e instanceof n)){const t=await zV(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=t||kV.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(WW(e)?1:0),i=vo((()=>e.as3D(r,a,s).toInt()));return await bi.toPixels(i,n),i.dispose(),n}(a)}const a=NV(r);return t.map((e=>e instanceof tV?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{const s=RV({width:n,height:r});return n>0&&r>0&&NV(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function PV(e,t){if(!BW(e)&&!WW(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(WW(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return vo((()=>{const[n,r,a]=e.shape.slice(WW(e)?1:0);return t.map((e=>e instanceof tV?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((({x:t,y:s,width:i,height:o})=>Zc(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function BV(e,t){const{fetch:n}=kV.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function WV(e,t){const n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function VV(e,t){const{manifestUri:n,modelBaseUri:r}=WV(e,t),a=await async function(e){return(await BV(e)).json()}(n);return Ys.loadWeights(a,r)}function UV(e,t,n=!1){const{width:r,height:a}=n?FV(t):t;return e.width=r,e.height=a,{width:r,height:a}}var GV=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof ya))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof ya)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{const n=ns(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);const t=await VV(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);const{readFile:t}=kV.getEnv(),{manifestUri:n,modelBaseUri:r}=WV(e,this.getDefaultModelName()),a=Ys.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof ma))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function HV(e,t,n){return vo((()=>{let r=Hc(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Ro(r,t.bias),r}))}function jV(e,t,n=!1){return vo((()=>{const r=Dc(n?Ro($u(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):HV(e,t.conv0,[2,2])),a=HV(r,t.conv1,[1,1]),s=HV(Dc(Ro(r,a)),t.conv2,[1,1]);return Dc(Ro(r,Ro(a,s)))}))}function qV(e,t,n=!1,r=!0){return vo((()=>{const a=Dc(n?Ro($u(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):HV(e,t.conv0,r?[2,2]:[1,1])),s=HV(a,t.conv1,[1,1]),i=HV(Dc(Ro(a,s)),t.conv2,[1,1]),o=HV(Dc(Ro(a,Ro(s,i))),t.conv3,[1,1]);return Dc(Ro(a,Ro(s,Ro(i,o))))}))}function KV(e,t,n="same",r=!1){return vo((()=>{const a=Ro($u(e,t.filters,[1,1],n),t.bias);return r?Dc(a):a}))}function XV(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function YV(e,t){return(n,r,a,s)=>{const i=mh(e(n*r*a*a),[a,a,n,r]),o=dh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function JV(e,t){return(n,r,a)=>{const s=fh(e(n*r),[n,r]),i=dh(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var ZV=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function QV(e,t){return(n,r,a)=>{const s=mh(e(9*n),[3,3,n,1]),i=mh(e(n*r),[1,1,n,r]),o=dh(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new ZV(s,i,o)}}function eU(e){return t=>{const n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new ZV(n,r,a)}}function tU(e,t){return(n,r,a)=>{const s=e[n];if(!zW(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function nU(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function rU(e,t){const n=YV(e,t),r=QV(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:u,conv3:r(t,t,`${n}/conv3`)}}}}function aU(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function sU(e,t){const n=tU(e,t),r=aU(n),a=eU(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var iU=class extends GV{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return vo((()=>{let n=qV(rV(qs(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=qV(n,t.dense1),n=qV(n,t.dense2),n=qV(n,t.dense3),n=cu(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await zV(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=sU(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return XV(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=nU(e),{extractDenseBlock4Params:a}=rU(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function oU(e,t){return vo((()=>Ro(di(e,t.weights),t.bias)))}function uU(e){const t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var lU=class extends GV{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return vo((()=>{const n=e instanceof OV?this.faceFeatureExtractor.forwardInput(e):e;return oU(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=nU(e),i=JV(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=uU(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=tU(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return XV(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},cU=["neutral","happy","sad","angry","fearful","disgusted","surprised"],hU=class{constructor(e){if(7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);cU.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return cU.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function pU(e,t){return{...e,...{expressions:t}}}function dU(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{const a=t instanceof hU?t:t.expressions instanceof hU?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter((e=>e.probability>n)),i=hV(t)?t.detection.box.bottomLeft:r||new JW(0,0);new CV(s.map((e=>`${e.expression} (${GW(e.probability)})`)),i).draw(e)}))}function fU(e){return hV(e)&&e.landmarks instanceof oV&&e.unshiftedLandmarks instanceof oV&&e.alignedRect instanceof tV}function mU(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new tV(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var gU=class{constructor(e={}){const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},yU=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new gU(t)}draw(e){const t=NV(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof uV&&(t.strokeStyle=s,t.lineWidth=a,MW(t,this.faceLandmarks.getJawOutline()),MW(t,this.faceLandmarks.getLeftEyeBrow()),MW(t,this.faceLandmarks.getRightEyeBrow()),MW(t,this.faceLandmarks.getNose()),MW(t,this.faceLandmarks.getLeftEye(),!0),MW(t,this.faceLandmarks.getRightEye(),!0),MW(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;const e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function bU(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof oV?t:fU(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new yU(n).draw(e)}))}function xU(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=nU(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=YV(e,t),r=QV(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};KW(t,0,1).forEach((e=>{c[`main_block_${e}`]=u(128,`middle_flow/main_block_${e}`)}));const h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:h}}}function vU(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=tU(e,t),r=aU(n),a=eU(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};KW(t,0,1).forEach((e=>{u[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return XV(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}function wU(e,t,n){return Ro($u(e,t.filters,n,"same"),t.bias)}function kU(e,t,n=!0){let r=n?Dc(e):e;return r=HV(r,t.separable_conv0,[1,1]),r=HV(Dc(r),t.separable_conv1,[1,1]),r=Yl(r,[3,3],[2,2],"same"),r=Ro(r,wU(e,t.expansion_conv,[2,2])),r}var IU,NU,SU=class extends GV{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return vo((()=>{const n=rV(qs(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=Dc(wU(n,t.entry_flow.conv_in,[2,2]));return r=kU(r,t.entry_flow.reduction_block_0,!1),r=kU(r,t.entry_flow.reduction_block_1),KW(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=HV(Dc(e),t.separable_conv0,[1,1]);return n=HV(Dc(n),t.separable_conv1,[1,1]),n=HV(Dc(n),t.separable_conv2,[1,1]),n=Ro(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=kU(r,t.exit_flow.reduction_block),r=Dc(HV(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await zV(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return vU(e,this._numMainBlocks)}extractParams(e){return xU(e,this._numMainBlocks)}};(NU=IU||(IU={})).FEMALE="female",NU.MALE="male";var CU=class extends lU{postProcess(e,t,n){const r=n.map((({width:e,height:n})=>{const r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return vo((()=>{const n=(e,t)=>lh([ol([68],e,"float32"),ol([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(ol([a,136],t,"float32")).sub(lh(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(lh(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return vo((()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await zV(e))}async detectLandmarks(e){const t=await zV(e),n=vo((()=>kh(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter(((e,t)=>UW(t))),s=r.filter(((e,t)=>!UW(t)));return new uV(Array(68).fill(0).map(((e,t)=>new JW(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},TU=class extends CU{constructor(e=new iU){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var _U=class extends GV{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return vo((()=>{let n=jV(rV(qs(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=jV(n,t.dense1),n=jV(n,t.dense2),n=cu(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await zV(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=sU(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return XV(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=nU(e),{extractDenseBlock3Params:a}=rU(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function EU(e,t,n,r,a="same"){const{filters:s,bias:i}=t.conv;let o=$u(e,s,n,a);return o=Ro(o,i),o=function(e,t){return Ro(Oo(e,t.weights),t.biases)}(o,t.scale),r?Dc(o):o}function $U(e,t){return EU(e,t,[1,1],!1)}function AU(e,t){return EU(e,t,[2,2],!0,"valid")}function FU(e,t){function n(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(VW(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return vo((()=>mi(mh(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=dh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){return{conv:n(r,a,s,`${i}/conv`),scale:function(n,r){const a=dh(e(n)),s=dh(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function RU(e,t){const n=tU(e,t);function r(e){return{conv:{filters:n(`${e}/conv/filters`,4),bias:n(`${e}/conv/bias`,1)},scale:function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function DU(e,t){let n=function(e,t){return EU(e,t,[1,1],!0)}(e,t.conv1);return n=$U(n,t.conv2),n=Ro(n,e),n=Dc(n),n}function MU(e,t){let n=AU(e,t.conv1);n=$U(n,t.conv2);let r=cu(e,2,2,"valid");const a=tc(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=tc(e);n=pu([n,t],1);const r=[...n.shape];r[2]=1;const a=tc(r);n=pu([n,a],2)}return r=s?pu([r,a],3):r,n=Ro(r,n),n=Dc(n),n}var OU=class extends GV{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return vo((()=>{let n=AU(rV(qs(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Yl(n,3,2,"valid"),n=DU(n,t.conv32_1),n=DU(n,t.conv32_2),n=DU(n,t.conv32_3),n=MU(n,t.conv64_down),n=DU(n,t.conv64_1),n=DU(n,t.conv64_2),n=DU(n,t.conv64_3),n=MU(n,t.conv128_down),n=DU(n,t.conv128_1),n=DU(n,t.conv128_2),n=MU(n,t.conv256_down),n=DU(n,t.conv256_1),n=DU(n,t.conv256_2),n=MU(n,t.conv256_down_out);const r=n.mean([1,2]);return di(r,t.fc)}))}async forward(e){return this.forwardInput(await zV(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);const n=await zV(e),r=vo((()=>kh(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=RU(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),h=r("conv64_3"),p=r("conv128_down"),d=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!PW(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);const v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:p,conv128_1:d,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return XV(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=nU(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=FU(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),p=s(36864,64,3,"conv64_2"),d=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=vo((()=>mi(fh(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:h,conv64_2:p,conv64_3:d,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function zU(e,t){return{...e,...{descriptor:t}}}function LU(e,t){return{...e,...{age:t}}}function PU(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function BU(e,t){function n(n,r,a,s,i){const o=mh(e(n*r*a*a),[a,a,n,r]),u=dh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){return{depthwise_conv:function(n,r){const a=mh(e(9*n),[3,3,n,1]),s=dh(e(n)),i=dh(e(n)),o=dh(e(n)),u=dh(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,`${s}/depthwise_conv`),pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function WU(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=tU(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){const t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!BW(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return XV(e,t),{params:s,paramMappings:t}}function VU(e,t,n){return vo((()=>{let r=$u(e,t.filters,n,"same");return r=Ro(r,t.batch_norm_offset),Su(r,0,6)}))}function UU(e,t){return vo((()=>{let n,r=VU(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return vo((()=>{let r=Vu(e,t.filters,n,"same");return r=bu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),Su(r,0,6)}))}(r,e.depthwise_conv,s),r=VU(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function GU(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),p=(i-a)*(o-s),d=(c-u)*(h-l);if(p<=0||d<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(p+d-b)}function HU(e,t){const{sizes:n,centers:r}=function(e){const t=kh(mi(e,[1,0])),n=[Dl(t[2],t[0]),Dl(t[3],t[1])];return{sizes:n,centers:[Ro(t[0],Mo(n[0],2)),Ro(t[1],Mo(n[1],2))]}}(e),a=kh(mi(t,[1,0])),s=Mo(Oo(nl(Mo(a[2],5)),n[0]),2),i=Ro(Oo(Mo(a[0],10),n[0]),r[0]),o=Mo(Oo(nl(Mo(a[3],5)),n[1]),2),u=Ro(Oo(Mo(a[1],10),n[1]),r[1]);return mi(lh([Dl(i,s),Dl(u,o),Ro(i,s),Ro(u,o)]),[1,0])}function jU(e,t){return vo((()=>{const n=e.shape[0];return{boxPredictionEncoding:lu(KV(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:lu(KV(e,t.class_predictor),[n,-1,3])}}))}var qU=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},KU=class extends GV{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return vo((()=>{const n=qs(e.toBatchTensor(512,!1),"float32"),r=UU(Dl(Mo(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return vo((()=>{const r=VU(e,n.conv_0,[1,1]),a=VU(r,n.conv_1,[2,2]),s=VU(a,n.conv_2,[1,1]),i=VU(s,n.conv_3,[2,2]),o=VU(i,n.conv_4,[1,1]),u=VU(o,n.conv_5,[2,2]),l=VU(u,n.conv_6,[1,1]),c=VU(l,n.conv_7,[2,2]),h=jU(t,n.box_predictor_0),p=jU(e,n.box_predictor_1),d=jU(a,n.box_predictor_2),f=jU(i,n.box_predictor_3),m=jU(u,n.box_predictor_4),g=jU(c,n.box_predictor_5);return{boxPredictions:pu([h.boxPredictionEncoding,p.boxPredictionEncoding,d.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:pu([h.classPrediction,p.classPrediction,d.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return vo((()=>{const r=e.shape[0];let a=HU(lu(sl(n.extra_dim,[r,1,1]),[-1,4]),lu(e,[-1,4]));a=lu(a,[r,a.shape[0]/r,4]);const s=du(fu(t,[0,0,1],[-1,-1,-1]));let i=fu(s,[0,0,0],[-1,-1,1]);return i=lu(i,[r,i.shape[1]]),{boxes:kh(a),scores:kh(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await zV(e))}async locateFaces(e,t={}){const{maxResults:n,minConfidence:r}=new qU(t),a=await zV(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),u=[];return o.forEach((t=>{if(u.length>=i)return;const n=t.score;for(let n=u.length-1;n>=0;--n){const s=GU(e,t.boxIndex,u[n]);if(0!==s&&(t.score*=s<=r?1:0,t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,l,n,.5,r),h=a.getReshapedInputDimensions(0),p=a.inputSize,d=p/h.width,f=p/h.height,m=o.arraySync(),g=c.map((e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*d));return new tV(l[e],new iV(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return WU(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=nU(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=BU(n,t),i=a(),o=s(),u={extra_dim:xi(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}};var XU=[new JW(.738768,.874946),new JW(2.42204,2.65704),new JW(4.30971,7.04493),new JW(10.246,4.59428),new JW(12.6868,11.8741)],YU=[new JW(1.603231,2.094468),new JW(6.041143,7.080126),new JW(2.882459,3.518061),new JW(4.266906,5.178857),new JW(9.041765,10.66308)],JU=[117.001,114.697,97.404],ZU=e=>"number"==typeof e;function QU(e){return vo((()=>{const t=Oo(e,Uc(.10000000149011612));return Ro(Dc(Dl(e,t)),t)}))}function eG(e,t){return vo((()=>{let n=mc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=$u(n,t.conv.filters,[1,1],"valid"),n=Dl(n,t.bn.sub),n=Oo(n,t.bn.truediv),n=Ro(n,t.conv.bias),QU(n)}))}function tG(e,t){return vo((()=>{let n=mc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Hc(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Ro(n,t.bias),QU(n)}))}function nG(e,t){const n=YV(e,t);const r=QV(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){return{conv:n(r,a,3,`${s}/conv`),bn:function(n,r){const a=dh(e(n)),s=dh(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`)}},extractSeparableConvParams:r}}function rG(e,t){const n=tU(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(`${e}/conv`),bn:function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`)}},extractSeparableConvParams:eU(n)}}var aG=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},sG=class extends GV{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!ZU(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>ZU(e.x)&&ZU(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(ZU)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=eG(e,t.conv0);return n=Yl(n,[2,2],[2,2],"same"),n=eG(n,t.conv1),n=Yl(n,[2,2],[2,2],"same"),n=eG(n,t.conv2),n=Yl(n,[2,2],[2,2],"same"),n=eG(n,t.conv3),n=Yl(n,[2,2],[2,2],"same"),n=eG(n,t.conv4),n=Yl(n,[2,2],[2,2],"same"),n=eG(n,t.conv5),n=Yl(n,[2,2],[1,1],"same"),n=eG(n,t.conv6),n=eG(n,t.conv7),KV(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?QU(KV(e,t.conv0,"valid",!1)):tG(e,t.conv0);return n=Yl(n,[2,2],[2,2],"same"),n=tG(n,t.conv1),n=Yl(n,[2,2],[2,2],"same"),n=tG(n,t.conv2),n=Yl(n,[2,2],[2,2],"same"),n=tG(n,t.conv3),n=Yl(n,[2,2],[2,2],"same"),n=tG(n,t.conv4),n=Yl(n,[2,2],[2,2],"same"),n=tG(n,t.conv5),n=Yl(n,[2,2],[1,1],"same"),n=t.conv6?tG(n,t.conv6):n,n=t.conv7?tG(n,t.conv7):n,KV(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return vo((()=>{let r=qs(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?rV(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await zV(e),t)}async detect(e,t={}){const{inputSize:n,scoreThreshold:r}=new aG(t),a=await zV(e),s=await this.forwardInput(a,n),i=vo((()=>kh(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map((e=>e.box)),c=u.map((e=>e.score)),h=u.map((e=>e.classScore)),p=u.map((e=>this.config.classes[e.label]));return function(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex));const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++){const a=i[n],s=e[t],u=e[a];o.push(nV(s,u,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(l.map((e=>e.rescale(n))),c,this.config.iouThreshold,!0).map((e=>new eV(c[e],h[e],p[e],l[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=rG(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return XV(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||sG.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=nU(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=nG(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,h,p,d,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,h,"conv4"),conv5:l(h,p,"conv5"),conv6:d?l(p,d,"conv6"):void 0,conv7:f?l(d,f,"conv7"):void 0,conv8:o(f||d||p,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,h,p,d]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,h,"conv5"),conv6:u(h,p,"conv6"),conv7:u(p,d,"conv7"),conv8:o(d,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,h,p]=vo((()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?eh(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):Uc(0)]})),d=[],f=await h.array(),m=await c.array();for(let e=0;e<u;e++)for(let t=0;t<u;t++)for(let r=0;r<l;r++){const a=aV(f[e][t][r][0]);if(!n||a>n){const n=(t+aV(m[e][t][r][0]))/u*i,s=(e+aV(m[e][t][r][1]))/u*o,l=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/u*i,c=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/u*o,h=n-l/2,f=s-c/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(p,g):{classScore:1,label:0};d.push({box:new QW(h,f,h+l,f+c),score:a,classScore:a*y,label:b,...g})}}return c.dispose(),h.dispose(),p.dispose(),d}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},iG=sG;iG.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var oG=class extends iG{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:YU,meanRgb:JU}:{anchors:XU,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new tV(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var uG=class extends aG{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},lG=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function cG(e,t,n,r,a=(({alignedRect:e})=>e)){const s=e.map((e=>fU(e)?a(e):e.detection)),i=r||(t instanceof ma?await PV(t,s):await LV(t,s)),o=await n(i);return i.forEach((e=>e instanceof ma&&e.dispose())),o}var hG=[new JW(1.603231,2.094468),new JW(6.041143,7.080126),new JW(2.882459,3.518061),new JW(4.266906,5.178857),new JW(9.041765,10.66308)],pG=[117.001,114.697,97.404],dG=class extends iG{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:hG,meanRgb:pG,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new tV(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},fG={ssdMobilenetv1:new KU,tinyFaceDetector:new dG,tinyYolov2:new oG,faceLandmark68Net:new TU,faceLandmark68TinyNet:new class extends CU{constructor(e=new _U){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new OU,faceExpressionNet:new class extends lU{constructor(e=new iU){super("FaceExpressionNet",e)}forwardInput(e){return vo((()=>eh(this.runNet(e))))}async forward(e){return this.forwardInput(await zV(e))}async predictExpressions(e){const t=await zV(e),n=await this.forwardInput(t),r=await Promise.all(kh(n).map((async e=>{const t=e.dataSync();return e.dispose(),t})));n.dispose();const a=r.map((e=>new hU(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends GV{constructor(e=new SU(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return vo((()=>{const n=e instanceof OV?this.faceFeatureExtractor.forwardInput(e):e,r=cu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:oU(r,t.fc.age).as1D(),gender:oU(r,t.fc.gender)}}))}forwardInput(e){return vo((()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:eh(n)}}))}async forward(e){return this.forwardInput(await zV(e))}async predictAgeAndGender(e){const t=await zV(e),n=await this.forwardInput(t),r=kh(n.age),a=kh(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{const n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?IU.MALE:IU.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=nU(e),a=JV(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=uU(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=tU(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return XV(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},mG=class extends lG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},gG=class extends mG{async run(){const e=await this.parentTask,t=await cG(e,this.input,(async e=>Promise.all(e.map((e=>fG.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>pU(e,t[n])))}withAgeAndGender(){return new xG(this,this.input)}},yG=class extends gG{withAgeAndGender(){return new vG(this,this.input)}withFaceDescriptors(){return new kG(this,this.input)}},bG=class extends lG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},xG=class extends bG{async run(){const e=await this.parentTask,t=await cG(e,this.input,(async e=>Promise.all(e.map((e=>fG.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return LU(PU(e,a,s),r)}))}withFaceExpressions(){return new gG(this,this.input)}},vG=class extends xG{withFaceExpressions(){return new yG(this,this.input)}withFaceDescriptors(){return new kG(this,this.input)}},wG=class extends lG{constructor(e,t){super(),this.parentTask=e,this.input=t}},kG=class extends wG{async run(){const e=await this.parentTask;return(await cG(e,this.input,(e=>Promise.all(e.map((e=>fG.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>zU(e[n],t)))}withFaceExpressions(){return new yG(this,this.input)}withAgeAndGender(){return new vG(this,this.input)}},IG=class extends lG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?fG.faceLandmark68TinyNet:fG.faceLandmark68Net}},NG=class extends IG{async run(){const e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof ma?await PV(this.input,t):await LV(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof ma&&e.dispose())),e.map(((e,t)=>mU(e,r[t])))}withFaceExpressions(){return new yG(this,this.input)}withAgeAndGender(){return new vG(this,this.input)}withFaceDescriptors(){return new kG(this,this.input)}},SG=class extends lG{constructor(e,t=new qU){super(),this.input=e,this.options=t}},CG=class extends SG{async run(){const{input:e,options:t}=this;let n;if(t instanceof uG)n=fG.tinyFaceDetector.locateFaces(e,t);else if(t instanceof qU)n=fG.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof aG))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=fG.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>pV({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new NG(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new gG(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new xG(this.runAndExtendWithFaceDetections(),this.input)}};function TG(e,t=new qU){return new CG(e,t)}var _G=class{constructor(e,t=.6){this._distanceThreshold=t;const n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1;const a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof cV)return e;if(e instanceof Float32Array)return new cV(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new cV(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>function(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");const n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new lV(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){const t=this.matchDescriptor(e);return t.distance<this.distanceThreshold?t:new lV("unknown",t.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){const t=e.labeledDescriptors.map((e=>cV.fromJSON(e)));return new _G(t,e.distanceThreshold)}};function EG(e,t){const{width:n,height:r}=new OW(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>EG(e,{width:n,height:r})));if(fU(e)){const t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return mU(pV(e,t),a)}return hV(e)?pV(e,e.detection.forSize(n,r)):e instanceof oV||e instanceof tV?e.forSize(n,r):e}"undefined"!=typeof navigator&&navigator.userAgent;function $G(e){switch(e.toLowerCase().trim()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function AG(e,t,n,r){const a=e.location.search,s=new URLSearchParams(a);for(const[e,t]of s)"number"==typeof n[e]?n[e]=parseInt(t,10):"boolean"==typeof n[e]?n[e]=$G(t):n[e]=t;"serviceWorker"in navigator&&(navigator.serviceWorker.register("./sw.js",{scope:"./"}).then((function(e){t.querySelector("footer").classList.remove("hidden")})).catch((function(e){})),function(e,t,n){const r=t.getElementById("butInstall");if(!r)return;let a;r.addEventListener("click",(e=>{r.classList.add("hidden"),a.prompt(),a.userChoice.then((e=>{}))})),e.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),a=e,n&&n.showInstall&&r.classList.remove("hidden")}))}(e,t,n)),r(e,t,n)}!function(e,t,n,r){!function(e,t,n,r,a){"loading"!==n.readyState?e(t,n,r,a):n.addEventListener("DOMContentLoaded",(function(s){e(t,n,r,a)}))}(AG,e,t,n,r)}(window,document,{modes:["diagnosis","ira","planeta","kotony","danila","hruj","cat","max","meshok","yandexlavka","membrana","default"],mode:"yandexlavka",sound:!1},(function(e,t,n){const r=t.getElementById("imageUpload"),s=t.getElementById("video"),i=t.querySelector(".video_container"),o=t.querySelector(".image_container"),u=t.querySelector(".start_video"),l=t.querySelector(".main_header"),c=t.querySelector("footer"),h=t.querySelector(".processing");let p=null,d=function(){const e={unknown:"Хер с горы",petr:"Петруччо",serg:"Серж",sava:"Чемонин",lenya:"Лёня",chern:"Не лох",boys:"ЧернRк",glider:"Шурик"};return{convert:function(t,n){const r=e[t];return r?n&&"female"===n.gender&&"unknown"===t?"Незнакомка":r:t}}}();if(n.modes.includes(n.mode)&&"default"!==n.mode){let e=null;"diagnosis"===n.mode||"ira"===n.mode?e=a.e(967).then(a.bind(a,967)):"planeta"===n.mode?e=a.e(590).then(a.bind(a,590)):"max"===n.mode?e=a.e(352).then(a.bind(a,352)):"cat"===n.mode?e=a.e(833).then(a.bind(a,833)):"meshok"===n.mode?e=a.e(387).then(a.bind(a,387)):"yandexlavka"===n.mode?e=a.e(483).then(a.bind(a,483)):"membrana"===n.mode&&(e=a.e(328).then(a.bind(a,328))),e&&e.then((e=>{l.innerText=e.default.header,d=e.default.nameConvertor}))}let f="default";async function m(){i.classList.remove("hidden"),c.classList.add("hidden"),p&&clearInterval(p);const e={video:!0};try{navigator.mediaDevices.getUserMedia(e).then((function(e){s.srcObject=e})).catch((function(e){}))}catch(e){}}n.modes.includes(n.mode)&&(f=n.mode),Promise.all([async function(e){try{return(await fetch("/models/"+e+".json")).json()}catch(e){return(await fetch("/models/default.json")).json()}}(f),fG.faceRecognitionNet.loadFromUri("/models"),fG.faceLandmark68Net.loadFromUri("/models"),fG.ageGenderNet.loadFromUri("/models"),fG.ssdMobilenetv1.loadFromUri("/models")]).then((async function(e){const t=_G.fromJSON(e[0]);let n=null,a=null,l=null;function f(e,n){e.map((e=>t.findBestMatch(e.descriptor))).forEach(((t,r)=>{if(e.length>7&&"unknown"===t.label)return;const a=e[r],s=d.convert(t.label,a);if("unknown"!==s){new DW.DrawBox(a.detection.box,{label:s}).draw(n)}}))}r.addEventListener("click",(()=>{i.classList.remove("hidden"),c.classList.add("hidden")})),r.addEventListener("change",(async()=>{h.classList.remove("hidden"),n&&n.remove(),a&&a.remove(),n=await AV(r.files[0]),o.append(n),a=DV(n),o.append(a);const e={width:n.width,height:n.height};UV(a,e);const t=EG(await TG(n).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),e);h.classList.add("hidden"),requestAnimationFrame((()=>{f(t,a)}))})),u.addEventListener("click",m),s.addEventListener("playing",(()=>{l&&l.remove();const e=DV(s);i.append(e),l=e;const t={width:s.getBoundingClientRect().width,height:s.getBoundingClientRect().height};UV(e,t),p&&clearInterval(p),p=setInterval((async()=>{const n=EG(await TG(s).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),t);e.getContext("2d").clearRect(0,0,e.width,e.height),f(n,e)}),300)}))}))}))})()})();