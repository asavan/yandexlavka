(()=>{var e,t,n={741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return n[e](s,s.exports,a),s.exports}a.m=n,a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+"."+{327:"47b5224a8e56e4e23356",352:"91c1808e1c8d0a1047b3",590:"ad476ae9046bad33d724",753:"cf426e7dc61916bfa2bb",802:"1f9d93113fbdf825a2cc",833:"7c17ce4206f8fee5f98e",967:"e80f1f83e01402c093db"}[e]+".min.js",a.miniCssF=e=>{},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="nedanila:",a.l=(n,r,s,i)=>{if(e[n])e[n].push(r);else{var o,l;if(void 0!==s)for(var u=document.getElementsByTagName("script"),h=0;h<u.length;h++){var p=u[h];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==t+s){o=p;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=n),e[n]=[r];var d=(t,r)=>{o.onerror=o.onload=null,clearTimeout(c);var a=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),t)return t(r)},c=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),l&&document.head.appendChild(o)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=s);var i=a.p+a.u(t),o=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,s,[i,o,l]=n,u=0;if(i.some((t=>0!==e[t]))){for(r in o)a.o(o,r)&&(a.m[r]=o[r]);if(l)l(a)}for(t&&t(n);u<i.length;u++)s=i[u],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0},n=self.webpackChunknedanila=self.webpackChunknedanila||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e="/index.js",t=Object.defineProperty,n=a(741),r=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})};r({},{Abs:()=>qe,Acos:()=>Ke,Acosh:()=>Xe,AdadeltaOptimizer:()=>Hc,AdagradOptimizer:()=>jc,AdamOptimizer:()=>qc,AdamaxOptimizer:()=>Kc,Add:()=>Ye,AddN:()=>Ze,All:()=>Je,Any:()=>Qe,ArgMax:()=>et,ArgMin:()=>tt,Asin:()=>nt,Asinh:()=>rt,Atan:()=>at,Atan2:()=>it,Atanh:()=>st,AvgPool:()=>ot,AvgPool3D:()=>ut,AvgPool3DGrad:()=>ht,AvgPoolGrad:()=>lt,BackendWasm:()=>nj,BatchMatMul:()=>pt,BatchToSpaceND:()=>dt,Bincount:()=>ct,BroadcastArgs:()=>mt,BroadcastTo:()=>ft,Callback:()=>JS,CallbackList:()=>Yx,Cast:()=>gt,Ceil:()=>yt,ClipByValue:()=>bt,Complex:()=>xt,ComplexAbs:()=>vt,Concat:()=>wt,Conv2D:()=>kt,Conv2DBackpropFilter:()=>It,Conv2DBackpropInput:()=>St,Conv3D:()=>Nt,Conv3DBackpropFilterV2:()=>Tt,Conv3DBackpropInputV2:()=>_t,Cos:()=>Ct,Cosh:()=>Et,CropAndResize:()=>Ft,Cumprod:()=>$t,Cumsum:()=>At,CustomCallback:()=>Qx,DataStorage:()=>V,DenseBincount:()=>Rt,DepthToSpace:()=>Dt,DepthwiseConv2dNative:()=>Mt,DepthwiseConv2dNativeBackpropFilter:()=>Ot,DepthwiseConv2dNativeBackpropInput:()=>Lt,Diag:()=>zt,Dilation2D:()=>Pt,Dilation2DBackpropFilter:()=>Wt,Dilation2DBackpropInput:()=>Bt,ENV:()=>Ge,EarlyStopping:()=>tN,Einsum:()=>Ut,Elu:()=>Gt,EluGrad:()=>Ht,Environment:()=>Be,Equal:()=>qt,Erf:()=>jt,Exp:()=>Kt,ExpandDims:()=>Xt,Expm1:()=>Yt,FFT:()=>Zt,Fill:()=>Jt,FlipLeftRight:()=>Qt,Floor:()=>en,FloorDiv:()=>tn,FromPixels:()=>Jr,FusedBatchNorm:()=>nn,FusedConv2D:()=>ta,FusedDepthwiseConv2D:()=>na,GPGPUContext:()=>cO,GatherNd:()=>an,GatherV2:()=>rn,GraphModel:()=>OT,Greater:()=>sn,GreaterEqual:()=>on,History:()=>Jx,IFFT:()=>un,Identity:()=>ln,Imag:()=>hn,InputSpec:()=>Jb,IsFinite:()=>pn,IsInf:()=>dn,IsNan:()=>cn,KernelBackend:()=>U,LRN:()=>Nn,LRNGrad:()=>Tn,LayerVariable:()=>Xb,LayersModel:()=>tw,LeakyRelu:()=>fn,Less:()=>mn,LessEqual:()=>gn,LinSpace:()=>yn,Log:()=>bn,Log1p:()=>xn,LogSoftmax:()=>In,LogicalAnd:()=>vn,LogicalNot:()=>wn,LogicalOr:()=>kn,LowerBound:()=>Sn,MathBackendWebGL:()=>gL,Max:()=>_n,MaxPool:()=>En,MaxPool3D:()=>An,MaxPool3DGrad:()=>Fn,MaxPoolGrad:()=>$n,MaxPoolWithArgmax:()=>Rn,Maximum:()=>Cn,Mean:()=>Dn,Min:()=>Mn,Minimum:()=>On,MirrorPad:()=>Ln,Mod:()=>zn,MomentumOptimizer:()=>Yc,Multinomial:()=>Pn,Multiply:()=>Bn,Neg:()=>Wn,NonMaxSuppressionV3:()=>Un,NonMaxSuppressionV4:()=>Gn,NonMaxSuppressionV5:()=>Hn,NotEqual:()=>Vn,OP_SCOPE_SUFFIX:()=>Cs,OneHot:()=>qn,OnesLike:()=>jn,Optimizer:()=>Gc,OptimizerConstructors:()=>Jc,Pack:()=>Kn,PadV2:()=>Xn,Pool:()=>Yn,Pow:()=>Zn,Prelu:()=>Jn,Prod:()=>Qn,RMSPropOptimizer:()=>Zc,RNN:()=>lk,Range:()=>er,Rank:()=>Ya,Real:()=>tr,RealDiv:()=>Vt,Reciprocal:()=>nr,Reduction:()=>xc,Relu:()=>rr,Relu6:()=>ur,Reshape:()=>ar,ResizeBilinear:()=>or,ResizeBilinearGrad:()=>lr,ResizeNearestNeighbor:()=>sr,ResizeNearestNeighborGrad:()=>ir,Reverse:()=>hr,RotateWithOffset:()=>Qr,Round:()=>pr,Rsqrt:()=>dr,SGDOptimizer:()=>Xc,ScatterNd:()=>cr,SearchSorted:()=>fr,Select:()=>mr,Selu:()=>gr,Sequential:()=>sw,Sigmoid:()=>wr,Sign:()=>vr,Sin:()=>br,Sinh:()=>xr,Slice:()=>yr,Softmax:()=>_r,Softplus:()=>kr,SpaceToBatchND:()=>Nr,SparseFillEmptyRows:()=>Cr,SparseReshape:()=>Er,SparseSegmentMean:()=>$r,SparseSegmentSum:()=>Ar,SparseToDense:()=>Fr,SplitV:()=>Tr,Sqrt:()=>Ir,Square:()=>Dr,SquaredDifference:()=>Rr,Step:()=>Zr,StridedSlice:()=>Mr,StringNGrams:()=>Or,StringSplit:()=>Lr,StringToHashBucketFast:()=>zr,Sub:()=>Pr,Sum:()=>Sr,SymbolicTensor:()=>Qb,Tan:()=>Br,Tanh:()=>Wr,Tensor:()=>qa,TensorBuffer:()=>Ga,Tile:()=>Vr,TopK:()=>Ur,Transform:()=>Gr,Transpose:()=>Hr,Unique:()=>jr,Unpack:()=>qr,UnsortedSegmentSum:()=>Kr,UpperBound:()=>Xr,Variable:()=>Xa,ZerosLike:()=>Yr,_FusedMatMul:()=>ea,abs:()=>Cl,acos:()=>El,acosh:()=>$l,add:()=>Sl,addN:()=>Al,all:()=>Fl,any:()=>Rl,argMax:()=>Dl,argMin:()=>Ml,asin:()=>Ol,asinh:()=>Ll,atan:()=>zl,atan2:()=>Pl,atanh:()=>Bl,avgPool:()=>nu,avgPool3d:()=>ru,backend:()=>bo,backend_util:()=>nf,basicLSTMCell:()=>lu,batchNorm:()=>pu,batchNorm2d:()=>du,batchNorm3d:()=>cu,batchNorm4d:()=>fu,batchToSpaceND:()=>uu,bincount:()=>mu,booleanMaskAsync:()=>kd,broadcastArgs:()=>gu,broadcastTo:()=>yu,broadcast_util:()=>No,browser:()=>$o,buffer:()=>Ni,callbacks:()=>aN,cast:()=>Ti,ceil:()=>bu,clipByValue:()=>xu,clone:()=>_i,complex:()=>$s,concat:()=>au,concat1d:()=>vu,concat2d:()=>wu,concat3d:()=>ku,concat4d:()=>Iu,constraints:()=>fx,conv1d:()=>Nu,conv2d:()=>Su,conv2dTranspose:()=>_u,conv3d:()=>Cu,conv3dTranspose:()=>$u,copyRegisteredKernels:()=>fa,cos:()=>Au,cosh:()=>Fu,cosineWindow:()=>Ed,cumprod:()=>Ru,cumsum:()=>Du,customGrad:()=>Lh,data:()=>BT,denseBincount:()=>Mu,deprecationWarn:()=>to,depthToSpace:()=>Ou,depthwiseConv2d:()=>Lu,deregisterOp:()=>lN,device_util:()=>bs,diag:()=>zu,dilation2d:()=>Pu,disableDeprecationWarnings:()=>eo,dispose:()=>oo,disposeVariables:()=>no,div:()=>Tl,divNoNan:()=>Uu,dot:()=>Gu,dropout:()=>_d,einsum:()=>Hu,elu:()=>ju,enableDebugMode:()=>Qi,enableProdMode:()=>Ji,enclosingPowerOfTwo:()=>Cd,engine:()=>ro,env:()=>Ve,equal:()=>Bu,erf:()=>qu,euclideanNorm:()=>ph,exp:()=>dh,expandDims:()=>ch,expm1:()=>fh,eye:()=>gh,fft:()=>Zp,fill:()=>yh,findBackend:()=>mo,findBackendFactory:()=>go,floor:()=>bh,floorDiv:()=>Nl,forceHalfFloat:()=>bL,fused:()=>Ad,gather:()=>xh,gatherND:()=>Td,gather_util:()=>Lo,getBackend:()=>co,getGradient:()=>la,getKernel:()=>oa,getKernelsForBackend:()=>ua,getThreadsCount:()=>gj,gpgpu_util:()=>GM,grad:()=>Fh,grads:()=>Rh,greater:()=>vh,greaterEqual:()=>wh,ifft:()=>Jp,imag:()=>vo,image:()=>Pc,inTopKAsync:()=>$d,initializers:()=>Ex,input:()=>uw,io:()=>Ei,irfft:()=>Qp,isFinite:()=>kh,isInf:()=>Ih,isNaN:()=>Sh,keep:()=>lo,kernel_impls:()=>rm,layers:()=>jx,leakyRelu:()=>Nh,less:()=>Th,lessEqual:()=>_h,linalg:()=>Bc,linspace:()=>Ch,loadGraphModel:()=>LT,loadGraphModelSync:()=>zT,loadLayersModel:()=>lw,localResponseNormalization:()=>Eh,log:()=>$h,log1p:()=>Ah,logSigmoid:()=>Bh,logSoftmax:()=>Vh,logSumExp:()=>Uh,logicalAnd:()=>Gh,logicalNot:()=>Hh,logicalOr:()=>jh,logicalXor:()=>qh,losses:()=>Wc,lowerBound:()=>Yh,matMul:()=>Yi,math:()=>Xi,max:()=>nh,maxPool:()=>Zh,maxPool3d:()=>Jh,maxPoolWithArgmax:()=>Qh,maximum:()=>ep,mean:()=>tp,memory:()=>ao,meshgrid:()=>ap,metrics:()=>AS,min:()=>rh,minimum:()=>sp,mirrorPad:()=>ip,mod:()=>op,model:()=>iw,models:()=>qS,moments:()=>lp,movingAverage:()=>Id,mul:()=>_l,multiRNNCell:()=>up,multinomial:()=>hp,neg:()=>wo,nextFrame:()=>tf,norm:()=>hh,notEqual:()=>pp,oneHot:()=>Zi,ones:()=>rp,onesLike:()=>dp,op:()=>Es,outerProduct:()=>cp,pad:()=>fp,pad1d:()=>mp,pad2d:()=>gp,pad3d:()=>yp,pad4d:()=>bp,pool:()=>vp,pow:()=>ah,prelu:()=>wp,print:()=>Ci,prod:()=>kp,profile:()=>so,rand:()=>Ip,randomGamma:()=>Tp,randomNormal:()=>_p,randomUniform:()=>Cp,range:()=>Ep,ready:()=>po,real:()=>ko,reciprocal:()=>$p,registerBackend:()=>yo,registerCallbackConstructor:()=>hw,registerGradient:()=>pa,registerKernel:()=>ha,registerOp:()=>iN,regularizers:()=>KS,relu:()=>Ap,relu6:()=>Fp,removeBackend:()=>fo,reshape:()=>tu,reverse:()=>Rp,reverse1d:()=>Dp,reverse2d:()=>Mp,reverse3d:()=>Op,reverse4d:()=>Lp,rfft:()=>td,round:()=>zp,rsqrt:()=>Pp,scalar:()=>sh,scatterND:()=>Sd,scatter_util:()=>Po,searchSorted:()=>Xh,selu:()=>Bp,separableConv2d:()=>Wp,sequential:()=>ow,serialization:()=>ol,setBackend:()=>ho,setPlatform:()=>xo,setThreadsCount:()=>mj,setWasmPath:()=>pj,setWasmPaths:()=>dj,setWebGLContext:()=>yD,setdiff1dAsync:()=>Vp,sigmoid:()=>su,sign:()=>Up,signal:()=>zc,sin:()=>Gp,sinh:()=>Hp,slice:()=>iu,slice1d:()=>jp,slice2d:()=>qp,slice3d:()=>Kp,slice4d:()=>Xp,slice_util:()=>Uo,softmax:()=>Yp,softplus:()=>Ph,spaceToBatchND:()=>xp,sparse:()=>Vc,sparseToDense:()=>Nd,spectral:()=>Lc,split:()=>ed,sqrt:()=>ih,square:()=>oh,squaredDifference:()=>nd,squeeze:()=>rd,stack:()=>ad,step:()=>sd,stridedSlice:()=>id,string:()=>Uc,sub:()=>Wh,sum:()=>lh,sumOutType:()=>ss,tan:()=>od,tanh:()=>ou,tensor:()=>Fs,tensor1d:()=>ld,tensor2d:()=>ud,tensor3d:()=>Ao,tensor4d:()=>hd,tensor5d:()=>pd,tensor6d:()=>dd,tensor_util:()=>ns,test_util:()=>pl,tidy:()=>io,tile:()=>mh,time:()=>uo,topk:()=>cd,train:()=>Qc,transpose:()=>Io,truncatedNormal:()=>fd,unique:()=>md,unregisterGradient:()=>ca,unregisterKernel:()=>da,unsortedSegmentSum:()=>gd,unstack:()=>yd,upcastType:()=>as,upperBound:()=>bd,util:()=>ga,valueAndGrad:()=>Dh,valueAndGrads:()=>Mh,variable:()=>xd,variableGrads:()=>Oh,version:()=>bj,version_converter:()=>PT,version_core:()=>Il,version_layers:()=>Mv,version_wasm:()=>yj,version_webgl:()=>yL,webgl:()=>xL,webgl_util:()=>pD,where:()=>Wu,whereAsync:()=>wd,zeros:()=>np,zerosLike:()=>Vu});var s=Object.create,i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,l=Object.getOwnPropertyNames,u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,p=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),d=(e,t)=>{for(var n in t)i(e,n,{get:t[n],enumerable:!0})},c=(e,t,n)=>(n=null!=e?s(u(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of l(t))!h.call(e,a)&&a!==n&&i(e,a,{get:()=>t[a],enumerable:!(r=o(t,a))||r.enumerable});return e})(!t&&e&&e.__esModule?n:i(n,"default",{value:e,enumerable:!0}),e)),f=p(((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var h=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var a=l(h(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(h(n,o));s=s.mul(d).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=p,r.fromValue=d;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var I=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(h(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,h=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=r+l)>>>16,h+=(p+=n+o)>>>16,h+=t+i,u((c&=65535)<<16|(f&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,h=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*p)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*p)>>>16,m&=65535,f+=(m+=i*h)>>>16,f+=t*c+r*p+s*h+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:h(2,i-48),p=l(t),c=p.mul(e);c.isNegative()||c.gt(r);)c=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=x),s=s.add(p),r=r.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),m=p((()=>{})),g=p((()=>{})),y=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),b=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),x=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),v=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),w=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),k=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I=p((()=>{})),S=p(((e,t)=>{!function(e,n){var r,s=this,i=256,o="random",l=n.pow(i,6),u=n.pow(2,52),h=2*u,p=255;function d(t,a,p){var d=[],b=g(m((a=1==a?{entropy:!0}:a||{}).entropy?[t,y(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),y(t)}catch(t){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,y(e)]}}():t,3),d),x=new c(d),v=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,g(y(x.S),e),(a.pass||p||function(e,t,r,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),r?(n[o]=e,t):e})(v,b,"global"in a?a.global:this==n,a.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*i+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(n["seed"+o]=d,g(n.random(),e),"object"==typeof t&&t.exports){t.exports=d;try{r=I()}catch(e){}}else"function"==typeof define&&a.amdO&&define((function(){return d}))}([],Math)})),N=p(((e,t)=>{var n=y(),r=b(),a=x(),s=v(),i=w(),o=k(),l=S();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),T=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),C=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),E=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),$=p(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),A=p(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),F=p(((e,t)=>{!function(e,n,r){var s,i=256,o="random",l=r.pow(i,6),u=r.pow(2,52),h=2*u,p=255;function d(t,a,p){var d=[],b=g(m((a=1==a?{entropy:!0}:a||{}).entropy?[t,y(n)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var r=e.navigator,a=r&&r.plugins;return[+new Date,e,a,e.screen,y(n)]}}():t,3),d),x=new c(d),v=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,g(y(x.S),n),(a.pass||p||function(e,t,n,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),n?(r[o]=e,t):e})(v,b,"global"in a?a.global:this==r,a.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*i+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(r.random(),n),"object"==typeof t&&t.exports){t.exports=d;try{s=I()}catch(e){}}else"function"==typeof define&&a.amdO?define((function(){return d})):r["seed"+o]=d}("undefined"!=typeof self?self:e,[],Math)})),R=p(((e,t)=>{var n=T(),r=_(),a=C(),s=E(),i=$(),o=A(),l=F();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),D=p((()=>{})),M=p((()=>{})),O=p((()=>{})),L=p((()=>{})),z=p((()=>{})),P=p((()=>{})),B=p(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){function t(){return R.buffer!=H&&te(R.buffer),j}function n(){return R.buffer!=H&&te(R.buffer),q}function s(){return R.buffer!=H&&te(R.buffer),K}function i(){return R.buffer!=H&&te(R.buffer),X}var o,l,u,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){o=e,l=t})),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,d,c,f,m,g,y=Object.assign({},h),b=[],x=(e,t)=>{throw t},v="object"==typeof window,w="function"==typeof importScripts,k="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,I=h.ENVIRONMENT_IS_PTHREAD||!1,S="";function N(e){return h.locateFile?h.locateFile(e,S):S+e}if(k){let e;S=w?O().dirname(S)+"/":"//",g=()=>{m||(f=M(),m=O())},p=function(e,t){return g(),e=m.normalize(e),f.readFileSync(e,t?void 0:"utf8")},c=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},d=(e,t,n)=>{g(),e=m.normalize(e),f.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),b=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ft))throw e})),process.on("unhandledRejection",(function(e){throw e})),x=(e,t)=>{if(le())throw process.exitCode=e,t;(function(e){e instanceof ft||$("exiting due to exception: "+e)})(t),process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{e=L()}catch(e){throw e}a.g.Worker=e.Worker}else(v||w)&&(w?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):"",k||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},w&&(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));k&&"undefined"==typeof performance&&(a.g.performance=z().performance);var T=void 0,_=void 0;k&&(g(),T=e=>f.writeSync(1,e+"\n"),_=e=>f.writeSync(2,e+"\n"));var C,E=h.print||T,$=h.printErr||_;function A(e){A.shown||(A.shown={}),A.shown[e]||(A.shown[e]=1,$(e))}Object.assign(h,y),y=null,h.arguments&&(b=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(x=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(C=h.wasmBinary);var F=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&fe("no native wasm support detected");var R,D,B,W=!1;function V(e){return h["_"+e]}function U(e,n,r,a,s){var i={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Q(e,t=dt(n),n)}return t},array:function(e){var n=dt(e.length);return function(e,n){t().set(e,n)}(e,n),n}},o=V(e),l=[],u=0;if(a)for(var h=0;h<a.length;h++){var p=i[r[h]];p?(0===u&&(u=ht()),l[h]=p(a[h])):l[h]=a[h]}var d,c=o.apply(null,l);return d=c,0!==u&&pt(u),c=function(e){return"string"===n?J(e):"boolean"===n?Boolean(e):e}(d),c}function G(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var H,j,q,K,X,Y="undefined"!=typeof TextDecoder?new G("utf8"):void 0;function Z(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&Y)return Y.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function J(e,t){return e?Z(n(),e,t):""}function Q(e,t,r){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,n(),t,r)}function ee(e,t){return e%t>0&&(e+=t-e%t),e}function te(e){H=e,h.HEAP8=j=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=K=new Int32Array(e),h.HEAPU8=q=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=X=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new G("utf-16le"),I&&(H=h.buffer);var ne=h.INITIAL_MEMORY||16777216;if(I)R=h.wasmMemory,H=h.buffer;else if(h.wasmMemory)R=h.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw $("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");R&&(H=R.buffer),ne=H.byteLength,te(H);var re,ae=[],se=[],ie=[],oe=[];function le(){return F||!1}function ue(){!I&&xe(se)}var he,pe=0,de=null,ce=null;function fe(e){I?postMessage({cmd:"onAbort",arg:e}):h.onAbort&&h.onAbort(e),$(e="Aborted("+e+")"),W=!0,B=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function me(e){return e.startsWith("data:application/octet-stream;base64,")}function ge(e){return e.startsWith("file://")}function ye(e){try{if(e==he&&C)return new Uint8Array(C);if(c)return c(e);throw"both async and sync fetching of the wasm failed"}catch(e){fe(e)}}h.preloadedImages={},h.preloadedAudios={},me(he="tfjs-backend-wasm-threaded-simd.wasm")||(he=N(he));var be={};function xe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?_e(n)():_e(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}function ve(e){var t=ht(),n=e();return pt(t),n}function we(e){var t=Ie.pthreads[e];if(t){s()[e>>2]=0;var n=t.worker;Ie.returnWorkerToPool(n)}}function ke(e){!function(e,t){if(B=e,!t&&I)throw Se(e),"unwind";le()||I||Ie.terminateAllThreads(),function(e){B=e,le()||(Ie.terminateAllThreads(),h.onExit&&h.onExit(e),W=!0),x(e,new ft(e))}(e)}(e)}var Ie={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?Ie.initWorker():Ie.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)Ie.allocateUnusedWorker()},initWorker:function(){F=!1},pthreads:{},setExitStatus:function(e){B=e},terminateAllThreads:function(){for(var e in Ie.pthreads){var t=Ie.pthreads[e];t&&t.worker&&Ie.returnWorkerToPool(t.worker)}for(var n=0;n<Ie.unusedWorkers.length;++n)Ie.unusedWorkers[n].terminate();Ie.unusedWorkers=[]},returnWorkerToPool:function(e){Ie.runWithoutMainThreadQueuedCalls((function(){delete Ie.pthreads[e.pthread.threadInfoStruct],Ie.unusedWorkers.push(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(e),1),lt(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[ct>>2]=0;try{e()}finally{s()[ct>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in Ie.tlsInitFunctions)Ie.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,a=r.cmd;if(e.pthread&&(Ie.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=nt()){var i=Ie.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):$('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ie.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===a?rt():"spawnThread"===a?Ee(r):"cleanupThread"===a?we(r.thread):"killThread"===a?function(e){s()[e>>2]=0;var t=Ie.pthreads[e];delete Ie.pthreads[e],t.worker.terminate(),lt(e),Ie.runningWorkers.splice(Ie.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===a?function(e){Ie.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===a?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===a?E("Thread "+r.threadId+": "+r.text):"printErr"===a?$("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===a?h.onAbort&&h.onAbort(r.arg):$("worker sent an unknown command "+a),Ie.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw $("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},k&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:D})},allocateUnusedWorker:function(){var e=N("tfjs-backend-wasm-threaded-simd.worker.js");Ie.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ie.unusedWorkers.length&&(Ie.allocateUnusedWorker(),Ie.loadWasmModuleToWorker(Ie.unusedWorkers[0])),Ie.unusedWorkers.pop()}};function Se(e){if(I)return Ae(1,0,e);try{ke(e)}catch(e){!function(e){if(e instanceof ft||"unwind"==e)return B;x(1,e)}(e)}}h.establishStackSpace=function(){var e=nt(),t=s()[e+44>>2],n=s()[e+48>>2];ut(t,t-n),pt(t)};var Ne,Te=[];function _e(e){var t=Te[e];return t||(e>=Te.length&&(Te.length=e+1),Te[e]=t=re.get(e)),t}function Ce(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return function(e){s()[tt()>>2]=e}(28),-1;n=Ne()}return s()[t>>2]=n/1e3|0,s()[t+4>>2]=n%1e3*1e3*1e3|0,0}function Ee(e){var t=Ie.getNewWorker();if(!t)return 6;Ie.runningWorkers.push(t);var n=Ie.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function $e(){return 2147483648}function Ae(e,t){var n=arguments.length-2,r=arguments;return ve((function(){for(var a=n,s=dt(8*a),o=s>>3,l=0;l<n;l++){var u=r[2+l];i()[o+l]=u}return it(e,a,s,t)}))}h.invokeEntryPoint=function(e,t){return _e(e)(t)},Ne=k?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:I?()=>performance.now()-h.__performance_now_clock_drift:()=>performance.now();var Fe=[];function Re(e){try{return R.grow(e-H.byteLength+65535>>>16),te(R.buffer),1}catch(e){}}var De={inEventHandler:0,removeAllEventListeners:function(){for(var e=De.eventHandlers.length-1;e>=0;--e)De._removeHandler(e);De.eventHandlers=[],De.deferredCalls=[]},registerRemoveEventListeners:function(){De.removeEventListenersRegistered||(ie.push(De.removeAllEventListeners),De.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in De.deferredCalls){var s=De.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}De.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),De.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<De.deferredCalls.length;++t)De.deferredCalls[t].targetFunction==e&&(De.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return De.inEventHandler&&De.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(De.canPerformEventHandlerRequests())for(var e=0;e<De.deferredCalls.length;++e){var t=De.deferredCalls[e];De.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e&&(!t||t==De.eventHandlers[n].eventTypeString)&&De._removeHandler(n--)},_removeHandler:function(e){var t=De.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),De.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++De.inEventHandler,De.currentEventHandler=e,De.runDeferredCalls(),e.handlerFunc(t),De.runDeferredCalls(),--De.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),De.eventHandlers.push(e),De.registerRemoveEventListeners();else for(var n=0;n<De.eventHandlers.length;++n)De.eventHandlers[n].target==e.target&&De.eventHandlers[n].eventTypeString==e.eventTypeString&&De._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){ve((function(){var i=dt(12);s()[i>>2]=n,s()[i+4>>2]=r,s()[i+8>>2]=a,ot(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ie.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Me(e,t,n,r){ve((function(){var a=dt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Qe(t);return Q(e,n,t),n}(t)),s()[a>>2]=i,s()[a+4>>2]=n,s()[a+8>>2]=r,ot(e,657457152,0,i,a)}))}var Oe=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Le(e){return e=function(e){return e>2?J(e):e}(e),Oe[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ze(e){return Le(e)}function Pe(e,t,n){var r=ze(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){Me(e,t=t?J(t):"",n,r)}(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Be(e,t,n){return I?Ae(2,1,e,t,n):Pe(e,t,n)}var We={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){We.lastError||(We.lastError=e)},getNewId:function(e){for(var t=We.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=J(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?We.registerContext(n,t):0},registerContext:function(e,t){var n=Qe(8);s()[n+4>>2]=nt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),We.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&We.initExtensions(r),n},makeContextCurrent:function(e){return We.currentContext=We.contexts[e],h.ctx=qe=We.currentContext&&We.currentContext.GLctx,!(e&&!qe)},getContext:function(e){return We.contexts[e]},deleteContext:function(e){We.currentContext===We.contexts[e]&&(We.currentContext=null),"object"==typeof De&&De.removeAllHandlersOnTarget(We.contexts[e].GLctx.canvas),We.contexts[e]&&We.contexts[e].GLctx.canvas&&(We.contexts[e].GLctx.canvas.GLctxObject=void 0),et(We.contexts[e].handle),We.contexts[e]=null},initExtensions:function(e){if(e||(e=We.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Ve=["default","low-power","high-performance"],Ue={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ue.buffers[e];0===t||10===t?((1===e?E:$)(Z(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ue.varargs+=4,s()[Ue.varargs-4>>2]},getStr:function(e){return J(e)},get64:function(e,t){return e}};function Ge(e){return I?Ae(3,1,e):0}function He(e,t,n,r,a){if(I)return Ae(4,1,e,t,n,r,a)}function je(e,t,r,a){if(I)return Ae(5,1,e,t,r,a);for(var i=0,o=0;o<r;o++){var l=s()[t>>2],u=s()[t+4>>2];t+=8;for(var h=0;h<u;h++)Ue.printChar(e,n()[l+h]);i+=u}return s()[a>>2]=i,0}Ie.init();var qe,Ke,Xe,Ye,Ze=[null,Se,Be,Ge,He,je],Je={__clock_gettime:function(e,t){return Ce(e,t)},__emscripten_init_main_thread_js:function(e){at(e,!w,1,!v),Ie.threadInit()},__emscripten_thread_cleanup:function(e){I?postMessage({cmd:"cleanupThread",thread:e}):we(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return $("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(I&&0===a.length)return st(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return I?(s.cmd="spawnThread",postMessage(s,a),0):Ee(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ie.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){fe("")},emscripten_check_blocking_allowed:function(){k||w||A("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:$e,emscripten_get_now:Ne,emscripten_memcpy_big:function(e,t,r){n().copyWithin(e,t,t+r)},emscripten_num_logical_cores:function(){return k?P().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Fe.length=t;for(var r=n>>3,a=0;a<t;a++)Fe[a]=i()[r+a];return(e<0?be[-e-1]:Ze[e]).apply(null,Fe)},emscripten_resize_heap:function(e){var t=n().length;if((e>>>=0)<=t)return!1;var r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=t*(1+.2/a);if(s=Math.min(s,e+100663296),Re(Math.min(r,ee(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return ze(e)?Pe(e,t,n):Be(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:Ve[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ze(e);return!i||a.explicitSwapControl?0:We.createContext(i,a)}(e,t)},exit:ke,fd_close:Ge,fd_seek:He,fd_write:je,memory:R||h.wasmMemory,setTempRet0:function(e){}},Qe=(function(){var e={env:Je,wasi_snapshot_preview1:Je};function t(e,t){var n=e.exports;if(h.asm=n,function(e,t,n){Ie.tlsInitFunctions.push(e)}(h.asm.emscripten_tls_init),re=h.asm.__indirect_function_table,function(e){se.unshift(e)}(h.asm.__wasm_call_ctors),D=t,!I){var r=Ie.unusedWorkers.length;Ie.unusedWorkers.forEach((function(e){Ie.loadWasmModuleToWorker(e,(function(){--r||function(e){if(pe--,h.monitorRunDependencies&&h.monitorRunDependencies(pe),0==pe&&(null!==de&&(clearInterval(de),de=null),ce)){var t=ce;ce=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!C&&(v||w)){if("function"==typeof fetch&&!ge(he))return fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return ye(he)}));if(d)return new Promise((function(e,t){d(he,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ye(he)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){$("failed to asynchronously prepare wasm: "+e),fe(e)}))}if(I||(pe++,h.monitorRunDependencies&&h.monitorRunDependencies(pe)),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return $("Module.instantiateWasm callback failed with error: "+e),!1}(C||"function"!=typeof WebAssembly.instantiateStreaming||me(he)||ge(he)||"function"!=typeof fetch?r(n):fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return $("wasm streaming compile failed: "+e),$("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l)}(),h.___wasm_call_ctors=function(){return(h.___wasm_call_ctors=h.asm.__wasm_call_ctors).apply(null,arguments)},h._init=function(){return(h._init=h.asm.init).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.init_with_threads_count).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.get_threads_count).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.register_tensor).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.dispose_data).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.dispose).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.Abs).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.Add).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.AddN).apply(null,arguments)},h._All=function(){return(h._All=h.asm.All).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.Any).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.ArgMax).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.AvgPool).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.BatchMatMul).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.Ceil).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.ClipByValue).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.Conv2D).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.Conv2DBackpropInput).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.Cos).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.Cosh).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.CropAndResize).apply(null,arguments)},h._Cumprod=function(){return(h._Cumprod=h.asm.Cumprod).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Cumsum).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.DepthToSpace).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm.DepthwiseConv2dNative).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.Elu).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.Equal).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.Exp).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.FlipLeftRight).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.Floor).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.FloorDiv).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.FusedBatchNorm).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.FusedConv2D).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.FusedDepthwiseConv2D).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.Gather).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.GatherNd).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.Greater).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.GreaterEqual).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.LeakyRelu).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.Less).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.LessEqual).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.Log).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.LogicalAnd).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.Max).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.MaxPool).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.Maximum).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.Mean).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.Min).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.Minimum).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.MirrorPad).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.Multiply).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.Neg).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.NonMaxSuppressionV3).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.NonMaxSuppressionV4).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.NonMaxSuppressionV5).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.NotEqual).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.OneHot).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.PadV2).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Pow).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Prelu).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Prod).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.RealDiv).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Relu).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.Relu6).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.ResizeBilinear).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Reverse).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.RotateWithOffset).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Round).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Rsqrt).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.ScatterNd).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.SelectV2).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Sigmoid).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Sin).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Softmax).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.SparseFillEmptyRows).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.SparseReshape).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.SparseSegmentReduction).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Sqrt).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm.Square).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.SquaredDifference).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.Step).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.StridedSlice).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.Sub).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.Sum).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.Tan).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.Tanh).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.Tile).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.TopK).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.Transform).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.Transpose).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm._FusedMatMul).apply(null,arguments)},h._malloc=function(){return(Qe=h._malloc=h.asm.malloc).apply(null,arguments)}),et=h._free=function(){return(et=h._free=h.asm.free).apply(null,arguments)},tt=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.emscripten_tls_init).apply(null,arguments)},h.___errno_location=function(){return(tt=h.___errno_location=h.asm.__errno_location).apply(null,arguments)}),nt=h._pthread_self=function(){return(nt=h._pthread_self=h.asm.pthread_self).apply(null,arguments)},rt=h._emscripten_main_thread_process_queued_calls=function(){return(rt=h._emscripten_main_thread_process_queued_calls=h.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},at=(h.__emscripten_thread_crashed=function(){return(h.__emscripten_thread_crashed=h.asm._emscripten_thread_crashed).apply(null,arguments)},h.__emscripten_thread_init=function(){return(at=h.__emscripten_thread_init=h.asm._emscripten_thread_init).apply(null,arguments)}),st=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},h._emscripten_main_browser_thread_id=function(){return(h._emscripten_main_browser_thread_id=h.asm.emscripten_main_browser_thread_id).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_2=function(){return(h._emscripten_sync_run_in_main_thread_2=h.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},h._emscripten_sync_run_in_main_thread_4=function(){return(st=h._emscripten_sync_run_in_main_thread_4=h.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),it=h._emscripten_run_in_main_runtime_thread_js=function(){return(it=h._emscripten_run_in_main_runtime_thread_js=h.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},ot=h._emscripten_dispatch_to_thread_=function(){return(ot=h._emscripten_dispatch_to_thread_=h.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},lt=h.__emscripten_thread_free_data=function(){return(lt=h.__emscripten_thread_free_data=h.asm._emscripten_thread_free_data).apply(null,arguments)},ut=(h.__emscripten_thread_exit=function(){return(h.__emscripten_thread_exit=h.asm._emscripten_thread_exit).apply(null,arguments)},h._memalign=function(){return(h._memalign=h.asm.memalign).apply(null,arguments)},h._emscripten_stack_set_limits=function(){return(ut=h._emscripten_stack_set_limits=h.asm.emscripten_stack_set_limits).apply(null,arguments)}),ht=h.stackSave=function(){return(ht=h.stackSave=h.asm.stackSave).apply(null,arguments)},pt=h.stackRestore=function(){return(pt=h.stackRestore=h.asm.stackRestore).apply(null,arguments)},dt=h.stackAlloc=function(){return(dt=h.stackAlloc=h.asm.stackAlloc).apply(null,arguments)},ct=(h.dynCall_iijjiiii=function(){return(h.dynCall_iijjiiii=h.asm.dynCall_iijjiiii).apply(null,arguments)},h.dynCall_jiji=function(){return(h.dynCall_jiji=h.asm.dynCall_jiji).apply(null,arguments)},h.__emscripten_allow_main_runtime_queued_calls=21464);function ft(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function mt(e){if(e=e||b,!(pe>0)){if(I)return o(h),ue(),void postMessage({cmd:"loaded"});(function(){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)e=h.preRun.shift(),ae.unshift(e);var e;xe(ae)})(),pe>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Ke||(Ke=!0,h.calledRun=!0,!W&&(ue(),o(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),function(){if(!I){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)e=h.postRun.shift(),oe.unshift(e);xe(oe)}var e}()))}}if(h.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?V(e):function(){return U(e,t,n,arguments)}},h.keepRuntimeAlive=le,h.PThread=Ie,h.PThread=Ie,h.wasmMemory=R,h.ExitStatus=ft,ce=function e(){Ke||mt(),Ke||(ce=e)},h.run=mt,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(mt(),u&&(Xe={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!u.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!u.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Ye=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Ye=e}if(Xe){var gt=Ye._dispose;Ye._dispose=function(){gt(),Xe.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Xe.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=s)})),W=p(((t,n)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,h,p,d=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y="";g?(y=m?O().dirname(y)+"/":"//",p=()=>{h||(u=M(),h=O())},i=function(e,t){return p(),e=h.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{p(),e=h.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),r&&(y=r),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,x=s.print||void 0,v=s.printErr||void 0;Object.assign(s,d),d=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(b=s.wasmBinary);s.noExitRuntime;"object"!=typeof WebAssembly&&H("no native wasm support detected");var w,k=!1;function I(e){return s["_"+e]}function S(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,_,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){T.set(e,t)}(e,t),t}},i=I(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=se()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,0!==l&&ie(l),d=function(e){return"string"===t?A(e):"boolean"===t?Boolean(e):e}(p),d}var N,T,_,C,E="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function $(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&E)return E.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function A(e,t){return e?$(_,e,t):""}function F(e,t){return e%t>0&&(e+=t-e%t),e}function R(e){N=e,s.HEAP8=T=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=C=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var D,L=[],z=[],P=[];var B,W,V=0,U=null,G=null;function H(e){s.onAbort&&s.onAbort(e),v(e="Aborted("+e+")"),k=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function j(e){return e.startsWith("data:application/octet-stream;base64,")}function q(e){return e.startsWith("file://")}function K(e){try{if(e==B&&b)return new Uint8Array(b);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}function X(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z(n)():Z(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},j(B="tfjs-backend-wasm.wasm")||(W=B,B=s.locateFile?s.locateFile(W,y):y+W);var Y=[];function Z(e){var t=Y[e];return t||(e>=Y.length&&(Y.length=e+1),Y[e]=t=D.get(e)),t}function J(){return 2147483648}function Q(e){try{return w.grow(e-N.byteLength+65535>>>16),R(w.buffer),1}catch(e){}}var ee,te,ne,re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=re.buffers[e];0===t||10===t?((1===e?x:v)($(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return re.varargs+=4,C[re.varargs-4>>2]},getStr:function(e){return A(e)},get64:function(e,t){return e}},ae={abort:function(){H("")},emscripten_get_heap_max:J,emscripten_memcpy_big:function(e,t,n){_.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=_.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Q(Math.min(n,F(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=C[t>>2],o=C[t+4>>2];t+=8;for(var l=0;l<o;l++)re.printChar(e,_[i+l]);a+=o}return C[r>>2]=a,0},setTempRet0:function(e){}},se=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n=e.exports;s.asm=n,R((w=s.asm.memory).buffer),D=s.asm.__indirect_function_table,function(e){z.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(V--,s.monitorRunDependencies&&s.monitorRunDependencies(V),0==V&&(null!==U&&(clearInterval(U),U=null),G)){var t=G;G=null,t()}}()}function r(e){t(e.instance)}function a(t){return function(){if(!b&&(f||m)){if("function"==typeof fetch&&!q(B))return fetch(B,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+B+"'";return e.arrayBuffer()})).catch((function(){return K(B)}));if(o)return new Promise((function(e,t){o(B,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return K(B)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){v("failed to asynchronously prepare wasm: "+e),H(e)}))}if(V++,s.monitorRunDependencies&&s.monitorRunDependencies(V),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return v("Module.instantiateWasm callback failed with error: "+e),!1}(b||"function"!=typeof WebAssembly.instantiateStreaming||j(B)||q(B)||"function"!=typeof fetch?a(r):fetch(B,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return v("wasm streaming compile failed: "+e),v("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(se=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ie=s.stackRestore=function(){return(ie=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){ee||(ee=!0,s.calledRun=!0,!k&&(X(z),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),P.unshift(e);var e;X(P)}()))}e=e||c,V>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),L.unshift(e);var e;X(L)}(),V>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?I(e):function(){return S(e,t,n,arguments)}},G=function e(){ee||ue(),ee||(G=e)},s.run=ue,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ue(),a&&(te={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)ne=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var he=ne._dispose;ne._dispose=function(){he(),te.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),te.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModule=s)})),V=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},U=class{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r,a){return G("move")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}};function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,X(e,t,n)}function j(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,X(e,n,r),X(t,n,r)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function X(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function Y(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Z(e,t){let n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t,n=""){Q(se(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function te(e){Q(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ne(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ve(e)&&!n)for(let r=0;r<e.length;++r)ne(e[r],t,n);else t.push(e);return t}function re(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ae(e){return 0===e.length}function se(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ie(e){return e%1==0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function le(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ue(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H(t),t}function he(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function pe(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function de(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ce(e,t){let n=t.length;return Q((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Q(e.every((e=>ie(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function fe(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ce(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ye(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function be(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function xe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ve(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function we(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ke(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ie(e){return"string"==typeof e||e instanceof String}function Se(e){return"boolean"==typeof e}function Ne(e){return"number"==typeof e}function Te(e){return Array.isArray(e)?Te(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ne(e)?"float32":Ie(e)?"string":Se(e)?"bool":"float32"}function _e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ce(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ee(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $e(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=$e(e+t*o,i,n,r)}return a}function Ae(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $e(0,e,t,n)}function Fe(e,t){let n=Re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function De(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ae(e,new Float32Array(n));if("int32"===t)return Ae(e,new Int32Array(n));if("bool"===t)return Ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Me(e){e.forEach((t=>{Q(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Le(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function ze(e){return e&&e.then&&"function"==typeof e.then}var Pe="tfjsflags",Be=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=We,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ve().getBool("IS_TEST")||Ve().getBool("PROD")),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Ve().getBool("IS_TEST")||Ve().getBool("PROD"),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ze(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Pe in e&&e[Pe].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function We(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ve(){return Ge}var Ue,Ge=null;function He(){if(null==Ue){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ue=e}return Ue}function je(e,t){let n=function(){let e=He();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var qe="Abs",Ke="Acos",Xe="Acosh",Ye="Add",Ze="AddN",Je="All",Qe="Any",et="ArgMax",tt="ArgMin",nt="Asin",rt="Asinh",at="Atan",st="Atanh",it="Atan2",ot="AvgPool",lt="AvgPoolGrad",ut="AvgPool3D",ht="AvgPool3DGrad",pt="BatchMatMul",dt="BatchToSpaceND",ct="Bincount",ft="BroadcastTo",mt="BroadcastArgs",gt="Cast",yt="Ceil",bt="ClipByValue",xt="Complex",vt="ComplexAbs",wt="Concat",kt="Conv2D",It="Conv2DBackpropFilter",St="Conv2DBackpropInput",Nt="Conv3D",Tt="Conv3DBackpropFilterV2",_t="Conv3DBackpropInputV2",Ct="Cos",Et="Cosh",$t="Cumprod",At="Cumsum",Ft="CropAndResize",Rt="DenseBincount",Dt="DepthToSpace",Mt="DepthwiseConv2dNative",Ot="DepthwiseConv2dNativeBackpropFilter",Lt="DepthwiseConv2dNativeBackpropInput",zt="Diag",Pt="Dilation2D",Bt="Dilation2DBackpropInput",Wt="Dilation2DBackpropFilter",Vt="RealDiv",Ut="Einsum",Gt="Elu",Ht="EluGrad",jt="Erf",qt="Equal",Kt="Exp",Xt="ExpandDims",Yt="Expm1",Zt="FFT",Jt="Fill",Qt="FlipLeftRight",en="Floor",tn="FloorDiv",nn="FusedBatchNorm",rn="GatherV2",an="GatherNd",sn="Greater",on="GreaterEqual",ln="Identity",un="IFFT",hn="Imag",pn="IsFinite",dn="IsInf",cn="IsNan",fn="LeakyRelu",mn="Less",gn="LessEqual",yn="LinSpace",bn="Log",xn="Log1p",vn="LogicalAnd",wn="LogicalNot",kn="LogicalOr",In="LogSoftmax",Sn="LowerBound",Nn="LRN",Tn="LRNGrad",_n="Max",Cn="Maximum",En="MaxPool",$n="MaxPoolGrad",An="MaxPool3D",Fn="MaxPool3DGrad",Rn="MaxPoolWithArgmax",Dn="Mean",Mn="Min",On="Minimum",Ln="MirrorPad",zn="Mod",Pn="Multinomial",Bn="Multiply",Wn="Neg",Vn="NotEqual",Un="NonMaxSuppressionV3",Gn="NonMaxSuppressionV4",Hn="NonMaxSuppressionV5",jn="OnesLike",qn="OneHot",Kn="Pack",Xn="PadV2",Yn="Pool",Zn="Pow",Jn="Prelu",Qn="Prod",er="Range",tr="Real",nr="Reciprocal",rr="Relu",ar="Reshape",sr="ResizeNearestNeighbor",ir="ResizeNearestNeighborGrad",or="ResizeBilinear",lr="ResizeBilinearGrad",ur="Relu6",hr="Reverse",pr="Round",dr="Rsqrt",cr="ScatterNd",fr="SearchSorted",mr="Select",gr="Selu",yr="Slice",br="Sin",xr="Sinh",vr="Sign",wr="Sigmoid",kr="Softplus",Ir="Sqrt",Sr="Sum",Nr="SpaceToBatchND",Tr="SplitV",_r="Softmax",Cr="SparseFillEmptyRows",Er="SparseReshape",$r="SparseSegmentMean",Ar="SparseSegmentSum",Fr="SparseToDense",Rr="SquaredDifference",Dr="Square",Mr="StridedSlice",Or="StringNGrams",Lr="StringSplit",zr="StringToHashBucketFast",Pr="Sub",Br="Tan",Wr="Tanh",Vr="Tile",Ur="TopK",Gr="Transform",Hr="Transpose",jr="Unique",qr="Unpack",Kr="UnsortedSegmentSum",Xr="UpperBound",Yr="ZerosLike",Zr="Step",Jr="FromPixels",Qr="RotateWithOffset",ea="_FusedMatMul",ta="FusedConv2D",na="FusedDepthwiseConv2D";function ra(...e){Ve().getBool("IS_TEST")||Ve().getBool("PROD")}function aa(...e){Ve().getBool("IS_TEST")||Ve().getBool("PROD")}var sa=je("kernelRegistry",(()=>new Map)),ia=je("gradRegistry",(()=>new Map));function oa(e,t){let n=ma(e,t);return sa.get(n)}function la(e){return ia.get(e)}function ua(e){let t=sa.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ha(e){let{kernelName:t,backendName:n}=e,r=ma(t,n);sa.has(r)&&ra(),sa.set(r,e)}function pa(e){let{kernelName:t}=e;ia.has(t)&&Ve().getBool("DEBUG")&&ra(),ia.set(t,e)}function da(e,t){let n=ma(e,t);if(!sa.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);sa.delete(n)}function ca(e){if(!ia.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ia.delete(e)}function fa(e,t){ua(e).forEach((e=>{ha(Object.assign({},e,{backendName:t}))}))}function ma(e,t){return`${t}_${e}`}var ga={};d(ga,{arraysEqual:()=>se,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>Me,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>ke,bytesPerElement:()=>we,checkConversionForErrors:()=>ye,clamp:()=>q,computeStrides:()=>Ee,createScalarValue:()=>Aa,createShuffledIndices:()=>ue,decodeString:()=>Oa,distSquared:()=>J,encodeString:()=>Ma,fetch:()=>Da,fingerPrint64:()=>$a,flatten:()=>ne,getArrayFromDType:()=>ge,getTypedArrayFromDType:()=>me,hasEncodingLoss:()=>xe,hexToLong:()=>xa,indexToLoc:()=>Le,inferDtype:()=>Te,inferFromImplicitShape:()=>de,isBoolean:()=>Se,isFunction:()=>_e,isInt:()=>ie,isNumber:()=>Ne,isPromise:()=>ze,isScalarShape:()=>ae,isString:()=>Ie,isTypedArray:()=>ve,isValidDtype:()=>be,locToIndex:()=>Oe,makeOnesTypedArray:()=>Fe,makeZerosNestedTypedArray:()=>De,makeZerosTypedArray:()=>Re,nearestDivisor:()=>Ce,nearestLargerEven:()=>K,now:()=>Ra,parseAxisParam:()=>ce,randUniform:()=>Z,repeatedTry:()=>pe,rightPad:()=>he,shuffle:()=>H,shuffleCombo:()=>j,sizeFromShape:()=>re,sizeToSquarishShape:()=>le,squeezeShape:()=>fe,sum:()=>Y,swap:()=>X,tanh:()=>oe,toNestedArray:()=>Ae,toTypedArray:()=>Fa});var ya=c(f()),ba=ya.default||ya;function xa(e){return ba.fromString(e,!0,16)}var va=xa("c3a5c85c97cb3127"),wa=xa("b492b66fbe98f273"),ka=xa("9ae16a3b2f90404f");function Ia(e){return e.xor(e.shru(47))}function Sa(e,t,n){let r=e.slice(t,t+n);return ba.fromBytes(Array.from(r),!0,!0)}function Na(e,t){return Sa(e,t,8)}function Ta(e,t){return Sa(e,t,4)}function _a(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ca(e,t,n=xa("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ea(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=_a(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(_a(a,44)),[a.add(r),s.add(i)]}(Na(e,t),Na(e,t+8),Na(e,t+16),Na(e,t+24),n,r)}function $a(e,t=e.length){let n=ba.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=ka.add(2*t),r=Na(e,0).add(ka),a=Na(e,t-8);return Ca(_a(a,37).mul(n).add(r),_a(r,25).add(a).mul(n),n)}if(t>=4){let n=ka.add(2*t);return Ca(Ta(e,0).shl(3).add(t),Ta(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ia(ka.mul(n).xor(va.mul(r))).mul(ka)}return ka}(e,t):function(e,t=e.length){let n=ka.add(2*t),r=Na(e,0).mul(wa),a=Na(e,8),s=Na(e,t-8).mul(n),i=Na(e,t-16).mul(ka);return Ca(_a(r.add(a),43).add(_a(s,30)).add(i),r.add(_a(a.add(ka),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=ka.add(2*t),r=Na(e,0).mul(ka),a=Na(e,8),s=Na(e,t-8).mul(n),i=Na(e,t-16).mul(ka),o=_a(r.add(a),43).add(_a(s,30)).add(i),l=Ca(o,r.add(_a(a.add(ka),18)).add(s),n),u=Na(e,16).mul(n),h=Na(e,24),p=o.add(Na(e,t-32)).mul(n),d=l.add(Na(e,t-24)).mul(n);return Ca(_a(u.add(h),43).add(_a(p,30)).add(d),u.add(_a(h.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(wa).add(113),s=Ia(a.mul(ka).add(113)).mul(ka),i=[ba.UZERO,ba.UZERO],o=[ba.UZERO,ba.UZERO];r=r.mul(ka).add(Na(e,0));let l=0,u=64*(t-1>>6),h=u+(t-1&63)-63;do{r=_a(r.add(a).add(i[0]).add(Na(e,l+8)),37).mul(wa),a=_a(a.add(i[1]).add(Na(e,l+48)),42).mul(wa),r=r.xor(o[1]),a=a.add(i[0]).add(Na(e,l+40)),s=_a(s.add(o[0]),33).mul(wa),i=Ea(e,l,i[1].mul(wa),r.add(o[0])),o=Ea(e,l+32,s.add(o[1]),a.add(Na(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let p=wa.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=_a(r.add(a).add(i[0]).add(Na(e,l+8)),37).mul(p),a=_a(a.add(i[1]).add(Na(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Na(e,l+40))),s=_a(s.add(o[0]),33).mul(p),i=Ea(e,l,i[1].mul(p),r.add(o[0])),o=Ea(e,l+32,s.add(o[1]),a.add(Na(e,l+16))),[s,r]=[r,s],Ca(Ca(i[0],o[0],p).add(Ia(a).mul(va)).add(s),Ca(i[1],o[1],p).add(r),p)}function Aa(e,t){return"string"===t?Ma(e):Fa([e],t)}function Fa(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ne(e)),Ve().getBool("DEBUG")&&ye(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ra(){return Ve().platform.now()}function Da(e,t){return Ve().platform.fetch(e,t)}function Ma(e,t="utf-8"){return t=t||"utf-8",Ve().platform.encode(e,t)}function Oa(e,t="utf-8"){return t=t||"utf-8",Ve().platform.decode(e,t)}function La(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return!0}return!1}var za=class{logKernelProfile(e,t,n,r,a,s){"number"==typeof r?he(`${r}ms`,9):r.error,he(e,25),t.rank,t.size,he(t.shape.toString(),14);let i="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;i+=`${e}: ${a}D ${a>0?r:""} `}}}};function Pa(e,t,n,r){let a=Ee(t),s=function(e,t,n,r){let a=re(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Ua(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ba(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Va(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ba(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ie(e)?`'${e}'`:"bool"===n?Wa(e):parseFloat(e.toFixed(7)).toString(),he(r,t)}function Wa(e){return 0===e?"false":"true"}function Va(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Ba(Ua(e)[0],0,n)]}return"bool"===n?[Wa(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Ua(r),s=Ua(s)),["["+r.map(((e,t)=>Ba(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Ba(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ua(e):Array.from(e)).map(((e,t)=>Ba(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){let r=t*p,s=r+p;d.push(...Va(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-3;t<o;t++){let r=t*p,s=r+p;d.push(...Va(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*p,s=r+p;d.push(...Va(e.slice(r,s),u,n,h,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Ua(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ga=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=re(e),null!=n){let e=n.length;Q(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ge(t,this.size),this.strides=Ee(e)}set(e,...t){0===t.length&&(t=[0]),Q(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ha().makeTensor(this.values,this.shape,this.dtype)}},Ha=null,ja=null;var qa=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=re(e),this.strides=Ee(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ja.buffer(this.shape,this.dtype,e)}bufferSync(){return ja.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Ha().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Oa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ha().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ha().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Oa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ha().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ha().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ja.print(this,e)}clone(){return this.throwIfDisposed(),ja.clone(this)}toString(e=!1){return Pa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ja.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ha().makeVariable(this,e,t,n)}};function Ka(){return je("Tensor",(()=>qa))}Object.defineProperty(qa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ka();var Xa=class extends qa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ha().disposeTensor(this),this.dataId=e.dataId,Ha().incRef(this,null)}dispose(){Ha().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Xa,Symbol.hasInstance,{value:e=>e instanceof qa&&null!=e.assign&&e.assign instanceof Function});var Ya,Za,Ja,Qa,es,ts,ns={};d(ns,{assertTypesMatch:()=>os,getTensorsInContainer:()=>us,isTensorInList:()=>ls,makeTypesMatch:()=>is}),(Za=Ya||(Ya={})).R0="R0",Za.R1="R1",Za.R2="R2",Za.R3="R3",Za.R4="R4",Za.R5="R5",Za.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ja||(Ja={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Qa||(Qa={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(es||(es={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ts||(ts={}));var rs={float32:es,int32:Ja,bool:Qa,complex64:ts};function as(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return rs[e][t]}function ss(e){return as(e,"int32")}function is(e,t){if(e.dtype===t.dtype)return[e,t];let n=as(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function os(e,t){Q(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ls(e,t){return t.some((t=>t.id===e.id))}function us(e){let t=[];return hs(e,t,new Set),t}function hs(e,t,n){if(null==e)return;if(e instanceof qa)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),hs(a,t,n))}}function ps(e){return null!=e.kernelName}var ds=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},cs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ds}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ra(),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new za)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Ra();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Ra()-i})}if(Ve().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){let t=r[e];t.data().then((e=>{La(e,t.dtype)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){ua(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ua(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ra(),ra(e.stack||e.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return ra(),ra(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return cs.nextTensorId++}nextVariableId(){return cs.nextVariableId++}clone(e){let t=ms.runKernel(ln,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return ms.runKernel(gt,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==oa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=ps(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ps(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=oa(t,this.backendName);Q(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=ps(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=la(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Q(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Ie(e[0])&&(a=e.map((e=>Ma(e))));let s=r.write(a,t,n),i=new qa(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=ke(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new qa(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Xa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*we(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Xa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*we(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=la(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Re(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=us(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(Q(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Q(a instanceof qa,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Fe(re(e),"float32");return ms.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!se(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),gs);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Q(_e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{Q(t.every((e=>e instanceof qa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Q(n.value instanceof qa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Q(_e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Q(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Q(s.every((e=>e instanceof qa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ra(),n=await this.backend.time(e);return n.wallMs=Ra()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ds;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function fs(){let e=He();if(null==e._tfengine){let t=new Be(e);e._tfengine=new cs(t)}return function(e){Ge=e}(e._tfengine.ENV),function(e){Ha=e}((()=>e._tfengine)),e._tfengine}cs.nextTensorId=0,cs.nextVariableId=0;var ms=fs();function gs(e,t){let n={a:e,b:t};return ms.runKernel(Ye,n)}var ys,bs={};function xs(e){ys=e}function vs(e){if(void 0!==ys)return ys;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ws(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}d(bs,{isBrowser:()=>ws,isMobile:()=>vs,mockIsMobile:()=>xs});var ks=Ve();function Is(e,t){let n=e;if(ve(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ve(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ve().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ss(e,r,[]),r}function Ss(e,t,n){if(n=n||[],!Array.isArray(e)&&!ve(e))return void Q(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Q(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Q(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)Ss(e[t],r,n.concat(t))}function Ns(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ts(e,t,n,r="numeric"){if(e instanceof qa)return Ns(r,e.dtype,t,n),e;let a=Te(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ns(r,a,t,n),null==e||!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Is(e,a);!ve(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Fa(e,a):ne(e,[],!0);return ms.makeTensor(i,s,a)}function _s(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ts(e,`${t}[${a}]`,n,r)))}ks.registerFlag("DEBUG",(()=>!1),(e=>{})),ks.registerFlag("IS_BROWSER",(()=>ws())),ks.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ks.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ks.registerFlag("PROD",(()=>!1)),ks.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ks.getBool("DEBUG"))),ks.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ks.registerFlag("IS_TEST",(()=>!1)),ks.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ks.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ks.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var Cs="__op";function Es(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Cs;let a=(...e)=>{ms.startScope(n);try{let t=r(...e);return ze(t),ms.endScope(t),t}catch(e){throw ms.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var $s=Es({complex_:function(e,t){let n=Ts(e,"real","complex"),r=Ts(t,"imag","complex");ee(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return ms.runKernel(xt,a)}});function As(e,t,n,r){if(null==r&&(r=Te(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Me(t);let e=re(t),r=re(n);Q(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==re(t.slice(e));Q(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!ve(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Fa(e,r):ne(e,[],!0),ms.makeTensor(e,t,r)}function Fs(e,t,n){return As(e,t,Is(e,n),n)}var Rs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ds(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Os(await Promise.all(r)),specs:n}}function Ms(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=re(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Rs[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Gs()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=re(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=Rs[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Fs(e,l,"float32"),o=Fs(n,l,"float32");r[i]=$s(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Fs(t,l,o))}return r}function Os(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Ls="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function zs(e){return Ls?Buffer.byteLength(e):new Blob([e]).size}function Ps(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Bs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Ws(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Vs(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Us(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:zs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:zs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Gs(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Hs=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static registerSaveRouter(e){Hs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Hs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Hs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Hs.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Hs.getInstance().loadRouters:Hs.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},js=e=>Hs.registerSaveRouter(e),qs=e=>Hs.registerLoadRouter(e),Ks=e=>Hs.getSaveHandlers(e),Xs=(e,t)=>Hs.getLoadHandlers(e,t),Ys="tensorflowjs",Zs="models_store",Js="model_info_store";function Qs(){if(!Ve().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ei(e){let t=e.result;t.createObjectStore(Zs,{keyPath:"modelPath"}),t.createObjectStore(Js,{keyPath:"modelPath"})}var ti=class{constructor(e){if(this.indexedDB=Qs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Zs,"readonly"),r=t.objectStore(Zs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Us(t),i=a.transaction(Js,"readwrite"),o=i.objectStore(Js),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Zs,"readwrite");let l=r.objectStore(Zs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Js);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ti.URL_SCHEME="indexeddb://";var ni=e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ti.URL_SCHEME)?function(e){return new ti(e)}(e.slice(ti.URL_SCHEME.length)):null;Hs.registerSaveRouter(ni),Hs.registerLoadRouter(ni);var ri="/",ai="tensorflowjs_models",si="info",ii="model_topology",oi="weight_specs",li="weight_data",ui="model_metadata";function hi(e){return{info:[ai,e,si].join(ri),topology:[ai,e,ii].join(ri),weightSpecs:[ai,e,oi].join(ri),weightData:[ai,e,li].join(ri),modelMetadata:[ai,e,ui].join(ri)}}function pi(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function di(e){let t=e.split(ri);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ri)}var ci=class{constructor(e){if(!Ve().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Us(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ls)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw pi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ls){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};ci.URL_SCHEME="localstorage://";var fi=e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ci.URL_SCHEME)?function(e){return new ci(e)}(e.slice(ci.URL_SCHEME.length)):null;Hs.registerSaveRouter(fi),Hs.registerLoadRouter(fi);var mi="://",gi=class{constructor(){this.managers={}}static getInstance(){return null==gi.instance&&(gi.instance=new gi),gi.instance}static registerManager(e,t){Q(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mi)&&(e=e.slice(0,e.indexOf(mi))),Q(e.length>0,(()=>"scheme must not be an empty string."));let n=gi.getInstance();Q(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function yi(e){if(-1===e.indexOf(mi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gi.getSchemes().join(",")}`);return{scheme:e.split(mi)[0],path:e.split(mi)[1]}}async function bi(e,t,n=!1){Q(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Hs.getLoadHandlers(e);Q(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Q(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Hs.getSaveHandlers(t);Q(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Q(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=yi(e).scheme,l=yi(e).path,u=o===yi(e).scheme,h=await a.load();n&&u&&await gi.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await gi.getManager(o).removeModel(l),p.modelArtifactsInfo}async function xi(){let e=gi.getSchemes(),t={};for(let n of e){let e=await gi.getManager(n).listModels();for(let r in e){t[n+mi+r]=e[r]}}return t}async function vi(e){let t=yi(e);return gi.getManager(t.scheme).removeModel(t.path)}async function wi(e,t){return bi(e,t,!1)}async function ki(e,t){return bi(e,t,!0)}if(Ve().get("IS_BROWSER")){Ve().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{gi.registerManager(ci.URL_SCHEME,new class{constructor(){Q(Ve().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Q("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=ai+ri,n=ri+si;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[di(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=hi(e=function(e){return e.startsWith(ci.URL_SCHEME)?e.slice(ci.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return pi(t),n}})}catch(Za){}try{gi.registerManager(ti.URL_SCHEME,new class{constructor(){this.indexedDB=Qs()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Ys,1);n.onupgradeneeded=()=>ei(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Js,"readonly"),s=a.objectStore(Js).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(ti.URL_SCHEME)?e.slice(ti.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Js,"readwrite"),o=i.objectStore(Js),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Zs,"readwrite");let r=a.objectStore(Zs).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(Za){}}var Ii,Si=()=>m();function Ni(e,t="float32",n){return t=t||"float32",Me(e),new Ga(e,t,n)}Ve().get("IS_NODE")&&!Ve().get("IS_BROWSER")&&Ve().setPlatform("node",new class{constructor(){this.util=g(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ve().global.fetch?Ve().global.fetch(e,t):(null==Ii&&(Ii=Si()),Ii(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Ti=Es({cast_:function(e,t){let n=Ts(e,"x","cast");if(!be(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return ms.runKernel(gt,r,a)}});var _i=Es({clone_:function(e){let t={x:Ts(e,"x","clone","string_or_numeric")};return ms.runKernel(ln,t)}});function Ci(e,t=!1){}fs(),function(e){ja=e}({buffer:Ni,cast:Ti,clone:_i,print:Ci});var Ei={};d(Ei,{browserFiles:()=>Fi,browserHTTPRequest:()=>Wi,concatenateArrayBuffers:()=>Ps,copyModel:()=>wi,decodeWeights:()=>Ms,encodeWeights:()=>Ds,fromMemory:()=>Hi,fromMemorySync:()=>ji,getLoadHandlers:()=>Xs,getModelArtifactsForJSON:()=>Vs,getModelArtifactsInfoForJSON:()=>Us,getSaveHandlers:()=>Ks,http:()=>Bi,isHTTPScheme:()=>zi,listModels:()=>xi,loadWeights:()=>Mi,moveModel:()=>ki,registerLoadRouter:()=>qs,registerSaveRouter:()=>js,removeModel:()=>vi,weightsLoaderFactory:()=>Oi,withSaveHandler:()=>qi,withSaveHandlerSync:()=>Ki});function $i(e){return new Promise((e=>setTimeout(e))).then(e)}var Ai=class{constructor(e){if(!Ve().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ai.URL_SCHEME)&&(e=e.slice(Ai.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Ws(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await $i((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await $i((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Us(e)}}}};Ai.URL_SCHEME="downloads://";function Fi(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Vs(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ps(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Bs(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Bs(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Ri(e,t,n,r){var a;Q(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Q(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Q(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Q(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Di(e,t){null==t&&(t={});let n=null==t.fetchFunc?Ve().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ri(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ri(a,t.onProgress,.5,1)}async function Mi(e,t="",n,r){return Oi((e=>Di(e,{requestInit:r})))(e,t,n)}function Oi(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Rs[l]*re(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(h[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Ms(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),d+=n})),p}}Hs.registerSaveRouter((e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ai.URL_SCHEME)?function(e="model"){return new Ai(e)}(e.slice(Ai.URL_SCHEME.length)):null));var Li=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ve().platform.fetch,Q(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Q(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Ws(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Us(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Vs(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Ps(await Di(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function zi(e){return null!=e.match(Li.URL_SCHEME_REGEX)}Li.URL_SCHEME_REGEX=/^https?:\/\//;var Pi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>zi(e))):zi(e),n)return Bi(e,t)}return null};function Bi(e,t){return new Li(e,t)}function Wi(e,t){return Bi(e,t)}Hs.registerSaveRouter(Pi),Hs.registerLoadRouter(Pi);var Vi=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},Ui=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},Gi=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function Hi(e,t,n,r){let a=arguments;return new Gi(ji(...a))}function ji(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Vi(e):new Vi({modelTopology:e}):new Vi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function qi(e){return new Ui(e)}function Ki(e){return new Ui(e)}var Xi={};d(Xi,{confusionMatrix:()=>So});var Yi=Es({matMul_:function(e,t,n=!1,r=!1){let a=Ts(e,"a","matMul"),s=Ts(t,"b","matMul");[a,s]=is(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return ms.runKernel(pt,i,o)}});var Zi=Es({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Ts(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return ms.runKernel(qn,a,s)}});function Ji(){Ve().set("PROD",!0)}function Qi(){Ve().set("DEBUG",!0)}function eo(){Ve().set("DEPRECATION_WARNINGS_ENABLED",!1)}function to(e){Ve().getBool("DEPRECATION_WARNINGS_ENABLED")}function no(){ms.disposeVariables()}function ro(){return ms}function ao(){return ms.memory()}function so(e){return ms.profile(e)}function io(e,t){return ms.tidy(e,t)}function oo(e){us(e).forEach((e=>e.dispose()))}function lo(e){return ms.keep(e)}function uo(e){return ms.time(e)}function ho(e){return ms.setBackend(e)}function po(){return ms.ready()}function co(){return ms.backendName}function fo(e){ms.removeBackend(e)}function mo(e){return ms.findBackend(e)}function go(e){return ms.findBackendFactory(e)}function yo(e,t,n=1){return ms.registerBackend(e,t,n)}function bo(){return ms.backend}function xo(e,t){Ve().setPlatform(e,t)}!function(e){e}(to);var vo=Es({imag_:function(e){let t={input:Ts(e,"input","imag")};return ms.runKernel(hn,t)}});var wo=Es({neg_:function(e){let t={x:Ts(e,"x","neg")};return ms.runKernel(Wn,t)}});var ko=Es({real_:function(e){let t={input:Ts(e,"input","real")};return ms.runKernel(tr,t)}});var Io=Es({transpose_:function(e,t,n){let r=Ts(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Q(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Q(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return"complex64"===r.dtype?io((()=>{let e=ko(r),t=vo(r);return e=ms.runKernel(Hr,{x:e},s),t=ms.runKernel(Hr,{x:t},s),n&&(t=wo(t)),$s(e,t)})):ms.runKernel(Hr,a,s)}});var So=Es({confusionMatrix_:function(e,t,n){let r=Ts(e,"labels","confusionMatrix"),a=Ts(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Q(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Q(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Q(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Q(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Zi(Ti(r,"int32"),n),i=Zi(Ti(a,"int32"),n),o=Io(s),l=Yi(o,i);return Ti(l,"int32")}}),No={};function To(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function _o(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Co(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}d(No,{assertAndGetBroadcastShape:()=>Co,getBroadcastDims:()=>To,getReductionAxes:()=>_o});var Eo,$o={};function Ao(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Is(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function Fo(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=oa(Jr,ms.backendName)){let n={pixels:e},r={numChannels:t};return ms.runKernel(Jr,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,h,p).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Eo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Eo=new OffscreenCanvas(1,1).getContext("2d")}else Eo=document.createElement("canvas").getContext("2d");Eo.canvas.width=h,Eo.canvas.height=p,Eo.drawImage(e,0,0,h,p),l=Eo.getImageData(0,0,h,p).data}if(4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Ao(u,[p,h,t],"int32")}function Ro(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Do(e,t=3){let n=null;if(Ve().getBool("WRAP_TO_IMAGEBITMAP")&&Ro(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Fo(n,t)}async function Mo(e,t){let n=Ts(e,"img","toPixels");if(!(e instanceof qa)){let e=n;n=Ti(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}d($o,{fromPixels:()=>Oo,fromPixelsAsync:()=>Do,toPixels:()=>Mo});var Oo=Es({fromPixels_:Fo}),Lo={};function zo(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===re(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...Ee(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}d(Lo,{prepareAndValidate:()=>zo});var Po={};function Bo(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Wo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Bo(n,t,e)}function Vo(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:re(t.shape)/o,sliceSize:i,strides:[...Ee(n.slice(0,a)),1],outputSize:re(n)}}d(Po,{calculateShapes:()=>Vo,validateInput:()=>Wo,validateUpdateShape:()=>Bo});var Uo={};d(Uo,{assertParamsValid:()=>Go,computeFlatOffset:()=>rl,computeOutShape:()=>jo,getNormalizedAxes:()=>Yo,isSliceContinous:()=>nl,maskToAxes:()=>Ho,parseSliceParams:()=>al,sliceInfo:()=>sl,startForAxis:()=>el,startIndicesWithElidedDims:()=>Zo,stopForAxis:()=>tl,stopIndicesWithElidedDims:()=>Jo,stridesForAxis:()=>Qo,stridesWithElidedDims:()=>qo});function Go(e,t,n){let r=e.shape.length;Q(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Q(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Q(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Ho(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function jo(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function qo(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Ko(e,t,n){return n<=e?n:n-(t-1)}function Xo(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Yo(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=Zo(i,l,u,r,e),p=Jo(o,l,u,a,e),d=qo(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=el(i,r,s,e,t,l),p[t]=tl(o,a,s,e,t,l),d[t]=Qo(s,t,l);return{begin:h,end:p,strides:d}}function Zo(e,t,n,r,a){let s=[...a],i=Xo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Ko(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Jo(e,t,n,r,a){let s=[...a],i=Xo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Ko(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=q(0,s[e],a[e])}return s}function Qo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function el(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=q(0,i,l-1),i}function tl(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?q(0,i,l):q(-1,i,l-1),i}function nl(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function rl(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function al(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Q(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Q(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function sl(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)h&&0!=(1<<e&o)&&p.numAddAxisAfterEllipsis++,1<<e&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=il(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=il(d.end[t],1,d.strides[t],r,a,s);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function il(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var ol={};d(ol,{Serializable:()=>ll,SerializationMap:()=>ul,registerClass:()=>hl});var ll=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ul=class{constructor(){this.classNameMap={}}static getMap(){return null==ul.instance&&(ul.instance=new ul),ul.instance}static register(e){ul.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function hl(e){Q(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Q("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Q(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ul.register(e)}var pl={};d(pl,{TEST_EPSILON_FLOAT16:()=>dl,encodeStrings:()=>kl,expectArrayBuffersEqual:()=>wl,expectArraysClose:()=>cl,expectArraysEqual:()=>yl,expectNumbersClose:()=>bl,expectPromiseToFail:()=>gl,expectValuesInRange:()=>vl,testEpsilon:()=>fl});var dl=.1;function cl(e,t,n){return null==n&&(n=fl()),ml(e,t,((e,t)=>xl(e,t,n)))}function fl(){return 32===ms.backend.floatPrecision()?.001:dl}function ml(e,t,n){let r=!0;if((ve(e)||ve(t))&&(r=!1),ve(e)&&ve(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Is(e),r=Is(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ve(e)?e:ne(e),s=ve(t)?t:ne(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function gl(e,t){e().then((()=>t.fail()),(()=>t()))}function yl(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ie(e)||Ie(e[0])||Ie(t)||Ie(t[0])?ml(e,n,((e,t)=>e==t)):ml(e,t,((e,t)=>xl(e,t,0)))}function bl(e,t,n){if(null==n&&(n=fl()),!xl(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function xl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function vl(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function wl(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function kl(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?kl(n):e[t]=Ma(n)}return e}var Il="3.18.0";var Sl=Es({add_:function(e,t){let n=Ts(e,"a","add"),r=Ts(t,"b","add");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(Ye,a)}});var Nl=Es({floorDiv_:function(e,t){let n=Ts(e,"a","floorDiv"),r=Ts(t,"b","floorDiv");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(tn,a)}});var Tl=Es({div_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");if([n,r]=is(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Nl(n,r);let a={a:n,b:r};return ms.runKernel(Vt,a,{})}});var _l=Es({mul_:function(e,t){let n=Ts(e,"a","mul"),r=Ts(t,"b","mul");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(Bn,a)}});var Cl=Es({abs_:function(e){let t=Ts(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return ms.runKernel(vt,e)}{let e={x:t};return ms.runKernel(qe,e)}}});var El=Es({acos_:function(e){let t={x:Ts(e,"x","acos")};return ms.runKernel(Ke,t)}});var $l=Es({acosh_:function(e){let t={x:Ts(e,"x","acosh")};return ms.runKernel(Xe,t)}});var Al=Es({addN_:function(e){Q(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Q(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Ts(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return ms.runKernel(Ze,r)}});var Fl=Es({all_:function(e,t=null,n=!1){let r={x:Ts(e,"x","all","bool")},a={axis:t,keepDims:n};return ms.runKernel(Je,r,a)}});var Rl=Es({any_:function(e,t=null,n=!1){let r={x:Ts(e,"x","any","bool")},a={axis:t,keepDims:n};return ms.runKernel(Qe,r,a)}});var Dl=Es({argMax_:function(e,t=0){let n={x:Ts(e,"x","argMax")},r={axis:t};return ms.runKernel(et,n,r)}});var Ml=Es({argMin_:function(e,t=0){let n={x:Ts(e,"x","argMin")},r={axis:t};return ms.runKernel(tt,n,r)}});var Ol=Es({asin_:function(e){let t={x:Ts(e,"x","asin")};return ms.runKernel(nt,t)}});var Ll=Es({asinh_:function(e){let t={x:Ts(e,"x","asinh")};return ms.runKernel(rt,t)}});var zl=Es({atan_:function(e){let t={x:Ts(e,"x","atan")};return ms.runKernel(at,t)}});var Pl=Es({atan2_:function(e,t){let n=Ts(e,"a","atan2"),r=Ts(t,"b","atan2");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(it,a)}});var Bl=Es({atanh_:function(e){let t={x:Ts(e,"x","atanh")};return ms.runKernel(st,t)}});function Wl(e,t,n,r,a="NHWC",s){return Gl(e,[...t,e[3]],n,s,r,null,null,Ql(a))}function Vl(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=ql(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Gl(e,o,n,r,a,s,!1,i)}function Ul(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=Kl(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return Hl(e,o,n,r,a,!1,l,s)}function Gl(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=ql(n),[b,x]=ql(r),v=Xl(c,b),w=Xl(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=jl(e,t,n));let s=e[0],i=e[1],o=Yl((s-t+2*r)/n+1,a),l=Yl((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=Yl((t-s+d+c)/r+1,o),p=Yl((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,u,h,g,y,v,w,s,o),N=i?m*p:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Hl(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,v]=Kl(n),[w,k,I]=Kl(r),S=Xl(f,w),N=Xl(m,k),T=Xl(g,I),{padInfo:_,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=jl(e,t,r));let i=e[0],o=e[1],l=e[2],u=Yl((i-t+2*a)/r+1,s),h=Yl((o-t+2*a)/r+1,s),p=Yl((l-t+2*a)/r+1,s);return[u,h,p,n]}([t,n,r,1],o,1,a,e,h);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,u,h,p,b,x,v,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,C,E,$]:"channelsLast"===i&&(c=[l,C,E,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:C,outHeight:E,outWidth:$,outChannels:A,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function jl(e,t,n,r=1){let a=Xl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ql(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Kl(e){return"number"==typeof e?[e,e,e]:e}function Xl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Yl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Zl(e){let[t,n,r]=ql(e);return 1===t&&1===n&&1===r}function Jl(e,t){return Zl(e)||Zl(t)}function Ql(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function eu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Q(ie(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Q(ie(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var tu=Es({reshape_:function(e,t){let n={x:Ts(e,"x","reshape","string_or_numeric")},r={shape:t};return ms.runKernel(ar,n,r)}});var nu=Es({avgPool_:function(e,t,n,r,a){let s=Ts(e,"x","avgPool","float32");Q(Jl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),eu("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=ms.runKernel(ot,l,u);return h=Ti(h,s.dtype),o?tu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var ru=Es({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=Ts(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Q("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),eu("avgPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=ms.runKernel(ut,u,h);return p=Ti(p,o.dtype),l?tu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var au=Es({concat_:function(e,t=0){Q(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=_s(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return _i(n[0]);let r=n,a={axis:t};return ms.runKernel(wt,r,a)}});var su=Es({sigmoid_:function(e){let t={x:Ts(e,"x","sigmoid","float32")};return ms.runKernel(wr,t)}});var iu=Es({slice_:function(e,t,n){let r=Ts(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return ms.runKernel(yr,a,s)}});var ou=Es({tanh_:function(e){let t={x:Ts(e,"x","tanh","float32")};return ms.runKernel(Wr,t)}});var lu=Es({basicLSTMCell_:function(e,t,n,r,a,s){let i=Ts(e,"forgetBias","basicLSTMCell"),o=Ts(t,"lstmKernel","basicLSTMCell"),l=Ts(n,"lstmBias","basicLSTMCell"),u=Ts(r,"data","basicLSTMCell"),h=Ts(a,"c","basicLSTMCell"),p=Ts(s,"h","basicLSTMCell"),d=au([u,p],1),c=Yi(d,o),f=Sl(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=iu(f,[0,0],y),x=iu(f,[0,g],y),v=iu(f,[0,2*g],y),w=iu(f,[0,3*g],y),k=Sl(_l(su(b),ou(x)),_l(h,su(Sl(i,v))));return[k,_l(ou(k),su(w))]}});var uu=Es({batchToSpaceND_:function(e,t,n){let r=Ts(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Q(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Q(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Q(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return ms.runKernel(dt,s,i)}});function hu(e){let t;return t=0===e.rank||1===e.rank?tu(e,[1,1,1,e.size]):2===e.rank?tu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var pu=Es({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Ts(e,"x","batchNorm"),u=Ts(t,"mean","batchNorm"),h=Ts(n,"variance","batchNorm");null!=a&&(i=Ts(a,"scale","batchNorm")),null!=r&&(o=Ts(r,"offset","batchNorm")),Q(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Q(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Q(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:hu(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=ms.runKernel(nn,p,d);return tu(c,l.shape)}});var du=Es({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Ts(e,"x","batchNorm"),u=Ts(t,"mean","batchNorm"),h=Ts(n,"variance","batchNorm");return null!=a&&(i=Ts(a,"scale","batchNorm")),null!=r&&(o=Ts(r,"offset","batchNorm")),Q(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Q(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Q(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&Q(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Q(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),pu(l,u,h,o,i,s)}});var cu=Es({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Ts(e,"x","batchNorm"),u=Ts(t,"mean","batchNorm"),h=Ts(n,"variance","batchNorm");return null!=a&&(i=Ts(a,"scale","batchNorm")),null!=r&&(o=Ts(r,"offset","batchNorm")),Q(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Q(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Q(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&Q(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Q(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),pu(l,u,h,o,i,s)}});var fu=Es({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Ts(e,"x","batchNorm"),u=Ts(t,"mean","batchNorm"),h=Ts(n,"variance","batchNorm");return null!=a&&(i=Ts(a,"scale","batchNorm")),null!=r&&(o=Ts(r,"offset","batchNorm")),Q(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Q(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Q(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&Q(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Q(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),pu(l,u,h,o,i,s)}});var mu=Es({bincount_:function(e,t,n){let r=Ts(e,"x","bincount"),a=Ts(t,"weights","bincount");Q("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return ms.runKernel(ct,s,i)}});var gu=Es({broadcastArgs_:function(e,t){let n=Ts(e,"s0","broadcastArgs","int32"),r=Ts(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return ms.runKernel(mt,a)}});var yu=Es({broadcastTo_:function(e,t){let n=Ts(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=tu(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return _i(n);let i={x:n},o={reps:s};return ms.runKernel(Vr,i,o)}});var bu=Es({ceil_:function(e){let t={x:Ts(e,"x","ceil","float32")};return ms.runKernel(yt,t)}});var xu=Es({clipByValue_:function(e,t,n){let r=Ts(e,"x","clipByValue");Q(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return ms.runKernel(bt,a,s)}});var vu=Es({concat1d_:function(e){return au(e,0)}});var wu=Es({concat2d_:function(e,t){return au(e,t)}});var ku=Es({concat3d_:function(e,t){return au(e,t)}});var Iu=Es({concat4d_:function(e,t){return au(e,t)}});var Su=Es({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ts(e,"x","conv2d","float32"),l=Ts(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),eu("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];Q(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),Q(Jl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=ms.runKernel(kt,d,c);return h?tu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Nu=Es({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=Ts(e,"x","conv1d"),l=Ts(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=tu(o,[1,o.shape[0],o.shape[1]])),Q(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Q(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),eu("conv1d",r,i),Q(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Q(Jl(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Q("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=tu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=tu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Su(d,p,[1,n],r,"NHWC",[1,s],i);return tu(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Tu=Es({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Q(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Q(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];Q(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),Q(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),eu("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ms.runKernel(St,d,c);return u?tu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var _u=Es({conv2dTranspose_:function(e,t,n,r,a,s){let i=Ts(e,"x","conv2dTranspose"),o=Ts(t,"filter","conv2dTranspose");return Tu(n,i,o,r,a,"NHWC",s)}});var Cu=Es({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Ts(e,"x","conv3d"),o=Ts(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Q(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Q(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Q(Jl(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Q("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=ms.runKernel(Nt,h,p);return u?tu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Eu=Es({conv3DBackpropInput_:function(e,t,n,r,a){Q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=tu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Q(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Q(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Q(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Q(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Q(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=ms.runKernel(_t,h,p);return o?tu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var $u=Es({conv3dTranspose_:function(e,t,n,r,a){let s=Ts(e,"x","conv3dTranspose"),i=Ts(t,"filter","conv3dTranspose");return Eu(n,s,i,r,a)}});var Au=Es({cos_:function(e){let t={x:Ts(e,"x","cos","float32")};return ms.runKernel(Ct,t)}});var Fu=Es({cosh_:function(e){let t={x:Ts(e,"x","cosh","float32")};return ms.runKernel(Et,t)}});var Ru=Es({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:Ts(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return ms.runKernel($t,a,s)}});var Du=Es({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:Ts(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ms.runKernel(At,a,s)}});var Mu=Es({denseBincount_:function(e,t,n,r=!1){let a=Ts(e,"x","denseBincount"),s=Ts(t,"weights","denseBincount");Q("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Q(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return ms.runKernel(Rt,i,o)}});var Ou=Es({depthToSpace_:function(e,t,n="NHWC"){let r=Ts(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Q(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Q(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Q(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Q(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return ms.runKernel(Dt,o,l)}});var Lu=Es({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Ts(e,"x","depthwiseConv2d","float32"),l=Ts(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Q(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),eu("depthwiseConv2d",r,i);let p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=ms.runKernel(Mt,p,d);return h?tu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var zu=Es({diag_:function(e){let t={x:Ts(e,"x","diag")};return ms.runKernel(zt,t)}});var Pu=Es({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=Ts(e,"x","dilation2d"),o=Ts(t,"filter","dilation2d");Q(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Q(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Q("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=tu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=ms.runKernel(Pt,h,p);return u?tu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Bu=Es({equal_:function(e,t){let n=Ts(e,"a","equal","string_or_numeric"),r=Ts(t,"b","equal","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(qt,a)}});var Wu=Es({where_:function(e,t,n){let r=Ts(t,"a","where"),a=Ts(n,"b","where"),s=Ts(e,"condition","where","bool"),i=Co(Co(s.shape,r.shape),a.shape),o={condition:yu(s,i),t:yu(r,i),e:yu(a,i)};return ms.runKernel(mr,o)}});var Vu=Es({zerosLike_:function(e){let t={x:Ts(e,"x","zerosLike")};return ms.runKernel(Yr,t)}});var Uu=Es({divNoNan_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");[n,r]=is(n,r);let a=Tl(n,r),s=Vu(a),i=Bu(r,s);return Wu(i,s,a)}});var Gu=Es({dot_:function(e,t){let n=Ts(e,"t1","dot"),r=Ts(t,"t2","dot");Q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Q(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=tu(n,[1,-1]),t=tu(r,[-1,1]),a=Yi(e,t);return tu(a,[])}if(1===n.rank&&2===r.rank){let e=tu(n,[1,-1]),t=tu(r,[r.shape[0],r.shape[1]]),a=Yi(e,t);return tu(a,[a.size])}if(2===n.rank&&1===r.rank){let e=tu(r,[-1,1]),t=Yi(n,e);return tu(t,[t.size])}{let e=tu(r,[r.shape[0],r.shape[1]]);return Yi(n,e)}}});var Hu=Es({einsum_:function(e,...t){let n=t.map(((e,t)=>Ts(e,`tensors${t}`,"einsum"))),r={equation:e};return ms.runKernel(Ut,n,r)}});var ju=Es({elu_:function(e){let t={x:Ts(e,"x","elu","float32")};return ms.runKernel(Gt,t)}});var qu=Es({erf_:function(e){let t=Ts(e,"x","erf");Q("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ti(t,"float32"));let n={x:t};return ms.runKernel(jt,n)}});function Ku(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Xu(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Yu(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Zu(e,t){return Xu(e,t.map((e=>1)),t)}function Ju(e,t,n){Q(Ku(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Qu(e,t){if(Ku(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function eh(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function th(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var nh=Es({max_:function(e,t=null,n=!1){let r={x:Ts(e,"x","max")},a={reductionIndices:t,keepDims:n};return ms.runKernel(_n,r,a)}});var rh=Es({min_:function(e,t=null,n=!1){let r={x:Ts(e,"x","min")},a={axis:t,keepDims:n};return ms.runKernel(Mn,r,a)}});var ah=Es({pow_:function(e,t){let n=Ts(e,"base","pow"),r=Ts(t,"exp","pow");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(Zn,a)}});function sh(e,t){if((ve(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ve(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return As(e,[],[],t)}var ih=Es({sqrt_:function(e){let t={x:Ts(e,"x","sqrt","float32")};return ms.runKernel(Ir,t)}});var oh=Es({square_:function(e){let t=Ts(e,"x","square");return ms.runKernel("Square",{x:t},{})}});var lh=Es({sum_:function(e,t=null,n=!1){let r=Ts(e,"x","sum");"bool"===r.dtype&&(r=Ti(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return ms.runKernel(Sr,a,s)}});function uh(e,t,n=null){if(0===e.rank)return Cl(e);if(1!==e.rank&&null===n)return uh(tu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return lh(Cl(e),n);if(t===1/0)return nh(Cl(e),n);if(t===-1/0)return rh(Cl(e),n);if("euclidean"===t||2===t)return ih(lh(ah(Cl(e),sh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return nh(lh(Cl(e),n[0]),n[1]-1);if(t===1/0)return nh(lh(Cl(e),n[1]),n[0]);if(t===-1/0)return rh(lh(Cl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ih(lh(oh(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var hh=Es({norm_:function(e,t="euclidean",n=null,r=!1){let a=uh(e=Ts(e,"x","norm"),t,n),s=a.shape;if(r){let t=ce(n,e.shape);s=Zu(a.shape,t)}return tu(a,s)}});var ph=Es({euclideanNorm_:function(e,t=null,n=!1){return hh(e,"euclidean",t,n)}});var dh=Es({exp_:function(e){let t={x:Ts(e,"x","exp")};return ms.runKernel(Kt,t)}});var ch=Es({expandDims_:function(e,t=0){let n=Ts(e,"x","expandDims","string_or_numeric");Q(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return ms.runKernel(Xt,r,a)}});var fh=Es({expm1_:function(e){let t={x:Ts(e,"x","expm1")};return ms.runKernel(Yt,t)}});var mh=Es({tile_:function(e,t){let n=Ts(e,"x","tile","string_or_numeric");Q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return ms.runKernel(Vr,r,a)}});var gh=Es({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=Ni([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=tu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return mh(ch(i,0),[n[0],1,1]);if(2===n.length)return mh(ch(ch(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return mh(ch(ch(ch(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function yh(e,t,n){let r={shape:e,value:t,dtype:n};return ms.runKernel(Jt,{},r)}var bh=Es({floor_:function(e){let t={x:Ts(e,"x","floor","float32")};return ms.runKernel(en,t)}});var xh=Es({gather_:function(e,t,n=0,r=0){let a={x:Ts(e,"x","gather"),indices:Ts(t,"indices","gather","int32")},s={axis:n,batchDims:r};return ms.runKernel(rn,a,s)}});var vh=Es({greater_:function(e,t){let n=Ts(e,"a","greater","string_or_numeric"),r=Ts(t,"b","greater","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(sn,a)}});var wh=Es({greaterEqual_:function(e,t){let n=Ts(e,"a","greaterEqual","string_or_numeric"),r=Ts(t,"b","greaterEqual","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(on,a)}});var kh=Es({isFinite_:function(e){let t={x:Ts(e,"x","isFinite")};return ms.runKernel(pn,t)}});var Ih=Es({isInf_:function(e){let t={x:Ts(e,"x","isInf")};return ms.runKernel(dn,t)}});var Sh=Es({isNaN_:function(e){let t={x:Ts(e,"x","isNaN")};return ms.runKernel(cn,t)}});var Nh=Es({leakyRelu_:function(e,t=.2){let n={x:Ts(e,"x","leakyRelu")},r={alpha:t};return ms.runKernel(fn,n,r)}});var Th=Es({less_:function(e,t){let n=Ts(e,"a","less","string_or_numeric"),r=Ts(t,"b","less","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(mn,a)}});var _h=Es({lessEqual_:function(e,t){let n=Ts(e,"a","lessEqual","string_or_numeric"),r=Ts(t,"b","lessEqual","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(gn,a)}});function Ch(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return ms.runKernel(yn,{},r)}var Eh=Es({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=Ts(e,"x","localResponseNormalization");Q(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Q(ie(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=tu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=ms.runKernel(Nn,l,u);return o?tu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var $h=Es({log_:function(e){let t={x:Ts(e,"x","log","float32")};return ms.runKernel(bn,t)}});var Ah=Es({log1p_:function(e){let t={x:Ts(e,"x","log1p")};return ms.runKernel(xn,t)}});function Fh(e){return Q(_e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Ts(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ts(n,"dy","tf.grad"):null;return ms.tidy((()=>{let{value:t,grads:n}=ms.gradients((()=>e(r)),[r],a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),zh(n),n[0]}))}}function Rh(e){return Q(_e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Q(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=_s(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ts(n,"dy","tf.grads"):null;return ms.tidy((()=>{let{value:t,grads:n}=ms.gradients((()=>e(...r)),r,a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zh(n),n}))}}function Dh(e){return Q(_e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Q(t instanceof qa,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Q(null==n||n instanceof qa,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=ms.gradients((()=>e(t)),[t],n);return zh(r),{grad:r[0],value:a}}}function Mh(e){return Q(_e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Q(Array.isArray(t)&&t.every((e=>e instanceof qa)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Q(null==n||n instanceof qa,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=ms.gradients((()=>e(...t)),t,n);return null!=n&&ee(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zh(r.grads),r}}function Oh(e,t){Q(_e(e),(()=>"The f passed in variableGrads(f) must be a function")),Q(null==t||Array.isArray(t)&&t.every((e=>e instanceof Xa)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in ms.registeredVariables)t.push(ms.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Q((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=ms.gradients(e,t,null,!0);Q(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Q(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function Lh(e){return ms.customGrad(e)}function zh(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Ph=Es({softplus_:function(e){let t={x:Ts(e,"x","softplus")};return ms.runKernel(kr,t)}});var Bh=Es({logSigmoid_:function(e){let t=Ts(e,"x","logSigmoid");return Lh((e=>({value:wo(Ph(wo(e))),gradFunc:t=>_l(t,su(wo(e)))})))(t)}});var Wh=Es({sub_:function(e,t){let n=Ts(e,"a","sub"),r=Ts(t,"b","sub");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(Pr,a)}});var Vh=Es({logSoftmax_:function(e,t=-1){let n=Ts(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Lh(((e,n)=>{let r=nh(e,t,!0),a=Wh(e,r),s=Wh(Ti(a,"float32"),$h(lh(dh(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=dh(r);return Wh(e,_l(lh(e,t,!0),a))}}}))(n)}});var Uh=Es({logSumExp_:function(e,t=null,n=!1){let r=Ts(e,"x","logSumExp"),a=ce(t,r.shape),s=nh(r,a,!0),i=Wh(r,s),o=dh(i),l=lh(o,a),u=$h(l),h=Sl(tu(s,u.shape),u);if(n){let e=Zu(h.shape,a);return tu(h,e)}return h}});var Gh=Es({logicalAnd_:function(e,t){let n=Ts(e,"a","logicalAnd","bool"),r=Ts(t,"b","logicalAnd","bool");Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(vn,a)}});var Hh=Es({logicalNot_:function(e){let t={x:Ts(e,"x","logicalNot","bool")};return ms.runKernel(wn,t)}});var jh=Es({logicalOr_:function(e,t){let n=Ts(e,"a","logicalOr","bool"),r=Ts(t,"b","logicalOr","bool");Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(kn,a)}});var qh=Es({logicalXor_:function(e,t){let n=Ts(e,"a","logicalXor","bool"),r=Ts(t,"b","logicalXor","bool");return Co(n.shape,r.shape),Gh(jh(e,t),Hh(Gh(e,t)))}}),Kh=2147483648;var Xh=Es({searchSorted_:function(e,t,n="left"){let r=Ts(e,"sortedSequence","searchSorted"),a=Ts(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=tu(r,[-1,s]),l=tu(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(re(l.shape)>=Kh)throw new Error(`values tensor size must less than ${Kh}`);if(o.shape[1]>=Kh)throw new Error(`trailing dim_size must less than ${Kh} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},h={side:n};return ms.runKernel(fr,u,h)}});function Yh(e,t){return Xh(e,t,"left")}var Zh=Es({maxPool_:function(e,t,n,r,a){let s=Ts(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Q(Jl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),eu("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=ms.runKernel(En,l,u);return o?tu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Jh=Es({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Ts(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Q("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),eu("maxPool3d",r,a);let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=ms.runKernel(An,u,h);return l?tu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Qh=Es({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:Ts(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=ms.runKernel(Rn,s,i);return{result:o[0],indexes:o[1]}}});var ep=Es({maximum_:function(e,t){let n=Ts(e,"a","maximum"),r=Ts(t,"b","maximum");[n,r]=is(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(Cn,a)}});var tp=Es({mean_:function(e,t=null,n=!1){let r={x:Ts(e,"x","mean")},a={axis:t,keepDims:n};return ms.runKernel(Dn,r,a)}});function np(e,t="float32"){if("complex64"===t){let t=np(e,"float32"),n=np(e,"float32");return $s(t,n)}let n=Re(re(e),t);return ms.makeTensor(n,e,t)}function rp(e,t="float32"){if("complex64"===t){let t=rp(e,"float32"),n=np(e,"float32");return $s(t,n)}let n=Fe(re(e),t);return ms.makeTensor(n,e,t)}function ap(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ts(e,"x","meshgrid",e instanceof qa?e.dtype:"float32");if(void 0===t)return[r];let a=Ts(t,"y","meshgrid",t instanceof qa?t.dtype:"float32"),s=re(r.shape),i=re(a.shape);return"xy"===n?(r=tu(r,[1,-1]),a=tu(a,[-1,1]),[Yi(rp([i,1],r.dtype),r),Yi(a,rp([1,s],a.dtype))]):(r=tu(r,[-1,1]),a=tu(a,[1,-1]),[Yi(r,rp([1,i],r.dtype)),Yi(rp([s,1],a.dtype),a)])}var sp=Es({minimum_:function(e,t){let n=Ts(e,"a","minimum"),r=Ts(t,"b","minimum");[n,r]=is(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(On,a)}});var ip=Es({mirrorPad_:function(e,t,n){Q("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Ts(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Q(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Q(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return ms.runKernel(Ln,i,s)}});var op=Es({mod_:function(e,t){let n=Ts(e,"a","mod"),r=Ts(t,"b","mod");[n,r]=is(n,r);let a={a:n,b:r};return ms.runKernel(zn,a)}});var lp=Es({moments_:function(e,t=null,n=!1){let r=ce(t,(e=Ts(e,"x","moments")).shape),a=tp(e,r,n),s=a.shape;n||(s=Zu(a.shape,r));let i=oh(Wh(Ti(e,"float32"),tu(a,s)));return{mean:a,variance:tp(i,r,n)}}});var up=Es({multiRNNCell_:function(e,t,n,r){let a=Ts(t,"data","multiRNNCell"),s=_s(n,"c","multiRNNCell"),i=_s(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}});var hp=Es({multinomial_:function(e,t,n,r=!1){let a=Ts(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?tu(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=ms.runKernel(Pn,o,l);return 1===i?tu(u,[u.size]):u}});var pp=Es({notEqual_:function(e,t){let n=Ts(e,"a","notEqual","string_or_numeric"),r=Ts(t,"b","notEqual","string_or_numeric");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(Vn,a)}});var dp=Es({onesLike_:function(e){let t={x:Ts(e,"x","onesLike")};return ms.runKernel(jn,t)}});var cp=Es({outerProduct_:function(e,t){let n=Ts(e,"v1","outerProduct"),r=Ts(t,"v2","outerProduct");Q(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=tu(n,[-1,1]),s=tu(r,[1,-1]);return Yi(a,s)}});var fp=Es({pad_:function(e,t,n=0){let r=Ts(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return ms.runKernel(Xn,s,a)}});var mp=Es({pad1d_:function(e,t,n=0){return Q(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),fp(e,[t],n)}});var gp=Es({pad2d_:function(e,t,n=0){return Q(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fp(e,t,n)}});var yp=Es({pad3d_:function(e,t,n=0){return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fp(e,t,n)}});var bp=Es({pad4d_:function(e,t,n=0){return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),fp(e,t,n)}});var xp=Es({spaceToBatchND_:function(e,t,n){let r=Ts(e,"x","spaceToBatchND");Q(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Q(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Q(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return ms.runKernel(Nr,a,s)}});var vp=Es({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Ts(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(Jl(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let h,p=Vl(l.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];h="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([p.inHeight,p.inWidth],d,h),g=c?r:"valid",y=c?l:xp(l,d,f),b=("avg"===n?()=>nu(y,t,s,g,i):()=>Zh(y,t,s,g,i))(),x=c?b:uu(b,d,m);return u?tu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var wp=Es({prelu_:function(e,t){let n={x:Ts(e,"x","prelu"),alpha:Ts(t,"alpha","prelu")};return ms.runKernel(Jn,n)}});var kp=Es({prod_:function(e,t=null,n=!1){let r=Ts(e,"x","prod");"bool"===r.dtype&&(r=Ti(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return ms.runKernel(Qn,a,s)}});var Ip=Es({rand_:function(e,t,n){let r=re(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ms.makeTensor(a,e,n)}}),Sp=c(N()),Np=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Sp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var Tp=Es({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Sp.alea(a.toString()),this.randn=new Np(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var _p=Es({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Np(t,n,r,!1,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var Cp=Es({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=Ni(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Sp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Ep(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return ms.runKernel(er,{},a)}var $p=Es({reciprocal_:function(e){let t={x:Ts(e,"x","reciprocal")};return ms.runKernel(nr,t)}});var Ap=Es({relu_:function(e){let t={x:Ts(e,"x","relu")};return ms.runKernel(rr,t)}});var Fp=Es({relu6_:function(e){let t={x:Ts(e,"x","relu6")};return ms.runKernel(ur,t)}});var Rp=Es({reverse_:function(e,t){let n={x:Ts(e,"x","reverse")},r={dims:t};return ms.runKernel(hr,n,r)}});var Dp=Es({reverse1d_:function(e){let t=Ts(e,"x","reverse");return Q(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Rp(t,0)}});var Mp=Es({reverse2d_:function(e,t){let n=Ts(e,"x","reverse");return Q(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Rp(n,t)}});var Op=Es({reverse3d_:function(e,t){let n=Ts(e,"x","reverse");return Q(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Rp(n,t)}});var Lp=Es({reverse4d_:function(e,t){let n=Ts(e,"x","reverse");return Q(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Rp(n,t)}});var zp=Es({round_:function(e){let t={x:Ts(e,"x","round")};return ms.runKernel(pr,t)}});var Pp=Es({rsqrt_:function(e){let t={x:Ts(e,"x","rsqrt","float32")};return ms.runKernel(dr,t)}});var Bp=Es({selu_:function(e){let t={x:Ts(e,"x","selu")};return ms.runKernel(gr,t)}});var Wp=Es({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Ts(e,"x","separableConv2d"),l=Ts(t,"depthwiseFilter","separableConv2d"),u=Ts(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=tu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),Q(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Q(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Q(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];Q(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Lu(h,l,r,a,i,s),m=Su(f,u,1,"valid",i);return p?tu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Vp=async function(e,t){let n=Ts(e,"x","setdiff1d"),r=Ts(t,"y","setdiff1d");Q(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Q(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Q(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Ga([o],n.dtype),u=new Ga([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Up=Es({sign_:function(e){let t={x:Ts(e,"x","sign")};return ms.runKernel(vr,t)}});var Gp=Es({sin_:function(e){let t={x:Ts(e,"x","sin","float32")};return ms.runKernel(br,t)}});var Hp=Es({sinh_:function(e){let t={x:Ts(e,"x","sinh")};return ms.runKernel(xr,t)}});var jp=Es({slice1d_:function(e,t,n){let r=Ts(e,"x","slice1d");return Q(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),iu(r,[t],[n])}});var qp=Es({slice2d_:function(e,t,n){let r=Ts(e,"x","slice2d");return Q(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),iu(r,t,n)}});var Kp=Es({slice3d_:function(e,t,n){let r=Ts(e,"x","slice3d");return Q(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),iu(r,t,n)}});var Xp=Es({slice4d_:function(e,t,n){let r=Ts(e,"x","slice4d");return Q(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),iu(r,t,n)}});var Yp=Es({softmax_:function(e,t=-1){let n=Ts(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return ms.runKernel(_r,r,a)}});var Zp=Es({fft_:function(e){Q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return ms.runKernel(Zt,t)}});var Jp=Es({ifft_:function(e){Q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return ms.runKernel(un,t)}});var Qp=Es({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=tu(e,[r,n]);t=Jp(a)}else{let a=[r,2*(n-1)],s=tu(ko(e),[r,n]),i=tu(vo(e),[r,n]),o=Rp(iu(s,[0,1],[r,n-2]),1),l=_l(Rp(iu(i,[0,1],[r,n-2]),1),sh(-1)),u=au([s,o],1),h=au([i,l],1),p=tu($s(u,h),[a[0],a[1]]);t=Jp(p)}if(t=ko(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=tu(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var ed=Es({split_:function(e,t,n=0){let r={x:Ts(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ms.runKernel(Tr,r,a)}});var td=Es({rfft_:function(e,t){Q("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=iu(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=au([e,np(a)],e.shape.length-1),r=t}else n=e;let s=Vu(n),i=tu($s(n,s),[a,r]),o=Zp(i),l=Math.floor(r/2)+1,u=ko(o),h=vo(o),p=ed(u,[l,r-l],u.shape.length-1),d=ed(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,tu($s(p[0],d[0]),c)}});var nd=Es({squaredDifference_:function(e,t){let n=Ts(e,"a","squaredDifference"),r=Ts(t,"b","squaredDifference");[n,r]=is(n,r),Co(n.shape,r.shape);let a={a:n,b:r};return ms.runKernel(Rr,a,{})}});var rd=Es({squeeze_:function(e,t){let n=Ts(e,"x","squeeze");return tu(n,fe(n.shape,t).newShape)}});var ad=Es({stack_:function(e,t=0){let n=_s(e,"tensors","stack","string_or_numeric");Q(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Q(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return ms.runKernel(Kn,r,a)}});var sd=Es({step_:function(e,t=0){let n={x:Ts(e,"x","step")},r={alpha:t};return ms.runKernel(Zr,n,r)}});var id=Es({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Ts(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ms.runKernel(Mr,u,h)}});var od=Es({tan_:function(e){let t={x:Ts(e,"x","tan","float32")};return ms.runKernel(Br,t)}});function ld(e,t){te(e);let n=Is(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return As(e,null,n,t)}function ud(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Is(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return As(e,t,r,n)}function hd(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Is(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function pd(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Is(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function dd(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Is(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return As(e,t=t||r,r,n)}var cd=Es({topk_:function(e,t=1,n=!0){let r=Ts(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=ms.runKernel(Ur,s,i);return{values:o,indices:l}}});var fd=Es({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Np(t,n,r,!0,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var md=Es({unique_:function(e,t=0){let n=Ts(e,"x","unique","string_or_numeric");Q(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=ms.runKernel(jr,r,a);return{values:s,indices:i}}});var gd=Es({unsortedSegmentSum_:function(e,t,n){let r=Ts(e,"x","unsortedSegmentSum"),a=Ts(t,"segmentIds","unsortedSegmentSum","int32");Q(ie(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return ms.runKernel(Kr,s,i)}});var yd=Es({unstack_:function(e,t=0){let n=Ts(e,"x","unstack","string_or_numeric");Q(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return ms.runKernel(qr,r,a)}});function bd(e,t){return Xh(e,t,"right")}function xd(e,t=!0,n,r){return ms.makeVariable(e,t,n,r)}function vd(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=Ni(e,"int32"),a=Ni([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var wd=async function(e){let t=Ts(e,"condition","whereAsync","bool"),n=await t.data(),r=vd(t.shape,n);return e!==t&&t.dispose(),r};var kd=async function(e,t,n){let r=Ts(e,"tensor","boolMask"),a=Ts(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Q(i>0,(()=>"mask cannot be scalar")),ee(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=tu(r,u),p=tu(a,[-1]),d=await wd(p),c=rd(d,[1]),f=xh(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f};var Id=Es({movingAverage_:function(e,t,n,r,a=!0){let s=Ts(e,"v","movingAverage"),i=Ts(t,"x","movingAverage"),o=Ts(n,"decay","movingAverage");os(s,i),Q(se(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=sh(1),u=Wh(l,o),h=_l(Wh(i,s),u);if(a){Q(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Ts(r,"step","movingAverage");h=Tl(h,Wh(l,ah(o,e)))}return Sl(s,h)}});var Sd=Es({scatterND_:function(e,t,n){let r=Ts(e,"indices","scatterND","int32"),a=Ts(t,"updates","scatterND");Wo(a,r,n);let s={indices:r,updates:a},i={shape:n};return ms.runKernel(cr,s,i)}});var Nd=Es({sparseToDense_:function(e,t,n,r=0){let a=Ts(e,"sparseIndices","sparseToDense","int32"),s=Ts(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ts(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return ms.runKernel(Fr,o,l)}});var Td=Es({gatherND_:function(e,t){let n=Ts(t,"indices","gatherND","int32"),r={params:Ts(e,"x","gatherND","string_or_numeric"),indices:n};return ms.runKernel(an,r)}});var _d=Es({dropout_:function(e,t,n,r){let a=Ts(e,"x","dropout");if(Q("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Q(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof qa?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Tl(bh(Sl(Cp(s,0,1,"float32",r),i)),i);return _l(a,o)}});function Cd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ed(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ld(a,"float32")}var $d=async function(e,t,n=1){let r=Ts(e,"predictions","inTopK"),a=Ts(t,"targets","inTopK");Q(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Q(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ee(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Q(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=me("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Fs(h,a.shape,"bool")},Ad={};d(Ad,{conv2d:()=>Ld,depthwiseConv2d:()=>Bd,matMul:()=>Wd});var Fd=Es({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=tu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Q(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Q(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];Q(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Q(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),eu("conv2dDerFilter",a,i);let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return ms.runKernel(It,p,d)}});function Rd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return _l(e,sd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Dd(e,t){let n=t,r=_o(e.shape,t.shape);return r.length>0&&(n=lh(n,r)),tu(n,e.shape)}function Md(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ap(e);if("elu"===t)return ju(e);if("relu6"===t)return Fp(e);if("prelu"===t)return wp(e,n);if("leakyrelu"===t)return Nh(e,r);if("sigmoid"===t)return su(e);throw new Error(`Unknown fused activation ${t}.`)}var Od=(e,t)=>!(e>0)||"linear"===t;var Ld=Es({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Od(ms.state.gradientDepth,l)){Q("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=Su(e,t,n,r,a,s,i);return null!=o&&(p=Sl(p,o)),Md(p,l,u,h)}let p=Ts(e,"x","conv2d","float32"),d=Ts(t,"filter","conv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=tu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Q(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),Q(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),eu("fused conv2d",r,i);let m="NHWC"===a?c.shape[3]:c.shape[1];Q(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),Q(Jl(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=Gl(c.shape,d.shape,n,s,r,i);if(null!=o&&(g=Ts(o,"bias","fused conv2d"),[g]=is(g,p),"NHWC"===a?Co(b.outShape,g.shape):(Q(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),Q(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(Q(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Q(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Co(e,b.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=Ts(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Q("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));let[i,o,u,h]=t,p=Rd(e,u,l);Q(Zl(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let d=[Tu(o.shape,p,i,n,r),Fd(o,p,i.shape,n,r)];if(null!=h){let e=Dd(h,p);d.push(e)}return d},v={x:c,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Lh(((e,t,n)=>{let r=ms.runKernel(ta,v,w);return n([t,e,r]),f&&(r=tu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,d):Lh(((e,t,n,r)=>{let a=ms.runKernel(ta,v,w);return r([t,e,a,n]),f&&(a=tu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,d,g)}});var zd=Es({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=tu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return ms.runKernel(Ot,u,h)}});var Pd=Es({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=tu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=ms.runKernel(Lt,u,h);return l?tu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Bd=Es({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Od(ms.state.gradientDepth,l)){let p=Lu(e,t,n,r,a,s,i);return null!=o&&(p=Sl(p,o)),Md(p,l,u,h)}let p=Ts(e,"x","depthwiseConv2d","float32"),d=Ts(t,"filter","depthwiseConv2d","float32"),c=p,f=!1;3===p.rank&&(f=!0,c=tu(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Q(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),Q(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Q(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),Q(Jl(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),eu("fused depthwiseConv2d",r,i);let m,g,y=Gl(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=Ts(o,"bias","fused conv2d"),[m]=is(m,p),Co(y.outShape,m.shape)),null!=u&&(g=Ts(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Q(Zl(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=Rd(e,u,l),d=Pd(o.shape,p,a,n,r,s,i),c=zd(o,p,a.shape,n,r,s,i);if(null!=h){return[d,c,Dd(m,p)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?Lh(((e,t,n)=>{let r=ms.runKernel(na,x,v);return n([t,e,r]),f&&(r=tu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):Lh(((e,t,n,r)=>{let a=ms.runKernel(na,x,v);return r([t,e,a,n]),f&&(a=tu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Wd=Es({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Od(ms.state.gradientDepth,s)){let l=Yi(e,t,n,r);return null!=a&&(l=Sl(l,a)),Md(l,s,i,o)}let l=Ts(e,"a","fused matMul"),u=Ts(t,"b","fused matMul");[l,u]=is(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=re(f),y=re(m);Q(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=Co(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),w=tu(l,n?[g,h,d]:[g,d,h]),k=tu(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=Ts(a,"bias","fused matMul"),[b]=is(b,l),Co(v,b.shape)),null!=i&&(x=Ts(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=Rd(tu(e,h.shape),h,s);if(n||r?!n&&r?(i=Yi(d,u,!1,!1),o=Yi(d,l,!0,!1)):n&&!r?(i=Yi(u,d,!1,!0),o=Yi(l,d,!1,!1)):(i=Yi(u,d,!0,!0),o=Yi(d,l,!0,!0)):(i=Yi(d,u,!1,!0),o=Yi(l,d,!0,!1)),null!=a){return[i,o,Dd(p,d)]}return[i,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Lh(((e,t,n)=>{let r=ms.runKernel(ea,S,N);return n([e,t,r]),{value:tu(r,v),gradFunc:I}}))(w,k):Lh(((e,t,n,r)=>{let a=ms.runKernel(ea,S,N);return r([e,t,a,n]),{value:tu(a,v),gradFunc:I}}))(w,k,b)}});var Vd=Es({hammingWindow_:function(e){return Ed(e,.54,.46)}});var Ud=Es({hannWindow_:function(e){return Ed(e,.5,.5)}});var Gd=Es({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(iu(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=au([iu(e,s,t-r),yh([r],a)]);i.push(o),s+=n}return 0===i.length?ud([],[0,t]):tu(au(i),[i.length,t])}});var Hd=Es({stft_:function(e,t,n,r,a=Ud){null==r&&(r=Cd(t));let s=Gd(e,t,n),i=_l(s,a(t));return td(i,r)}});var jd=Es({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=Ts(e,"image","cropAndResize"),o=Ts(t,"boxes","cropAndResize","float32"),l=Ts(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Q(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Q(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Q(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Q(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Q(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Q("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return ms.runKernel(Ft,h,p)}});var qd=Es({flipLeftRight_:function(e){let t=Ts(e,"image","flipLeftRight","float32");Q(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return ms.runKernel(Qt,n,{})}});var Kd=Es({grayscaleToRGB_:function(e){let t=Ts(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Q(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Q(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,mh(t,a)}});var Xd=Es({rotateWithOffset_:function(e,t,n=0,r=.5){let a=Ts(e,"image","rotateWithOffset","float32");Q(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return ms.runKernel(Qr,s,i)}});function Yd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Q(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Q(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Q(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Q(1===t.rank,(()=>"scores must be a 1D tensor")),Q(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Q(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Zd=Es({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ts(e,"boxes","nonMaxSuppression","float32"),i=Ts(t,"scores","nonMaxSuppression","float32"),o=Yd(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ms.runKernel(Un,{boxes:s,scores:i},l)}});function Jd(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Qd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Qd(e,t){return e>t?1:e<t?-1:0}function ec(e,t,n,r,a){return rc(e,t,n,r,a,0)}function tc(e,t,n,r,a,s){return rc(e,t,n,r,a,0,!1,s,!0)}function nc(e,t,n,r,a,s){return rc(e,t,n,r,a,s,!0)}function rc(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(ic);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=ac(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*sc(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Jd(u,t,ic))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function ac(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function sc(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function ic(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var oc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Ts(e,"boxes","nonMaxSuppressionAsync"),i=Ts(t,"scores","nonMaxSuppressionAsync"),o=Yd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=ec(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ld(p,"int32")};var lc=Es({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),l=Yd(i,o,n,r,a,s),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=ms.runKernel(Hn,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}});var uc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),l=Yd(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=nc(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ld(d,"int32"),selectedScores:ld(c)}};var hc=Es({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),l=Yd(i,o,n,r,a,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=ms.runKernel(Gn,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var pc=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),l=Yd(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=tc(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ld(f,"int32"),validOutputs:sh(m,"int32")}};var dc=Es({resizeBilinear_:function(e,t,n=!1,r=!1){let a=Ts(e,"images","resizeBilinear");Q(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Q(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Q(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=tu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=ms.runKernel(or,o,l);return i?tu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var cc=Es({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=Ts(e,"images","resizeNearestNeighbor");Q(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Q(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Q("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Q(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=tu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=ms.runKernel(sr,o,l);return i?tu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var fc=Es({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=Ts(e,"image","threshold"),u=l.shape[0]*l.shape[1],h=_l(ld([r]),255);if(Q(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Q(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Q("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Q("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=ed(l,[1,1,1],-1);let e=_l(a,.2989),t=_l(s,.587),n=_l(i,.114);o=Sl(Sl(e,t),n)}else o=e;if("otsu"===t){h=function(e,t){let n,r,a,s,i,o,l=ld([-1]),u=ld([0]),h=ld([0]);for(let p=0;p<e.size-1;p++){n=iu(e,0,p+1),r=iu(e,p+1),i=Tl(lh(n),t),o=Tl(lh(r),t);let d=lh(_l(n,Ep(0,n.size)));a=Tl(d,lh(n));let c=yh(r.shape,n.size),f=Sl(Ep(0,r.size),c),m=_l(r,f);s=Tl(lh(m),lh(r));let g=Wh(a,s),y=Wh(a,s),b=_l(i,o);h=_l(_l(b,g),y);let x=vh(h,u);u=Wu(x,h,u),l=Wu(x,ld([p]),l)}return l}(mu(Ti(zp(o),"int32"),Fs([]),256),u)}let p=n?_h(o,h):vh(o,h);return Ti(_l(p,255),"int32")}});var mc=Es({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=Ts(e,"image","transform","float32"),o=Ts(t,"transforms","transform","float32");Q(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Q(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ms.runKernel(Gr,l,u)}});var gc=Es({bandPart_:function(e,t,n){Q(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Q(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=Ts(e,"a","bandPart");Q(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=tu(Ep(0,s,1,"int32"),[-1,1]),l=Ep(0,i,1,"int32"),u=Wh(o,l),h=Gh(_h(u,sh(+t,"int32")),wh(u,sh(-n,"int32"))),p=np([s,i],r.dtype);return tu(ad(yd(tu(r,[-1,s,i])).map((e=>Wu(h,e,p)))),a)}});var yc=Es({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ed(e,e.shape[0],0).map((e=>rd(e,[0])));Q(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(ms.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=_l(lh(_l(n[r],e)),n[r]);e=Wh(e,t)}return Tl(e,hh(e,"euclidean"))})));return t?ad(n,0):n}});function bc(e,t=!1){return ms.tidy((()=>{Q(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=gh(n),s=_i(e),i=ud([[1]],[1,1]),o=_i(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=ms.tidy((()=>{let t=iu(s,[e,e],[n-e,1]),l=hh(t),u=iu(s,[e,e],[1,1]),h=Wu(vh(u,0),ud([[-1]]),ud([[1]])),p=Wh(u,_l(h,l)),d=Tl(t,p);o=1===d.shape[0]?_i(i):au([i,iu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=wo(Tl(Yi(h,p),l)),f=iu(s,[e,0],[n-e,r]),m=_l(c,o),g=Io(o);if(0===e)s=Wh(f,Yi(m,Yi(g,f)));else{let t=Wh(f,Yi(m,Yi(g,f)));s=au([iu(s,[0,0],[e,r]),t],0)}let y=Io(m),b=iu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Wh(b,Yi(Yi(b,o),y));else{let t=Wh(b,Yi(Yi(b,o),y));a=au([iu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),oo([t,l,u])}return!t&&n>r&&(a=iu(a,[0,0],[n,r]),s=iu(s,[0,0],[r,r])),[a,s]}))}var xc,vc=Es({qr_:function(e,t=!1){if(Q(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return bc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=yd(tu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=bc(e,t);a.push(n),s.push(r)})),[tu(ad(a,0),e.shape),tu(ad(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(xc||(xc={}));var wc=Es({computeWeightedLoss_:function(e,t,n=xc.SUM_BY_NONZERO_WEIGHTS){let r=Ts(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Ts(t,"weights","computeWeightedLoss"));let s=null==a?r:_l(r,a);if(n===xc.NONE)return s;if(n===xc.SUM)return lh(s);if(n===xc.MEAN){if(null==a)return tp(s);{let e=r.size/a.size,t=Tl(lh(s),lh(a));return e>1?Tl(t,sh(e)):t}}if(n===xc.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Tl(lh(s),sh(r.size));{let e=_l(a,rp(r.shape)),t=Ti(lh(pp(e,sh(0))),"float32");return Tl(lh(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var kc=Es({absoluteDifference_:function(e,t,n,r=xc.SUM_BY_NONZERO_WEIGHTS){let a=Ts(e,"labels","absoluteDifference"),s=Ts(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Ts(n,"weights","absoluteDifference")),ee(a.shape,s.shape,"Error in absoluteDifference: ");let o=Cl(Wh(a,s));return wc(o,i,r)}});var Ic=Es({cosineDistance_:function(e,t,n,r,a=xc.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"labels","cosineDistance"),i=Ts(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Ts(r,"weights","cosineDistance")),ee(s.shape,i.shape,"Error in cosineDistance: ");let l=sh(1),u=Wh(l,lh(_l(s,i),n,!0));return wc(u,o,a)}});var Sc=Es({hingeLoss_:function(e,t,n,r=xc.SUM_BY_NONZERO_WEIGHTS){let a=Ts(e,"labels","hingeLoss"),s=Ts(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Ts(n,"weights","hingeLoss")),ee(a.shape,s.shape,"Error in hingeLoss: ");let o=sh(1);a=Wh(_l(sh(2),a),o);let l=Ap(Wh(o,_l(a,s)));return wc(l,i,r)}});var Nc=Es({huberLoss_:function(e,t,n,r=1,a=xc.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"labels","huberLoss"),i=Ts(t,"predictions","huberLoss"),o=null;null!=n&&(o=Ts(n,"weights","huberLoss")),ee(s.shape,i.shape,"Error in huberLoss: ");let l=sh(r),u=Cl(Wh(i,s)),h=sp(u,l),p=Wh(u,h),d=Sl(_l(sh(.5),oh(h)),_l(l,p));return wc(d,o,a)}});var Tc=Es({logLoss_:function(e,t,n,r=1e-7,a=xc.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"labels","logLoss"),i=Ts(t,"predictions","logLoss"),o=null;null!=n&&(o=Ts(n,"weights","logLoss")),ee(s.shape,i.shape,"Error in logLoss: ");let l=sh(1),u=sh(r),h=wo(_l(s,$h(Sl(i,u)))),p=_l(Wh(l,s),$h(Sl(Wh(l,i),u))),d=Wh(h,p);return wc(d,o,a)}});var _c=Es({meanSquaredError_:function(e,t,n,r=xc.SUM_BY_NONZERO_WEIGHTS){let a=Ts(e,"labels","meanSquaredError"),s=Ts(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Ts(n,"weights","meanSquaredError")),ee(a.shape,s.shape,"Error in meanSquaredError: ");let o=nd(a,s);return wc(o,i,r)}});var Cc=Es({sigmoidCrossEntropy_:function(e,t,n,r=0,a=xc.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"multiClassLabels","sigmoidCrossEntropy"),i=Ts(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Ts(n,"weights","sigmoidCrossEntropy")),ee(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=sh(r),t=sh(1),n=sh(.5);s=Sl(_l(s,Wh(t,e)),_l(n,e))}let l=function(e,t){let n=Ts(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ts(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Ap(r),s=_l(r,n),i=Ah(dh(wo(Cl(r))));return Sl(Wh(a,s),i)}(s,i);return wc(l,o,a)}});var Ec=Es({softmaxCrossEntropy_:function(e,t,n,r=0,a=xc.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"onehotLabels","softmaxCrossEntropy"),i=Ts(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Ts(n,"weights","softmaxCrossEntropy")),ee(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=sh(r),t=sh(1),n=sh(s.shape[1]);s=Sl(_l(s,Wh(t,e)),Tl(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Lh(((e,t,r)=>{let a=Uh(t,[n],!0),s=Wh(Ti(t,"float32"),a);r([e,s]);let i=wo(_l(s,e));return{value:lh(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Zu(e.shape,[n]);return[_l(tu(e,s),Wh(Ti(r,"float32"),dh(a))),_l(tu(e,s),Wh(dh(a),Ti(r,"float32")))]}}}))(e,t)}(s,i);return wc(l,o,a)}});var $c=Es({sparseFillEmptyRows_:function(e,t,n,r){let a=Ts(e,"indices","sparseFillEmptyRows","int32"),s=Ts(t,"values","sparseFillEmptyRows"),i=Ts(n,"denseShape","sparseFillEmptyRows","int32"),o=Ts(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=ms.runKernel(Cr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var Ac=Es({sparseReshape_:function(e,t,n){let r=Ts(e,"inputIndices","sparseReshape","int32"),a=Ts(t,"inputShape","sparseReshape","int32"),s=Ts(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=ms.runKernel(Er,i);return{outputIndices:o[0],outputShape:o[1]}}});var Fc=Es({sparseSegmentMean_:function(e,t,n){let r=Ts(e,"data","sparseSegmentMean"),a=Ts(t,"indices","sparseSegmentMean","int32"),s=Ts(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return ms.runKernel($r,i)}});var Rc=Es({sparseSegmentSum_:function(e,t,n){let r=Ts(e,"data","sparseSegmentSum"),a=Ts(t,"indices","sparseSegmentSum","int32"),s=Ts(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return ms.runKernel(Ar,i)}});var Dc=Es({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=Ts(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Ts(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:l,dataSplits:u},d=ms.runKernel(Or,p,h);return{nGrams:d[0],nGramsSplits:d[1]}}});var Mc=Es({stringSplit_:function(e,t,n=!0){let r=Ts(e,"input","stringSplit","string"),a=Ts(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=ms.runKernel(Lr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var Oc=Es({stringToHashBucketFast_:function(e,t){let n=Ts(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return ms.runKernel(zr,a,r)}}),Lc={fft:Zp,ifft:Jp,rfft:td,irfft:Qp},zc={hammingWindow:Vd,hannWindow:Ud,frame:Gd,stft:Hd},Pc={flipLeftRight:qd,grayscaleToRGB:Kd,resizeNearestNeighbor:cc,resizeBilinear:dc,rotateWithOffset:Xd,cropAndResize:jd,nonMaxSuppression:Zd,nonMaxSuppressionAsync:oc,nonMaxSuppressionWithScore:lc,nonMaxSuppressionWithScoreAsync:uc,nonMaxSuppressionPadded:hc,nonMaxSuppressionPaddedAsync:pc,threshold:fc,transform:mc},Bc={bandPart:gc,gramSchmidt:yc,qr:vc},Wc={absoluteDifference:kc,computeWeightedLoss:wc,cosineDistance:Ic,hingeLoss:Sc,huberLoss:Nc,logLoss:Tc,meanSquaredError:_c,sigmoidCrossEntropy:Cc,softmaxCrossEntropy:Ec},Vc={sparseFillEmptyRows:$c,sparseReshape:Ac,sparseSegmentMean:Fc,sparseSegmentSum:Rc},Uc={stringNGrams:Dc,stringSplit:Mc,stringToHashBucketFast:Oc},Gc=class extends ll{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return oo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Oh(e,t)}dispose(){null!=this.iterations_&&oo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:sh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Gc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Hc=class extends Gc{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ms.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:io((()=>Vu(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:io((()=>Vu(r).variable(false)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;io((()=>{let e=Sl(_l(s,this.rho),_l(oh(a),1-this.rho)),t=_l(Tl(ih(Sl(i,this.epsilon)),ih(Sl(s,this.epsilon))),a),n=Sl(_l(i,this.rho),_l(oh(t),1-this.rho));s.assign(e),i.assign(n);let o=Sl(_l(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(oo(this.accumulatedGrads.map((e=>e.variable))),oo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Hc.className="Adadelta",hl(Hc);var jc=class extends Gc{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ms.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:io((()=>yh(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;io((()=>{let e=Sl(s,oh(a));s.assign(e);let t=Sl(_l(Tl(a,ih(Sl(e,ms.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&oo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};jc.className="Adagrad",hl(jc);var qc=class extends Gc{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],io((()=>{this.accBeta1=sh(t).variable(),this.accBeta2=sh(n).variable()})),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);io((()=>{let n=Wh(1,this.accBeta1),r=Wh(1,this.accBeta2);t.forEach(((t,a)=>{let s=ms.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:io((()=>Vu(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:io((()=>Vu(s).variable(false)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=Sl(_l(o,this.beta1),_l(i,1-this.beta1)),h=Sl(_l(l,this.beta2),_l(oh(i),1-this.beta2)),p=Tl(u,n),d=Tl(h,r);o.assign(u),l.assign(h);let c=Sl(_l(Tl(p,Sl(ih(d),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(_l(this.accBeta1,this.beta1)),this.accBeta2.assign(_l(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&oo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&oo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),io((()=>{this.accBeta1.assign(ah(this.beta1,this.iterations_+1)),this.accBeta2.assign(ah(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};qc.className="Adam",hl(qc);var Kc=class extends Gc{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],io((()=>{this.iteration=sh(0).variable(),this.accBeta1=sh(t).variable()})),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);io((()=>{let n=Wh(1,this.accBeta1),r=Tl(-this.learningRate,Sl(_l(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=ms.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Vu(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Vu(s).variable(false)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=Sl(_l(o,this.beta1),_l(i,1-this.beta1)),h=_l(l,this.beta2),p=Cl(i),d=ep(h,p);o.assign(u),l.assign(d);let c=Sl(_l(Tl(r,n),Tl(u,Sl(d,this.epsilon))),s);s.assign(c)})),this.iteration.assign(Sl(this.iteration,1)),this.accBeta1.assign(_l(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&oo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&oo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Kc.className="Adamax",hl(Kc);var Xc=class extends Gc{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=ms.registeredVariables[t];io((()=>{let e=Sl(_l(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=lo(sh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Xc.className="SGD",hl(Xc);var Yc=class extends Xc{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=sh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ms.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:io((()=>Vu(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&io((()=>{let e,t=Sl(_l(this.m,a),s);e=this.useNesterov?Sl(_l(this.c,Sl(s,_l(t,this.m))),r):Sl(_l(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&oo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Yc.className="Momentum",hl(Yc);var Zc=class extends Gc{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ms.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ms.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:io((()=>Vu(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:io((()=>Vu(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:io((()=>Vu(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;io((()=>{let e=Sl(_l(i,this.decay),_l(oh(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=Sl(_l(t,this.decay),_l(s,1-this.decay)),l=Tl(_l(s,this.learningRate),ih(Wh(e,Sl(oh(a),this.epsilon)))),u=Sl(_l(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=Wh(r,u);r.assign(h)}else{let e=Sl(_l(i,this.decay),_l(oh(s),1-this.decay)),t=Sl(_l(o,this.momentum),Tl(_l(s,this.learningRate),ih(Sl(e,this.epsilon))));i.assign(e),o.assign(t);let n=Wh(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&oo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&oo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&oo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Zc.className="RMSProp",hl(Zc);var Jc=class{static sgd(e){return new Xc(e)}static momentum(e,t,n=!1){return new Yc(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Zc(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new qc(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Hc(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Kc(e,t,n,r,a)}static adagrad(e,t=.1){return new jc(e,t)}},Qc={sgd:Jc.sgd,momentum:Jc.momentum,adadelta:Jc.adadelta,adagrad:Jc.adagrad,rmsprop:Jc.rmsprop,adamax:Jc.adamax,adam:Jc.adam},ef="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function tf(){return new Promise((e=>ef((()=>e()))))}var nf={};function rf(e,t){let n=e[0].length;e.forEach(((e,t)=>{Q(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Q(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Q(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function af(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}d(nf,{ERF_A1:()=>yf,ERF_A2:()=>bf,ERF_A3:()=>xf,ERF_A4:()=>vf,ERF_A5:()=>wf,ERF_P:()=>gf,PARALLELIZE_THRESHOLD:()=>sf,SELU_SCALE:()=>mf,SELU_SCALEALPHA:()=>ff,applyActivation:()=>Md,assertAndGetBroadcastShape:()=>Co,assertAxesAreInnerMostDims:()=>Ju,assertParamsConsistent:()=>rf,assignToTypedArray:()=>_f,axesAreInnerMostDims:()=>Ku,calculateShapes:()=>Vo,checkEinsumDimSizes:()=>Df,checkPadOnDimRoundingMode:()=>eu,combineLocations:()=>Xu,complexWithEvenIndex:()=>Sf,complexWithOddIndex:()=>Nf,computeConv2DInfo:()=>Gl,computeConv3DInfo:()=>Hl,computeDefaultPad:()=>jl,computeDilation2DInfo:()=>Wl,computeOptimalWindowSize:()=>of,computeOutAndReduceShapes:()=>Yu,computeOutShape:()=>af,computePool2DInfo:()=>Vl,computePool3DInfo:()=>Ul,convertConv2DDataFormat:()=>Ql,decodeEinsumEquation:()=>Ff,eitherStridesOrDilationsAreOne:()=>Jl,expandShapeToKeepDim:()=>Zu,exponent:()=>Ef,exponents:()=>Cf,fromStringArrayToUint8:()=>nm,fromUint8ToStringArray:()=>tm,getAxesPermutation:()=>Qu,getBroadcastDims:()=>To,getComplexWithIndex:()=>Tf,getEinsumComputePath:()=>Mf,getEinsumPermutation:()=>Rf,getFusedBiasGradient:()=>Dd,getFusedDyActivation:()=>Rd,getImageCenter:()=>lf,getInnerMostAxes:()=>th,getPermuted:()=>hf,getReductionAxes:()=>_o,getReshaped:()=>uf,getReshapedPermuted:()=>pf,getSliceBeginCoords:()=>df,getSliceSize:()=>cf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Pf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Bf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Wf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Gf,getSparseReshapeInputOutputMismatchErrorMessage:()=>jf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Hf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Vf,getSparseReshapeNegativeOutputDimErrorMessage:()=>Uf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Yf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>qf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Kf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Xf,getUndoAxesPermutation:()=>eh,isIdentityPermutation:()=>Of,log:()=>aa,mergeRealAndImagArrays:()=>kf,prepareAndValidate:()=>zo,prepareSplitSize:()=>zf,segment_util:()=>Zf,shouldFuse:()=>Od,slice_util:()=>Uo,splitRealAndImagArrays:()=>If,tupleValuesAreOne:()=>Zl,upcastType:()=>as,validateInput:()=>Wo,validateUpdateShape:()=>Bo,warn:()=>ra});var sf=30;function of(e){return e<=sf?e:Ce(e,Math.floor(Math.sqrt(e)))}function lf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function uf(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function hf(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function pf(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function df(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function cf(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var ff=1.7580993408473768,mf=1.0507009873554805,gf=.3275911,yf=.254829592,bf=-.284496736,xf=1.421413741,vf=-1.453152027,wf=1.061405429;function kf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function If(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Sf(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Nf(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Tf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function _f(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Cf(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ef(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var $f="->",Af=/->/g;function Ff(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Af,"").length)/$f.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split($f);Q(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));let s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,h=[];for(let e=a.length;e<u;++e)h.push(e);return{allDims:o,summedDims:h,idDims:l}}function Rf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Df(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Q(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Mf(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Lf(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Of(e){return e.every(((e,t)=>e===t))}function Lf(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function zf(e,t,n=0){let r=[];if("number"==typeof t)Q(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Q(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Q(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Pf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Bf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Wf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Vf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Uf(e,t){return`size ${e} must be non-negative, not ${t}`}function Gf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Hf(e,t){return`Input to reshape is a SparseTensor with ${re(e)}\n  dense values, but the requested shape requires a multiple of ${re(t)}. inputShape=${e} outputShape= ${t}`}function jf(e,t){return`Input to reshape is a tensor with ${re(e)} dense values, but the requested shape has ${re(t)}. inputShape=${e} outputShape=${t}`}function qf(){return"segment ids must be >= 0"}function Kf(){return"segment ids are not increasing"}function Xf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Yf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Zf={};function Jf(e,t){let n,r=!1;for(e<=sf?(n=e,r=!0):n=Ce(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ce(e,n+1);return n}function Qf(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function em(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function tm(e){try{return e.map((e=>Oa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function nm(e){return e.map((e=>Ma(e)))}d(Zf,{collectGatherOpShapeInfo:()=>em,computeOutShape:()=>Qf,segOpComputeOptimalWindowSize:()=>Jf});var rm={};d(rm,{nonMaxSuppressionV3Impl:()=>ec,nonMaxSuppressionV4Impl:()=>tc,nonMaxSuppressionV5Impl:()=>nc,whereImpl:()=>vd});var am={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,sd(Ti(n,"float32"),-1))}}},sm={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=oh(Ti(n,"float32")),r=ih(Wh(sh(1),t));return wo(Tl(e,r))}}}},im={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ih(Wh(oh(Ti(n,"float32")),1));return Tl(e,t)}}}},om={kernelName:Ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=e,r=_o(n.shape,a);return r.length>0&&(t=lh(t,r)),tu(t,n.shape)},b:()=>{let t=e,n=_o(r.shape,a);return n.length>0&&(t=lh(t,n)),tu(t,r.shape)}}}},lm={kernelName:Ze,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},um={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vu(n)}}},hm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Vu(n)}}},pm={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,ih(Wh(sh(1),oh(Ti(n,"float32")))))}}},dm={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ih(Sl(sh(1),oh(Ti(n,"float32"))));return Tl(e,t)}}}},cm={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=Sl(oh(n),oh(r)),s=_l(e,Tl(r,t)),i=_o(n.shape,a);return i.length>0&&(s=lh(s,i)),tu(s,n.shape)},b:()=>{let t=Sl(oh(n),oh(r)),s=wo(_l(e,Tl(n,t))),i=_o(r.shape,a);return i.length>0&&(s=lh(s,i)),tu(s,r.shape)}}}},fm={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Sl(oh(Ti(n,"float32")),1))}}},mm={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Wh(sh(1),oh(Ti(n,"float32"))))}}};var gm=Es({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Ts(e,"dy","avgPool3dGrad"),o=Ts(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=tu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=tu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Q(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),eu("avgPool3dGrad",a,s);let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=ms.runKernel(ht,p,d);return h?tu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),ym={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>gm(e,r,a,s,i,o)}}};var bm=Es({avgPoolGrad_:function(e,t,n,r,a){let s=Ts(e,"dy","avgPoolGrad"),i=Ts(t,"input","avgPoolGrad");Q(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=tu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=tu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Q(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=ms.runKernel(lt,h,p);return u?tu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),xm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>bm(e,r,a,s,i)}}},vm={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Yi(e,a,!1,!1),b:()=>Yi(e,r,!0,!1)}:s&&!i?{a:()=>Yi(a,e,!1,!0),b:()=>Yi(r,e,!1,!1)}:{a:()=>Yi(a,e,!0,!0),b:()=>Yi(e,r,!0,!0)}:{a:()=>Yi(e,a,!1,!0),b:()=>Yi(r,e,!0,!1)}}},wm={kernelName:dt,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>xp(e,r,a)}}},km={kernelName:ft,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>lh(e,o,!0)}}},Im={kernelName:gt,gradFunc:e=>({x:()=>e.clone()})},Sm={kernelName:yt,gradFunc:e=>({x:()=>Vu(e)})},Nm={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Wu(Gh(wh(r,a),_h(r,s)),e,Vu(e))}}},Tm={kernelName:vt,inputsToSave:["x"],gradFunc:am.gradFunc},_m={kernelName:wt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ce(a,t[0].shape)[0],i=r.map((e=>e[s]));return ed(e,i,s).map((e=>()=>e))}},Cm={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Q(Zl(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Tu(r.shape,e,a,i,o,l),filter:()=>Fd(r,e,a.shape,i,o,l)}}},Em={kernelName:St,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Su(e,a,s,i,o,1,l),filter:()=>Fd(e,r,a.shape,s,i,o,l)}}};var $m=Es({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=tu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=tu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Q(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Q(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Q(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Q(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return ms.runKernel(Tt,o,l)}}),Am={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Q(Zl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Eu(i.shape,e,o,a,s),filter:()=>$m(i,e,o.shape,a,s)}}},Fm={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(wo(Gp(Ti(n,"float32"))),e)}}},Rm={kernelName:Et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(Hp(Ti(n,"float32")),e)}}},Dm={kernelName:At,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Qu([a],r.rank),n=Du(e,a,s,!i);return null!=t&&(n=Io(n,t)),n}}}},Mm={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Q(Zl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Q(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Q(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Q(Jl(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),eu("depthwiseConv2d",s,i),{x:()=>Pd(l.shape,e,u,a,s,o,i),filter:()=>zd(l,e,u.shape,a,s,o,i)}}},Om={kernelName:Pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>ms.runKernel(Bt,s,n),filter:()=>ms.runKernel(Wt,i,n)}}},Lm={kernelName:Gt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>ms.runKernel(Ht,r)}}},zm={kernelName:jt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=_l(dh(wo(oh(n))),2/Math.sqrt(Math.PI));return{x:()=>_l(e,r)}}},Pm={kernelName:Kt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,n)}}},Bm={kernelName:Xt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>tu(e,n.shape)}}},Wm={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,dh(n))}}},Vm={kernelName:en,gradFunc:e=>({x:()=>Vu(e)})},Um={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=Tl(e,Ti(r,"float32")),s=_o(n.shape,a);return s.length>0?tu(lh(t,s),n.shape):t},b:()=>{let t=_l(e,Ti(n,"float32")),s=_o(r.shape,a);s.length>0&&(t=tu(lh(t,s),r.shape));let i=oh(r);return wo(Tl(t,Ti(i,"float32")))}}}},Gm={kernelName:nn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?sh(1):o,u=_o(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=Wh(a,s),d=_l(e,l),c=Pp(Sl(i,sh(r))),f=_l(_l(_l(c,c),c),sh(-.5));return{x:()=>1===s.rank?tu(_l(_l(e,mh(tu(c,[1,1,1,s.shape[0]]),h)),l),a.shape):tu(_l(_l(e,c),l),a.shape),mean:()=>{let e=_l(_l(c,sh(-1)),d);return 1===s.rank&&(e=lh(e,u)),tu(e,s.shape)},variance:()=>{let e=_l(_l(f,p),d);return 1===s.rank&&(e=lh(e,u)),tu(e,s.shape)},scale:()=>{let t=_l(p,c),n=_l(e,t);return 1===s.rank&&(n=lh(n,u)),tu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=lh(t,u)),tu(t,s.shape)}}}},Hm={kernelName:rn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ce(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=jm(0,l),d=jm(l+1,l+1+h),c=qm([o,[n],u]),f=tu(e,c),m=tu(a,[n]),g=qm([[l],p,d]),y=Io(f,g),b=gd(y,m,r.shape[i]),x=eh(g);return b=Io(b,x),b},indices:()=>a}}};function jm(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function qm(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Km={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Vu(n),b:()=>Vu(r)}}},Xm={kernelName:ln,gradFunc:e=>({x:()=>Ti(e,"float32")})},Ym={kernelName:pn,gradFunc:e=>({x:()=>Vu(e)})},Zm={kernelName:dn,gradFunc:e=>({x:()=>Vu(e)})},Jm={kernelName:cn,gradFunc:e=>({x:()=>Vu(e)})},Qm={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=vh(r,0);return{x:()=>Wu(s,e,_l(e,a))}}},eg={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Sl(n,1))}}},tg={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,Ti(n,"float32"))}}},ng={kernelName:In,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=dh(r);return Wh(e,_l(lh(e,a,!0),t))}}}};var rg=Es({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return ms.runKernel(Tn,o,l)}}),ag={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>rg(r,a,e,s,i,o,l)}}};function sg(e,t,n,r){return t.rank<n.rank&&(t=tu(t,Zu(t.shape,r))),e.rank<n.rank&&(e=tu(e,Zu(e.shape,r))),{x:()=>_l(e,Ti(Bu(n,t),e.dtype))}}var ig={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=sg(e,t[1],s,ce(a,s.shape));return{x:()=>i.x()}}},og={kernelName:Cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>_l(e,Ti(wh(n,r),"float32")),b:()=>_l(e,Ti(Th(n,r),"float32"))}}};var lg=Es({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Ts(e,"dy","maxPool3dGrad"),l=Ts(t,"input","maxPool3dGrad"),u=Ts(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=tu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=tu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=tu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Q(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),Q(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),Q(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),eu("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=ms.runKernel(Fn,f,m);return c?tu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ug={kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>lg(e,r,a,s,i,o,l)}}};var hg=Es({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Ts(e,"dy","maxPoolGrad"),l=Ts(t,"input","maxPoolGrad"),u=Ts(n,"output","maxPoolGrad");Q(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Q(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Q(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),eu("maxPoolGrad",s,i);let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return ms.runKernel($n,h,p)}}),pg={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>hg(e,r,a,s,i,o)}}},dg={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ce(a,r.shape),i=re(Yu(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=tu(e,t);return Tl(_l(n,rp(r.shape,"float32")),i)}}}},cg={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=sg(e,i,s,ce(a,s.shape));return{x:()=>o.x()}}},fg={kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>_l(e,Ti(_h(n,r),"float32")),b:()=>_l(e,Ti(vh(n,r),"float32"))}}},mg={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>iu(e,s,r.shape)}}},gg={kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=_o(n.shape,a);return t.length>0?tu(lh(e,t),n.shape):e},b:()=>{let t=_l(e,wo(bh(Tl(n,r)))),s=_o(r.shape,a);return s.length>0?tu(lh(t,s),r.shape):t}}}},yg={kernelName:Bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=_l(e,Ti(r,"float32")),s=_o(n.shape,a);return s.length>0?tu(lh(t,s),n.shape):t},b:()=>{let t=_l(e,Ti(n,"float32")),s=_o(r.shape,a);return s.length>0?tu(lh(t,s),r.shape):t}}}},bg={kernelName:Wn,gradFunc:e=>({x:()=>wo(e)})},xg={kernelName:qn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>np(n.shape,"float32")}}},vg={kernelName:jn,gradFunc:e=>({x:()=>Vu(e)})},wg={kernelName:Kn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return yd(e,r).map((e=>()=>e))}},kg={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>iu(e,s,r.shape)}}},Ig={kernelName:Zn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Co(s.shape,i.shape);return{a:()=>{let t=Ti(i,"float32"),n=_l(e,_l(t,ah(s,Wh(t,sh(1))))),r=_o(s.shape,o);return r.length>0&&(n=lh(n,r)),tu(n,s.shape)},b:()=>{let t=vh(s,0),n=Wu(t,$h(s),Vu(s)),r=_l(e,_l(a,n)),l=_o(i.shape,o);return l.length>0&&(r=lh(r,l)),tu(r,i.shape)}}}},Sg={kernelName:Jn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=vh(n,0);return{x:()=>Wu(a,e,_l(e,r)),alpha:()=>{let t=Wu(a,Vu(e),_l(e,n)),s=_o(r.shape,e.shape);return s.length>0&&(t=lh(t,s)),tu(t,r.shape)}}}};function Ng(e,t,n){let r=e.shape.length,a=r-n.length,s=nf.getAxesPermutation(n,r),i=e;null!=s&&(i=Io(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=tu(t,r),s=Ru(e,n,!0,!1),i=Ru(e,n,!0,!0),o=_l(s,i);return _l(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){let e=nf.getUndoAxesPermutation(s);u=Io(u,e)}return u}var Tg={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>Ng(r,e,s)}}},_g={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=Tl(e,Ti(r,"float32")),s=_o(n.shape,a);return s.length>0?tu(lh(t,s),n.shape):t},b:()=>{let t=_l(e,Ti(n,"float32")),s=_o(r.shape,a);s.length>0&&(t=tu(lh(t,s),r.shape));let i=oh(r);return wo(Tl(t,Ti(i,"float32")))}}}},Cg={kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,wo(oh(n)))}}},Eg={kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=_l(_h(n,6),sd(n));return{x:()=>_l(e,Ti(r,"float32"))}}},$g={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,Ti(sd(n),"float32"))}}},Ag={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>tu(e,n.shape)}}},Fg={kernelName:or,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>ms.runKernel(lr,a,n)}}},Rg={kernelName:sr,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>ms.runKernel(ir,a,n)}}},Dg={kernelName:hr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ce(r,e.shape);return{x:()=>Rp(e,a)}}},Mg={kernelName:pr,gradFunc:e=>({x:()=>Vu(e)})},Og={kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>wo(Tl(e,_l(ah(n,1.5),2)))}}},Lg={kernelName:mr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Ti(Vu(n),"float32"),t:()=>_l(e,Ti(n,e.dtype)),e:()=>_l(e,Ti(Hh(n),e.dtype))}}},zg={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=vh(n,sh(0)),r=sh(ff),a=sh(mf),s=_l(e,a),i=_l(_l(e,r),dh(Ti(n,"float32")));return Wu(t,s,i)}}}},Pg={kernelName:wr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,_l(n,Wh(sh(1),n)))}}},Bg={kernelName:vr,gradFunc:e=>({x:()=>Vu(e)})},Wg={kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(Au(Ti(n,"float32")),e)}}},Vg={kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(Fu(Ti(n,"float32")),e)}}},Ug={kernelName:yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=al(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>fp(e,u)}}},Gg={kernelName:_r,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=_l(e,r);return{logits:()=>Wh(s,_l(lh(s,[a],true),r))}}},Hg={kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,su(n))}}},jg={kernelName:Nr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>uu(e,r,a)}}},qg={kernelName:Tr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>au(e,r)}}},Kg={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,_l(ih(Ti(n,"float32")),2))}}},Xg={kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(e,_l(Ti(n,"float32"),2))}}},Yg={kernelName:Rr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=sh(2);return{a:()=>_l(e,_l(a,Wh(n,r))),b:()=>_l(e,_l(a,Wh(r,n)))}}},Zg={kernelName:Zr,gradFunc:e=>({x:()=>Vu(e)})},Jg={kernelName:Pr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Co(n.shape,r.shape);return{a:()=>{let t=e,r=_o(n.shape,a);return r.length>0&&(t=lh(t,r)),tu(t,n.shape)},b:()=>{let t=e,n=_o(r.shape,a);return n.length>0&&(t=lh(t,n)),tu(wo(t),r.shape)}}}},Qg={kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ce(s,r.shape).forEach((e=>{a[e]=1}));let i=tu(e,a),o=_l(i,rp(r.shape,"float32"));return{x:()=>o}}},ey={kernelName:Br,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Tl(e,oh(Au(n)))}}},ty={kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>_l(Wh(sh(1),oh(n)),e)}}},ny={kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Vu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Sl(t,iu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Sl(t,iu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Sl(t,iu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Sl(t,iu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},ry={kernelName:Hr,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=eh(a);return{x:()=>Io(e,s)}}},ay={kernelName:qr,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>ad(e,a)}}},sy={kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=ep(t,Vu(t)),r=xh(e,n),a=wh(t,sh(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=ch(a,e+1);a=Gh(a,rp(r.shape,"bool"));let i=Vu(r);return Wu(a,r,i)}(e,n)}}};var iy={kernelName:Yr,gradFunc:e=>({x:()=>Vu(e)})},oy=[am,sm,im,om,lm,um,hm,pm,dm,cm,fm,mm,ym,xm,vm,wm,km,Im,Sm,Nm,Tm,_m,Em,Cm,Am,Fm,Rm,Dm,Mm,Om,_g,Lm,zm,Pm,Bm,Wm,Um,Vm,Gm,Hm,Km,Xm,Ym,Zm,Jm,Qm,eg,tg,ng,ag,ig,ig,og,ug,pg,dg,cg,fg,mg,gg,yg,bg,xg,vg,wg,kg,kg,Ig,Sg,Tg,Cg,Eg,$g,Ag,Fg,Rg,Dg,Mg,Og,Lg,zg,Pg,Bg,Wg,Vg,Ug,Gg,Hg,jg,jg,qg,qg,Kg,Yg,Xg,Zg,Jg,Qg,ey,ty,ny,ry,ay,sy,iy];for(let e of oy)pa(e);Ka().prototype.abs=function(){return this.throwIfDisposed(),Cl(this)},Ka().prototype.acos=function(){return this.throwIfDisposed(),El(this)},Ka().prototype.acosh=function(){return this.throwIfDisposed(),$l(this)},Ka().prototype.add=function(e){return this.throwIfDisposed(),Sl(this,e)},Ka().prototype.all=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},Ka().prototype.any=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},Ka().prototype.argMax=function(e){return this.throwIfDisposed(),Dl(this,e)},Ka().prototype.argMin=function(e){return this.throwIfDisposed(),Ml(this,e)},Ka().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,(()=>"The array must have only 1 element.")),tu(this,[])},Ka().prototype.asType=function(e){return this.throwIfDisposed(),Ti(this,e)},Ka().prototype.as1D=function(){return this.throwIfDisposed(),tu(this,[this.size])},Ka().prototype.as2D=function(e,t){return this.throwIfDisposed(),tu(this,[e,t])},Ka().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),tu(this,[e,t,n])},Ka().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),tu(this,[e,t,n,r])},Ka().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),tu(this,[e,t,n,r,a])},Ka().prototype.asin=function(){return this.throwIfDisposed(),Ol(this)},Ka().prototype.asinh=function(){return this.throwIfDisposed(),Ll(this)},Ka().prototype.atan=function(){return this.throwIfDisposed(),zl(this)},Ka().prototype.atan2=function(e){return this.throwIfDisposed(),Pl(this,e)},Ka().prototype.atanh=function(){return this.throwIfDisposed(),Bl(this)},Ka().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),nu(this,e,t,n,r)},Ka().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),uu(this,e,t)},Ka().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),pu(this,e,t,n,r,a)},Ka().prototype.broadcastTo=function(e){return this.throwIfDisposed(),yu(this,e)},Ka().prototype.cast=function(e){return this.throwIfDisposed(),Ti(this,e)},Ka().prototype.ceil=function(){return this.throwIfDisposed(),bu(this)},Ka().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),xu(this,e,t)},Ka().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qa&&(e=[e]),au([this,...e],t)},Ka().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Nu(this,e,t,n,r,a,s)},Ka().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),_u(this,e,t,n,r,a)},Ka().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Su(this,e,t,n,r,a,s)},Ka().prototype.cos=function(){return this.throwIfDisposed(),Au(this)},Ka().prototype.cosh=function(){return this.throwIfDisposed(),Fu(this)},Ka().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Ru(this,e,t,n)},Ka().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Du(this,e,t,n)},Ka().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ou(this,e,t)},Ka().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Lu(this,e,t,n,r,a,s)},Ka().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Pu(this,e,t,n,r,a)},Ka().prototype.divNoNan=function(e){return this.throwIfDisposed(),Uu(this,e)},Ka().prototype.div=function(e){return this.throwIfDisposed(),Tl(this,e)},Ka().prototype.dot=function(e){return this.throwIfDisposed(),Gu(this,e)},Ka().prototype.elu=function(){return this.throwIfDisposed(),ju(this)},Ka().prototype.equal=function(e){return this.throwIfDisposed(),Bu(this,e)},Ka().prototype.erf=function(){return this.throwIfDisposed(),qu(this)},Ka().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ph(this,e,t)},Ka().prototype.exp=function(){return this.throwIfDisposed(),dh(this)},Ka().prototype.expandDims=function(e){return this.throwIfDisposed(),ch(this,e)},Ka().prototype.expm1=function(){return this.throwIfDisposed(),fh(this)},Ka().prototype.fft=function(){return this.throwIfDisposed(),Zp(this)},Ka().prototype.flatten=function(){return this.throwIfDisposed(),tu(this,[this.size])},Ka().prototype.floor=function(){return this.throwIfDisposed(),bh(this)},Ka().prototype.floorDiv=function(e){return this.throwIfDisposed(),Nl(this,e)},Ka().prototype.gather=function(e,t){return this.throwIfDisposed(),xh(this,e,t)},Ka().prototype.greaterEqual=function(e){return this.throwIfDisposed(),wh(this,e)},Ka().prototype.greater=function(e){return this.throwIfDisposed(),vh(this,e)},Ka().prototype.ifft=function(){return this.throwIfDisposed(),Jp(this)},Ka().prototype.irfft=function(){return this.throwIfDisposed(),Qp(this)},Ka().prototype.isFinite=function(){return this.throwIfDisposed(),kh(this)},Ka().prototype.isInf=function(){return this.throwIfDisposed(),Ih(this)},Ka().prototype.isNaN=function(){return this.throwIfDisposed(),Sh(this)},Ka().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Nh(this,e)},Ka().prototype.lessEqual=function(e){return this.throwIfDisposed(),_h(this,e)},Ka().prototype.less=function(e){return this.throwIfDisposed(),Th(this,e)},Ka().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Eh(this,e,t,n,r)},Ka().prototype.logSigmoid=function(){return this.throwIfDisposed(),Bh(this)},Ka().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Vh(this,e)},Ka().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Uh(this,e,t)},Ka().prototype.log=function(){return this.throwIfDisposed(),$h(this)},Ka().prototype.log1p=function(){return this.throwIfDisposed(),Ah(this)},Ka().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Gh(this,e)},Ka().prototype.logicalNot=function(){return this.throwIfDisposed(),Hh(this)},Ka().prototype.logicalOr=function(e){return this.throwIfDisposed(),jh(this,e)},Ka().prototype.logicalXor=function(e){return this.throwIfDisposed(),qh(this,e)},Ka().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Yi(this,e,t,n)},Ka().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Zh(this,e,t,n,r)},Ka().prototype.max=function(e,t){return this.throwIfDisposed(),nh(this,e,t)},Ka().prototype.maximum=function(e){return this.throwIfDisposed(),ep(this,e)},Ka().prototype.mean=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},Ka().prototype.min=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},Ka().prototype.minimum=function(e){return this.throwIfDisposed(),sp(this,e)},Ka().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},Ka().prototype.mod=function(e){return this.throwIfDisposed(),op(this,e)},Ka().prototype.mul=function(e){return this.throwIfDisposed(),_l(this,e)},Ka().prototype.neg=function(){return this.throwIfDisposed(),wo(this)},Ka().prototype.norm=function(e,t,n){return this.throwIfDisposed(),hh(this,e,t,n)},Ka().prototype.notEqual=function(e){return this.throwIfDisposed(),pp(this,e)},Ka().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Zi(this,e,t,n)},Ka().prototype.onesLike=function(){return this.throwIfDisposed(),dp(this)},Ka().prototype.pad=function(e,t){return this.throwIfDisposed(),fp(this,e,t)},Ka().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),vp(this,e,t,n,r,a,s)},Ka().prototype.pow=function(e){return this.throwIfDisposed(),ah(this,e)},Ka().prototype.prelu=function(e){return this.throwIfDisposed(),wp(this,e)},Ka().prototype.prod=function(e,t){return this.throwIfDisposed(),kp(this,e,t)},Ka().prototype.reciprocal=function(){return this.throwIfDisposed(),$p(this)},Ka().prototype.relu=function(){return this.throwIfDisposed(),Ap(this)},Ka().prototype.relu6=function(){return this.throwIfDisposed(),Fp(this)},Ka().prototype.reshapeAs=function(e){return this.throwIfDisposed(),tu(this,e.shape)},Ka().prototype.reshape=function(e){return this.throwIfDisposed(),tu(this,e)},Ka().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),dc(this,e,t,n)},Ka().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),cc(this,e,t,n)},Ka().prototype.reverse=function(e){return this.throwIfDisposed(),Rp(this,e)},Ka().prototype.rfft=function(){return this.throwIfDisposed(),td(this)},Ka().prototype.round=function(){return this.throwIfDisposed(),zp(this)},Ka().prototype.rsqrt=function(){return this.throwIfDisposed(),Pp(this)},Ka().prototype.selu=function(){return this.throwIfDisposed(),Bp(this)},Ka().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Wp(this,e,t,n,r,a,s)},Ka().prototype.sigmoid=function(){return this.throwIfDisposed(),su(this)},Ka().prototype.sign=function(){return this.throwIfDisposed(),Up(this)},Ka().prototype.sin=function(){return this.throwIfDisposed(),Gp(this)},Ka().prototype.sinh=function(){return this.throwIfDisposed(),Hp(this)},Ka().prototype.slice=function(e,t){return this.throwIfDisposed(),iu(this,e,t)},Ka().prototype.softmax=function(e){return this.throwIfDisposed(),Yp(this,e)},Ka().prototype.softplus=function(){return this.throwIfDisposed(),Ph(this)},Ka().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},Ka().prototype.split=function(e,t){return this.throwIfDisposed(),ed(this,e,t)},Ka().prototype.sqrt=function(){return this.throwIfDisposed(),ih(this)},Ka().prototype.square=function(){return this.throwIfDisposed(),oh(this)},Ka().prototype.squaredDifference=function(e){return this.throwIfDisposed(),nd(this,e)},Ka().prototype.squeeze=function(e){return this.throwIfDisposed(),rd(this,e)},Ka().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof qa?[this,e]:[this,...e];return ad(n,t)},Ka().prototype.step=function(e){return this.throwIfDisposed(),sd(this,e)},Ka().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),id(this,e,t,n,r,a,s,i,o)},Ka().prototype.sub=function(e){return this.throwIfDisposed(),Wh(this,e)},Ka().prototype.sum=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},Ka().prototype.tan=function(){return this.throwIfDisposed(),od(this)},Ka().prototype.tanh=function(){return this.throwIfDisposed(),ou(this)},Ka().prototype.tile=function(e){return this.throwIfDisposed(),mh(this,e)},Ka().prototype.toBool=function(){return this.throwIfDisposed(),Ti(this,"bool")},Ka().prototype.toFloat=function(){return this.throwIfDisposed(),Ti(this,"float32")},Ka().prototype.toInt=function(){return this.throwIfDisposed(),Ti(this,"int32")},Ka().prototype.topk=function(e,t){return this.throwIfDisposed(),cd(this,e,t)},Ka().prototype.transpose=function(e){return this.throwIfDisposed(),Io(this,e)},Ka().prototype.unique=function(e){return this.throwIfDisposed(),md(this,e)},Ka().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),gd(this,e,t)},Ka().prototype.unstack=function(e){return this.throwIfDisposed(),yd(this,e)},Ka().prototype.where=function(e,t){return this.throwIfDisposed(),Wu(e,this,t)},Ka().prototype.zerosLike=function(){return this.throwIfDisposed(),Vu(this)};var ly=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ly.prototype)}},uy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uy.prototype)}},hy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hy.prototype)}},py=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}},dy=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}},cy=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function fy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function my(e,t){if(!e)throw new dy(t)}function gy(e,t){let n=0;for(let r of e)r===t&&n++;return n}function yy(e){return 1===e.length?e[0]:e}function by(e){return Array.isArray(e)?e:[e]}function xy(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function vy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var wy={};function ky(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Iy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Iy(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Iy(t):e[n]=t.value)}}}function Sy(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in wy)a=wy[s];else if(a=t[s],null==a)throw new hy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new hy(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in wy?[i,o]=wy.className:l in t&&([i,o]=t[l]),null==i)throw new hy(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(wy))e[t]=wy[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},wy);for(let e of Object.keys(n))wy[e]=n[e];Iy(s.config);let r=o(i,s.config,n,a);return wy=Object.assign({},t),r}{let e=Object.assign({},wy);for(let e of Object.keys(n))wy[e]=n[e];let t=new i(s.config);return wy=Object.assign({},e),t}}}function Ny(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ty(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function _y(e){if(null==e)throw new hy(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Cy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new hy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ey(e,t,n=0,r=1/0){return my(n>=0),my(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function $y(e,t){Array.isArray(e)?(ga.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>$y(e,`element ${n+1} of ${t}`)))):ga.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ay(e)}.`))}function Ay(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ay(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Fy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var Ry=0;function Dy(){return Ry++}var My={};function Oy(e=""){return e in My||(My[e]=0),My[e]+=1,e+My[e].toString()}var Ly=["channelsFirst","channelsLast"],zy=["nearest","bilinear"],Py=["valid","same","causal"],By=["max","avg"],Wy=["sum","mul","concat","ave"],Vy=new Map;function Uy(e){Cy(Ly,"DataFormat",e)}function Gy(e){Cy(Py,"PaddingMode",e)}function Hy(e){Cy(By,"PoolMode",e)}var jy=[];function qy(e,t){jy.push(e);try{let e=t();return jy.pop(),e}catch(e){throw jy.pop(),e}}function Ky(e){if(!Jy(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===jy.length?"":jy.join("/")+"/")+e}function Xy(e){if(!Jy(e))throw new Error("Not a valid tensor name: '"+e+"'");Vy.has(e)||Vy.set(e,0);let t=Vy.get(e);if(Vy.set(e,Vy.get(e)+1),t>0){let n=`${e}_${t}`;return Vy.set(n,1),n}return e}var Yy,Zy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Jy(e){return!!e.match(Zy)}function Qy(e){return e===parseInt(e.toString(),10)}function eb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function tb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function nb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function rb(e,t){if(t<e)throw new hy(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function ab(){return null==Yy&&(Yy=bo().epsilon()),Yy}function sb(e,t){return Ti(e,t)}function ib(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),tu(e,n)}function ob(e,t,n){return io((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return qp(e,[t,0],[n,e.shape[1]]);case 3:return Kp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Xp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return iu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return iu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new hy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lb(e,t,n){return io((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return qp(e,[0,t],[e.shape[0],n]);case 3:return Kp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Xp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ub(e,t,n,r){return io((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:switch(r){case 1:return ob(e,t,n);case 2:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ob(e,t,n);case 2:return Kp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ob(e,t,n);case 2:return Xp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Xp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function hb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),au(e,t)}function pb(e,t){switch(e.rank){case 1:return vu([e,t]);case 2:return wu([e,t],0);case 3:return ku([e,t],0);case 4:return Iu([e,t],0);default:throw new hy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function db(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new hy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return mh(e,t)}function cb(e,t=0,n=1,r,a){return _p(e,t,n,r,a)}function fb(e,t,n,r){if(e.rank<2||t.rank<2)throw new py(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new py(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return Ad.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?yb(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=tu(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=tu(Io(t,h),[l,-1]);let p=[...a,...u],d=!1,c=!1;return tu(Ad.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?yb(e.rank,r,"channelsLast"):null,activation:n}),p)}}function mb(e,t,n){return io((()=>(t=Array.isArray(t)?ld(t,"int32"):Ti(t,"int32"),xh(e,t,n))))}function gb(e){return _l(e,e)}function yb(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new hy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?tu(t,[1,r[0],1,1,1]):tu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?tu(t,[1,1,1,1,r[0]]):tu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?tu(t,[1,r[0],1,1]):tu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?tu(t,[1,1,1,r[0]]):tu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?tu(t,[1,r[0],1]):tu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?tu(t,[1,1,r[0]]):tu(t,[1].concat(r))}else if(e<3)return t;throw new hy(`Unsupported input rank by biasAdd: ${t.rank}`)}function bb(e,t,n){return io((()=>(null==n&&(n="channelsLast"),Uy(n),Sl(e,yb(e.rank,t,n)))))}function xb(e,t,n,r){return io((()=>_d(e,t,n,r)))}function vb(e,t,n=!1){return n?e():t()}var wb=["fanIn","fanOut","fanAvg"],kb=["normal","uniform","truncatedNormal"];var Ib=class extends ol.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Sb=class extends Ib{apply(e,t){return np(e,t)}};Sb.className="Zeros",ol.registerClass(Sb);var Nb=class extends Ib{apply(e,t){return rp(e,t)}};Nb.className="Ones",ol.registerClass(Nb);var Tb=class extends Ib{constructor(e){if(super(),"object"!=typeof e)throw new hy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new hy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return io((()=>_l(sh(this.value),rp(e,t))))}getConfig(){return{value:this.value}}};Tb.className="Constant",ol.registerClass(Tb);var _b=class extends Ib{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Cp(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};_b.className="RandomUniform",ol.registerClass(_b);var Cb=class extends Ib{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new py(`randomNormal does not support dType ${t}.`);return cb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Cb.className="RandomNormal",ol.registerClass(Cb);var Eb=class extends Ib{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new py(`truncatedNormal does not support dType ${t}.`);return fd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Eb.className="TruncatedNormal",ol.registerClass(Eb);var $b=class extends Ib{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return io((()=>{if(2!==e.length||e[0]!==e[1])throw new hy("Identity matrix initializer can only be used for 2D square matrices.");return _l(this.gain,gh(e[0]))}))}getConfig(){return{gain:this.gain}}};$b.className="Identity",ol.registerClass($b);var Ab=class extends Ib{constructor(e){if(super(),e.scale<0)throw new hy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Cy(wb,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Cy(kb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(Uy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=eb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=eb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=eb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new py(`${this.getClassName()} does not support dType ${t}.`);return fd(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Cp(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Ab.className="VarianceScaling",ol.registerClass(Ab);var Fb=class extends Ab{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Fb.className="GlorotUniform",ol.registerClass(Fb);var Rb=class extends Ab{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Rb.className="GlorotNormal",ol.registerClass(Rb);var Db=class extends Ab{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Db.className="HeNormal",ol.registerClass(Db);var Mb=class extends Ab{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Mb.className="HeUniform",ol.registerClass(Mb);var Ob=class extends Ab{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Ob.className="LeCunNormal",ol.registerClass(Ob);var Lb=class extends Ab{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ab.className}};Lb.className="LeCunNormal",ol.registerClass(Lb);var zb=class extends Ib{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new py("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return io((()=>{if(e.length<2)throw new py("Shape must be at least 2D.");e[0],e[1];let t=cb(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Bc.gramSchmidt(t);return e[0]>e[1]&&(n=Io(n)),_l(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};zb.className="Orthogonal",ol.registerClass(zb);var Pb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bb(e,t={}){return Sy(e,ol.SerializationMap.getMap().classNameMap,t,"initializer")}function Wb(e){return ky(e)}function Vb(e){if("string"==typeof e){let t=e in Pb?Pb[e]:e;if("GlorotNormal"===t)return new Rb;if("GlorotUniform"===t)return new Fb;if("HeNormal"===t)return new Db;if("HeUniform"===t)return new Mb;if("LeCunNormal"===t)return new Ob;if("LeCunUniform"===t)return new Lb;{let e={};return e.className=t,e.config={},Bb(e)}}return e instanceof Ib?e:Bb(e)}function Ub(e){return Array.isArray(e)&&Array.isArray(e[0])}function Gb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Hb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new hy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function jb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new hy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function qb(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Kb="Variable",Xb=class{constructor(e,t="float32",n=Kb,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Dy(),n=null==n?Kb:n,this.originalName=Ky(n),this.name=Xy(this.originalName),this.trainable_=r,this.constraint=a,this.val=xd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Yb(e){return e.map((e=>e.read()))}function Zb(e){e.forEach((e=>{e[0].write(e[1])}))}var Jb=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Qb=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Dy(),null!=s&&(this.originalName=Ky(s),this.name=Xy(this.originalName)),this.rank=t.length}},ex=0,tx=class{constructor(e,t){this.callArgs=t,this.id=ex++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},nx=0,rx=class extends ol.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=nx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=xy(e)+"_"+Oy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new uy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new hy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return yy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return yy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} is not connected, no input to return.`);return yy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return yy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=by(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=by(this.inputSpec);if(e.length!==t.length)throw new hy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new hy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new hy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new hy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new hy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new hy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new hy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=by(e),r=!0;for(let e of n)if(!(e instanceof Qb)){r=!1;break}let a=!0;for(let e of n)if(e instanceof Qb){a=!1;break}if(r===a)throw new hy("Arguments to apply() must be all SymbolicTensors or all Tensors");return qy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of by(e))t.push(n.shape);this.build(yy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=by(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=yy(s),null!=this.activityRegularizer)throw new py("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=by(e);let t=[];for(let n of e)t.push(n.shape);return yy(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new Qb(s,n,this,by(e),t,this.name,r))):new Qb(s,a,this,by(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new py("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ly(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ly(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new uy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return qb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Yb(e?this.trainableWeights:this.weights)}setWeights(e){io((()=>{let t=this.weights;if(t.length!==e.length)throw new hy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=Yb(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!ga.arraysEqual(s.shape,o.shape))throw new hy(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Zb(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new hy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Vb("zeros"));let l=r.apply(t,n),u=new Xb(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=by(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=by(e);t=by(t),n=by(n),r=by(r),a=Gb(a),s=Gb(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new tx({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ax(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=ax(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var sx=class extends rx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Oy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new hy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new hy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new hy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Qb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new tx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new hy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function ix(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new hy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new sx({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}sx.className="InputLayer",ol.registerClass(sx);var ox=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ox)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new hy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ti(t,e.dtype)}catch(n){throw new hy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Qb){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Qb){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&oo(this.id2Mask)}},lx=new cy,ux=new cy;function hx(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p=o.join(",")+"|"+t.names().sort().join(","),d=lx.get(p);if(null==d){let e=function(e,t){ga.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=dx(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=dx(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:px(r)}}(i,t);d=e.sorted,h=e.recipientCounts,lx.put(p,d),ux.put(p,h)}h={},a||Object.assign(h,ux.get(p));let c=new ox(t);for(let e=0;e<d.length;++e){if(null!=r){let e=ao().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof sx)continue;let u=[],p=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),p.push(r),null!=r&&(m=!0),a||(h[e.name]--,0===h[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=p[0]);let g=by(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let b=cx(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||oo(f)}return c.disposeMasks(),s?l:l[0]}function px(e){let t={};for(let n in e)t[n]=e[n].size;return t}function dx(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function cx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}Ve().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=lx&&lx.setMaxEntries(e),null!=ux&&ux.setMaxEntries(e)}));var fx={};function mx(e,t){return io((()=>ih(lh(_l(e,e),t,!0))))}d(fx,{maxNorm:()=>Nx,minMaxNorm:()=>Cx,nonNeg:()=>_x,unitNorm:()=>Tx});var gx=class extends ol.Serializable{getConfig(){return{}}},yx=class extends gx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return io((()=>{let t=mx(e,this.axis),n=xu(t,0,this.maxValue);return _l(e,Tl(n,Sl(ab(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};yx.className="MaxNorm",ol.registerClass(yx);var bx=class extends gx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return io((()=>Tl(e,Sl(ab(),mx(e,this.axis)))))}getConfig(){return{axis:this.axis}}};bx.className="UnitNorm",ol.registerClass(bx);var xx=class extends gx{apply(e){return Ap(e)}};xx.className="NonNeg",ol.registerClass(xx);var vx=class extends gx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return io((()=>{let t=mx(e,this.axis),n=Sl(_l(this.rate,xu(t,this.minValue,this.maxValue)),_l(1-this.rate,t));return _l(e,Tl(n,Sl(ab(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};vx.className="MinMaxNorm",ol.registerClass(vx);var wx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kx(e){return ky(e)}function Ix(e,t={}){return Sy(e,ol.SerializationMap.getMap().classNameMap,t,"constraint")}function Sx(e){if(null==e)return null;if("string"==typeof e){return Ix({className:e in wx?wx[e]:e,config:{}})}return e instanceof gx?e:Ix(e)}function Nx(e){return new yx(e)}function Tx(e){return new bx(e)}function _x(){return new xx}function Cx(e){return new vx(e)}var Ex={};function $x(){return new Sb}function Ax(){return new Nb}function Fx(e){return new Tb(e)}function Rx(e){return new _b(e)}function Dx(e){return new Cb(e)}function Mx(e){return new Eb(e)}function Ox(e){return new $b(e)}function Lx(e){return new Ab(e)}function zx(e){return new Fb(e)}function Px(e){return new Rb(e)}function Bx(e){return new Db(e)}function Wx(e){return new Mb(e)}function Vx(e){return new Ob(e)}function Ux(e){return new Lb(e)}function Gx(e){return new zb(e)}d(Ex,{constant:()=>Fx,glorotNormal:()=>Px,glorotUniform:()=>zx,heNormal:()=>Bx,heUniform:()=>Wx,identity:()=>Ox,leCunNormal:()=>Vx,leCunUniform:()=>Ux,ones:()=>Ax,orthogonal:()=>Gx,randomNormal:()=>Dx,randomUniform:()=>Rx,truncatedNormal:()=>Mx,varianceScaling:()=>Lx,zeros:()=>$x});var Hx,jx={};async function qx(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];oo(r)}}function Kx(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}d(jx,{Layer:()=>rx,RNN:()=>lk,RNNCell:()=>uk,activation:()=>$I,add:()=>PI,alphaDropout:()=>ES,average:()=>BI,averagePooling1d:()=>XI,averagePooling2d:()=>JI,averagePooling3d:()=>tS,avgPool1d:()=>YI,avgPool2d:()=>QI,avgPool3d:()=>nS,avgPooling1d:()=>ZI,avgPooling2d:()=>eS,avgPooling3d:()=>rS,batchNormalization:()=>jI,bidirectional:()=>wS,concatenate:()=>WI,conv1d:()=>wI,conv2d:()=>kI,conv2dTranspose:()=>II,conv3d:()=>SI,conv3dTranspose:()=>NI,convLstm2d:()=>yS,convLstm2dCell:()=>bS,cropping2D:()=>_I,dense:()=>AI,depthwiseConv2d:()=>EI,dot:()=>HI,dropout:()=>FI,elu:()=>mI,embedding:()=>zI,flatten:()=>DI,gaussianDropout:()=>CS,gaussianNoise:()=>_S,globalAveragePooling1d:()=>aS,globalAveragePooling2d:()=>sS,globalMaxPool1d:()=>IS,globalMaxPool2d:()=>SS,globalMaxPooling1d:()=>iS,globalMaxPooling2d:()=>oS,gru:()=>pS,gruCell:()=>dS,input:()=>uw,inputLayer:()=>fI,layerNormalization:()=>qI,leakyReLU:()=>yI,lstm:()=>cS,lstmCell:()=>fS,masking:()=>$S,maxPool1d:()=>NS,maxPool2d:()=>TS,maxPooling1d:()=>lS,maxPooling2d:()=>uS,maxPooling3d:()=>hS,maximum:()=>VI,minimum:()=>UI,multiply:()=>GI,permute:()=>LI,prelu:()=>bI,reLU:()=>gI,repeatVector:()=>MI,reshape:()=>OI,rnn:()=>xS,separableConv2d:()=>TI,simpleRNN:()=>mS,simpleRNNCell:()=>gS,softmax:()=>xI,spatialDropout1d:()=>RI,stackedRNNCells:()=>vS,thresholdedReLU:()=>vI,timeDistributed:()=>kS,upSampling2d:()=>CI,zeroPadding2d:()=>KI}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Hx||(Hx={}));var Xx=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Yx=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},Zx=class extends Xx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=io((()=>Sl(this.totals[e],_l(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:io((()=>{let n=_l(Tl(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),lo(t[e])})))}},Jx=class extends Xx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},Qx=class extends Xx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||tf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ga.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():ga.now();return(...s)=>{let i=null!=n?n():ga.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await qx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await qx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await qx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await qx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await qx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ga.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await qx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await qx(e),await this.trainEnd(e))}};function ev(e,t){return null==e&&(e={}),e instanceof Xx?[e]:Array.isArray(e)&&e[0]instanceof Xx?e:by(e).map((e=>new Qx(e,t)))}var tv=class{constructor(){}static registerCallbackConstructor(e,t){ga.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),tv.checkForDuplicate(t),null==tv.constructors[e]&&(tv.constructors[e]=[]),tv.constructors[e].push(t)}static checkForDuplicate(e){for(let t in tv.constructors)tv.constructors[+t].forEach((t=>{if(t===e)throw new hy("Duplicate callback constructor.")}))}static clear(){tv.constructors={}}static createCallbacks(e){let t=[];for(let n in tv.constructors){let r=+n;e>=r&&t.push(...tv.constructors[r])}return t.map((e=>new e))}};function nv(e,t,n,r,a,s,i,o,l){let u=new Jx,h=[new Zx,...tv.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new Yx(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function rv(e,t={},n=!1){return Sy(e,ol.SerializationMap.getMap().classNameMap,t,"layer",n)}function av(e,t){return io((()=>{"float32"!==e.dtype&&(e=Ti(e,"float32"));let n=lh(gb(e),t,!0),r=yh(n.shape,ab()),a=ih(ep(n,r));return Tl(e,a)}))}function sv(e,t){return io((()=>tp(gb(Wh(t,e)),-1)))}function iv(e,t){return io((()=>tp(Cl(Wh(t,e)),-1)))}function ov(e,t){return io((()=>{let n=Wh(e,t),r=xu(Cl(e),ab(),Number.MAX_VALUE),a=Cl(Tl(n,r));return _l(100,tp(a,-1))}))}function lv(e,t,n=!1){return io((()=>{if(n)t=Yp(t);else{let e=lh(t,t.shape.length-1,!0);t=Tl(t,e)}return t=xu(t,ab(),1-ab()),wo(lh(_l(Ti(e,"float32"),$h(t)),t.shape.length-1))}))}function uv(e,t,n=!1){return io((()=>{let r=Ti(bh(function(e){let t=[eb(e.shape)];return tu(e,t)}(e)),"int32"),a=(t=xu(t,ab(),1-ab())).shape;return lv(tu(Zi(r,a[a.length-1]),a),t,n)}))}function hv(e,t){return io((()=>{let n;return n=xu(t,ab(),1-ab()),n=$h(Tl(n,Wh(1,n))),tp(function(e,t){if(!ga.arraysEqual(e.shape,t.shape))throw new hy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return io((()=>{let n=Ap(t),r=wo(Cl(t));return Sl(Wh(n,_l(t,e)),Ah(dh(r)))}))}(e,n),-1)}))}function pv(e,t){return io((()=>{let n=av(e,-1),r=av(t,-1),a=_l(n,r);return wo(lh(a,-1))}))}tv.constructors={};var dv={meanSquaredError:sv,meanAbsoluteError:iv,meanAbsolutePercentageError:ov,meanSquaredLogarithmicError:function(e,t){return io((()=>{let n=xu(t,ab(),Number.MAX_VALUE),r=$h(Sl(1,n)),a=xu(e,ab(),Number.MAX_VALUE),s=$h(Sl(1,a));return tp(gb(Wh(r,s)),-1)}))},squaredHinge:function(e,t){return io((()=>{let n=ep(0,Wh(1,_l(e,t)));return tp(gb(n),-1)}))},hinge:function(e,t){return io((()=>{let n=ep(0,Wh(1,_l(e,t)));return tp(n,-1)}))},categoricalHinge:function(e,t){return io((()=>{let n=lh(_l(e,t),-1),r=nh(_l(Wh(1,e),t),-1);return ep(0,Sl(1,Wh(r,n)))}))},logcosh:function(e,t){return io((()=>{let n=Math.log(2),r=Wh(t,e),a=Wh(Sl(r,Ph(_l(-2,r))),n);return tp(a,-1)}))},categoricalCrossentropy:lv,sparseCategoricalCrossentropy:uv,binaryCrossentropy:hv,kullbackLeiblerDivergence:function(e,t){return io((()=>{let n=xu(e,ab(),1),r=xu(t,ab(),1);return lh(_l(e,$h(Tl(n,r))),-1)}))},poisson:function(e,t){return io((()=>{let n=$h(Sl(ab(),t));return tp(Wh(t,_l(e,n)),-1)}))},cosineProximity:pv};function cv(e){if("string"==typeof e){if(e in dv)return dv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new hy(t)}return e}function fv(e,t){return io((()=>{let n=_l(.5,dp(t)),r=sb(vh(t,n),e.dtype);return tp(Bu(e,r),-1)}))}function mv(e,t){return io((()=>sb(Bu(Dl(e,-1),Dl(t,-1)),"float32")))}function gv(e,t){return io((()=>Ti(lh(Gh(Bu(e,1),Bu(t,1))),"float32")))}function yv(e,t){return io((()=>{let n=gv(e,t),r=function(e,t){return io((()=>Ti(lh(Gh(Bu(e,0),Bu(t,1))),"float32")))}(e,t),a=Sl(n,r);return Ti(Wu(vh(a,0),Tl(n,a),0),"float32")}))}function bv(e,t){return io((()=>{let n=gv(e,t),r=function(e,t){return io((()=>Ti(lh(Gh(Bu(e,1),Bu(t,0))),"float32")))}(e,t),a=Sl(n,r);return Ti(Wu(vh(a,0),Tl(n,a),0),"float32")}))}function xv(e,t){return hv(e,t)}function vv(e,t){return e.rank===t.rank&&(e=rd(e,[e.rank-1])),(t=Dl(t,-1)).dtype!==e.dtype&&(t=Ti(t,e.dtype)),Ti(Bu(e,t),"float32")}var wv=lv,kv=uv,Iv={binaryAccuracy:fv,categoricalAccuracy:mv,precision:yv,categoricalCrossentropy:wv,sparseCategoricalCrossentropy:kv,mse:sv,MSE:sv,mae:iv,MAE:iv,mape:ov,MAPE:ov,cosine:pv};function Sv(e){if("string"==typeof e&&e in Iv)return Iv[e];if("string"!=typeof e&&null!=e)return e;throw new hy(`Unknown metric ${e}`)}function Nv(e){if(my(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(dv))if(dv[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Iv))if(Iv[n]===e){t=n;break}return void 0!==t?t:e.name}}function Tv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!_v(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){JSON.stringify(e).length}}function _v(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!_v(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!_v(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Cv(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ev(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?$v(o[e],n,r):Av(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?qb(e.collectedTrainableWeights):qb(e.trainableWeights),t}(e),u=qb(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Ev(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function $v(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ev([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function Av(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Ev([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Ev(["","","","",i[e]],t,r)}function Fv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Rv(e,t){if(null===e)return null;if("string"==typeof e)return vy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Fv(t,a,r)?n.push(r):n.push(Rv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=vy(n);t[e]=Rv(r,e)}}return t}}function Dv(e,t){if(null==e)return null;if("string"==typeof e)return xy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Fv(t,a,r)?n.push(r):n.push(Dv(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=xy(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Dv(r,n):r}return t}}var Mv="3.18.0",Ov=class extends rx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=Oy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ty(this.inputs).length!==this.inputs.length)throw new hy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ty(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;my(0===n,"input layer has >1 nodes"),my(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof sx))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new uy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Ov.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let h=i.slice().reverse();for(let e of h){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let p={};for(let e in t){let r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(Ny);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof Ov&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(Ny);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new uy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new uy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new tx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new hy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new hy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new hy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new hy(`${e.length} of ${r} weights are not set: ${e}`)}Zb(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Mv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Dv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return io((()=>{e=by(e);let n=new ox;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return hx(this.outputs,n,t)}))}computeMask(e,t){return io((()=>{let n;return e=by(e),n=null==t?fy(null,e.length):by(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Gb(e);if(t.length!==this.inputLayers.length)throw new hy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ny);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=Gb(t.computeOutputShape(yy(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];my(t in n),a.push(n[t])}return yy(a)}runInternalGraph(e,t){null==t&&(t=fy(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ny);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=by(t.call(e,u)),l=by(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=by(t.call(r,u)),l=by(t.computeMask(r,i));if(t.activityRegularizer)throw new py("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){my(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Ov?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=Ov.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new hy(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new hy("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new hy(`No such layer: ${e}`)}calculateLosses(){return io((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Ov.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=Ov.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[Ov.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Ov.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Ov.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(yy(r),n)}function l(e){let n=e.name,s=rv(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new hy(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let e of h)l(e);for(;!_y(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];my(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];my(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new hy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){io((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Lv(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function zv(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=io((()=>{if(1===e.shape.length)return _i(e);if(2===e.shape.length){if(e.shape[1]>1)return Dl(e,1);if(1===e.shape[1])return tu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());oo(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),ld(a,"float32")}return null}function Pv(e,t){return _l(e,t)}function Bv(e,t){let n,r,a=t;n=a.xs,r=a.ys,ga.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=Wv("input",e.inputNames,n),i=Wv("output",e.outputNames,r),o=s[0].shape[0];ga.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ga.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)ga.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ga.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Wv(e,t,n){if(n instanceof qa)return[n];if(Array.isArray(n))return ga.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new hy(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function Vv(e,t,n){let r=null!=n.batchesPerEpoch;if(ga.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ga.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ga.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ga.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ga.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(Uv(n.validationData))ga.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new py("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=ev(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=nv(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done)break;if(null!=t.value){let{xs:r,ys:a}=Bv(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=Lv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await zv(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);oo(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,lo(n)}await d.onBatchEnd(p,s),Kx(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=Uv(n.validationData)?by(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):by(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Uv(e){return"function"==typeof e.iterator}function Gv(e){ga.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Hv(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ob(e,t,n-t))):ob(e,t,n-t)}function jv(e,t){return io((()=>null==e?null:Array.isArray(e)?e.map((e=>jv(e,t))):mb(e,"int32"===t.dtype?t:Ti(t,"int32"))))}function qv(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Kv(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,h,p,d;e.isTraining=!0;try{let c=null==r.batchSize?32:r.batchSize;Gv(c);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,c);a=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new py("validationData including sample weights is not supported yet."):new hy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];let t=!0,n=await e.standardizeUserData(l,u,null,null,t,c);h=n[0],p=n[1],g=h.concat(p)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];h=Hv(a,e,t),i=a,a=Hv(a,0,e),p=Hv(s,e,t),o=s,s=Hv(s,0,e),g=h.concat(p)}else null!=r.validationSteps&&(y=!0);let b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();let x,v,w=e.makeTrainFunction(),k=e.getDedupedMetricsNames();y?(e.makeTestFunction(),x=e.testFunction,v=k.slice().concat(k.map((e=>"val_"+e)))):(x=null,g=[],v=k.slice());let I=ev(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,h,p,d,c,f){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new hy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=rb(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=nv(o,i,s,d,y,c,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new py("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new py("batch shuffling is not implemneted yet");h&&ga.shuffle(g);let i=ld(g),o=qv(y,a);for(let h=0;h<o.length;++h){let p={};if(await b.onBatchBegin(h,p),io((()=>{let d=o[h][0],c=o[h][1],f=ob(i,d,c-d);p.batch=h,p.size=c-d;let g=jv(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];p[t]=n,lo(n)}if(h===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];lo(a),s["val_"+n]=a}}})),await b.onBatchEnd(h,p),Kx(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,w,b,k,c,r.epochs,r.verbose,I,x,g,r.shuffle,v,r.initialEpoch,null,null)}finally{e.isTraining=!1,Yv(a,t),Yv(s,n),Yv(i,t),Yv(o,n),Yv(h,l),Yv(p,u),null!=d&&oo(d)}}function Xv(e){let t=[];e instanceof qa&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(ib(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Yv(e,t){if(null==e)return;let n=[];if(t instanceof qa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof qa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Zv(e){return Array.isArray(e)}function Jv(e){return!function(e){return e instanceof qa}(e)&&!Zv(e)}function Qv(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Zv(e)&&e.length>0)t=!0;else if(Jv(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new hy(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Jv(e)){s=[];for(let n of t){if(null==e[n])throw new hy(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Zv(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new hy(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Xv(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new hy(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function ew(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new hy(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new hy(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var tw=class extends Ov{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new hy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Cv(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Qc.adagrad(.01),Adadelta:()=>Qc.adadelta(1,.95,ab()),Adam:()=>Qc.adam(.001,.9,.999,ab()),Adamax:()=>Qc.adamax(.002,.9,.999,ab(),0),RMSProp:()=>Qc.rmsprop(.001,.9,0,ab()),SGD:()=>Qc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new hy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Gc))throw new hy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new hy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>cv(e)))}else{let n=cv(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new hy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)e.loss[n],t.push(cv(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};qy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===hv?-1!==["accuracy","acc"].indexOf(i)?r=fv:-1!==["crossentropy","ce"].indexOf(i)&&(r=xv):this.lossFunctions[e]===uv?-1!==["accuracy","acc"].indexOf(i)?r=vv:-1!==["crossentropy","ce"].indexOf(i)&&(r=kv):-1!==["accuracy","acc"].indexOf(i)?r=mv:-1!==["crossentropy","ce"].indexOf(i)&&(r=wv),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=Sv(i),n=""+Nv(i);let t;qy(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;Gv(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction;return yy(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Yv(a[0],e),Yv(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new py("Verbose mode is not implemented yet.");ga.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=io((()=>{if(t.value){let{xs:n,ys:r}=Bv(e,t.value),i=n.concat(r),u=io((()=>a(i)));if(oo(i),0===l)for(let e=0;e<u.length;++e)s.push(sh(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=io((()=>Sl(s[e],_l(h,t)))),l>0&&oo(n)}oo(u),o+=h,++l}return s})),t.done)break}for(let e=0;e<s.length;++e){let t=s[e];s[e]=Tl(s[e],o),oo(t)}return yy(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new hy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new hy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new hy("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new ox;if(e instanceof qa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new hy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new hy(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=hx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=fy(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new hy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return io((()=>{let r=this.checkNumSamples(e);if(n)throw new py("Verbose predictLoop() is not implemented yet.");let a=qv(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)io((()=>{let n=a[t][0],r=a[t][1],s=Hv(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new ox(i);return hx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return yy(s.map((e=>au(e,0))))}))}predict(e,t={}){let n=Xv(e);ew(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return Gv(r),this.predictLoop(n,r)}finally{Yv(n,e)}}predictOnBatch(e){ew(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new uy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===uv?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){let r=Ty(e.map((e=>e.shape[0])));r.sort();let a=Ty(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new hy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new hy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!ga.arraysEqual(r,a))throw new hy(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Qv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Qv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[sv,hv,lv];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===lv&&1===s.shape[s.shape.length-1])throw new hy(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new hy(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new hy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=Lv(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await zv(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return io((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new py("Verbose mode is not implemented yet.");if(null!=a)throw new py("steps mode in testLoop() is not implemented yet");{let r=qv(s,n),a=ld(rb(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=ob(a,s,o-s),u=jv(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push(sh(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=Sl(i[e],_l(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Tl(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;gy(e,r)>1&&(a+=`_${gy(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new ox(e),l=hx(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=Pv(n,a[e]));let s=tp(n);t.push(s),i=0===e?n:Sl(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=tp(t(r[a],l[a]))}lo(n),s.push(n)}return i=tp(i),this.calculateLosses().forEach((e=>{i=Sl(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>io((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new ox(s),o=hx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=tp(r(a[e],o[e]));t=0===e?s:Sl(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=tp(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return Kv(this,e,t,n)}async fitDataset(e,t){return Vv(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return oo(s),Yv(n[0],e),Yv(n[1],t),yy(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=ao().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ao().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=xy(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>xy(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=xy(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[xy(Nv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>xy(Nv(e))));{let e={};for(let t in this.metrics)e[t]=xy(Nv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=rv(Rv(e.optimizer_config));if("string"==typeof e.loss)t=vy(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>vy(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=vy(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>vy(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=vy(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Ei.getSaveHandlers(e);if(0===t.length)throw new hy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new hy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new hy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Ei.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Mv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Ei.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Ei.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(Tv(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Tv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};tw.className="Model",ol.registerClass(tw);var nw=class extends tw{};async function rw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=rv(Rv(n),t);if(null!=e.weightsManifest){let t=await Ei.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),oo(t)}return r}async function aw(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Ei.getLoadHandlers(e,t);if(0===n.length)n.push(Ei.browserHTTPRequest(e,t));else if(n.length>1)throw new hy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new hy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=rv(Rv(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new hy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Ei.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),oo(e),oo(t.map((e=>e.tensor)))}return o}(e,void 0,t)}nw.className="Functional",ol.registerClass(nw);var sw=class extends tw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Oy("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new hy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof sw||e instanceof tw;if(n){if(t=e,1!==t.outputs.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new hy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new hy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=ix({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new hy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ax(this.outputs[0])}this.inboundNodes=[],new tx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(jb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new tw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new uy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new uy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new uy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new uy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new hy("Legacy serialization format not supported yet.");a=t}else ga.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof sw))throw new py(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=rv(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new hy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new hy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function iw(e){return new tw(e)}function ow(e){return new sw(e)}function lw(e,t){return null==t&&(t={}),aw(e,t)}function uw(e){return ix(e)}function hw(e,t){tv.registerCallbackConstructor(e,t)}sw.className="Sequential",ol.registerClass(sw);var pw=class extends ol.Serializable{getConfig(){return{}}},dw=class extends pw{apply(e,t=1){return function(e,t=1){if(1!==t)throw new py(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ju(e)}(e,t)}};dw.className="elu",ol.registerClass(dw);var cw=class extends pw{apply(e){return Bp(e)}};cw.className="selu",ol.registerClass(cw);var fw=class extends pw{apply(e){return Ap(e)}};fw.className="relu",ol.registerClass(fw);var mw=class extends pw{apply(e){return io((()=>sp(6,Ap(e))))}};mw.className="relu6",ol.registerClass(mw);var gw=class extends pw{apply(e){return e}};gw.className="linear",ol.registerClass(gw);var yw=class extends pw{apply(e){return su(e)}};yw.className="sigmoid",ol.registerClass(yw);var bw=class extends pw{apply(e){return function(e){return io((()=>{let t=Sl(.5,_l(.2,e));return xu(t,0,1)}))}(e)}};bw.className="hardSigmoid",ol.registerClass(bw);var xw=class extends pw{apply(e){return Ph(e)}};xw.className="softplus",ol.registerClass(xw);var vw=class extends pw{apply(e){return function(e){return io((()=>Tl(e,Sl(Cl(e),1))))}(e)}};vw.className="softsign",ol.registerClass(vw);var ww=class extends pw{apply(e){return ou(e)}};ww.className="tanh",ol.registerClass(ww);var kw=class extends pw{apply(e,t=-1){return Yp(e,t)}};kw.className="softmax",ol.registerClass(kw);var Iw=class extends pw{apply(e,t=-1){return Vh(e,t)}};Iw.className="logSoftmax",ol.registerClass(Iw);var Sw=class extends pw{apply(e,t=1){return io((()=>_l(su(_l(e,t)),e)))}};Sw.className="swish",ol.registerClass(Sw);var Nw=class extends pw{apply(e){return io((()=>_l(e,ou(Ph(e)))))}};function Tw(e){return e.getClassName()}function _w(e,t={}){return Sy(e,ol.SerializationMap.getMap().classNameMap,t,"activation")}function Cw(e){if(null==e){let e={className:"linear",config:{}};return _w(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},_w(t)}return e instanceof pw?e:_w(e)}function Ew(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Nw.className="mish",ol.registerClass(Nw);var $w=class extends ol.Serializable{},Aw=class extends $w{constructor(e){super(),Ew(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return io((()=>{let t=np([1]);return this.hasL1&&(t=Sl(t,lh(_l(this.l1,Cl(e))))),this.hasL2&&(t=Sl(t,lh(_l(this.l2,gb(e))))),tu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Aw.className="L1L2",ol.registerClass(Aw);var Fw={l1l2:"L1L2"};function Rw(e){return ky(e)}function Dw(e,t={}){return Sy(e,ol.SerializationMap.getMap().classNameMap,t,"regularizer")}function Mw(e){if(null==e)return null;if("string"==typeof e){return Dw({className:e in Fw?Fw[e]:e,config:{}})}return e instanceof $w?e:Dw(e)}var Ow=class extends rx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Hb(e);let n=Ap(e);return null!=this.maxValue&&(n=xu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Ow.className="ReLU",ol.registerClass(Ow);var Lw=class extends rx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Hb(e);return Nh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Lw.className="LeakyReLU",ol.registerClass(Lw);var zw=class extends rx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Vb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mw(e.alphaRegularizer),this.alphaConstraint=Sx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new hy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=jb(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Jb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Hb(e),wp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Wb(this.alphaInitializer),alphaRegularizer:Rw(this.alphaRegularizer),alphaConstraint:kx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};zw.className="PReLU",ol.registerClass(zw);var Pw=class extends rx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new py(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Hb(e);return ju(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Pw.className="ELU",ol.registerClass(Pw);var Bw=class extends rx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Hb(e);return _l(n,Ti(vh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Bw.className="ThresholdedReLU",ol.registerClass(Bw);var Ww=class extends rx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new kw).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Hb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Vw(e,t,n){if("number"==typeof e)return fy(e,t);if(e.length!==t)throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!Qy(a))throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Uw(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Gw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+nb([n-t,0]);else{if("same"!==r)throw new hy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Hw(e,t){return io((()=>(Uy(t),"channelsFirst"===t?Io(e,[0,2,3,1]):e)))}function jw(e,t){return io((()=>(Uy(t),"channelsFirst"===t?Io(e,[0,2,3,4,1]):e)))}function qw(e,t,n,r=[1,1],a="valid",s,i,o=null){return io((()=>{if(null==s&&(s="channelsLast"),Uy(s),3!==e.rank&&4!==e.rank)throw new hy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new hy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Hw(e,s);if("causal"===a)throw new py("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ad.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Io(l,[0,3,1,2])),l}))}Ww.className="Softmax",ol.registerClass(Ww);var Kw=class extends rx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Kw.verifyArgs(t),this.rank=e,$y(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new py(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Vw(t.kernelSize,e,"kernelSize"),this.strides=Vw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Gy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Uy(this.dataFormat),this.activation=Cw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Vb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sx(t.biasConstraint),this.biasRegularizer=Mw(t.biasRegularizer),this.activityRegularizer=Mw(t.activityRegularizer),this.dilationRate=Vw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(my("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ey(e.kernelSize,"number",1,3))throw new hy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Tw(this.activation),useBias:this.useBias,biasInitializer:Wb(this.biasInitializer),biasRegularizer:Rw(this.biasRegularizer),activityRegularizer:Rw(this.activityRegularizer),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Xw=class extends Kw{constructor(e,t){super(e,t),this.kernel=null,Xw.verifyArgs(t),this.filters=t.filters,$y(this.filters,"filters"),this.kernelInitializer=Vb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sx(t.kernelConstraint),this.kernelRegularizer=Mw(t.kernelRegularizer)}build(e){e=jb(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return io((()=>{e=Hb(e);let t,n=null==this.bias?null:this.bias.read(),r=Fy(this.activation.getClassName());if(null!=r&&2===this.rank)t=qw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return io((()=>{if(null==s&&(s="channelsLast"),Uy(s),3!==e.shape.length)throw new hy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new hy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new hy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Io(e,[0,2,1])),"causal"===a)throw new py("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Nu(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=bb(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=qw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new py("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return io((()=>{if(null==s&&(s="channelsLast"),Uy(s),4!==e.rank&&5!==e.rank)throw new hy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new hy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=jw(e,s);if("causal"===a)throw new py("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Cu(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=bb(o,n)),"channelsFirst"===s&&(o=Io(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=jb(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=Uw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Wb(this.kernelInitializer),kernelRegularizer:Rw(this.kernelRegularizer),kernelConstraint:kx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new hy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Yw=class extends Xw{constructor(e){super(2,e),Yw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ey(e.kernelSize,"number",1,2))throw new hy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Yw.className="Conv2D",ol.registerClass(Yw);var Zw=class extends Xw{constructor(e){super(3,e),Zw.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new hy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Zw.className="Conv3D",ol.registerClass(Zw);var Jw=class extends Yw{constructor(e){if(super(e),this.inputSpec=[new Jb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=jb(e)).length)throw new hy("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return io((()=>{let t=Hb(e);if(4!==t.shape.length)throw new hy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Gw(i,h,l,this.padding),Gw(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Io(t,[0,2,3,1]));let c=_u(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Io(c,[0,3,1,2])),null!=this.bias&&(c=bb(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=jb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=Gw(a[n],o,s,this.padding),a[r]=Gw(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Jw.className="Conv2DTranspose",ol.registerClass(Jw);var Qw=class extends Zw{constructor(e){if(super(e),this.inputSpec=[new Jb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=jb(e)).length)throw new hy("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return io((()=>{let t=Hb(e);if(5!==t.shape.length)throw new hy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Gw(o,c,h,this.padding),Gw(l,f,p,this.padding),Gw(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Io(t,[0,2,3,4,1]));let y=$u(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Io(y,[0,4,1,2,3])),null!==this.bias&&(y=bb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=jb(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=Gw(s[n],u,i,this.padding),s[r]=Gw(s[r],h,o,this.padding),s[a]=Gw(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Qw.className="Conv3DTranspose",ol.registerClass(Qw);var ek=class extends Xw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new hy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new hy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new hy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Vb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mw(t.depthwiseRegularizer),this.depthwiseConstraint=Sx(t.depthwiseConstraint),this.pointwiseInitializer=Vb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mw(t.pointwiseRegularizer),this.pointwiseConstraint=Sx(t.pointwiseConstraint)}build(e){if((e=jb(e)).length<this.rank+2)throw new hy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Jb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return io((()=>{let t;if(e=Hb(e),1===this.rank)throw new py("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Io(e,[0,2,3,1])),t=Wp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=bb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Io(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Wb(this.depthwiseInitializer),e.pointwiseInitializer=Wb(this.pointwiseInitializer),e.depthwiseRegularizer=Rw(this.depthwiseRegularizer),e.pointwiseRegularizer=Rw(this.pointwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseConstraint),e.pointwiseConstraint=kx(this.pointwiseConstraint),e}};ek.className="SeparableConv";var tk=class extends ek{constructor(e){super(2,e)}};tk.className="SeparableConv2D",ol.registerClass(tk);var nk=class extends Xw{constructor(e){super(1,e),nk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ey(e.kernelSize,"number",1,1))throw new hy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};nk.className="Conv1D",ol.registerClass(nk);var rk=class extends rx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return io((()=>{if(e=Hb(e),"channelsLast"===this.dataFormat){let t=ub(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ub(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=ub(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ub(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};rk.className="Cropping2D",ol.registerClass(rk);var ak=class extends rx{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Uy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Cy(zy,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return io((()=>{let t=Hb(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Io(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Pc.resizeNearestNeighbor(t,[e,r]):Pc.resizeBilinear(t,[e,r]);return Io(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Pc.resizeNearestNeighbor(t,[e,r]):Pc.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};ak.className="UpSampling2D",ol.registerClass(ak);var sk=class extends Kw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Vb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sx(e.depthwiseConstraint),this.depthwiseRegularizer=Mw(e.depthwiseRegularizer)}build(e){if((e=jb(e)).length<4)throw new hy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return io((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return io((()=>{null==a&&(a="channelsLast"),Uy(a);let i=Hw(e,a);if(4!==e.rank)throw new hy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new hy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Lu(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Io(i,[0,3,1,2])),i}))}(e=Hb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=bb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=jb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Uw(t,this.kernelSize[0],this.padding,this.strides[0]),s=Uw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Wb(this.depthwiseInitializer),e.depthwiseRegularizer=Rw(this.depthwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseRegularizer),e}};function ik(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new hy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function ok(e,t,n,r=!1,a,s,i=!1,o=!1){return io((()=>{let i=t.shape.length;if(i<3)throw new hy(`Input should be at least 3D, but is ${i}D.`);let l=[1,0].concat(rb(2,i));if(t=Io(t,l),null!=s)throw new py("The rnn() functoin of the deeplearn.js backend does not support constants yet.");null!=a&&((a=Ti(Ti(a,"bool"),"float32")).rank===i-1&&(a=ch(a,-1)),a=Io(a,l)),r&&(t=Rp(t,0),null!=a&&(a=Rp(a,0)));let u,h,p,d=[],c=n,f=t.shape[0],m=yd(t);null!=a&&(h=yd(a));for(let t=0;t<f;++t){let n=m[t],r=io((()=>e(n,c)));if(null==a)u=r[0],c=r[1];else{let e=io((()=>{let e=h[t],n=Wh(dp(e),e);return{output:Sl(_l(r[0],e),_l(c[0],n)),newStates:c.map(((t,a)=>Sl(_l(r[1][a],e),_l(t,n))))}}));u=e.output,c=e.newStates}o&&d.push(u)}return o&&(p=ad(d,1)),[u,p,c]}))}sk.className="DepthwiseConv2D",ol.registerClass(sk);var lk=class extends rx{constructor(e){let t;if(super(e),null==e.cell)throw new hy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new gk({cells:e.cell}):e.cell,null==t.stateSize)throw new hy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return rb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ub(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return io((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new py("Constants support is not implemented in RNN yet.");Ub(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Jb({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ga.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new hy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Jb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){io((()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>np([n,e]))):this.states_=[np([n,this.cell.stateSize])];else if(null==e)oo(this.states_),null!=this.keptStates&&(oo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>np([n,e]))):this.states_[0]=np([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):oo(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ga.arraysEqual(r.shape,s))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>lo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ik(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new Jb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Qb){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return io((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Hb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new hy(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll;let i={training:r},o=ok(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return io((()=>{let t=np(e.shape);return t=lh(t,[1,2]),t=ib(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?db(t,[1,e]):t)):this.cell.stateSize>1?[db(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===lk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=rv(t.cell,n);return new e(Object.assign(t,{cell:r}))}};lk.className="RNN",ol.registerClass(lk);var uk=class extends rx{},hk=class extends uk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$y(this.units,"units"),this.activation=Cw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mw(e.kernelRegularizer),this.recurrentRegularizer=Mw(e.recurrentRegularizer),this.biasRegularizer=Mw(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=jb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return io((()=>{if(2!==e.length)throw new hy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yk({ones:()=>dp(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yk({ones:()=>dp(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=fb(null!=s?_l(e,s):e,this.kernel.read()),null!=this.bias&&(a=bb(a,this.bias.read())),null!=i&&(n=_l(n,i));let o=Sl(a,fb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Tw(this.activation),useBias:this.useBias,kernelInitializer:Wb(this.kernelInitializer),recurrentInitializer:Wb(this.recurrentInitializer),biasInitializer:Wb(this.biasInitializer),kernelRegularizer:Rw(this.kernelRegularizer),recurrentRegularizer:Rw(this.recurrentRegularizer),biasRegularizer:Rw(this.biasRegularizer),activityRegularizer:Rw(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};hk.className="SimpleRNNCell",ol.registerClass(hk);var pk=class extends lk{constructor(e){e.cell=new hk(e),super(e)}call(e,t){return io((()=>{null!=this.cell.dropoutMask&&(oo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(oo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};pk.className="SimpleRNN",ol.registerClass(pk);var dk=class extends uk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new hy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,$y(this.units,"units"),this.activation=Cw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Cw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mw(e.kernelRegularizer),this.recurrentRegularizer=Mw(e.recurrentRegularizer),this.biasRegularizer=Mw(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=jb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return io((()=>{if(2!==e.length)throw new hy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yk({ones:()=>dp(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yk({ones:()=>dp(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=_l(e,o[0]));let u=fb(e,this.kernel.read());this.useBias&&(u=bb(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=_l(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=ed(h,[2*this.units,this.units],h.rank-1),c=fb(r,p),[f,m,g]=ed(u,3,u.rank-1),[y,b]=ed(c,2,c.rank-1);a=this.recurrentActivation.apply(Sl(f,y)),s=this.recurrentActivation.apply(Sl(m,b));let x=fb(_l(s,r),d);i=this.activation.apply(Sl(g,x));let v=Sl(_l(a,r),_l(Sl(1,wo(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Tw(this.activation),recurrentActivation:Tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wb(this.kernelInitializer),recurrentInitializer:Wb(this.recurrentInitializer),biasInitializer:Wb(this.biasInitializer),kernelRegularizer:Rw(this.kernelRegularizer),recurrentRegularizer:Rw(this.recurrentRegularizer),biasRegularizer:Rw(this.biasRegularizer),activityRegularizer:Rw(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};dk.className="GRUCell",ol.registerClass(dk);var ck=class extends lk{constructor(e){e.implementation,e.cell=new dk(e),super(e)}call(e,t){return io((()=>{null!=this.cell.dropoutMask&&(oo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(oo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};ck.className="GRU",ol.registerClass(ck);var fk=class extends uk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$y(this.units,"units"),this.activation=Cw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Cw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mw(e.kernelRegularizer),this.recurrentRegularizer=Mw(e.recurrentRegularizer),this.biasRegularizer=Mw(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=jb(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends Ib{apply(t,n){let a=e.apply([r]),s=(new Nb).apply([r]),i=e.apply([2*r]);return pb(pb(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return io((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new hy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yk({ones:()=>dp(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yk({ones:()=>dp(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=_l(e,u[0]));let p=fb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=_l(r,h[0])),p=Sl(p,fb(r,this.recurrentKernel.read())),this.useBias&&(p=bb(p,this.bias.read()));let[d,c,f,m]=ed(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=Sl(_l(i,a),_l(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=_l(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Tw(this.activation),recurrentActivation:Tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wb(this.kernelInitializer),recurrentInitializer:Wb(this.recurrentInitializer),biasInitializer:Wb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Rw(this.kernelRegularizer),recurrentRegularizer:Rw(this.recurrentRegularizer),biasRegularizer:Rw(this.biasRegularizer),activityRegularizer:Rw(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};fk.className="LSTMCell",ol.registerClass(fk);var mk=class extends lk{constructor(e){e.implementation,e.cell=new fk(e),super(e)}call(e,t){return io((()=>{null!=this.cell.dropoutMask&&(oo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(oo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};mk.className="LSTM",ol.registerClass(mk);var gk=class extends uk{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return io((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Ub(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{qy(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(rv(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Yb(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Zb(t)}};function yk(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):xb(t(),n),o=()=>vb(i,t,r);return!a||a<=1?lo(o().clone()):Array(a).fill(void 0).map(o).map((e=>lo(e.clone())))}gk.className="StackedRNNCells",ol.registerClass(gk);var bk=class extends lk{constructor(e){if(e.unroll)throw new py("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new py("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Jb({ndim:5})]}call(e,t){return io((()=>{if(null!=this.cell.dropoutMask&&(oo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(oo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new hy("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return io((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=np([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){io((()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>np(a))):this.states_=[np(a)];else if(null==e)oo(this.states_),null!=this.keptStates&&(oo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>np(a))):this.states_[0]=np(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):oo(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!ga.arraysEqual(n.shape,r))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>lo(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=Uw(l,r[0],a,s[0],i[0]),p=Uw(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};bk.className="ConvRNN2D";var xk=class extends fk{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,$y(this.filters,"filters"),this.kernelSize=Vw(n,2,"kernelSize"),this.kernelSize.forEach((e=>$y(e,"kernelSize"))),this.strides=Vw(r||1,2,"strides"),this.strides.forEach((e=>$y(e,"strides"))),this.padding=a||"valid",Gy(this.padding),this.dataFormat=s||"channelsLast",Uy(this.dataFormat),this.dilationRate=Vw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>$y(e,"dilationRate")))}build(e){var t;e=jb(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new hy(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends Ib{apply(e,t){return hb([n.apply([r]),rp([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return io((()=>{if(3!==e.length)throw new hy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yk({ones:()=>dp(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?_l(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yk({ones:()=>dp(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=ed(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?ed(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,v,S,this.padding);let[N,T,_,C]=ed(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,_),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(Sl(l,c)),$=this.recurrentActivation.apply(Sl(u,f)),A=Sl(_l($,s),_l(E,this.activation.apply(Sl(h,m)))),F=_l(this.recurrentActivation.apply(Sl(p,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=Su(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?bb(a,n,this.dataFormat):a}recurrentConv(e,t){return Su(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};xk.className="ConvLSTM2DCell",ol.registerClass(xk);var vk=class extends bk{constructor(e){let t=new xk(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};vk.className="ConvLSTM2D",ol.registerClass(vk);var wk=class extends rx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return vb((()=>xb(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};wk.className="Dropout",ol.registerClass(wk);var kk=class extends wk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};kk.className="SpatialDropout1D",ol.registerClass(kk);var Ik=class extends rx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,$y(this.units,"units"),this.activation=Cw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Vb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Vb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sx(e.kernelConstraint),this.biasConstraint=Sx(e.biasConstraint),this.kernelRegularizer=Mw(e.kernelRegularizer),this.biasRegularizer=Mw(e.biasRegularizer),this.activityRegularizer=Mw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=jb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=jb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n,r=Hb(e),a=Fy(this.activation.getClassName());return null!=a?n=fb(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=fb(r,this.kernel.read()),null!=this.bias&&(n=bb(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:Tw(this.activation),useBias:this.useBias,kernelInitializer:Wb(this.kernelInitializer),biasInitializer:Wb(this.biasInitializer),kernelRegularizer:Rw(this.kernelRegularizer),biasRegularizer:Rw(this.biasRegularizer),activityRegularizer:Rw(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ik.className="Dense",ol.registerClass(Ik);var Sk=class extends rx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=jb(e);for(let t of e.slice(1))if(null==t)throw new hy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],eb(e,1)]}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Io(n,e)}return function(e){if(e.rank<=1)throw new hy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],eb(e.shape,1)];return tu(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Sk.className="Flatten",ol.registerClass(Sk);var Nk=class extends rx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Cw(e.activation)}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);return this.activation.apply(n)}))}getConfig(){let e={activation:Tw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Nk.className="Activation",ol.registerClass(Nk);var Tk=class extends rx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return io((()=>function(e,t){return io((()=>{if(2!==e.shape.length)throw new hy(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return db(ib(e,1),[1,t,1])}))}(e=Hb(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Tk.className="RepeatVector",ol.registerClass(Tk);var _k=class extends rx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new hy("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=eb(e);if(null!==s){if(0===a||i%a!=0)throw new hy(n);r[s]=i/a}else if(i!==a)throw new hy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return tu(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};_k.className="Reshape",ol.registerClass(_k);var Ck=class extends rx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=rb(1,e.dims.length+1);if(!ga.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jb({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=jb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Io(Hb(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ck.className="Permute",ol.registerClass(Ck);var Ek=class extends rx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Hb(e);return Rl(pp(n,this.maskValue),-1)}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e),r=Rl(pp(n,this.maskValue),-1,!0);return _l(n,Ti(r,n.dtype))}))}};Ek.className="Masking",ol.registerClass(Ek);var $k=class extends rx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(by(e.inputLength))}this.inputDim=e.inputDim,$y(this.inputDim,"inputDim"),this.outputDim=e.outputDim,$y(this.outputDim,"outputDim"),this.embeddingsInitializer=Vb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mw(e.embeddingsRegularizer),this.activityRegularizer=Mw(e.activityRegularizer),this.embeddingsConstraint=Sx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return io((()=>this.maskZero?(e=Hb(e),pp(e,Vu(e))):null))}computeOutputShape(e){if(e=jb(e),null==this.inputLength)return[...e,this.outputDim];let t=by(this.inputLength);if(t.length!==e.length-1)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);"int32"!==n.dtype&&(n=sb(n,"int32"));let r=mb(this.embeddings.read(),tu(n,[n.size]));return tu(r,jb(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Wb(this.embeddingsInitializer),embeddingsRegularizer:Rw(this.embeddingsRegularizer),activityRegularizer:Rw(this.activityRegularizer),embeddingsConstraint:kx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};$k.className="Embedding",ol.registerClass($k);var Ak=class extends rx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new py}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new hy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[jb(e)]),e.length<2)throw new hy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ty(t),t.length>1)throw new hy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ty(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return io((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=nb(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=ib(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=tu(r,[a].concat(eb(e.slice(1))));i=Io(i,[1,0]),i=tu(i,s),t.push(i),n=!0}else if(e>1){let a=rb(1,e).concat([0]);t.push(Io(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=tu(Io(tu(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(rb(0,a-1));r=Io(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ty(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return io((()=>{if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an Array");if(!Array.isArray(e))throw new hy("`inputs` should be an Array");if(t.length!==e.length)throw new hy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ch(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Gh(n,t[e]);return n}))}},Fk=class extends Ak{constructor(e){super(e)}mergeFunction(e){return io((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Sl(t,e[n]);return t}))}};Fk.className="Add",ol.registerClass(Fk);var Rk=class extends Ak{constructor(e){super(e)}mergeFunction(e){return io((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_l(t,e[n]);return t}))}};Rk.className="Multiply",ol.registerClass(Rk);var Dk=class extends Ak{constructor(e){super(e)}mergeFunction(e){return io((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Sl(t,e[n]);return _l(1/e.length,t)}))}};Dk.className="Average",ol.registerClass(Dk);var Mk=class extends Ak{constructor(e){super(e)}mergeFunction(e){return io((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ep(t,e[n]);return t}))}};Mk.className="Maximum",ol.registerClass(Mk);var Ok=class extends Ak{constructor(e){super(e)}mergeFunction(e){return io((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sp(t,e[n]);return t}))}};Ok.className="Minimum",ol.registerClass(Ok);var Lk=class extends Ak{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new hy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(ga.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new hy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return io((()=>hb(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new hy("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new hy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new hy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return io((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ti(dp(e[n]),"bool")):t[n].rank<e[n].rank?r.push(ch(t[n],-1)):r.push(t[n]);let a=au(r,this.axis);return Fl(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function zk(e,t){for(;e<0;)e+=t;return e}Lk.className="Concatenate",ol.registerClass(Lk);var Pk=class extends Ak{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ga.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new py("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new hy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new hy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>zk(t,e[n].shape.length))):[zk(this.axes,n.shape.length),zk(this.axes,r.shape.length)],this.normalize&&(n=av(n,t[0]),r=av(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new py("batchDot is not implemented for tensors of 4D or higher rank yet");if(ga.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ga.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new py("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return io((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=tu(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=tu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?lh(_l(e,t),s[0]):lh(_l(Io(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Yi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=rd(i,t)}return 1===i.shape.length&&(i=ch(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[zk(this.axes,e.length),zk(this.axes,t.length)],n}computeOutputShape(e){ga.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new py("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Pk.className="Dot",ol.registerClass(Pk);var Bk=class extends rx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);return vb((()=>Sl(cb(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};Bk.className="GaussianNoise",ol.registerClass(Bk);var Wk=class extends rx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return io((()=>{this.invokeCallHook(e,t);let n=Hb(e);return this.rate>0&&this.rate<1?vb((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return _l(n,cb(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Wk.className="GaussianDropout",ol.registerClass(Wk);var Vk=class extends rx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Hb(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return io((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return vb((()=>{let t=Hb(e),r=-1.7580993408473766,a=wh(Cp(n),this.rate);a=sb(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=Sl(_l(t,a),_l(Sl(a,-1),r));return Sl(_l(o,s),i)}),(()=>Hb(e)),t.training||!1)}return e}))}};function Uk(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=du(e,t,n,r,a,s);else if(3===e.rank)i=cu(e,t,n,r,a,s);else{if(4!==e.rank)throw new py(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=fu(e,t,n,r,a,s)}return i}function Gk(e,t,n,r,a=.001){return ga.arraysEqual(r.slice().sort(),rb(0,e.rank-1))?function(e,t,n,r,a=.001){return io((()=>{let s=lp(e,r),i=s.mean,o=s.variance;return[Uk(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return io((()=>{let s=lp(e,r),i=s.mean,o=s.variance,l=[];for(let t of rb(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=tu(i,l),h=tu(o,l),p=null==t?null:tu(t,l),d=null==n?null:tu(n,l);return[Uk(e,u,h,d,p,a),i,o]}))}(e,t,n,r,a)}Vk.className="AlphaDropout",ol.registerClass(Vk);var Hk=class extends rx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Vb(e.betaInitializer||"zeros"),this.gammaInitializer=Vb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Vb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Vb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Sx(e.betaConstraint),this.gammaConstraint=Sx(e.gammaConstraint),this.betaRegularizer=Mw(e.betaRegularizer),this.gammaRegularizer=Mw(e.gammaRegularizer)}build(e){e=jb(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new hy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jb({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return io((()=>{let n=null!=t.training&&t.training,r=Hb(e),a=r.shape,s=a.length,i=rb(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=fy(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!ga.arraysEqual(u,rb(0,s).slice(0,s-1));if(!n)return(()=>{if(h){let e=tu(this.movingMean.read(),l),t=tu(this.movingVariance.read(),l),n=this.center?tu(this.beta.read(),l):null,a=this.scale?tu(this.gamma.read(),l):null;return Uk(r,e,t,n,a,this.epsilon)}return Uk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[p,d,c]=Gk(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{io((()=>{let r=1-n,a=e.read(),s=_l(Wh(a,t),r);e.write(Wh(a,s))}))};return f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum),p}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wb(this.betaInitializer),gammaInitializer:Wb(this.gammaInitializer),movingMeanInitializer:Wb(this.movingMeanInitializer),movingVarianceInitializer:Wb(this.movingVarianceInitializer),betaRegularizer:Rw(this.betaRegularizer),gammaRegularizer:Rw(this.gammaRegularizer),betaConstraint:kx(this.betaConstraint),gammaConstraint:kx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Hk.className="BatchNormalization",ol.registerClass(Hk);var jk=class extends rx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Vb(e.betaInitializer||"zeros"),this.gammaInitializer=Vb(e.gammaInitializer||"ones"),this.betaRegularizer=Mw(e.betaRegularizer),this.gammaRegularizer=Mw(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=jb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ty(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){let n=Hb(e),r=n.shape,a=r.length;return io((()=>{let{mean:e,variance:t}=lp(n,this.axis,!0),s=fy(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?tu(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=mh(e,u),t=mh(t,u),null!=o&&(o=mh(o,h)),null!=l&&(l=mh(l,h)),Uk(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wb(this.betaInitializer),gammaInitializer:Wb(this.gammaInitializer),betaRegularizer:Rw(this.betaRegularizer),gammaRegularizer:Rw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};jk.className="LayerNormalization",ol.registerClass(jk);var qk=class extends rx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new hy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new hy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new hy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){let t,n;return e=jb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return io((()=>function(e,t,n){return io((()=>{if(4!==e.rank)throw new hy(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new hy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new hy(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],fp(e,r)}))}(Hb(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Kk(e,t,n,r,a,s){return io((()=>{Uy(a),Hy(s),Gy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Hw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Zh(e,t,n,o):nu(e,t,n,o),"channelsFirst"===a&&(i=Io(i,[0,3,1,2])),i}))}function Xk(e,t,n,r,a,s){return io((()=>{Uy(a),Hy(s),Gy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=jw(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Jh(e,t,n,o):ru(e,t,n,o),"channelsFirst"===a&&(i=Io(i,[0,4,1,2,3])),i}))}qk.className="ZeroPadding2D",ol.registerClass(qk);var Yk=class extends rx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new hy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if($y(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new hy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}$y(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Gy(this.padding),this.inputSpec=[new Jb({ndim:3})]}computeOutputShape(e){let t=Uw((e=jb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return io((()=>{this.invokeCallHook(e,t),e=ib(Hb(e),2);let n=this.poolingFunction(Hb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return rd(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Zk=class extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Kk(e,t,n,r,a,"max")}};Zk.className="MaxPooling1D",ol.registerClass(Zk);var Jk=class extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Kk(e,t,n,r,a,"avg")}};Jk.className="AveragePooling1D",ol.registerClass(Jk);var Qk=class extends rx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new hy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];$y(this.poolSize,"poolSize"),$y(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Uy(this.dataFormat),Gy(this.padding),this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){e=jb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Uw(t,this.poolSize[0],this.padding,this.strides[0]),n=Uw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return io((()=>(this.invokeCallHook(e,t),this.poolingFunction(Hb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},eI=class extends Qk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Kk(e,t,n,r,a,"max")}};eI.className="MaxPooling2D",ol.registerClass(eI);var tI=class extends Qk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Kk(e,t,n,r,a,"avg")}};tI.className="AveragePooling2D",ol.registerClass(tI);var nI=class extends rx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new hy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];$y(this.poolSize,"poolSize"),$y(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Uy(this.dataFormat),Gy(this.padding),this.inputSpec=[new Jb({ndim:5})]}computeOutputShape(e){e=jb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Uw(t,this.poolSize[0],this.padding,this.strides[0]),n=Uw(n,this.poolSize[1],this.padding,this.strides[1]),r=Uw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return io((()=>(this.invokeCallHook(e,t),this.poolingFunction(Hb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rI=class extends nI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Xk(e,t,n,r,a,"max")}};rI.className="MaxPooling3D",ol.registerClass(rI);var aI=class extends nI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Uy(a),Gy(r),Xk(e,t,n,r,a,"avg")}};aI.className="AveragePooling3D",ol.registerClass(aI);var sI=class extends rx{constructor(e){super(e),this.inputSpec=[new Jb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new py}},iI=class extends sI{constructor(e){super(e||{})}call(e,t){return io((()=>{let t=Hb(e);return tp(t,1)}))}};iI.className="GlobalAveragePooling1D",ol.registerClass(iI);var oI=class extends sI{constructor(e){super(e||{})}call(e,t){return io((()=>{let t=Hb(e);return nh(t,1)}))}};oI.className="GlobalMaxPooling1D",ol.registerClass(oI);var lI=class extends rx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Uy(this.dataFormat),this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new py}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},uI=class extends lI{call(e,t){return io((()=>{let t=Hb(e);return"channelsLast"===this.dataFormat?tp(t,[1,2]):tp(t,[2,3])}))}};uI.className="GlobalAveragePooling2D",ol.registerClass(uI);var hI=class extends lI{call(e,t){return io((()=>{let t=Hb(e);return"channelsLast"===this.dataFormat?nh(t,[1,2]):nh(t,[2,3])}))}};hI.className="GlobalMaxPooling2D",ol.registerClass(hI);var pI=class extends rx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=rv(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},dI=class extends pI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=jb(e)).length<3)throw new hy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=jb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return io((()=>ok(((e,n)=>[Hb(this.layer.call(e,t)),[]]),e=Hb(e),[],!1,null,null,!1,!0)[1]))}};dI.className="TimeDistributed",ol.registerClass(dI);var cI=class extends pI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=rv(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=rv(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Cy(Wy,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new py("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):yy(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=ik(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new hy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new Jb({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new py("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Qb;for(let e of s)if(e instanceof Qb!==o)throw new hy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return io((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Rp(r,1)),"concat"===this.mergeMode?s=hb([n,r]):"sum"===this.mergeMode?s=Sl(n,r):"ave"===this.mergeMode?s=_l(.5,Sl(n,r)):"mul"===this.mergeMode?s=_l(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),qy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=rv(t.layer);if(delete t.layer,null!=t.numConstants)throw new py("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function fI(e){return new sx(e)}function mI(e){return new Pw(e)}function gI(e){return new Ow(e)}function yI(e){return new Lw(e)}function bI(e){return new zw(e)}function xI(e){return new Ww(e)}function vI(e){return new Bw(e)}function wI(e){return new nk(e)}function kI(e){return new Yw(e)}function II(e){return new Jw(e)}function SI(e){return new Zw(e)}function NI(e){return new Qw(e)}function TI(e){return new tk(e)}function _I(e){return new rk(e)}function CI(e){return new ak(e)}function EI(e){return new sk(e)}function $I(e){return new Nk(e)}function AI(e){return new Ik(e)}function FI(e){return new wk(e)}function RI(e){return new kk(e)}function DI(e){return new Sk(e)}function MI(e){return new Tk(e)}function OI(e){return new _k(e)}function LI(e){return new Ck(e)}function zI(e){return new $k(e)}function PI(e){return new Fk(e)}function BI(e){return new Dk(e)}function WI(e){return new Lk(e)}function VI(e){return new Mk(e)}function UI(e){return new Ok(e)}function GI(e){return new Rk(e)}function HI(e){return new Pk(e)}function jI(e){return new Hk(e)}function qI(e){return new jk(e)}function KI(e){return new qk(e)}function XI(e){return new Jk(e)}function YI(e){return XI(e)}function ZI(e){return XI(e)}function JI(e){return new tI(e)}function QI(e){return JI(e)}function eS(e){return JI(e)}function tS(e){return new aI(e)}function nS(e){return tS(e)}function rS(e){return tS(e)}function aS(e){return new iI(e)}function sS(e){return new uI(e)}function iS(e){return new oI(e)}function oS(e){return new hI(e)}function lS(e){return new Zk(e)}function uS(e){return new eI(e)}function hS(e){return new rI(e)}function pS(e){return new ck(e)}function dS(e){return new dk(e)}function cS(e){return new mk(e)}function fS(e){return new fk(e)}function mS(e){return new pk(e)}function gS(e){return new hk(e)}function yS(e){return new vk(e)}function bS(e){return new xk(e)}function xS(e){return new lk(e)}function vS(e){return new gk(e)}function wS(e){return new cI(e)}function kS(e){return new dI(e)}cI.className="Bidirectional",ol.registerClass(cI);var IS=iS,SS=oS,NS=lS,TS=uS;function _S(e){return new Bk(e)}function CS(e){return new Wk(e)}function ES(e){return new Vk(e)}function $S(e){return new Ek(e)}var AS={};function FS(e,t){return fv(e,t)}function RS(e,t){return xv(e,t)}function DS(e,t){return vv(e,t)}function MS(e,t){return mv(e,t)}function OS(e,t){return wv(e,t)}function LS(e,t){return yv(e,t)}function zS(e,t){return bv(e,t)}function PS(e,t){return pv(e,t)}function BS(e,t){return iv(e,t)}function WS(e,t){return ov(e,t)}function VS(e,t){return ov(e,t)}function US(e,t){return ov(e,t)}function GS(e,t){return sv(e,t)}function HS(e,t){return sv(e,t)}function jS(e,t){return sv(e,t)}d(AS,{MAPE:()=>VS,MSE:()=>HS,binaryAccuracy:()=>FS,binaryCrossentropy:()=>RS,categoricalAccuracy:()=>MS,categoricalCrossentropy:()=>OS,cosineProximity:()=>PS,mape:()=>US,meanAbsoluteError:()=>BS,meanAbsolutePercentageError:()=>WS,meanSquaredError:()=>GS,mse:()=>jS,precision:()=>LS,recall:()=>zS,sparseCategoricalAccuracy:()=>DS});var qS={};d(qS,{modelFromJSON:()=>rw});var KS={};function XS(e){return new Aw(e)}function YS(e){return function(e){return Ew(e),new Aw({l1:null!=e?e.l1:null,l2:0})}(e)}function ZS(e){return function(e){return Ew(e),new Aw({l2:null!=e?e.l2:null,l1:0})}(e)}d(KS,{l1:()=>YS,l1l2:()=>XS,l2:()=>ZS});var JS=class extends Xx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof tw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function QS(e,t){return e<t}function eN(e,t){return e>t}var tN=class extends JS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new py("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=QS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=eN:this.monitorFunc=QS,this.monitorFunc===QS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===QS?1/0:-1/0}async onEpochEnd(e,t){await qx(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return t}};var nN,rN,aN={earlyStopping:function(e){return new tN(e)}};Ve().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(nN||(nN={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(rN||(rN={}));var sN={};function iN(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};sN[e]=n}function oN(e){return sN[e]}function lN(e){delete sN[e]}function uN(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return hN(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>hN(e,n,r,a)));let o=hN(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:ga.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function hN(e,t,n,r){let[a,s]=cN(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[dN(a,e)]));return void 0!==i?t[dN(a,i)][s]:void 0}function pN(e,t){let[n,r,a]=cN(e);return[dN(n,t&&t.currentContextId),r,a]}function dN(e,t){return t?`${e}-${t}`:e}function cN(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function fN(e,t,n){let r=uN("pad",e,t,n);if("explicit"===r){r=uN("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function mN(e){return e.kept?e:_i(e)}var gN={};d(gN,{json:()=>yN});var yN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bN={};d(bN,{json:()=>xN});var xN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vN={};d(vN,{json:()=>wN});var wN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],kN={};d(kN,{json:()=>IN});var IN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],SN={};d(SN,{json:()=>NN});var NN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],TN={};d(TN,{json:()=>_N});var _N=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CN={};d(CN,{json:()=>EN});var EN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$N={};d($N,{json:()=>AN});var AN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],FN={};d(FN,{json:()=>RN});var RN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],DN={};d(DN,{json:()=>MN});var MN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ON={};d(ON,{json:()=>LN});var LN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zN={};d(zN,{json:()=>PN});var PN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],BN={};d(BN,{json:()=>WN});var WN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],VN={};d(VN,{json:()=>UN});var UN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],GN={};d(GN,{json:()=>HN});var HN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],jN={};d(jN,{json:()=>qN});var qN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],KN={};d(KN,{json:()=>XN});var XN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],YN={};d(YN,{json:()=>ZN});var ZN=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],JN={};d(JN,{json:()=>QN});var QN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],eT=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[gN,bN,vN,kN,SN,TN,CN,$N,FN,DN,ON,zN,BN,VN,GN,jN,KN,YN,JN].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=pN(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=pN(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=pN(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=oN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=nT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=dT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=aT(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=aT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=pT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=rT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=rT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=fT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=hT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=cT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=cT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=oT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=lT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=iT(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=pN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:sT(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=pN(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=pN(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function tT(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Ve().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function nT(e,t,n,r=!1){let a=e[t];return null!=a?tT(a.s,r):n}function rT(e,t,n){let r=e[t];return r?r.b:n}function aT(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function sT(e){switch("string"==typeof e&&(e=nN[e]),e){case nN.DT_FLOAT:case nN.DT_HALF:return"float32";case nN.DT_INT32:case nN.DT_INT64:case nN.DT_INT8:case nN.DT_UINT8:return"int32";case nN.DT_BOOL:return"bool";case nN.DT_DOUBLE:return"float32";case nN.DT_STRING:return"string";default:return null}}function iT(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function oT(e,t,n){let r=e[t];return r&&r.type?sT(r.type):n}function lT(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>sT(e))):n}function uT(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function hT(e,t,n){let r=e[t];return r&&r.shape?uT(r.shape):n}function pT(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function dT(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>tT(e,r))):n}function cT(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>uT(e))):n}function fT(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function mT(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ga.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];ga.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function gT(e){return!("number"==typeof e||e.some((e=>e<0)))}function yT(e,t,n){let r=bT(e,n),a=!gT(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=bT(e.shape,r)})),!gT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function bT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var xT=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);mT(t,e.shape,"TensorList shape mismatch: "),lo(e)})),this.idTensor=sh(0),this.maxNumElements=r,lo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);mT(e,this.elementShape,"TensorList shape mismatch: ");let r=yT(this.elementShape,this.tensors,e);return io((()=>{let e=this.tensors.map((e=>tu(e,r)));return ad(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=yT(this.elementShape,this.tensors,e),r=this.tensors.pop();return mT(r.shape,e,"TensorList shape mismatch: "),tu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(mT(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");lo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new xT([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);mT(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=yT(this.elementShape,this.tensors,t);return tu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);mT(this.elementShape,t.shape,"TensorList shape mismatch: "),lo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);mT(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=yT(this.elementShape,this.tensors,n);return 0===e.length?Fs([],[0].concat(r)):io((()=>{let t=e.map((e=>tu(this.tensors[e],r)));return ad(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);mT(this.elementShape,t,"TensorList shape mismatch: ");let n=yT(this.elementShape,this.tensors,t);return 0===this.size()?Fs([],[0].concat(n)):io((()=>{let e=this.tensors.map((e=>tu(e,n)));return au(e,0)}))}};var vT=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=uN("thenBranch",e,t,n),a=uN("elseBranch",e,t,n),s=uN("cond",e,t,n),i=uN("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=uN("body",e,t,n),a=uN("cond",e,t,n),s=uN("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[mN(uN("pred",e,t,n))];case"Switch":{let r=uN("pred",e,t,n),a=uN("data",e,t,n);return a.kept||(a=mN(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==hN(e,t,n)));if(r){return[mN(hN(r,t,n))]}return}case"Enter":{let r=uN("frameName",e,t,n),a=uN("tensor",e,t,n);return n.enterFrame(r),[mN(a)]}case"Exit":{let r=uN("tensor",e,t,n);return n.exitFrame(),[mN(r)]}case"NextIteration":{let r=uN("tensor",e,t,n);return n.nextIteration(),[mN(r)]}case"TensorArrayV3":{let r=uN("size",e,t,n),a=uN("dtype",e,t,n),s=uN("elementShape",e,t,n),i=uN("dynamicSize",e,t,n),o=uN("clearAfterRead",e,t,n),l=uN("identicalElementShapes",e,t,n),u=uN("name",e,t,n),h=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=sh(0),lo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),mT(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,lo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Fs([],[0].concat(this.elementShape));let n=this.readMany(e);return mT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ad(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Fs([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return mT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),au(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,yd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];io((()=>{t=tu(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=tu(iu(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,sh(1)]}case"TensorArrayWriteV3":{let r=uN("tensorArrayId",e,t,n),a=uN("index",e,t,n),s=uN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=uN("tensorArrayId",e,t,n),a=uN("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=uN("tensorArrayId",e,t,n),a=uN("indices",e,t,n),s=uN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=uN("tensorArrayId",e,t,n),a=uN("indices",e,t,n),s=uN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=uN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=uN("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=uN("tensorArrayId",e,t,n),a=uN("tensor",e,t,n),s=uN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=uN("tensorArrayId",e,t,n);return[sh(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=uN("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=uN("tensorListId",e,t,n),a=uN("index",e,t,n),s=uN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=uN("tensorListId",e,t,n),a=uN("index",e,t,n),s=uN("elementShape",e,t,n),i=uN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=uN("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new xT([],n,e.dtype,r),i=yd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(uN("tensor",e,t,n),r,uN("elementShape",e,t,n),uN("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=uN("elementShape",e,t,n),s=uN("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new xT([],e,t,n)}(a,s,uN(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=uN("tensorListId",e,t,n),a=uN("indices",e,t,n),s=uN("elementShape",e,t,n),i=uN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=uN("tensorListId",e,t,n),a=uN("elementShape",e,t,n),s=uN("elementDType",e,t,n),i=uN("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);mT(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=yd(e);return new xT(a,t,r)}(uN("tensor",e,t,n),uN("elementShape",e,t,n),uN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=uN("tensorListId",e,t,n),a=n.getTensorList(r.id),s=uN("dtype",e,t,n),i=uN("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=uN("tensorListId",e,t,n),a=uN("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=uN("tensorListId",e,t,n),a=uN("elementShape",e,t,n),s=uN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=uN("tensor",e,t,n),a=uN("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=bT(e.shape.slice(1),n),i=0===r?0:e.size/r,o=io((()=>{let n=[];e=tu(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=tu(iu(e,o,l),s)}return e.dispose(),n})),l=new xT([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,uN("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=uN("tensorListId",e,t,n);return[sh(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=uN("tensorListId",e,t,n),a=uN("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wT(e,t,n){let[r,a]=uN("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=uN("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let h=uN("strides",e,t,n),p=fN(e,t,n),d=uN("dataFormat",e,t,n).toUpperCase(),c=uN("dilations",e,t,n),[f,m]=uN("args",e,t,n);return i&&(m=f,f=void 0),{stride:h,pad:p,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:uN("leakyreluAlpha",e,t,n)}}function kT(e,t,n){return{boxes:uN("boxes",e,t,n),scores:uN("scores",e,t,n),maxOutputSize:uN("maxOutputSize",e,t,n),iouThreshold:uN("iouThreshold",e,t,n),scoreThreshold:uN("scoreThreshold",e,t,n),softNmsSigma:uN("softNmsSigma",e,t,n)}}var IT=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=uN("keyDType",e,t,n),s=uN("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=sh(0),this.tensorMap=new Map,lo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return sh(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),io((()=>{let e=yd(t),r=n.length,a=e.length;ga.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];lo(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return io((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return ad(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=uN("tableHandle",e,t,n,r),s=uN("keys",e,t,n),i=uN("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=uN("tableHandle",e,t,n,r),s=uN("keys",e,t,n),i=uN("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=uN("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ST(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return io((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Sl(uN("a",e,t,n),uN("b",e,t,n))];case"AddN":return[Al(uN("tensors",e,t,n))];case"FloorMod":case"Mod":return[op(uN("a",e,t,n),uN("b",e,t,n))];case"Mul":return[_l(uN("a",e,t,n),uN("b",e,t,n))];case"RealDiv":case"Div":return[Tl(uN("a",e,t,n),uN("b",e,t,n))];case"DivNoNan":return[Uu(uN("a",e,t,n),uN("b",e,t,n))];case"FloorDiv":return[Nl(uN("a",e,t,n),uN("b",e,t,n))];case"Sub":return[Wh(uN("a",e,t,n),uN("b",e,t,n))];case"Minimum":return[sp(uN("a",e,t,n),uN("b",e,t,n))];case"Maximum":return[ep(uN("a",e,t,n),uN("b",e,t,n))];case"Pow":return[ah(uN("a",e,t,n),uN("b",e,t,n))];case"SquaredDifference":return[nd(uN("a",e,t,n),uN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return io((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Cl(uN("x",e,t,n))];case"Acos":return[El(uN("x",e,t,n))];case"Acosh":return[$l(uN("x",e,t,n))];case"Asin":return[Ol(uN("x",e,t,n))];case"Asinh":return[Ll(uN("x",e,t,n))];case"Atan":return[zl(uN("x",e,t,n))];case"Atan2":return[Pl(uN("x",e,t,n),uN("y",e,t,n))];case"Atanh":return[Bl(uN("x",e,t,n))];case"Ceil":return[bu(uN("x",e,t,n))];case"Complex":return[$s(uN("real",e,t,n),uN("imag",e,t,n))];case"Cos":return[Au(uN("x",e,t,n))];case"Cosh":return[Fu(uN("x",e,t,n))];case"Elu":return[ju(uN("x",e,t,n))];case"Erf":return[qu(uN("x",e,t,n))];case"Exp":return[dh(uN("x",e,t,n))];case"Expm1":return[fh(uN("x",e,t,n))];case"Floor":return[bh(uN("x",e,t,n))];case"Log":return[$h(uN("x",e,t,n))];case"Log1p":return[Ah(uN("x",e,t,n))];case"Imag":return[vo(uN("x",e,t,n))];case"Neg":return[wo(uN("x",e,t,n))];case"Reciprocal":return[$p(uN("x",e,t,n))];case"Real":return[ko(uN("x",e,t,n))];case"Relu":return[Ap(uN("x",e,t,n))];case"Round":return[zp(uN("x",e,t,n))];case"Selu":return[Bp(uN("x",e,t,n))];case"Sigmoid":return[su(uN("x",e,t,n))];case"Sin":return[Gp(uN("x",e,t,n))];case"Sign":return[Up(uN("x",e,t,n))];case"Sinh":return[Hp(uN("x",e,t,n))];case"Softplus":return[Ph(uN("x",e,t,n))];case"Sqrt":return[ih(uN("x",e,t,n))];case"Square":return[oh(uN("x",e,t,n))];case"Tanh":return[ou(uN("x",e,t,n))];case"Tan":return[od(uN("x",e,t,n))];case"ClipByValue":return[xu(uN("x",e,t,n),uN("clipValueMin",e,t,n),uN("clipValueMax",e,t,n))];case"Relu6":return[Fp(uN("x",e,t,n))];case"Rsqrt":return[Pp(hN(e.inputNames[0],t,n))];case"Prod":return[kp(uN("x",e,t,n),uN("axes",e,t,n))];case"LeakyRelu":return[Nh(uN("x",e,t,n),uN("alpha",e,t,n))];case"Prelu":return[wp(uN("x",e,t,n),uN("alpha",e,t,n))];case"IsNan":return[Sh(hN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return vT(e,t,n);case"convolution":return io((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=uN("stride",e,t,n),a=uN("pad",e,t,n),s=uN("dataFormat",e,t,n).toUpperCase(),i=uN("dilation",e,t,n);return[Nu(uN("x",e,t,n),uN("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=uN("strides",e,t,n),a=fN(e,t,n),s=uN("dataFormat",e,t,n).toUpperCase(),i=uN("dilations",e,t,n);return[Su(uN("x",e,t,n),uN("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=wT(e,t,n);return[Ad.conv2d({x:uN("x",e,t,n),filter:uN("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=wT(e,t,n);return[Ad.depthwiseConv2d({x:uN("x",e,t,n),filter:uN("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=uN("outputShape",e,t,n),a=uN("strides",e,t,n),s=fN(e,t,n);return[_u(uN("x",e,t,n),uN("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=uN("strides",e,t,n),a=fN(e,t,n),s=uN("dilations",e,t,n),i=uN("dataFormat",e,t,n).toUpperCase();return[Lu(uN("input",e,t,n),uN("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("dataFormat",e,t,n).toUpperCase(),i=uN("dilations",e,t,n);return[Cu(uN("x",e,t,n),uN("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("kernelSize",e,t,n);return[nu(uN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("kernelSize",e,t,n);return[Zh(uN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("kernelSize",e,t,n),i=uN("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Qh(uN("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("kernelSize",e,t,n);return[ru(uN("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("kernelSize",e,t,n);return[Jh(uN("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=uN("strides",e,t,n),a=uN("pad",e,t,n),s=uN("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[Pu(uN("x",e,t,n),uN("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return io((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=uN("shape",e,t,n),a=uN("dtype",e,t,n);return[yh(r,uN("value",e,t,n),a)]}case"LinSpace":return[Ch(uN("start",e,t,n),uN("stop",e,t,n),uN("num",e,t,n))];case"Multinomial":{let r=uN("logits",e,t,n),a=uN("numSamples",e,t,n),s=uN("seed",e,t,n);return[hp(r,a,s)]}case"OneHot":{let r=uN("indices",e,t,n),a=uN("depth",e,t,n),s=uN("onValue",e,t,n),i=uN("offValue",e,t,n);return[Zi(r,a,s,i)]}case"Ones":return[rp(uN("shape",e,t,n),uN("dtype",e,t,n))];case"OnesLike":return[dp(uN("x",e,t,n))];case"RandomUniform":return[Cp(uN("shape",e,t,n),uN("minval",e,t,n),uN("maxval",e,t,n),uN("dtype",e,t,n))];case"Range":return[Ep(uN("start",e,t,n),uN("stop",e,t,n),uN("step",e,t,n),uN("dtype",e,t,n))];case"TruncatedNormal":{let r=uN("shape",e,t,n),a=uN("mean",e,t,n),s=uN("stdDev",e,t,n),i=uN("seed",e,t,n);return[fd(r,a,s,uN("dtype",e,t,n),i)]}case"Zeros":return[np(uN("shape",e,t,n),uN("dtype",e,t,n))];case"ZerosLike":return[Vu(uN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=kT(e,t,n),u=await Pc.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kT(e,t,n),l=uN("padToMaxOutputSize",e,t,n),u=await Pc.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=kT(e,t,n);return[await Pc.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=Ti(uN("condition",e,t,n),"bool"),a=[await wd(r)];return r.dispose(),a}case"ListDiff":return Vp(uN("x",e,t,n),uN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return io((()=>((e,t,n)=>{switch(e.op){case"LowerBound":return[Yh(uN("sortedSequence",e,t,n),uN("values",e,t,n))];case"TopKV2":{let r=uN("x",e,t,n),a=uN("k",e,t,n),s=uN("sorted",e,t,n),i=cd(r,a,s);return[i.values,i.indices]}case"UpperBound":return[bd(uN("sortedSequence",e,t,n),uN("values",e,t,n))];case"Unique":{let r=uN("x",e,t,n),a=md(r);return[a.values,a.indices]}case"UniqueV2":{let r=uN("x",e,t,n),a=uN("axis",e,t,n),s=md(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return io((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=uN("images",e,t,n),a=uN("size",e,t,n),s=uN("alignCorners",e,t,n),i=uN("halfPixelCenters",e,t,n);return[Pc.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=uN("images",e,t,n),a=uN("size",e,t,n),s=uN("alignCorners",e,t,n),i=uN("halfPixelCenters",e,t,n);return[Pc.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=uN("image",e,t,n),a=uN("boxes",e,t,n),s=uN("boxInd",e,t,n),i=uN("cropSize",e,t,n),o=uN("method",e,t,n),l=uN("extrapolationValue",e,t,n);return[Pc.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=uN("images",e,t,n),a=uN("transforms",e,t,n),s=uN("outputShape",e,t,n),i=uN("fillValue",e,t,n),o=uN("interpolation",e,t,n),l=uN("fillMode",e,t,n);return[Pc.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return io((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=uN("default",e,t,n);return[hN(e.name,t,n)||r];case"Placeholder":return[hN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[mN(uN("x",e,t,n))];case"IdentityN":return uN("x",e,t,n).map((e=>mN(e)));case"Shape":return[ld(uN("x",e,t,n).shape,"int32")];case"ShapeN":return uN("x",e,t,n).map((e=>ld(e.shape)));case"Size":return[sh(uN("x",e,t,n).size,"int32")];case"Rank":return[sh(uN("x",e,t,n).rank,"int32")];case"NoOp":return[sh(1)];case"Print":let a=uN("x",e,t,n),s=uN("data",e,t,n);uN("message",e,t,n),uN("summarize",e,t,n);for(let e=0;e<s.length;e++);return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return io((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Bu(uN("a",e,t,n),uN("b",e,t,n))];case"NotEqual":return[pp(uN("a",e,t,n),uN("b",e,t,n))];case"Greater":return[vh(uN("a",e,t,n),uN("b",e,t,n))];case"GreaterEqual":return[wh(uN("a",e,t,n),uN("b",e,t,n))];case"Less":return[Th(uN("a",e,t,n),uN("b",e,t,n))];case"LessEqual":return[_h(uN("a",e,t,n),uN("b",e,t,n))];case"LogicalAnd":return[Gh(uN("a",e,t,n),uN("b",e,t,n))];case"LogicalNot":return[Hh(uN("a",e,t,n))];case"LogicalOr":return[jh(uN("a",e,t,n),uN("b",e,t,n))];case"Select":case"SelectV2":return[Wu(uN("condition",e,t,n),uN("a",e,t,n),uN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return io((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Yi(uN("a",e,t,n),uN("b",e,t,n),uN("transposeA",e,t,n),uN("transposeB",e,t,n))];case"Einsum":return[Hu(uN("equation",e,t,n),...uN("tensors",e,t,n))];case"Transpose":return[Io(uN("x",e,t,n),uN("perm",e,t,n))];case"_FusedMatMul":let[r,a]=uN("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=uN("numArgs",e,t,n),l=uN("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=uN("args",e,t,n);return[Ad.matMul({a:uN("a",e,t,n),b:uN("b",e,t,n),transposeA:uN("transposeA",e,t,n),transposeB:uN("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return io((()=>((e,t,n)=>{switch(e.op){case"EuclideanNorm":return[ph(uN("x",e,t,n),uN("axis",e,t,n),uN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[pu(uN("x",e,t,n),uN("mean",e,t,n),uN("variance",e,t,n),uN("offset",e,t,n),uN("scale",e,t,n),uN("epsilon",e,t,n))];case"LRN":return[Eh(uN("x",e,t,n),uN("radius",e,t,n),uN("bias",e,t,n),uN("alpha",e,t,n),uN("beta",e,t,n))];case"Softmax":return[Yp(uN("x",e,t,n))];case"LogSoftmax":return[Vh(uN("x",e,t,n))];case"SparseToDense":return[Nd(uN("sparseIndices",e,t,n),uN("outputShape",e,t,n),uN("sparseValues",e,t,n),uN("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return io((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[nh(uN("x",e,t,n),r,a)]}case"Mean":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[tp(uN("x",e,t,n),r,a)]}case"Min":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[rh(uN("x",e,t,n),r,a)]}case"Sum":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[lh(uN("x",e,t,n),r,a)]}case"All":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[Fl(uN("x",e,t,n),r,a)]}case"Any":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[Rl(uN("x",e,t,n),r,a)]}case"ArgMax":{let r=uN("axis",e,t,n);return[Dl(uN("x",e,t,n),r)]}case"ArgMin":{let r=uN("axis",e,t,n);return[Ml(uN("x",e,t,n),r)]}case"Prod":{let r=uN("axis",e,t,n),a=uN("keepDims",e,t,n);return[kp(uN("x",e,t,n),r,a)]}case"Cumprod":{let r=uN("axis",e,t,n),a=uN("exclusive",e,t,n),s=uN("reverse",e,t,n);return[Ru(uN("x",e,t,n),r,a,s)]}case"Cumsum":{let r=uN("axis",e,t,n),a=uN("exclusive",e,t,n),s=uN("reverse",e,t,n);return[Du(uN("x",e,t,n),r,a,s)]}case"Bincount":let r=uN("x",e,t,n),a=uN("weights",e,t,n),s=uN("size",e,t,n);return[mu(r,a,s)];case"DenseBincount":{let r=uN("x",e,t,n),a=uN("weights",e,t,n),s=uN("size",e,t,n),i=uN("binaryOutput",e,t,n);return[Mu(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return io((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=uN("n",e,t,n),a=uN("axis",e,t,n),s=uN("tensors",e,t,n);return s=s.slice(0,r),[au(s,a)]}case"Gather":{let r=uN("x",e,t,n),a=uN("indices",e,t,n);return[xh(r,Ti(a,"int32"),0)]}case"GatherV2":{let r=uN("axis",e,t,n),a=uN("batchDims",e,t,n),s=uN("x",e,t,n),i=uN("indices",e,t,n);return[xh(s,Ti(i,"int32"),r,a)]}case"Reverse":{let r=uN("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=uN("x",e,t,n);return[Rp(s,a)]}case"ReverseV2":{let r=uN("axis",e,t,n),a=uN("x",e,t,n);return[Rp(a,r)]}case"Slice":{let r=uN("begin",e,t,n),a=uN("size",e,t,n);return[iu(uN("x",e,t,n),r,a)]}case"StridedSlice":{let r=uN("begin",e,t,n),a=uN("end",e,t,n),s=uN("strides",e,t,n),i=uN("beginMask",e,t,n),o=uN("endMask",e,t,n),l=uN("ellipsisMask",e,t,n),u=uN("newAxisMask",e,t,n),h=uN("shrinkAxisMask",e,t,n),p=uN("x",e,t,n);return[id(p,r,a,s,i,o,l,u,h)]}case"Pack":return io((()=>{let r=uN("axis",e,t,n),a=uN("tensors",e,t,n),s=a[0].shape,i=rd(a[0]).shape,o=a.map((e=>{let t=ga.arraysEqual(e.shape,s);if(!t&&!ga.arraysEqual(rd(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:tu(e,s)}));return[ad(o,r)]}));case"Unpack":{let r=uN("axis",e,t,n),a=uN("tensor",e,t,n);return yd(a,r)}case"Tile":{let r=uN("reps",e,t,n);return[mh(uN("x",e,t,n),r)]}case"Split":case"SplitV":{let r=uN("axis",e,t,n),a=uN("numOrSizeSplits",e,t,n),s=uN("x",e,t,n);return ed(s,a,r)}case"ScatterNd":{let r=uN("indices",e,t,n),a=uN("values",e,t,n),s=uN("shape",e,t,n);return[Sd(r,a,s)]}case"GatherNd":{let r=uN("x",e,t,n),a=uN("indices",e,t,n);return[Td(r,a)]}case"SparseToDense":{let r=uN("sparseIndices",e,t,n),a=uN("outputShape",e,t,n),s=uN("sparseValues",e,t,n),i=uN("defaultValue",e,t,n);return[Nd(r,s,a,s.dtype===i.dtype?i:Ti(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return io((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Vc.sparseFillEmptyRows(uN("indices",e,t,n),uN("values",e,t,n),uN("denseShape",e,t,n),uN("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=Vc.sparseReshape(uN("inputIndices",e,t,n),uN("inputShape",e,t,n),uN("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Vc.sparseSegmentMean(uN("data",e,t,n),uN("indices",e,t,n),uN("segmentIds",e,t,n))];case"SparseSegmentSum":return[Vc.sparseSegmentSum(uN("data",e,t,n),uN("indices",e,t,n),uN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return io((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Zp(uN("x",e,t,n))];case"IFFT":return[Jp(uN("x",e,t,n))];case"RFFT":return[td(uN("x",e,t,n))];case"IRFFT":return[Qp(uN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return io((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=Uc.stringNGrams(uN("data",e,t,n),uN("dataSplits",e,t,n),uN("separator",e,t,n),uN("nGramWidths",e,t,n),uN("leftPad",e,t,n),uN("rightPad",e,t,n),uN("padWidth",e,t,n),uN("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:s}=Uc.stringSplit(uN("input",e,t,n),uN("delimiter",e,t,n),uN("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Uc.stringToHashBucketFast(uN("input",e,t,n),uN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return io((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ti(uN("x",e,t,n),uN("dtype",e,t,n))];case"ExpandDims":{let r=uN("axis",e,t,n);return[ch(uN("x",e,t,n),r)]}case"Squeeze":{let r=uN("axis",e,t,n);return[rd(uN("x",e,t,n),r)]}case"Reshape":return[tu(uN("x",e,t,n),uN("shape",e,t,n))];case"MirrorPad":return[ip(uN("x",e,t,n),uN("padding",e,t,n),uN("mode",e,t,n))];case"PadV2":case"Pad":return[fp(uN("x",e,t,n),uN("padding",e,t,n),uN("constantValue",e,t,n))];case"SpaceToBatchND":{let r=uN("blockShape",e,t,n),a=uN("paddings",e,t,n);return[xp(uN("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=uN("blockShape",e,t,n),a=uN("crops",e,t,n);return[uu(uN("x",e,t,n),r,a)]}case"DepthToSpace":{let r=uN("blockSize",e,t,n),a=uN("dataFormat",e,t,n).toUpperCase();return[Ou(uN("x",e,t,n),r,a)]}case"BroadcastTo":return[yu(uN("x",e,t,n),uN("shape",e,t,n))];case"BroadcastArgs":return[gu(uN("s0",e,t,n),uN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return IT(e,t,n,r);case"custom":let a=oN(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return hN(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return hN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return aT(this.node.rawAttrs,e,t);if(null!=n.s)return nT(this.node.rawAttrs,e,t);if(null!=n.b)return rT(this.node.rawAttrs,e,t);if(null!=n.shape)return hT(this.node.rawAttrs,e,t);if(null!=n.type)return oT(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pT(this.node.rawAttrs,e,t);if(null!=n.list.s)return dT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return cT(this.node.rawAttrs,e,t);if(null!=n.list.b)return fT(this.node.rawAttrs,e,t);if(null!=n.list.type)return lT(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ga.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var NT=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function TT(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>cN(e)[0])),h=[];null!=r&&(h=r.map((e=>cN(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if(($T(e)||AT(e)||FT(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var _T=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],CT=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ET=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $T(e){return _T.indexOf(e.op)>=0}function AT(e){return CT.indexOf(e.op)>=0}function FT(e){return ET.indexOf(e.op)>=0}var RT=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new RT(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=TT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>cN(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[cN(e)[0]])),a=t.map((e=>cN(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return io((()=>{let n=new NT(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=cN(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=ST(t,r,n,this._resourceManager);if(ga.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>hN(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[dN(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=pN(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){}this.resetIntermediateTensors();let s=new NT(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>hN(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[cN(e)[0]])),i=n.map((e=>cN(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=TT(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=cN(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}let y=o.filter((e=>!$T(e)&&!hN(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&uN("isConstant",e.node,r,n)&&([h]=pN(e.node.name,n)),null==r[e.node.name]){let p=ST(e.node,r,n,this._resourceManager);h||([h]=pN(e.node.name,n));let d=n.currentContext;ga.isPromise(p)?u.push(p.then((u=>(r[h]=u,n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=pN(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!hN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!hN(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=cN(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));ga.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&ga.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=cN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=cN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},DT="?tfjs-format=file",MT="model.json",OT=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ei.browserHTTPRequest(e,this.loadOptions);else{let t=Ei.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Ei.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return ga.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=Ei.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new RT(eT.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=eT.Instance.transformGraph(e.modelInitializer);this.initializer=new RT(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=Ei.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof qa||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function LT(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${MT}${DT}`}(e));let n=new OT(e,t);return await n.load(),n}function zT(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new OT(e);return t.load(),t}var PT="3.18.0",BT={};d(BT,{CSVDataset:()=>F_,Dataset:()=>x_,FileDataSource:()=>H_,TextLineDataset:()=>N_,URLDataSource:()=>j_,array:()=>w_,csv:()=>q_,func:()=>K_,generator:()=>X_,microphone:()=>Z_,version_data:()=>J_,webcam:()=>Y_,zip:()=>k_});var WT=c(R()),VT=c(R());function UT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(KT(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=UT(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function GT(e,t=jT){return HT(e,t)}function HT(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(KT(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=HT(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function jT(e){return null===e?null:KT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function qT(e,t){let n=new Map;UT(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(ga.isPromise(t)){let r=await t;n.set(e,r)}}return UT(e,t,n)}function KT(e){let t=!1;if(Ve().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=D();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof qa)&&!(e instanceof Promise)&&!t)}function XT(e){return function(e,t){return UT(e,t)}(e,YT)}function YT(e){return e instanceof qa?{value:e.clone(),recurse:!1}:KT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var ZT=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},JT=class extends ZT{constructor(){super(JT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function QT(e){return new r_(e)}function e_(e){return new a_(e)}JT.INITIAL_CAPACITY=32;var t_,n_=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new p_(this,e)}filter(e){return new u_(this,e)}map(e){return new h_(this,e)}mapAsync(e){return new d_(this,e)}serialMapAsync(e){return new d_(this,e).serial()}flatmap(e){return new f_(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new l_(this,e,t)}columnMajorBatch(e,t=!0,n=jT){return this.rowMajorBatch(e,t).map((e=>GT(e,n)))}concatenate(e,t){return new m_(QT([this,e]),t)}take(e){return e<0||null==e?this:new o_(this,e)}skip(e){return e<0||null==e?this:new i_(this,e)}prefetch(e){return new y_(this,e)}shuffle(e,t){return new b_(this,e,t)}serial(){return new s_(this)}},r_=class extends n_{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:XT(e),done:!1}}},a_=class extends n_{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},s_=class extends n_{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},i_=class extends n_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;oo(e.value)}return this.upstream.next()}},o_=class extends n_{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},l_=class extends n_{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},u_=class extends n_{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;oo(e.value)}}},h_=class extends n_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=ns.getTensorsInContainer(n);for(let e of t)ns.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},p_=class extends n_{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},d_=class extends n_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=ns.getTensorsInContainer(e.value),n=await this.transform(e.value),r=ns.getTensorsInContainer(n);for(let e of t)ns.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},c_=class extends n_{constructor(){super(),this.outputQueue=new JT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},f_=class extends c_{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=ns.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)ns.isTensorInList(e,r)||e.dispose();return!0}},m_=class extends n_{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(t_||(t_={}));var g_=class extends n_{constructor(e,t=t_.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await qT(this.iterators,(function(e){return e instanceof n_?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case t_.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case t_.SHORTEST:return{value:null,done:!0};case t_.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},y_=class extends n_{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ZT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},b_=class extends y_{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=VT.alea(n||ga.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},x_=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return ga.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),v_((async()=>(await r.iterator()).columnMajorBatch(e,t,I_)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,v_((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,v_((async()=>(await n.iterator()).filter((t=>io((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return v_((async()=>(await t.iterator()).map((t=>io((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return v_((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return v_((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,v_((async()=>function(e,t){return new m_(e,t)}(e_((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,v_((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=WT.alea(t||ga.now().toString());return v_((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,v_((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function v_(e,t=null){return new class extends x_{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function w_(e){return v_((async()=>QT(e)),e.length)}function k_(e){if(!KT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return v_((async()=>function(e,t=t_.FAIL){return new g_(e,t)}(await qT(e,(e=>{if(e instanceof x_)return{value:e.iterator(),recurse:!1};if(KT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),t_.SHORTEST)),t)}function I_(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof qa||ga.isTypedArray(e)}(e[0])?{value:S_(e),recurse:!1}:{value:null,recurse:!0}}function S_(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof qa?ad(e):Fs(e)}x_.MAX_BUFFER_SIZE=1e4;var N_=class extends x_{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},T_='"',__=Symbol("out"),C_=Symbol("field"),E_=Symbol("quote"),$_=Symbol("quoteafterquote"),A_=Symbol("quoteinquote"),F_=class extends x_{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new N_(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ga.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ga.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(ga.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=__;for(let t=0;t<a;t++)switch(s){case __:switch(e.charAt(t)){case T_:r=t+1,s=E_;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=__;break;default:s=C_,r=t}break;case C_:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=__,r=t+1;break;case E_:if(e.charAt(t)===T_)s=$_;break;case $_:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=__,r=t+1;break;case T_:s=E_;break;default:s=A_}break;case A_:if(e.charAt(t)===T_)s=E_}if(s===$_?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},R_=class extends n_{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Ve().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new R_(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(ga.sizeFromShape(t));return n.set(e,n.length-e.length),Fs(n,t)}},D_=class extends n_{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ld([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=ud([r,n,s,a],[1,4])}else this.cropBox=ud([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Ve().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new D_(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ga.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=$o.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return io((()=>{let t,n=ch(Ti(e,"float32"),0);t=Pc.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return tu(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},M_=class{},O_=class extends n_{split(e){return new L_(this,e)}},L_=class extends O_{constructor(e,t){super(),this.upstream=e,this.impl=new z_(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},z_=class extends c_{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},P_=class extends n_{decodeUTF8(){return new B_(this)}},B_=class extends O_{constructor(e){super(),this.upstream=e,this.impl=new W_(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},W_=class extends c_{constructor(e){if(super(),this.upstream=e,Ve().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=D();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Ve().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},V_=class extends P_{constructor(e,t={}){super(),this.file=e,this.options=t,ga.assert(e instanceof Uint8Array||!!Ve().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var U_=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function G_(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var H_=class extends M_{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(G_(this.input)&&Ve().get("IS_NODE")){let e=M();this.input=e.readFileSync(this.input.slice(7))}return new V_(this.input,this.options)}},j_=class extends M_{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return G_(this.url)?new H_(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=U_(e));let s=await(n||ga.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new V_(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function q_(e,t={}){return new F_(new j_(e),t)}function K_(e){let t=e_(e);return v_((async()=>t))}function X_(e){return v_((async()=>{let t=await e();return e_((()=>t.next()))}))}async function Y_(e,t){return D_.create(e,t)}async function Z_(e){return R_.create(e)}var J_="3.18.0";function Q_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ga.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var eC=rm.whereImpl,tC=class extends U{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,ro())}nextDataId(){return tC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ve().get("IS_NODE")&&nf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ga.isString(n[0])){let a=n.map((e=>ga.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return nf.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>ga.decodeString(e)));return Ni(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,t)}makeOutput(e,t,n){return ro().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=ga.now();return e(),{kernelMs:ga.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Q_([e],"where");let t=this.readSync(e.dataId);return eC(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};tC.nextDataId=0;var nC={};function rC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}d(nC,{addImpl:()=>yC,bincountImpl:()=>wC,bincountReduceImpl:()=>kC,ceilImpl:()=>TC,concatImpl:()=>EC,equalImpl:()=>$C,expImpl:()=>RC,expm1Impl:()=>OC,floorImpl:()=>PC,gatherNdImpl:()=>VC,gatherV2Impl:()=>UC,greaterEqualImpl:()=>qC,greaterImpl:()=>GC,lessEqualImpl:()=>QC,lessImpl:()=>YC,linSpaceImpl:()=>nE,logImpl:()=>rE,maxImpl:()=>iE,maximumImpl:()=>oE,minimumImpl:()=>hE,multiplyImpl:()=>cE,negImpl:()=>yE,notEqualImpl:()=>xE,prodImpl:()=>NE,rangeImpl:()=>_E,rsqrtImpl:()=>CE,scatterImpl:()=>AE,sigmoidImpl:()=>FE,simpleAbsImpl:()=>rC,sliceImpl:()=>ME,sparseFillEmptyRowsImpl:()=>zE,sparseReshapeImpl:()=>PE,sparseSegmentReductionImpl:()=>BE,sqrtImpl:()=>WE,squaredDifferenceImpl:()=>GE,stridedSliceImpl:()=>qE,stringNGramsImpl:()=>KE,stringSplitImpl:()=>YE,stringToHashBucketFastImpl:()=>ZE,subImpl:()=>JE,tileImpl:()=>n$,topKImpl:()=>s$,transposeImpl:()=>kE,uniqueImpl:()=>i$});var aC={kernelName:qe,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Q_(t,"abs");let r=new Float32Array(ga.sizeFromShape(t.shape));return r=rC(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function sC(e){return(t,n,r,a,s)=>{let i=nf.assertAndGetBroadcastShape(t,n),o=i.length,l=ga.computeStrides(i),u=ga.sizeFromShape(i),h=ga.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=ga.computeStrides(t),f=ga.computeStrides(n),m=nf.getBroadcastDims(t,i),g=nf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=ga.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=ga.locToIndex(s,p,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=ga.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function iC(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var oC={kernelName:xt,backendName:"cpu",kernelFunc:iC};function lC(e,t,n="float32"){if("complex64"===n){return iC({inputs:{real:lC(e,t,"float32"),imag:lC(e,t,"float32")},backend:e})}let r=ga.makeZerosTypedArray(ga.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function uC(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var hC={kernelName:ln,backendName:"cpu",kernelFunc:uC};function pC(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var dC={kernelName:tr,backendName:"cpu",kernelFunc:pC};function cC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return uC({inputs:{x:a},backend:n});let e=lC(n,a.shape,a.dtype),t=cC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=iC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=pC({inputs:{input:a},backend:n}),t=cC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ga.hasEncodingLoss(a.dtype,s)){let e=uC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=ga.toTypedArray([0],a.dtype),[r,s]=sC(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var fC={kernelName:gt,backendName:"cpu",kernelFunc:cC};function mC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;Q_([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h="string"===s.dtype?nf.fromUint8ToStringArray(l):l,p="string"===s.dtype?nf.fromUint8ToStringArray(u):u,d=r||s.dtype,[c,f]=t(s.shape,i.shape,h,p,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=cC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=cC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=iC({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function gC(e){return(t,n,r,a,s,i)=>{let o=nf.assertAndGetBroadcastShape(t,n),l=ga.sizeFromShape(o),u=o.length,h=ga.computeStrides(o),p=ga.getTypedArrayFromDType("float32",l),d=ga.getTypedArrayFromDType("float32",l),c=nf.getBroadcastDims(t,o),f=nf.getBroadcastDims(n,o),m=nf.mergeRealAndImagArrays(r,a),g=nf.mergeRealAndImagArrays(s,i),y=t.length,b=ga.computeStrides(t),x=n.length,v=ga.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=ga.indexToLoc(t,u,h),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=ga.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=ga.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}var yC=sC(((e,t)=>e+t)),bC=gC(((e,t,n,r)=>({real:e+n,imag:t+r}))),xC=mC(Ye,yC,bC),vC={kernelName:Ye,backendName:"cpu",kernelFunc:xC};function wC(e,t,n,r,a){let s=ga.sizeFromShape(r),i=ga.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function kC(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Ni([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function IC(e){return(t,n,r)=>{let a=ga.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function SC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Q_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=ga.sizeFromShape(i.shape),h=n||i.dtype,p=ga.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function NC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Q_(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var TC=IC((e=>Math.ceil(e))),_C=NC(yt,TC),CC={kernelName:yt,backendName:"cpu",kernelFunc:_C};function EC(e,t,n,r){let a=ga.getArrayFromDType(n,ga.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=ga.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?nf.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var $C=sC(((e,t)=>e===t?1:0)),AC=mC(qt,$C,null,"bool"),FC={kernelName:qt,backendName:"cpu",kernelFunc:AC},RC=IC((e=>Math.exp(e))),DC=NC(Kt,RC,"float32"),MC={kernelName:Kt,backendName:"cpu",kernelFunc:DC},OC=IC((e=>Math.expm1(e))),LC=NC(Yt,OC),zC={kernelName:Yt,backendName:"cpu",kernelFunc:LC},PC=IC((e=>Math.floor(e))),BC=NC(en,PC),WC={kernelName:en,backendName:"cpu",kernelFunc:BC};function VC(e,t,n,r,a,s,i,o,l){let u=Ni([r,s],n);for(let n=0;n<r;n++){let r=[],h=0;for(let t=0;t<a;t++){let s=e[n*a+t];h+=s*i[t],r.push(s)}if(h<0||h>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(h*s+e))}return u}function UC(e,t,n){let r=Ni(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var GC=sC(((e,t)=>e>t?1:0)),HC=mC(sn,GC,null,"bool"),jC={kernelName:sn,backendName:"cpu",kernelFunc:HC},qC=sC(((e,t)=>e>=t?1:0)),KC=mC(on,qC,null,"bool"),XC={kernelName:on,backendName:"cpu",kernelFunc:KC},YC=sC(((e,t)=>e<t?1:0)),ZC=mC(mn,YC,null,"bool"),JC={kernelName:mn,backendName:"cpu",kernelFunc:ZC},QC=sC(((e,t)=>e<=t?1:0)),eE=mC(gn,QC,null,"bool"),tE={kernelName:gn,backendName:"cpu",kernelFunc:eE};function nE(e,t,n){let r=(t-e)/(n-1),a=ga.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var rE=IC((e=>Math.log(e))),aE=NC(bn,rE),sE={kernelName:bn,backendName:"cpu",kernelFunc:aE};function iE(e,t,n,r){let a=ga.getTypedArrayFromDType(r,ga.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var oE=sC(((e,t)=>Math.max(e,t))),lE=mC(Cn,oE),uE={kernelName:Cn,backendName:"cpu",kernelFunc:lE},hE=sC(((e,t)=>Math.min(e,t))),pE=mC(On,hE),dE={kernelName:On,backendName:"cpu",kernelFunc:pE},cE=sC(((e,t)=>e*t)),fE=gC(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),mE=mC(Bn,cE,fE),gE={kernelName:Bn,backendName:"cpu",kernelFunc:mE};function yE(e,t,n){let r=ga.createScalarValue(-1,n);return cE([],t,r,e,n)}var bE={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;Q_(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=yE(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},xE=sC(((e,t)=>e!==t?1:0)),vE=mC(Vn,xE,null,"bool"),wE={kernelName:Vn,backendName:"cpu",kernelFunc:vE};function kE(e,t,n,r,a){let s=t.length,i=ga.sizeFromShape(t),o=ga.computeStrides(t),l=ga.computeStrides(a),u=ga.getTypedArrayFromDType(n,ga.sizeFromShape(a));for(let t=0;t<i;++t){let n=ga.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[ga.locToIndex(a,s,l)]=e[t]}return u}function IE(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Q_(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=kE(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var SE={kernelName:Hr,backendName:"cpu",kernelFunc:IE};function NE(e,t,n,r){let[a,s]=nf.computeOutAndReduceShapes(e,r),i=as(t,"int32"),o=ga.makeZerosTypedArray(ga.sizeFromShape(a),i),l=ga.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var TE={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"prod");let o=a.shape.length,l=ga.parseAxisParam(s,a.shape),u=nf.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=nf.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=NE(p.shape,p.dtype,c,h),y=m;return i&&(y=nf.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function _E(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ga.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=ga.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var CE=IC((e=>1/Math.sqrt(e))),EE=NC(dr,CE),$E={kernelName:dr,backendName:"cpu",kernelFunc:EE};function AE(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return Ni(n,t.dtype);let c=Ni(h,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var FE=IC((e=>1/(1+Math.exp(-e)))),RE=SC(wr,(e=>1/(1+Math.exp(-e)))),DE={kernelName:wr,backendName:"cpu",kernelFunc:RE};function ME(e,t,n,r,a){let s=Uo.isSliceContinous(r,t,n),i=ga.sizeFromShape(n),o=ga.computeStrides(r);if(s){let n=Uo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=Ni(r,a,"string"===a?nf.fromUint8ToStringArray(e):e),u=Ni(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?nf.fromStringArrayToUint8(u.values):u.values}function OE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Q_(a,"slice");let[o,l]=Uo.parseSliceParams(a,s,i);Uo.assertParamsValid(a,o,l);let u=ME(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var LE={kernelName:yr,backendName:"cpu",kernelFunc:OE};function zE(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),h=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(nf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[ga.getArrayFromDType(n,0),[0,p],ga.getArrayFromDType(a,0),u,h]}let d=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw new Error(nf.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(nf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){let t=e,n=r;for(let e=0;e<o;++e)h[e]=e;return[t,[o,p],n,u,h]}{let t=f[l-1],s=ga.getArrayFromDType(n,t*p),d=ga.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=r[t],h[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function PE(e,t,n,r,a){let s=ga.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==h)throw new Error(nf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,e));h=e,l.push(1)}else{if(t<0)throw new Error(nf.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw new Error(nf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(nf.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(ga.sizeFromShape(l)!==s)throw new Error(nf.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=ga.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function BE(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce(((e,t)=>e*t),1),c=ga.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(nf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(nf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(nf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}var WE=IC((e=>Math.sqrt(e))),VE=SC(Ir,(e=>Math.sqrt(e))),UE={kernelName:Ir,backendName:"cpu",kernelFunc:VE},GE=sC(((e,t)=>{let n=e-t;return n*n})),HE=mC(Rr,GE),jE={kernelName:Rr,backendName:"cpu",kernelFunc:HE};function qE(e,t,n,r){let a=Ni(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function KE(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=ga.encodeString(e),this.nGramWidths=t,this.leftPad=ga.encodeString(n),this.rightPad=ga.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),h=s-(l+u),p=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<h;++t)d+=e[p+t].length;d+=u*this.rightPad.length,d+=(l+u+h-1)*this.separator.length,n[r+i]=new Uint8Array(d);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<h-1;++t)m(e[p+t]),m(this.separator);if(h>0){m(e[p+h-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=ga.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function XE(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function YE(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;XE(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=ga.getArrayFromDType("int32",2*s),u=new Array(s),h=[r,i],p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=a[p],++p;return[l,u,h]}function ZE(e,t){let n=ga.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ga.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var JE=sC(((e,t)=>e-t)),QE=gC(((e,t,n,r)=>({real:e-n,imag:t-r}))),e$=mC(Pr,JE,QE),t$={kernelName:Pr,backendName:"cpu",kernelFunc:e$};function n$(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=Ni(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var r$=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function a$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);a$(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(ga.swap(e,n,t),r$(e[r],a)>0&&ga.swap(e,n,r);s<i;){for(ga.swap(e,s,i),s++,i--;r$(e[s],a)<0;)s+=1;for(;r$(e[i],a)>0;)i-=1}0===r$(e[n],a)?ga.swap(e,n,i):(i+=1,ga.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function s$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=ga.getTypedArrayFromDType(n,i*r),u=ga.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(a$(i,r),i=i.slice(0,r)),a&&i.sort(r$);let h=t*r,p=l.subarray(h,h+r),d=u.subarray(h,h+r);for(let e=0;e<r;e++)p[e]=i[e].value,d[e]=i[e].index}let h=t.slice();return h[h.length-1]=r,[Ni(h,n,l),Ni(h,"int32",u)]}function i$(e,t,n,r){let a=ga.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Ga(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new Ga(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}yo("cpu",(()=>new tC),1);var o$=SC(Gt,(e=>e>=0?e:Math.exp(e)-1)),l$={kernelName:Gt,backendName:"cpu",kernelFunc:o$};function u$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Q_([a],"leakyRelu");let i=ga.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=ga.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var h$={kernelName:fn,backendName:"cpu",kernelFunc:u$},p$=sC(((e,t)=>e<0?t*e:e));function d$(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Q_([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=p$(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var c$={kernelName:Jn,backendName:"cpu",kernelFunc:d$},f$=SC(rr,(e=>Math.max(0,e))),m$={kernelName:rr,backendName:"cpu",kernelFunc:f$},g$=SC(ur,(e=>Math.min(Math.max(0,e),6))),y$={kernelName:ur,backendName:"cpu",kernelFunc:g$};function b$(e,t,n,r,a){if("linear"===n)return uC({inputs:{x:t},backend:e});if("relu"===n)return f$({inputs:{x:t},backend:e});if("elu"===n)return o$({inputs:{x:t},backend:e});if("relu6"===n)return g$({inputs:{x:t},backend:e});if("prelu"===n)return d$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return u$({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return RE({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function x$(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ga.sizeFromShape(a.shape),o=ga.inferFromImplicitShape(s,i),l=ga.sizeFromShape(o);ga.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var v$={kernelName:ar,backendName:"cpu",kernelFunc:x$};function w$(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;Q_([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ga.sizeFromShape(f),y=ga.sizeFromShape(m),b=No.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);ga.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=x$({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=x$({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,_=n.data.get(w.dataId).values,C=ga.computeStrides(v.shape),E=ga.computeStrides(w.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=Ni([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){let a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*_[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var k$={kernelName:pt,backendName:"cpu",kernelFunc:w$};var I$={kernelName:ea,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=w$({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=xC({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=b$(s,t,c,h,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},S$=SC(Ke,(e=>Math.acos(e))),N$={kernelName:Ke,backendName:"cpu",kernelFunc:S$},T$=SC(Xe,(e=>Math.acosh(e))),_$={kernelName:Xe,backendName:"cpu",kernelFunc:T$};var C$={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;Q_(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=Ni(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var E$={kernelName:Je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"all");let o=ga.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=ga.sizeFromShape(d),f=ga.makeZerosTypedArray(ga.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var $$={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"any");let o=ga.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=ga.sizeFromShape(d),f=ga.makeZerosTypedArray(ga.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var A$={kernelName:et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Q_(a,"argMax");let i=ga.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=IE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],nf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=nf.computeOutAndReduceShapes(l.shape,i),d=ga.sizeFromShape(h),c=ga.makeZerosTypedArray(d,"int32"),f=ga.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}};var F$={kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Q_(a,"argMin");let i=ga.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=IE({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],nf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=nf.computeOutAndReduceShapes(l.shape,i),d=ga.sizeFromShape(h),c=ga.makeZerosTypedArray(d,"int32"),f=ga.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}},R$=SC(nt,(e=>Math.asin(e))),D$={kernelName:nt,backendName:"cpu",kernelFunc:R$},M$=SC(rt,(e=>Math.asinh(e))),O$={kernelName:rt,backendName:"cpu",kernelFunc:M$},L$=SC(at,(e=>Math.atan(e))),z$={kernelName:at,backendName:"cpu",kernelFunc:L$},P$=sC(((e,t)=>Math.atan2(e,t))),B$=mC(it,P$),W$={kernelName:it,backendName:"cpu",kernelFunc:B$},V$=SC(st,(e=>Math.atanh(e))),U$={kernelName:st,backendName:"cpu",kernelFunc:V$};function G$(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ni(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,h+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function H$(e,t,n,r,a=!1,s=!1){let i=Ni(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=Ni(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function j$(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ni(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let _=Math.min(a.inDepth,d+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<_;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var q$={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Q_(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ga.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ga.arraysEqual(h.inShape,h.outShape))u=uC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ga.computeStrides(a.shape),r=G$(e,a.shape,a.dtype,t,h,"avg");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var K$={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Q_(a,"avgPool3d");let h=nf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=j$(n.data.get(a.dataId).values,a.shape,a.dtype,ga.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var X$={kernelName:ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Q_([a,s],"avgPool3DGrad");let h=nf.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=v-1-h.padInfo.front,S=k-1-h.padInfo.left,N=w-1-h.padInfo.top,T=Ni(s.shape,"float32"),_=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}T.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var Y$={kernelName:lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Q_([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=nf.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,v=y-1-h.padInfo.top,w=Ni(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,S=Ni(a.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var Z$={kernelName:nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;ga.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ga.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ga.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Q_([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var J$={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Q_([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=x$({inputs:{x:a},backend:n,attrs:{shape:l}}),f=IE({inputs:{x:c},backend:n,attrs:{perm:u}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=OE({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var Q$={kernelName:ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=wC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var eA={kernelName:mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=nf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},tA=SC(bt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),nA={kernelName:bt,backendName:"cpu",kernelFunc:tA},rA={kernelName:vt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(ga.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function aA(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var sA={kernelName:hn,backendName:"cpu",kernelFunc:aA};function iA(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ga.parseAxisParam(a,t[0].shape)[0],i=nf.computeOutShape(t.map((e=>e.shape)),s);if(0===ga.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ga.sizeFromShape(e.shape)>0));if(1===o.length)return uC({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(nf.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>pC({inputs:{input:e},backend:n}))),t=o.map((e=>aA({inputs:{input:e},backend:n}))),r=iA({inputs:e,backend:n,attrs:{axis:s}}),a=iA({inputs:t,backend:n,attrs:{axis:s}}),i=iC({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=ga.sizeFromShape(e.shape.slice(s));return x$({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=nf.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=EC(h,i,t[0].dtype,p),c=nf.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var oA={kernelName:wt,backendName:"cpu",kernelFunc:iA};function lA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;Q_([a,s],"conv2d");let p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ga(d.outShape,a.dtype),w=ga.computeStrides(a.shape),k=ga.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],_=v.strides[0],C=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<d.outHeight;++e){let r=n+e*C,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*N,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var uA={kernelName:kt,backendName:"cpu",kernelFunc:lA};var hA={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;Q_([a,s],"conv2dBackpropFilter");let p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ga(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ga(a.shape,a.dtype,w),S=new Ga(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,h,e,o):I.get(u,i,t,n)*S.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var pA={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;Q_([a,s],"conv2dBackpropInput");let p=ga.computeStrides(s.shape),d=ga.computeStrides(a.shape),c=nf.convertConv2DDataFormat(u),f=nf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new Ga(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:_,outChannels:C,outHeight:E,outWidth:$,strideHeight:A,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min($,(S+o)/F),h=0;for(let n=a;n<s;++n){let a=n*A-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<C;++e){h+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var dA={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Q_([a,s],"conv3d");let u=nf.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new Ga(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=ga.computeStrides(a.shape),N=ga.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var cA={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Q_([a,s],"conv3dBackpropFilterV2");let u=ga.computeStrides(a.shape),h=ga.computeStrides(s.shape),p=nf.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new Ga(p.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,_,C]=h,E=n.data.get(a.dataId).values,[$,A,F,R]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(p.outWidth,(p.inWidth+M-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*$,y=m*N;for(let m=t;m<n;++m){let t=(e+m*d-D)*A+p,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-M)*R+s+o]*S[t+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var fA={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Q_([a],"conv3dBackpropInputV2");let u=ga.computeStrides(a.shape),h=ga.computeStrides(s.shape),p=nf.computeConv3DInfo(l,s.shape,o,1,i),d=new Ga(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[S,N,T,_]=h,{batchSize:C,filterDepth:E,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=$-1-p.padInfo.top,H=A-1-p.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,($+o)/W);for(let h=0;h<M;++h){let p=h-H,d=Math.max(0,Math.ceil(p/V)),C=Math.min(P,(A+p)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<C;++i){let o=x*e+v*n+w*r+k*i,l=S*(E-1-a)+N*($-1-s)+T*(A-1-(i*V-p))+_*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},mA=SC(Ct,(e=>Math.cos(e))),gA={kernelName:Ct,backendName:"cpu",kernelFunc:mA},yA=SC(Et,(e=>Math.cosh(e))),bA={kernelName:Et,backendName:"cpu",kernelFunc:yA};var xA={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=Ni([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=ga.computeStrides(a.shape),k=ga.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let h=v[s];s=r+p*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(h-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var vA={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Q_(a,"cumprod");let l=nf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=IE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=nf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=as(u.dtype,"int32"),d=ga.makeOnesTypedArray(ga.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let r=m(e,t-1);d[n]=i?c[r]*d[r]:c[n]*d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=IE({inputs:{x:g},backend:n,attrs:{perm:nf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var wA={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Q_(a,"cumsum");let l=nf.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=IE({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=nf.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=as(u.dtype,"int32"),d=ga.makeZerosTypedArray(ga.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=IE({inputs:{x:g},backend:n,attrs:{perm:nf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var kA={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=wC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=kC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var IA={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ga.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}};function SA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Q_([a,s],"depthwiseConv2DNative");let h=ga.computeStrides(a.shape),p=ga.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),ga.assert(nf.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=nf.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new Ga(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-v;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var NA={kernelName:Mt,backendName:"cpu",kernelFunc:SA};var TA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;Q_([a,s],"depthwiseConv2dNativeBackpropFilter");let p=nf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new Ga(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new Ga(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ga(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var _A={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;Q_([a,s],"depthwiseConv2DNativeBackpropInput");let p=ga.computeStrides(a.shape),d=ga.computeStrides(s.shape),c=nf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new Ga(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:_,filterHeight:C,filterWidth:E,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=C-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),h=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=S*(C-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e){h+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var CA={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=ga.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ni([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},EA={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=nf.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=ga.sizeFromShape(T),C=T.length,E=ga.getArrayFromDType(r.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*N;if(c>=0&&c<m){let i=ga.locToIndex([e,s,c,o],h,ga.computeStrides(r.shape)),f=ga.locToIndex([t,n,o],d,ga.computeStrides(a.shape)),m=u[i]+p[f];m>l&&(l=m)}}}E[ga.locToIndex([e,t,s,o],C,ga.computeStrides(T))]=l}}}return{dataId:l.write(ga.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},$A={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ga.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ga.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=nf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ga.assert(s.rank===N.length,(()=>`Error in ${Wt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ga.toNestedArray(N,u.data.get(s.dataId).values),_=ga.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}_[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ga.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},AA={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=ga.toNestedArray(r.shape,u.data.get(r.dataId).values),p=ga.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=nf.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);ga.assert(s.rank===N.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));let T=ga.toNestedArray(N,u.data.get(s.dataId).values),_=ga.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}_[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(ga.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function FA(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;Q_(s,"sum"),t="bool"===s.dtype?cC({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):uC({inputs:{x:s},backend:r});let l=t.shape.length,u=ga.parseAxisParam(i,t.shape),h=nf.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=IE({inputs:{x:t},backend:r,attrs:{perm:h}}),p=nf.getInnerMostAxes(p.length,l)),nf.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=nf.computeOutAndReduceShapes(d.shape,p),m=lC(r,c,nf.upcastType(d.dtype,"int32")),g=ga.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=x$({inputs:{x:m},backend:r,attrs:{shape:nf.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}var RA={kernelName:Sr,backendName:"cpu",kernelFunc:FA};var DA={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=nf.decodeEinsumEquation(a,s.length);nf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=nf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=nf.getEinsumPermutation(c,l[t]);nf.isIdentityPermutation(r)?e=s[t]:(e=IE({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ga.arraysEqual(e.shape,i)||(e=x$({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=mE({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=FA({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};var MA={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;Q_([r,a],"eluGrad");let s=new Float32Array(ga.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},OA=nf.ERF_P,LA=nf.ERF_A1,zA=nf.ERF_A2,PA=nf.ERF_A3,BA=nf.ERF_A4,WA=nf.ERF_A5,VA=SC(jt,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+OA*n);return t*(1-((((WA*r+BA)*r+PA)*r+zA)*r+LA)*r*Math.exp(-n*n))})),UA={kernelName:jt,backendName:"cpu",kernelFunc:VA};function GA(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ga.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),x$({inputs:{x:a},backend:n,attrs:{shape:o}})}var HA={kernelName:Xt,backendName:"cpu",kernelFunc:GA},jA=sC(((e,t)=>e/t)),qA=mC(Vt,jA),KA={kernelName:Vt,backendName:"cpu",kernelFunc:qA};function XA(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=ga.sizeFromShape(u),p=ga.getTypedArrayFromDType("float32",h),d=ga.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=OE({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=OE({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=iC({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=YA(i,t,n),c=nf.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=nf.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=iC({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function YA(e,t,n){let r=ga.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=ZA(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ga.createScalarValue(r,"float32")),i=uC({inputs:{x:s},backend:n}),l=KA.kernelFunc({inputs:{a:e,b:s},backend:n}),u=KA.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=nf.exponent(a*r,t,n),l=nf.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),nf.assignToTypedArray(r,s,i,a)}return r}(nf.mergeRealAndImagArrays(s,i),r,t);return nf.splitRealAndImagArrays(e)}}function ZA(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=nf.mergeRealAndImagArrays(e,t),i=n/2,o=nf.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=iC({inputs:{real:p,imag:d},backend:a}),f=nf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=iC({inputs:{real:b,imag:x},backend:a}),w=ZA(l,u,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),_=iC({inputs:{real:N,imag:T},backend:a}),C=ZA(m,g,i,r,a),E=C.real,$=C.imag,A=[E.length],F=a.makeTensorInfo(A,"float32",E),R=a.makeTensorInfo(A,"float32",$),D=iC({inputs:{real:F,imag:R},backend:a}),M=nf.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=iC({inputs:{real:L,imag:z},backend:a}),B=mE({inputs:{a:P,b:D},backend:a}),W=xC({inputs:{a:_,b:B},backend:a}),V=e$({inputs:{a:_,b:B},backend:a}),U=pC({inputs:{input:W},backend:a}),G=pC({inputs:{input:V},backend:a}),H=aA({inputs:{input:W},backend:a}),j=aA({inputs:{input:V},backend:a}),q=iA({inputs:[U,G],backend:a,attrs:{axis:0}}),K=iA({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var JA={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ga.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=x$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=XA(i,!1,n),l=x$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function QA(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ga.inferDtype(a),o=ga.getArrayFromDType(i,ga.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var eF={kernelName:Jt,backendName:"cpu",kernelFunc:QA};var tF={kernelName:Qt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=ga.getTypedArrayFromDType(r.dtype,ga.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,p=h[o];if(i>=0&&i<l){p=h[t+n+i*u+a]}s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nF=sC(((e,t)=>Math.floor(e/t))),rF=mC(tn,nF,null,"int32"),aF={kernelName:tn,backendName:"cpu",kernelFunc:rF};var sF={kernelName:ta,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=lA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=x$({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=xC({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=xC({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=x$({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=b$(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=b$(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var iF={kernelName:na,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=SA({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=xC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=b$(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var oF={kernelName:an,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ga.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=nf.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=VC(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}};var lF={kernelName:rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Q_([a,s],"gatherV2");let l=ga.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ga.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=o;null==o&&(p=0);let d=ga.sizeFromShape(s.shape),c=nf.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=x$({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=x$({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=UC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}};var uF={kernelName:un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=ga.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=x$({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=XA(i,!0,n),l=x$({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},hF=SC(pn,(e=>Number.isFinite(e)?1:0),"bool"),pF={kernelName:pn,backendName:"cpu",kernelFunc:hF},dF=SC(dn,(e=>Math.abs(e)===1/0?1:0),"bool"),cF={kernelName:dn,backendName:"cpu",kernelFunc:dF},fF=SC(cn,(e=>Number.isNaN(e)?1:0),"bool"),mF={kernelName:cn,backendName:"cpu",kernelFunc:fF};var gF={kernelName:yn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=nE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},yF=SC(xn,(e=>Math.log1p(e))),bF={kernelName:xn,backendName:"cpu",kernelFunc:yF},xF=sC(((e,t)=>e&&t)),vF=mC(vn,xF,null,"bool"),wF={kernelName:vn,backendName:"cpu",kernelFunc:vF},kF=SC(wn,(e=>e?0:1),"bool"),IF={kernelName:wn,backendName:"cpu",kernelFunc:kF},SF=sC(((e,t)=>e||t)),NF=mC(kn,SF,null,"bool"),TF={kernelName:kn,backendName:"cpu",kernelFunc:NF};var _F={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Q_(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=ga.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var CF={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;Q_(i,"LRNGrad");let p=ga.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function EF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=ga.parseAxisParam(s,l),p=h,d=nf.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=kE(c,l,a.dtype,d,e),p=nf.getInnerMostAxes(p.length,u),l=e}Q_(a,"max"),nf.assertAxesAreInnerMostDims("max",p,u);let[f,m]=nf.computeOutAndReduceShapes(l,p),g=iE(c,ga.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=nf.expandShapeToKeepDim(f,h)),{dataId:y,shape:b,dtype:a.dtype}}var $F={kernelName:_n,backendName:"cpu",kernelFunc:EF};var AF={kernelName:En,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Q_(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ga.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&ga.arraysEqual(h.inShape,h.outShape))u=uC({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=ga.computeStrides(a.shape),r=G$(e,a.shape,a.dtype,t,h,"max");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var FF={kernelName:An,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Q_(a,"maxPool3d");let h=nf.computePool3DInfo(a.shape,s,i,1,o,l,u),p=j$(n.data.get(a.dataId).values,a.shape,a.dtype,ga.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var RF={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Q_([a,s],"maxPool3DGrad");let h=nf.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=Ni(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,k=v-1-h.padInfo.left,I=x-1-h.padInfo.top,S=Ni(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=N.get(e,r,s,u,t)*d)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var DF={kernelName:$n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Q_([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=nf.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=Ni(d.outShape,o.dtype,H$(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ni(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ni(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var MF={kernelName:Rn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Q_(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=nf.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=G$(e,0,n,ga.computeStrides(t),a,"max"),i=H$(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};var OF={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ga.parseAxisParam(s,a.shape),l=nf.computeOutAndReduceShapes(a.shape,o)[1],u=ga.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=cC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=qA({inputs:{a:d,b:p},backend:n});h.push(c);let f=FA({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var LF={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Q_(a,"min");let o=ga.parseAxisParam(s,a.shape),l=o,u=nf.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=IE({inputs:{x:a},backend:n,attrs:{perm:u}}),l=nf.getInnerMostAxes(l.length,a.shape.length)),nf.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=nf.computeOutAndReduceShapes(h.shape,l),c=ga.sizeFromShape(d),f=ga.makeZerosTypedArray(ga.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=x$({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var zF={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Q_(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=ga.computeStrides(a.shape),f=ga.sizeFromShape(o),m=o.length,g=ga.computeStrides(o),y=ga.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=ga.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));let n=ga.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},PF=sC(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),BF=mC(zn,PF),WF={kernelName:zn,backendName:"cpu",kernelFunc:BF},VF=c(N());function UF(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=ga.parseAxisParam([o],a.shape),u=EF({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=nf.expandShapeToKeepDim(u.shape,l),p=x$({inputs:{x:u},backend:n,attrs:{shape:h}}),d=e$({inputs:{a,b:p},backend:n}),c=DC({inputs:{x:d},backend:n}),f=FA({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:h}}),g=qA({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var GF={kernelName:_r,backendName:"cpu",kernelFunc:UF};var HF={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Q_(a,"multinomial");let l=o?a:UF({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=ga.makeZerosTypedArray(ga.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=VF.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},jF=rm.nonMaxSuppressionV3Impl;var qF={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Q_(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=jF(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},KF=rm.nonMaxSuppressionV4Impl;var XF={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Q_(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=KF(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},YF=rm.nonMaxSuppressionV5Impl;var ZF={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Q_(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=YF(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var JF={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Q_(a,"oneHot");let l=ga.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(u[e*s+h[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function QF(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=pC({inputs:{input:r},backend:n}),t=QF({inputs:{x:e},backend:n}),a=aA({inputs:{input:r},backend:n}),s=QF({inputs:{x:a},backend:n}),i=iC({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return QA({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var eR={kernelName:Yr,backendName:"cpu",kernelFunc:QF};var tR={kernelName:jn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=pC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=aA({inputs:{input:a},backend:r}),i=QF({inputs:{x:s},backend:r}),o=iC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return QA({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function nR(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return GA({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ga.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ga.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=iA({inputs:t.map((e=>{let t=GA({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var rR={kernelName:Kn,backendName:"cpu",kernelFunc:nR};var aR={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Q_(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=ga.sizeFromShape(a.shape),p=a.shape.length,d=ga.computeStrides(a.shape),c=ga.sizeFromShape(o),f=o.length,m=ga.computeStrides(o),g=ga.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=ga.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));g[ga.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},sR=sC(((e,t)=>Math.pow(e,t))),iR=mC(Zn,sR),oR={kernelName:Zn,backendName:"cpu",kernelFunc:iR};var lR={kernelName:er,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=_E(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},uR=SC(nr,(e=>1/e)),hR={kernelName:nr,backendName:"cpu",kernelFunc:uR};var pR={kernelName:or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Q_(a,"resizeBilinear");let l=ga.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ga.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}};var dR={kernelName:lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Q_([s,a],"resizeBilinearGrad");let o=ga.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}};var cR={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Q_(a,"resizeNearestNeighbor");let l=ga.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}};var fR={kernelName:ir,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Q_([s,a],"resizeNearestNeighborGrad");let o=ga.computeStrides(a.shape),l=ga.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<p;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var mR={kernelName:hr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Q_(a,"reverse");let i=a.shape.length,o=ga.parseAxisParam(s,a.shape);if(0===i)return uC({inputs:{x:a},backend:n});let l=new Ga(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},gR={kernelName:Qr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=ga.getTypedArrayFromDType(r.dtype,ga.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=nf.getImageCenter(i,h,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*p*h*d;for(let e=0;e<h;e++){let n=e*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<h){k=y[t+w*(p*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yR=SC(pr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),bR={kernelName:pr,backendName:"cpu",kernelFunc:yR};var xR={kernelName:cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=nf.calculateShapes(s,a,i),d=AE(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function vR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function wR(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}var kR={kernelName:fr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=ga.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?vR(n,t[e+l]):wR(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}};var IR={kernelName:mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Q_([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=as(a.dtype,s.dtype),p=ga.makeZerosTypedArray(ga.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:ga.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},SR=nf.SELU_SCALEALPHA,NR=nf.SELU_SCALE,TR=SC(gr,(e=>e>=0?NR*e:SR*(Math.exp(e)-1))),_R={kernelName:gr,backendName:"cpu",kernelFunc:TR},CR=SC(vr,(e=>e<0?-1:e>0?1:0)),ER={kernelName:vr,backendName:"cpu",kernelFunc:CR},$R=SC(br,(e=>Math.sin(e))),AR={kernelName:br,backendName:"cpu",kernelFunc:$R},FR=SC(xr,(e=>Math.sinh(e))),RR={kernelName:xr,backendName:"cpu",kernelFunc:FR},DR=Math.log(1.1920928955078125e-7)+2,MR=SC(kr,(e=>{let t,n=e>-DR,r=e<DR,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),OR={kernelName:kr,backendName:"cpu",kernelFunc:MR};var LR={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Q_([a],"spaceToBatchND");let o=ga.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=aR.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=nf.getReshaped(u.shape,s,o,!1),p=nf.getPermuted(h.length,s.length,!1),d=nf.getReshapedPermuted(u.shape,s,o,!1),c=x$({inputs:{x:u},backend:n,attrs:{shape:h}}),f=IE({inputs:{x:c},backend:n,attrs:{perm:p}}),m=x$({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var zR={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=zE(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var PR={kernelName:Er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=PE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var BR={kernelName:$r,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=BE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var WR={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=BE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var VR={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=nf.calculateShapes(i,s,l),f=!1,m=r.bufferSync(s);switch(i.dtype){case"bool":t=AE(m,r.bufferSync(i),l,c,p,h,u,d,Boolean(r.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":t=AE(m,r.bufferSync(i),l,c,p,h,u,d,r.data.get(o.dataId).values[0],f);break;case"string":t=AE(m,r.bufferSync(i),l,c,p,h,u,d,ga.decodeString(r.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}};var UR={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ga.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=OE({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},GR={kernelName:Dr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;Q_(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},HR=SC(Zr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),jR={kernelName:Zr,backendName:"cpu",kernelFunc:HR};var qR={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;Q_(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Uo.sliceInfo(a.shape,s,i,o,l,u,h,p,d);if(g)c=x$({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){ga.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=Uo.computeOutShape(x,v,w),t=OE({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});c=x$({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=qE(f,n.bufferSync(a),w,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var KR={kernelName:Or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.data.get(h.dataId).values,c=n.data.get(p.dataId).values,[f,m]=KE(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var XR={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,h,p]=YE(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var YR={kernelName:zr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=ZE(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},ZR=SC(Br,(e=>Math.tan(e))),JR={kernelName:Br,backendName:"cpu",kernelFunc:ZR},QR=SC(Wr,(e=>Math.tanh(e)));var eD={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Q_(a,"tile");let i=n$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var tD={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Q_(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=s$(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var nD={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=ga.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=ga.getTypedArrayFromDType(a.dtype,ga.sizeFromShape(g));w.fill(l);let k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let h=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=rD(h,d,o),m=rD(c,p,o);switch(i){case"nearest":s=sD(k,p,d,b,x,v,e,m,f,a,l);break;case"bilinear":s=iD(k,p,d,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function rD(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ga.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return ga.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ga.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function aD(e,t,n,r,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:h}function sD(e,t,n,r,a,s,i,o,l,u,h){return aD(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,h)}function iD(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1;return(c-o)*((f-l)*aD(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*aD(e,t,n,r,a,s,i,p,f,u,h))+(o-p)*((f-l)*aD(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*aD(e,t,n,r,a,s,i,c,f,u,h))}var oD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Q_(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=i$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var lD={kernelName:qr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=OE({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=x$({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}};var uD={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Q_(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,h=s;for(let e=0;e<u;++e){let t=GA({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){let t=ga.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=AC({inputs:{a:r,b:h},backend:n}),i=cC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=mE({inputs:{a:i,b:a},backend:n}),p=FA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(r),l.push(s),l.push(i),l.push(u),l.push(p)}let p=nR({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},hD=[I$,aC,N$,_$,vC,C$,E$,$$,A$,F$,D$,O$,z$,W$,U$,q$,K$,X$,Y$,k$,Z$,J$,Q$,eA,fC,CC,nA,oC,rA,oA,uA,hA,pA,dA,cA,fA,gA,bA,xA,vA,wA,kA,IA,NA,TA,_A,CA,EA,$A,AA,DA,l$,MA,FC,UA,MC,HA,zC,JA,eF,tF,WC,aF,sF,iF,oF,lF,jC,XC,hC,uF,sA,pF,cF,mF,h$,JC,tE,gF,sE,bF,wF,IF,TF,_F,CF,$F,uE,AF,FF,RF,DF,MF,OF,LF,dE,zF,WF,HF,gE,bE,qF,XF,ZF,wE,JF,tR,rR,aR,oR,c$,TE,lR,dC,KA,hR,m$,y$,v$,pR,dR,cR,fR,mR,gR,bR,$E,xR,kR,IR,_R,DE,ER,AR,RR,LE,GF,OR,LR,zR,PR,BR,WR,VR,UR,UE,GR,jE,jR,qR,KR,XR,YR,t$,RA,JR,{kernelName:Wr,backendName:"cpu",kernelFunc:QR},eD,tD,nD,SE,oD,lD,uD,eR];for(let e of hD)ha(e);var pD={};d(pD,{assertNotComplex:()=>bM,bindCanvasToFramebuffer:()=>KD,bindColorTextureToFramebuffer:()=>XD,bindTextureToProgramUniformSampler:()=>qD,bindTextureUnit:()=>UD,bindVertexBufferToProgramAttribute:()=>VD,callAndCheck:()=>ID,canBeRepresented:()=>SD,createFragmentShader:()=>CD,createFramebuffer:()=>WD,createProgram:()=>RD,createStaticIndexBuffer:()=>LD,createStaticVertexBuffer:()=>OD,createTexture:()=>PD,createVertexShader:()=>_D,getBatchDim:()=>tM,getExtensionOrThrow:()=>TD,getFramebufferErrorMessage:()=>JD,getMaxTexturesInShader:()=>hM,getNumChannels:()=>zD,getProgramUniformLocation:()=>jD,getProgramUniformLocationOrThrow:()=>HD,getRowsCols:()=>nM,getShapeAs3D:()=>rM,getTextureShapeFromLogicalShape:()=>aM,getWebGLDisjointQueryTimerVersion:()=>pM,getWebGLErrorMessage:()=>ND,getWebGLMaxTextureSize:()=>oM,hasExtension:()=>dM,isCapableOfRenderingToFloatTexture:()=>fM,isDownloadFloatTextureEnabled:()=>mM,isReshapeFree:()=>iM,isWebGLFenceEnabled:()=>yM,isWebGLVersionEnabled:()=>cM,linkProgram:()=>DD,logShaderSourceAndInfoLog:()=>FD,resetMaxTextureSize:()=>lM,resetMaxTexturesInShader:()=>uM,unbindColorTextureFromFramebuffer:()=>YD,unbindTextureUnit:()=>GD,validateFramebuffer:()=>ZD,validateProgram:()=>MD,validateTextureSize:()=>BD});var dD,cD,fD,mD={},gD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function yD(e,t){mD[e]=t}function bD(e,t){if(!(e in mD)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete mD[e]}),!1),1===e?n.getContext("webgl",gD)||n.getContext("experimental-webgl",gD):n.getContext("webgl2",gD)}(e,t);if(null===n)return null;mD[e]=n}let n=mD[e];return null==n||n.isContextLost()?(delete mD[e],bD(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),mD[e])}function xD(e,t){return[t,e]}function vD(e){let t=ga.sizeFromShape(e),n=Math.ceil(t/4);return ga.sizeToSquarishShape(n)}function wD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function kD(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Ve().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT,o=d.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function ID(e,t){let n=t();return Ve().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+ND(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(dD||(dD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(cD||(cD={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(fD||(fD={}));function SD(e){return!!(Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function ND(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function TD(e,t){return QD(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function _D(e,t){let n=QD(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ID(e,(()=>e.shaderSource(n,t))),ID(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n}function CD(e,t){let n=QD(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ID(e,(()=>e.shaderSource(n,t))),ID(e,(()=>e.compileShader(n))),Ve().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw FD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var ED,$D,AD=/ERROR: [0-9]+:([0-9]+):/g;function FD(e,t){let n=AD.exec(t);if(null==n)return;let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>ga.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);i.slice(0,r-1),i.slice(r-1,r),i.slice(r)}function RD(e){return QD(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function DD(e,t){if(ID(e,(()=>e.linkProgram(t))),!Ve().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")}function MD(e,t){if(ID(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function OD(e,t){let n=QD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ID(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ID(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function LD(e,t){let n=QD(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ID(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ID(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function zD(){return 2===Ve().getNumber("WEBGL_VERSION")?1:4}function PD(e){return QD(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function BD(e,t){let n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function WD(e){return QD(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function VD(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(ID(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),ID(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),ID(e,(()=>e.enableVertexAttribArray(o))),!0)}function UD(e,t,n){eM(e,n),ID(e,(()=>e.activeTexture(e.TEXTURE0+n))),ID(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function GD(e,t){eM(e,t),ID(e,(()=>e.activeTexture(e.TEXTURE0+t))),ID(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function HD(e,t,n){return QD(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function jD(e,t,n){return e.getUniformLocation(t,n)}function qD(e,t,n,r){ID(e,(()=>UD(e,t,r))),ID(e,(()=>e.uniform1i(n,r)))}function KD(e){ID(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ID(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),ID(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function XD(e,t,n){ID(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ID(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function YD(e,t){ID(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ID(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function ZD(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+JD(e,t))}function JD(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function QD(e,t,n){let r=ID(e,(()=>t()));if(null==r)throw new Error(n);return r}function eM(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function tM(e,t=2){return ga.sizeFromShape(e.slice(0,e.length-t))}function nM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function rM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[tM(e),...nM(e)]),t}function aM(e,t=!1){let n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ga.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=ga.squeezeShape(e).newShape);let r=ga.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=tM(e),n=2,a=2;return e.length&&([n,a]=nM(e)),r=t*(n/2)*(a/2),ga.sizeToSquarishShape(r).map((e=>2*e))}return ga.sizeToSquarishShape(r)}function sM(e){return e%2==0}function iM(e,t){if(e=e.slice(-2),t=t.slice(-2),ga.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||sM(n)&&sM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&sM(e[0])&&sM(t[0])}function oM(e){if(null==ED){let t=bD(e);ED=t.getParameter(t.MAX_TEXTURE_SIZE)}return ED}function lM(){ED=null}function uM(){$D=null}function hM(e){if(null==$D){let t=bD(e);$D=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$D)}function pM(e){if(0===e)return 0;let t,n=bD(e);return t=dM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:dM(n,"EXT_disjoint_timer_query")?1:0,t}function dM(e,t){return null!=e.getExtension(t)}function cM(e){try{if(null!=bD(e))return!0}catch(e){return!1}return!1}function fM(e){if(0===e)return!1;let t=bD(e);if(1===e){if(!dM(t,"OES_texture_float"))return!1}else if(!dM(t,"EXT_color_buffer_float"))return!1;return gM(t)}function mM(e){if(0===e)return!1;let t=bD(e);if(1!==e){if(dM(t,"EXT_color_buffer_float"))return gM(t);let e="EXT_color_buffer_half_float";if(dM(t,e)){let n=t.getExtension(e);return function(e,t){let n=kD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!dM(t,"OES_texture_float")||!dM(t,"WEBGL_color_buffer_float"))&&gM(t)}function gM(e){let t=kD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function yM(e){return 2===e&&null!=bD(e).fenceSync}function bM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ga.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var xM=Ve();function vM(){let e,t,n,r,a,s,i,o,l,u;return 2===Ve().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function wM(e,t,n="index"){let r=ga.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function kM(e,t,n="index"){let r=ga.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function IM(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function SM(e){let t=ga.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}xM.registerFlag("HAS_WEBGL",(()=>xM.getNumber("WEBGL_VERSION")>0)),xM.registerFlag("WEBGL_VERSION",(()=>cM(2)?2:cM(1)?1:0)),xM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),xM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===xM.get("WEBGL_VERSION"))),xM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),xM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),xM.registerFlag("WEBGL_PACK",(()=>xM.getBool("HAS_WEBGL"))),xM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_CLIP",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_PACK_REDUCE",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_CONV_IM2COL",(()=>xM.getBool("WEBGL_PACK"))),xM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>oM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>hM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=xM.getNumber("WEBGL_VERSION");return 0===e?0:pM(e)})),xM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>xM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!bs.isMobile())),xM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>fM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!xM.getBool("WEBGL_FORCE_F16_TEXTURES")&&xM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),xM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>mM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>yM(xM.getNumber("WEBGL_VERSION")))),xM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>xM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),xM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),xM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>bs.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),xM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),xM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),xM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),xM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var NM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:TM}=nf;function _M(e,t,n){let r=[];if(e.forEach((e=>{let t=ga.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=zM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?EM(e,r):CM(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=TM(e.shapeInfo.logicalShape,t.logicalShape),u=LM(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===ga.sizeFromShape(e.shapeInfo.logicalShape),m=1===ga.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ga.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=LM(l),p=TM(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=vM(),h=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$M}\n    ${AM}\n    ${FM}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return DM();case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ga.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return DM();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ga.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${kM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=wM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${kM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=wM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=wM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=wM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=RM),[p,h,s,i,a,o,n.userCode].join("\n")}function CM(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=MM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${OM(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=MM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ga.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=ga.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${CM(PM(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${BM(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${OM(e)}\n      }\n    `;let u=s[0],h=s[1],p=MM(r);return 1===h?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=ga.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${CM(PM(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${BM(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.texShape,p=h[0],d=h[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=MM(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=ga.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${CM(PM(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${BM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=MM(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=ga.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${CM(PM(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${BM(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${OM(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=MM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ga.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${CM(PM(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${BM(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${OM(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=MM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function EM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=vM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=vM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=vM();if(null!=s&&ga.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${EM(PM(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${BM(s,r)});\n        }\n      `}let o=vM();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=vM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var $M="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function DM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function MM(e){return`offset${e}`}function OM(e){let t=e.name,n=ga.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function LM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function zM(e,t,n){let{newShape:r,keptDims:a}=ga.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!ga.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function PM(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function BM(e,t){return t.map((t=>e[t])).join(", ")}function WM(e,t,n){let r,a,s,i={},o={},l={},u=[],h=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===Ve().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,d),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),a=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:h,nanLoc:p,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function VM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!ga.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ga.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function UM(e){return Ve().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var GM={};function HM(e){let t=vM();return _D(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function jM(e){return OD(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function qM(e){return LD(e,new Uint16Array([0,1,2,2,1,3]))}function KM(e,t,n,r,a,s){BD(t,n);let i=PD(e),o=e.TEXTURE_2D;return ID(e,(()=>e.bindTexture(o,i))),ID(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ID(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ID(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),ID(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ve().getNumber("WEBGL_VERSION")?ID(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):ID(e,(()=>e.texStorage2D(o,1,r,t,n))),ID(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function XM(e){return e.internalFormatFloat}function YM(e,t,n,r){let[a,s]=xD(t,n);return KM(e,a,s,XM(r),r.textureFormatFloat,e.FLOAT)}function ZM(e){return e.internalFormatHalfFloat}function JM(e,t,n,r){let[a,s]=xD(t,n);return KM(e,a,s,ZM(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function QM(e){return e.downloadTextureFormat}function eO(e,t,n,r){let[a,s]=xD(t,n);return KM(e,a,s,QM(r),e.RGBA,e.UNSIGNED_BYTE)}function tO(e){return e.internalFormatPackedFloat}function nO(e,t,n,r){let[a,s]=wD(t,n);return KM(e,a,s,tO(r),e.RGBA,e.FLOAT)}function rO(e){return e.internalFormatPackedHalfFloat}function aO(e,t,n,r){let[a,s]=wD(t,n);return KM(e,a,s,rO(r),e.RGBA,r.textureTypeHalfFloat)}function sO(e,t,n){return ID(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),VD(e,t,"clipSpacePos",n,3,20,0)&&VD(e,t,"uv",n,2,20,12)}function iO(e,t,n,r,a,s){let i,o,l;ID(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Ve().getNumber("WEBGL_VERSION")?ID(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):ID(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),ID(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function oO(e,t,n){ID(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ve().getNumber("WEBGL_VERSION")?ID(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):ID(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ve().getNumber("WEBGL_VERSION")?ID(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):ID(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ID(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function lO(e,t,n,r){let a=e.createBuffer();ID(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return ID(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),ID(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ID(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function uO(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function hO(e,t,n,r){let[a,s]=xD(t,n),i=new Uint8Array(function(e,t){return e*t}(t*n,4));return ID(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function pO(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=wD(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function dO(e,t,n){let r=new Float32Array(t*n*4);return ID(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}d(GM,{bindVertexProgramAttributeStreams:()=>sO,createBufferFromOutputTexture:()=>lO,createFloat16MatrixTexture:()=>JM,createFloat16PackedMatrixTexture:()=>aO,createFloat32MatrixTexture:()=>YM,createIndexBuffer:()=>qM,createPackedMatrixTexture:()=>nO,createUnsignedBytesMatrixTexture:()=>eO,createVertexBuffer:()=>jM,createVertexShader:()=>HM,downloadByteEncodedFloatMatrixFromOutputTexture:()=>hO,downloadFloat32MatrixFromBuffer:()=>uO,downloadMatrixFromPackedOutputTexture:()=>dO,downloadPackedMatrixFromBuffer:()=>pO,getInternalFormatForFloat16MatrixTexture:()=>ZM,getInternalFormatForFloat16PackedMatrixTexture:()=>rO,getInternalFormatForFloat32MatrixTexture:()=>XM,getInternalFormatForPackedMatrixTexture:()=>tO,getInternalFormatForUnsignedBytesMatrixTexture:()=>QM,uploadDenseMatrixToTexture:()=>iO,uploadPixelDataToTexture:()=>oO});var cO=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Ve().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,yD(t,e)):this.gl=bD(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ve().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TD(this.gl,e),dM(this.gl,t))this.textureHalfFloatExtension=TD(this.gl,t);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),dM(this.gl,r))this.colorBufferHalfFloatExtension=TD(this.gl,r);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",dM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!dM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=jM(this.gl),this.indexBuffer=qM(this.gl),this.framebuffer=WD(this.gl),this.textureConfig=kD(this.gl,this.textureHalfFloatExtension)}get debug(){return Ve().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;let e=this.gl;ID(e,(()=>e.finish())),ID(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ID(e,(()=>e.deleteFramebuffer(this.framebuffer))),ID(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ID(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ID(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),YM(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),JM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),eO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),oO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),iO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),aO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),nO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(YD(this.gl,this.framebuffer),this.outputTexture=null),ID(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>hO(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return pO(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return uO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=lO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ve().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>dO(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=HM(t));let n=RD(t);return ID(t,(()=>t.attachShader(n,this.vertexShader))),ID(t,(()=>t.attachShader(n,e))),DD(t,n),this.debug&&MD(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=sO(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&ID(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&MD(this.gl,this.program),ID(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?HD(this.gl,e,t):jD(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ID(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),qD(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=wD(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&MD(this.gl,this.program),ZD(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ID(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ID(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TD(this.gl,2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ga.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&ga.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),XD(this.gl,e,this.framebuffer),this.debug&&ZD(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(XD(this.gl,this.outputTexture,this.framebuffer),this.debug&&ZD(this.gl)):YD(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;XD(r,e,this.framebuffer),this.debug&&ZD(r),this.outputTexture=e,ID(r,(()=>r.viewport(0,0,t,n))),ID(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),ID(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:fO,bincountImpl:mO,bincountReduceImpl:gO,ceilImpl:yO,concatImpl:bO,equalImpl:xO,expImpl:vO,expm1Impl:wO,floorImpl:kO,gatherNdImpl:IO,gatherV2Impl:SO,greaterImpl:NO,greaterEqualImpl:TO,lessImpl:_O,lessEqualImpl:CO,linSpaceImpl:EO,logImpl:$O,maxImpl:AO,maximumImpl:FO,minimumImpl:RO,multiplyImpl:DO,negImpl:MO,notEqualImpl:OO,prodImpl:LO,rangeImpl:zO,rsqrtImpl:PO,scatterImpl:BO,sigmoidImpl:WO,simpleAbsImpl:VO,sliceImpl:UO,sparseFillEmptyRowsImpl:GO,sparseReshapeImpl:HO,sparseSegmentReductionImpl:jO,sqrtImpl:qO,stridedSliceImpl:KO,stringNGramsImpl:XO,stringSplitImpl:YO,stringToHashBucketFastImpl:ZO,subImpl:JO,tileImpl:QO,topKImpl:eL,transposeImpl:tL,uniqueImpl:nL}=nC;function rL(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function aL(e,t){return 1===t?[e]:rL(e,t)}var sL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?IM(["r","c","d"],"inputShape"):wM(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function iL(e,t,n,r,a){let s,i=function(e,t){switch(e){case fD.PACKED_2X2_FLOAT32:return tO(t);case fD.PACKED_2X2_FLOAT16:return rO(t);case fD.UNPACKED_FLOAT32:return XM(t);case fD.UNPACKED_FLOAT16:return ZM(t);case fD.PACKED_4X1_UNSIGNED_BYTE:return QM(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=wD(e[0],e[1]);s=t*n}else{let[t,n]=xD(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function oL(e,t){if(e===cD.UPLOAD)return fD.PACKED_2X2_FLOAT32;if(e===cD.RENDER||null==e)return function(e){return Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?fD.PACKED_2X2_FLOAT32:fD.UNPACKED_FLOAT32:e?fD.PACKED_2X2_FLOAT16:fD.UNPACKED_FLOAT16}(t);if(e===cD.DOWNLOAD||e===cD.PIXELS)return fD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function lL(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var uL=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},hL="return abs(x);",pL="return x;",dL=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},cL=rm.whereImpl,fL={};var mL=Ve().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var gL=class extends U{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ve().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof cO)t=e;else{let n=bD(Ve().getNumber("WEBGL_VERSION"),e);t=new cO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=bD(Ve().getNumber("WEBGL_VERSION"));t=new cO(e),this.binaryCache=function(e){return e in fL||(fL[e]={}),fL[e]}(Ve().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=oL(t,n),a=lL(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=iL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===fD.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===fD.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===fD.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===fD.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===fD.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=oL(n,r),s=lL(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=iL(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ve().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ve().global.screen?1024:Ve().global.screen.height*Ve().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new V(this,ro())}nextDataId(){return gL.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ve().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ve().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:cD.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Ve().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:cD.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new dL(i,pL):new uL(i,pL);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=ga.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=nf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=ga.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new dL(r,pL):new uL(r,pL);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ve().getBool("DEBUG")&&!Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ve().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Ve().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture.texture,...vD(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=nf.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=ga.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){let e=this.gpgpu.gl;ID(e,(()=>e.deleteBuffer(h)))}let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ro().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new dL(a,pL):new uL(a,pL);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),h=ro().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>ga.decodeString(e)));return Ni(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!SD(n))throw Ve().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ga.sizeFromShape(t);if(Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...vD(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Ve().getBool("WEBGL_PACK")&&!0===r,i=s?rM(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=cD.DOWNLOAD;let t=vM();this.outputShape=e,this.userCode=`\n      ${NM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=cD.DOWNLOAD;let t=vM();this.outputShape=e,this.userCode=`\n      ${NM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=ga.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=ga.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=ga.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ga.now(),endMs:null}}endTimer(e){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ga.now(),e)}async getQueryTime(e){if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=mL){return Ve().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&ga.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){nf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return cL(e.shape,t)}packedUnaryOp(e,t,n){let r=new dL(e.shape,t),a=this.compileAndRun(r,[e],n);return ro().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=VO(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hL,e.dtype);let t=new uL(e.shape,hL),n=this.compileAndRun(t,[e]);return ro().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ga.isString(n[0])){let a=n.map((e=>ga.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return ro().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let t=e.length,n=aL("rc",t),r=LM(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=UM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=aL("rc",this.rank),t=LM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[tM(e.shape),...nM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[tM(t),...nM(t)],s=new sL(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=ga.sizeFromShape(a),n=t[0]*t[1]*4;ga.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=rM(a);i=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=dD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kM(["r","c","d"],e):wM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=dD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?kM(["r","c","d"],e):wM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o);let l=[null!=t?t:vD(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===dD.DENSE){let t=null!=s?s:vD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ga.sizeFromShape(i.shape))return o.values=ga.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ga.sizeFromShape(t.shape)<=Ve().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!iM(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let h,p={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=zM(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=ga.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&ga.arraysEqual(t.shape,s),f=1===ga.sizeFromShape(t.shape),m=nf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&ga.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Ve().getNumber("WEBGL_VERSION")}`,s}(e,u,p),c=this.getAndSaveBinary(d,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=_M(a,i,t),l=CD(e.gl,o),u=e.createProgram(l);return Ve().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},WM(e,t,u))}(this.gpgpu,e,u,p))),f=null!=this.activeTimers;f&&(h=this.startTimer()),Ve().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(VM(t.inShapeInfos,n),VM([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ve().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=zM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(ga.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=ga.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,p,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let m=Ve().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=ga.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ve().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ve().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=io((()=>{if(!Ve().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Ve().getBool("DEBUG");Ve().set("DEBUG",!1);let t=this.abs(sh(1e-8)).dataSync()[0];if(Ve().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=ga.now());let h=t.texShape;if(null==h&&(h=aM(n,o),t.texShape=h),null!=a){let e,s=rM(n),i=h[1],p=h[0],d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!d)&&([i,p]=wD(h[0],h[1])),e=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(s,d):new class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=vM();this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":SM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(s,d);let c=d?[p,i]:h,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=d?cD.PIXELS:cD.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,p,a);let g=[[p,i]],y=!0,b=this.runWebGLProgram(e,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ve().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=ga.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ga.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await tf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(FD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=WM(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};gL.nextDataId=0;var yL="3.18.0";function bL(){Ve().set("WEBGL_FORCE_F16_TEXTURES",!0)}bs.isBrowser()&&yo("webgl",(()=>new gL),2);var xL={forceHalfFloat:bL},vL=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=nf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=UM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},wL=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=nf.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=UM(a);let s="";if(r)if(0===a||1===ga.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${LM(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=aL("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function kL(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var IL={kernelName:ln,backendName:"webgl",kernelFunc:kL};function SL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=kL({inputs:{x:r},backend:n}),l=kL({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var NL={kernelName:xt,backendName:"webgl",kernelFunc:SL},TL="return (a < 0.) ? b * a : a;",_L="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var CL={kernelName:fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ga.createScalarValue(s,"float32")),o=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(_L,a.shape,i.shape):new vL(TL,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},EL="return (a < 0.) ? b * a : a;",$L="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var AL={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL($L,r.shape,a.shape):new vL(EL,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function FL({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new dL(o.shape,t):new uL(o.shape,e),l.runWebGLProgram(i,[o],u)}}function RL({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new vL(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],as(n.dtype,r.dtype))})),s=SL({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,d=s||as(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=a){let e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?nf.fromUint8ToStringArray(e):e,r="string"===l.dtype?nf.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,d),o=h.makeTensorInfo(i,d);return h.texData.get(o.dataId).values=s,o}return p=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new wL(t,l.shape,u.shape,n):new vL(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function DL(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?$L:EL;if("leakyrelu"===e)return t?_L:TL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var ML=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=UM(this.outputShape.length);let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},OL="return areal * breal - aimag * bimag;",LL="return areal * bimag + aimag * breal;",zL=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=nf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},PL="return a * b;";function BL(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=nf.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new zL(OL,a.shape,s.shape),i=new zL(LL,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=SL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=DO(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL(PL,a.shape,s.shape):new vL(PL,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var WL={kernelName:Bn,backendName:"webgl",kernelFunc:BL};function VL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ga.sizeFromShape(a.shape),l=ga.inferFromImplicitShape(s,o),u=ga.sizeFromShape(l);ga.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||iM(a.shape,l)||null!==h.texture&&iM(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[tM(e.shape),...nM(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[tM(t),...nM(t)],i=new sL(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var UL={kernelName:ar,backendName:"webgl",kernelFunc:VL},GL=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${ga.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},HL=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function jL(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=nf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new GL({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new GL({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new HL({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}function qL(e,t,n){let r=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=LM(this.rank),a=rL("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=LM(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function KL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=ga.parseAxisParam(a,e.shape),o=i,l=nf.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=qL(e,l,r),o=nf.getInnerMostAxes(o.length,s)),nf.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=nf.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=nf.expandShapeToKeepDim(p,i));let f=ga.sizeFromShape(d),m=VL({inputs:{x:h},attrs:{shape:[ga.sizeFromShape(e.shape)/f,f]},backend:r}),g=jL(m,ss(e.dtype),"sum",r),y=VL({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),y}(a,s,i,n)}var XL={kernelName:Sr,backendName:"webgl",kernelFunc:KL};function YL(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=tL(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=qL(s,i,o);return t}var ZL={kernelName:Hr,backendName:"webgl",kernelFunc:YL};function JL({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ga.sizeFromShape(m),b=ga.sizeFromShape(g),x=No.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);ga.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let v,w=n?[y,p,c]:[y,c,p],k=r?[b,f,d]:[b,d,f],I=VL({inputs:{x:e},backend:a,attrs:{shape:w}}),S=VL({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(y,b),_=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===l,A=null!=l?DL(l,!0):null;if((1===c||1===f)&&_>1e3&&!1===(C||E||$||null!=A)){let e=I,t=S;n&&(e=YL({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=YL({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1===f,i=e;1!==f&&(i=VL({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(i));let o=1===f?2:1,l=t;s&&(l=VL({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(l));let u=BL({inputs:{a:i,b:l},backend:a});v=KL({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let l=as(e.dtype,t.dtype),u=new ML(w,k,[T,c,f],n,r,C,A,E,$),h=[I,S];if(null!=s&&h.push(s),E&&h.push(i),$){let e=a.makeTensorInfo([],"float32",ga.createScalarValue(o,"float32"));h.push(e),N.push(e)}v=a.runWebGLProgram(u,h,l)}let F=VL({inputs:{x:v},backend:a,attrs:{shape:x}});N.push(v);for(let e of N)a.disposeIntermediateTensorInfo(e);return F}var QL={kernelName:ea,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return JL({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},ez="return abs(x);";var tz={kernelName:qe,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=VO(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dL(a.shape,ez):new uL(a.shape,ez),r.runWebGLProgram(t,[a],a.dtype)}},nz=FL({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rz={kernelName:Ke,backendName:"webgl",kernelFunc:nz},az=FL({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sz={kernelName:Xe,backendName:"webgl",kernelFunc:az},iz="return a + b;",oz=RL({opSnippet:iz,packedOpSnippet:iz,supportsComplex:!0,cpuKernelImpl:fO}),lz={kernelName:Ye,backendName:"webgl",kernelFunc:oz};var uz={kernelName:Ze,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return kL({inputs:{x:a[0]},backend:r});if(a.length>Ve().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>as(e,t))),i=a.map((e=>e.shape)),o=Ve().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var hz={kernelName:Je,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ga.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=YL({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,o)),nf.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=VL({inputs:{x:p},backend:n,attrs:{shape:[-1,ga.sizeFromShape(f)]}}),g=jL(m,m.dtype,"all",n);if(i){d=VL({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=VL({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};var pz={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ga.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=YL({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,o)),nf.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=VL({inputs:{x:p},backend:n,attrs:{shape:[-1,ga.sizeFromShape(f)]}}),g=jL(m,m.dtype,"any",n);if(i){d=VL({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=VL({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};function dz(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=nf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=dz(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function cz(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=nf.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ga.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=LM(u),p=aL("coords",u);if(1===s){o=u+1;let e=LM(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=aL("sourceLocR",o-1).concat("inIdx.r"),g=aL("sourceLocG",o-1).concat("inIdx.g"),y=aL("sourceLocB",o-1).concat("inIdx.b"),b=aL("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=cz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function fz(e,t,n,r){let a=[n];if(nf.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ve().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=nf.computeOutAndReduceShapes(i.shape,a),u=ga.sizeFromShape(l),h=VL({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(h);let p=dz(e,h,r);n.push(p);let d=VL({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return cz(e,t,r)}var mz={kernelName:et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ga.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=YL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),nf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=fz(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};var gz={kernelName:tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=ga.parseAxisParam(s,a.shape),o=nf.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=YL({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=nf.getInnerMostAxes(i.length,l.shape.length)),nf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=fz(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},yz=FL({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),bz={kernelName:nt,backendName:"webgl",kernelFunc:yz},xz=FL({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),vz={kernelName:rt,backendName:"webgl",kernelFunc:xz},wz=FL({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),kz={kernelName:at,backendName:"webgl",kernelFunc:wz},Iz=RL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Sz={kernelName:it,backendName:"webgl",kernelFunc:Iz},Nz=FL({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Tz={kernelName:st,backendName:"webgl",kernelFunc:Nz},_z=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},Cz=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var Ez={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bM(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ga.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ga.arraysEqual(u.inShape,u.outShape))return kL({inputs:{x:a},backend:n});let h=new _z(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var $z={kernelName:ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=nf.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),p=new Cz(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var Az={kernelName:ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=nf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a],i.dtype)}};var Fz={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;bM([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=nf.computePool2DInfo(i.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}};var Rz={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return JL({a,b:s,transposeA:i,transposeB:o,backend:n})}},Dz={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;ga.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ga.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ga.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],nf.assertAndGetBroadcastShape(e,t),nf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(nf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(nf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],nf.assertAndGetBroadcastShape(e,t),nf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(nf.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(nf.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},Mz=["x","y","z","w","u","v"];function Oz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Uo.parseSliceParams(a,s,i);if(Uo.assertParamsValid(a,o,l),0===ga.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=UO(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=Uo.isSliceContinous(a.shape,o,l);if(u||!h){let e=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=LM(this.rank),n=aL("coords",this.rank),r=aL("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=LM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Mz.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Mz[t]} = start[${t}] + coords.${Mz[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Uo.computeFlatOffset(t,ga.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var Lz={kernelName:yr,backendName:"webgl",kernelFunc:Oz},zz={kernelName:dt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ga.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=[],f=VL({inputs:{x:a},backend:n,attrs:{shape:l}}),m=YL({inputs:{x:f},backend:n,attrs:{perm:u}}),g=VL({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Oz({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var Pz={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=mO(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var Bz={kernelName:mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=nf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Wz=RL({opSnippet:"return float(a != b);",cpuKernelImpl:OO,dtype:"bool"}),Vz={kernelName:Vn,backendName:"webgl",kernelFunc:Wz};function Uz(e){let{inputs:t,backend:n}=e,{input:r}=t;return kL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var Gz={kernelName:tr,backendName:"webgl",kernelFunc:Uz};var Hz={kernelName:gt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return kL({inputs:{x:s},backend:r});let t=np(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=SL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=Uz({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ga.hasEncodingLoss(s.dtype,i)){let e=kL({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new uL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",ga.getTypedArrayFromDType("bool",1)),t=Wz({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},jz="return ceil(x);",qz=FL({opSnippet:jz,packedOpSnippet:jz,cpuKernelImpl:yO}),Kz={kernelName:yt,backendName:"webgl",kernelFunc:qz};var Xz={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Ve().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}};function Yz(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var Zz={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[Yz(r,a.complexTensorInfos.real),Yz(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function Jz(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Qz(e){let{inputs:t,backend:n}=e,{input:r}=t;return kL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var eP={kernelName:hn,backendName:"webgl",kernelFunc:Qz};function tP(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>Uz({inputs:{input:e},backend:n}))),a=e.map((e=>Qz({inputs:{input:e},backend:n}))),s=tP(r,t,n),i=tP(a,t,n),o=SL({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=ga.sizeFromShape(e.shape.slice(t));return VL({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=nf.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=bO(s,i,r,o),u=nf.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>Ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=tP(e.slice(0,r),t,n),s=tP(e.slice(r),t,n),i=tP([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=nf.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=LM(r),s=aL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${Jz(i,l,t)}),\n            vec2(${Jz(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${Jz(i,l,c)}),\n          vec2(${Jz(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:s,outShape:i}=function(e,t,n){let r=nf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>VL({inputs:{x:e},attrs:{shape:[-1,ga.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=nf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));let u=VL({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function nP(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ga.parseAxisParam(a,t[0].shape)[0],i=nf.computeOutShape(t.map((e=>e.shape)),s);if(0===ga.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>ga.sizeFromShape(e.shape)>0));if(1===o.length)return kL({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return nf.assertParamsConsistent(l,s),tP(o,s,n)}var rP={kernelName:wt,backendName:"webgl",kernelFunc:nP},aP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}};function sP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=s&&!f&&3===s.shape.length){let e=YL({inputs:{x:s},backend:r,attrs:{perm:[1,2,0]}});m.push(e),s=e}if((1!==d&&1!==c||!(p>1e3))&&h.isPacked&&f&&null!=h.texture&&u[2]%2!=0&&ga.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,ga.assert(iM(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let f=VL({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let g=JL({a:d,b:f,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);ga.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,y.shape=n.outShape,l=kL({inputs:{x:g},backend:r}),l.shape=n.outShape,m.push(g)}else{let u=f?e:YL({inputs:{x:e},backend:r,attrs:{perm:[0,2,3,1]}}),h=u.shape,p=VL({inputs:{x:u},backend:r,attrs:{shape:[1,h[0]*h[1]*h[2],n.inChannels]}}),d=VL({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),c=JL({a:p,b:d,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=VL({inputs:{x:c},backend:r,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});l=f?g:YL({inputs:{x:g},backend:r,attrs:{perm:[0,3,1,2]}}),f||(m.push(u),m.push(g)),m.push(p),m.push(d),m.push(c)}for(let e of m)r.disposeIntermediateTensorInfo(e);return l}function iP({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[m,g],b=[];if(null!=s&&!f&&3===s.shape.length){let e=YL({inputs:{x:s},backend:r,attrs:{perm:[1,2,0]}});b.push(e),s=e}let x=VL({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=VL({inputs:{x:t},backend:r,attrs:{shape:[1,m,ga.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);let w=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=UM(this.outputShape.length);let{dataFormat:n}=t,r=vM(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[x],"float32",k),S=VL({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);let N=null!=a,T=null!=s,_="leakyrelu"===o,C=o?DL(o,!0):null,E=new ML(S.shape,v.shape,[1,g,n.outChannels],!0,!1,N,C,T,_),$=[S,v];if(a&&$.push(a),T&&$.push(s),_){let e=r.makeTensorInfo([],"float32",ga.createScalarValue(i,"float32"));$.push(e),b.push(e)}let A=r.runWebGLProgram(E,$,"float32"),F=VL({inputs:{x:A},backend:r,attrs:{shape:[1,d,p,n.outChannels]}}),R=f?F:YL({inputs:{x:F},backend:r,attrs:{perm:[0,3,1,2]}});f||b.push(F),b.push(A);for(let e of b)r.disposeIntermediateTensorInfo(e);return R}var oP={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=nf.convertConv2DDataFormat(u),c=nf.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Ve().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=iP({x:s,filter:i,convInfo:c,backend:r});else{let e=new aP(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=sP({x:s,filter:i,convInfo:c,backend:r});let f=VL({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}};var lP={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var uP={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=nf.convertConv2DDataFormat(u),d=nf.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var hP={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=nf.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var pP={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=nf.computeConv3DInfo(a.shape,l,i,1,o),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var dP,cP={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=nf.computeConv3DInfo(l,s.shape,o,1,i),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}},fP=FL({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),mP={kernelName:Ct,backendName:"webgl",kernelFunc:fP},gP=FL({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),yP={kernelName:Et,backendName:"webgl",kernelFunc:gP},bP={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(dP||(dP={}));var xP=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===dP.Prod?"1.0":"0.0",i=n?s:`getX(${vP(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${LM(a)} coords = getOutputCoords();\n        int end = ${wP(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${wP(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${vP(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function vP(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function wP(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kP(e,t,n,r,a,s){let i=t.shape.length,o=nf.getAxesPermutation([r],i),l=t;null!=o&&(l=YL({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=nf.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let h=l.shape[u],p=kL({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(h))-1;t++){let r=new xP(e,l.shape,!1,s),a=[[t]],i=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new xP(e,l.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=YL({inputs:{x:p},backend:n,attrs:{perm:nf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}var IP={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return kP(dP.Prod,a,n,s,i,o)}};var SP={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return kP(dP.Sum,a,n,s,i,o)}};var NP={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=mO(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=gO(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var TP={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p="NHWC"===i?[o,l,u,h]:[o,h,l,u],d=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(p,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},_P=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=UM(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}},CP=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=UM(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=h,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<h;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){let t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){let e=i%2==0?ga.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var EP={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),ga.assert(nf.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=nf.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);p=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new CP(d):new _P(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",c)}};var $P={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=nf.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var AP={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=nf.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var FP={kernelName:zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ga.sizeFromShape(r.shape),i=VL({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=VL({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};var RP={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=nf.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=VL({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}};var DP={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=nf.decodeEinsumEquation(a,s.length);nf.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:h}=nf.getEinsumComputePath(o,l),p=h.length,d=null,c=i.length,f=[];for(let e=0;e<p;++e){for(let t of h[e]){let e,{permutationIndices:r,expandDims:a}=nf.getEinsumPermutation(c,l[t]);nf.isIdentityPermutation(r)?e=s[t]:(e=YL({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);ga.arraysEqual(e.shape,i)||(e=VL({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=BL({inputs:{a:e,b:d},backend:n}),f.push(d))}e<p-1&&(u[e]>=0&&(d=KL({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},MP=FL({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),OP={kernelName:Gt,backendName:"webgl",kernelFunc:MP},LP={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new vL("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},zP=RL({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xO}),PP={kernelName:qt,backendName:"webgl",kernelFunc:zP},BP=FL({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${nf.ERF_P};\n  float a1 = ${nf.ERF_A1};\n  float a2 = ${nf.ERF_A2};\n  float a3 = ${nf.ERF_A3};\n  float a4 = ${nf.ERF_A4};\n  float a5 = ${nf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),WP={kernelName:jt,backendName:"webgl",kernelFunc:BP},VP=FL({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:vO,dtype:"float32"}),UP={kernelName:Kt,backendName:"webgl",kernelFunc:VP};function GP(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(ga.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),VL({inputs:{x:s},backend:r,attrs:{shape:o}})}var HP={kernelName:Xt,backendName:"webgl",kernelFunc:GP},jP="return exp(x) - 1.0;",qP=FL({opSnippet:jP,packedOpSnippet:jP,cpuKernelImpl:wO}),KP={kernelName:Yt,backendName:"webgl",kernelFunc:qP},XP=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function YP(e,t,n){let r=n.texData.get(e.dataId),a=ga.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=VL({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new XP("real",o,t),u=new XP("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=SL({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=VL({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var ZP={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return YP(r,!1,n)}};function JP(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||ga.inferDtype(a),"string"===s){let e=ga.getArrayFromDType(s,ga.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var QP,eB={kernelName:Jt,backendName:"webgl",kernelFunc:JP},tB={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},nB="return floor(x);",rB=FL({opSnippet:nB,packedOpSnippet:nB,cpuKernelImpl:kO}),aB={kernelName:en,backendName:"webgl",kernelFunc:rB},sB=RL({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),iB={kernelName:tn,backendName:"webgl",kernelFunc:sB},oB={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[u,l],p=[u,l,s];(o||i)&&(null==QP&&(QP=document.createElement("canvas").getContext("2d")),QP.canvas.width=l,QP.canvas.height=u,QP.drawImage(a,0,0,l,u),a=QP.canvas);let d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=cD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);let c=Ve().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=vM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(p):new class{constructor(e){this.variableNames=["A"];let t=vM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(p),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}};var lB={kernelName:ta,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=nf.convertConv2DDataFormat(p),y=nf.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Ve().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=iP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?DL(f,!1):null,h=new aP(y,e,u,n,a),d=[s,i],c=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=VL({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(e&&d.push(c(o,p)),n&&d.push(c(l,p)),a){let e=r.makeTensorInfo([],"float32",ga.createScalarValue(m,"float32"));d.push(e),b.push(e)}t=r.runWebGLProgram(h,d,"float32")}else t=sP({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let x=VL({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),x}};var uB={kernelName:na,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),ga.assert(nf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=nf.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?DL(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",ga.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new CP(y,w,x,k,I):new _P(y,w,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(g,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var hB={kernelName:an,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ga.sizeFromShape(r.shape),[l,u,h,p]=nf.prepareAndValidate(r,a),d=VL({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=VL({inputs:{x:r},backend:n,attrs:{shape:[ga.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=IO(e,t,r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=LM(t.length),a=LM(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,p,[u,h]),m=n.runWebGLProgram(f,[c,d],c.dtype),g=VL({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}};function pB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=ga.parseAxisParam(i,a.shape)[0];if(Ve().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];ga.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=nf.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=ga.sizeFromShape(s.shape),p=[],d=VL({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=VL({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=SO(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=LM(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=VL({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var dB={kernelName:rn,backendName:"webgl",kernelFunc:pB},cB=RL({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:NO,dtype:"bool"}),fB={kernelName:sn,backendName:"webgl",kernelFunc:cB},mB=RL({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:TO}),gB={kernelName:on,backendName:"webgl",kernelFunc:mB};var yB={kernelName:un,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return YP(r,!0,n)}},bB=FL({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),xB={kernelName:pn,backendName:"webgl",kernelFunc:bB},vB=FL({opSnippet:"return float(isinf(x));",dtype:"bool"}),wB={kernelName:dn,backendName:"webgl",kernelFunc:vB},kB=FL({opSnippet:"return float(isnan(x));",dtype:"bool"}),IB={kernelName:cn,backendName:"webgl",kernelFunc:kB},SB=RL({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:_O,dtype:"bool"}),NB={kernelName:mn,backendName:"webgl",kernelFunc:SB},TB=RL({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:CO,dtype:"bool"}),_B={kernelName:gn,backendName:"webgl",kernelFunc:TB};var CB={kernelName:yn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=EO(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},EB=FL({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:$O}),$B={kernelName:bn,backendName:"webgl",kernelFunc:EB},AB=FL({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),FB={kernelName:xn,backendName:"webgl",kernelFunc:AB},RB=RL({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),DB={kernelName:vn,backendName:"webgl",kernelFunc:RB},MB=FL({opSnippet:"return float(!(x >= 1.0));"}),OB={kernelName:wn,backendName:"webgl",kernelFunc:MB},LB=RL({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),zB={kernelName:kn,backendName:"webgl",kernelFunc:LB},PB={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},BB={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function WB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=ga.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let r=tL(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=qL(a,h,n);u=nf.getInnerMostAxes(u.length,o)}nf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=nf.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=nf.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=AO(e,ga.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=ga.sizeFromShape(t),s=VL({inputs:{x:e},attrs:{shape:[ga.sizeFromShape(e.shape)/a,a]},backend:r}),i=jL(s,e.dtype,"max",r),o=VL({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var VB={kernelName:_n,backendName:"webgl",kernelFunc:WB},UB=RL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:FO}),GB={kernelName:Cn,backendName:"webgl",kernelFunc:UB};var HB={kernelName:En,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;bM(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;ga.assert(nf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=nf.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ga.arraysEqual(u.inShape,u.outShape))return kL({inputs:{x:a},backend:n});let h=new _z(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var jB={kernelName:An,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=nf.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),p=new Cz(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var qB={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=nf.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new Cz(p,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var KB={kernelName:$n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;bM([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=nf.computePool2DInfo(o.shape,l,u,1,h,p),c=new _z(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var XB={kernelName:Rn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;ga.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];ga.assert(nf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=nf.computePool2DInfo(r.shape,a,s,u,i),[p,d]=function(e,t,n,r){let a=new _z(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new _z(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,h,l);return[p,d]}};var YB={kernelName:Dn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=ga.parseAxisParam(s,r.shape),u=l,h=nf.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];let n=tL(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=qL(r,h,i);c.push(f),u=nf.getInnerMostAxes(u.length,o)}nf.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=nf.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=nf.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=ga.sizeFromShape(t),s=VL({inputs:{x:e},attrs:{shape:[ga.sizeFromShape(e.shape)/a,a]},backend:r}),i=jL(s,"float32","mean",r),o=VL({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var ZB={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=ga.parseAxisParam(s,a.shape),u=l,h=nf.getAxesPermutation(u,o),p=a;null!=h&&(p=YL({inputs:{x:a},backend:n,attrs:{perm:h}}),u=nf.getInnerMostAxes(u.length,a.shape.length)),nf.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=nf.computeOutAndReduceShapes(p.shape,u),m=VL({inputs:{x:p},backend:n,attrs:{shape:[-1,ga.sizeFromShape(f)]}}),g=jL(m,m.dtype,"min",n);if(i){d=VL({inputs:{x:g},backend:n,attrs:{shape:nf.expandShapeToKeepDim(c,l)}})}else d=VL({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},JB=RL({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:RO}),QB={kernelName:On,backendName:"webgl",kernelFunc:JB},eW={kernelName:Ln,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=aL("rc",r),l=aL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},tW=RL({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),nW={kernelName:zn,backendName:"webgl",kernelFunc:tW},rW=RL({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),aW={kernelName:Vt,backendName:"webgl",kernelFunc:rW},sW="return a - b;",iW=RL({opSnippet:sW,packedOpSnippet:sW,supportsComplex:!0,cpuKernelImpl:JO}),oW={kernelName:Pr,backendName:"webgl",kernelFunc:iW};function lW(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ga.parseAxisParam([s],a.shape),o=WB({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=nf.expandShapeToKeepDim(o.shape,i),u=VL({inputs:{x:o},backend:n,attrs:{shape:l}}),h=iW({inputs:{a,b:u},backend:n}),p=VP({inputs:{x:h},backend:n}),d=KL({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=VL({inputs:{x:d},backend:n,attrs:{shape:l}}),f=rW({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var uW={kernelName:_r,backendName:"webgl",kernelFunc:lW};var hW={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:lW({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,h,s),d=[[i]],c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}};var pW={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=MO(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new dL(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new uL(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),r.runWebGLProgram(t,[a],a.dtype)}},dW=rm.nonMaxSuppressionV3Impl;var cW={kernelName:Un,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=dW(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},fW=rm.nonMaxSuppressionV4Impl;var mW={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=fW(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},gW=rm.nonMaxSuppressionV5Impl;var yW={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){nf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=gW(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},bW={kernelName:qn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=ga.sizeFromShape(a.shape),u=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),h=VL({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[h],a.dtype);n.disposeIntermediateTensorInfo(h);let d=VL({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function xW(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=Uz({inputs:{input:r},backend:n}),t=xW({inputs:{x:e},backend:n}),a=Qz({inputs:{input:r},backend:n}),s=xW({inputs:{x:a},backend:n}),i=SL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return JP({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var vW={kernelName:Yr,backendName:"webgl",kernelFunc:xW};var wW={kernelName:jn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=Uz({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Qz({inputs:{input:a},backend:r}),i=xW({inputs:{x:s},backend:r}),o=SL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return JP({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var kW={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return GP({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ga.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ga.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=nP({inputs:t.map((e=>{let t=GP({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},IW=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===ga.sizeFromShape(a.shape)){return JP({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}let o=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=aL("rc",r),l=aL("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=LM(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},SW={kernelName:Xn,backendName:"webgl",kernelFunc:IW},NW=RL({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),TW={kernelName:Zn,backendName:"webgl",kernelFunc:NW};var _W={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=ga.parseAxisParam(i,s.shape),p=h,d=nf.getAxesPermutation(p,l),c=s;if(null!=d&&(c=YL({inputs:{x:s},backend:r,attrs:{perm:d}}),p=nf.getInnerMostAxes(p.length,l),u.push(c)),nf.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=LO(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=nf.computeOutAndReduceShapes(c.shape,p),a=ga.sizeFromShape(n),i=VL({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=jL(i,ss(s.dtype),"prod",r);t=VL({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=nf.expandShapeToKeepDim(t.shape,h);t=VL({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},CW=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=zO(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},EW={kernelName:er,backendName:"webgl",kernelFunc:CW},$W=FL({opSnippet:"return 1.0 / x;"}),AW={kernelName:nr,backendName:"webgl",kernelFunc:$W},FW=FL({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),RW={kernelName:rr,backendName:"webgl",kernelFunc:FW},DW=FL({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),MW={kernelName:ur,backendName:"webgl",kernelFunc:DW};var OW={kernelName:or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}};var LW={kernelName:lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var zW={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}};var PW={kernelName:ir,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var BW={kernelName:hr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ga.parseAxisParam(s,a.shape);if(0===i)return kL({inputs:{x:a},backend:n});let l=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=aL("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=LM(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=LM(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},WW={kernelName:Qr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,s),[u,h]=nf.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,h,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,p)}},VW=FL({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),UW={kernelName:pr,backendName:"webgl",kernelFunc:VW},GW=FL({opSnippet:"return inversesqrt(x);",cpuKernelImpl:PO}),HW={kernelName:dr,backendName:"webgl",kernelFunc:GW},jW=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=LM(a.length),l=LM(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var qW={kernelName:cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=nf.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=VL({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=VL({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new jW(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=VL({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var KW={kernelName:fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===Ve().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}};var XW={kernelName:mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=LM(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],as(a.dtype,s.dtype))}},YW=FL({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${nf.SELU_SCALEALPHA};\n  float scale = ${nf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),ZW={kernelName:gr,backendName:"webgl",kernelFunc:YW},JW=FL({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:WO}),QW={kernelName:wr,backendName:"webgl",kernelFunc:JW},eV=FL({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),tV={kernelName:vr,backendName:"webgl",kernelFunc:eV},nV=FL({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),rV={kernelName:br,backendName:"webgl",kernelFunc:nV},aV=FL({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),sV={kernelName:xr,backendName:"webgl",kernelFunc:aV},iV=FL({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),oV={kernelName:kr,backendName:"webgl",kernelFunc:iV},lV={kernelName:Nr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ga.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=IW({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=nf.getReshaped(h.shape,s,o,!1),d=nf.getPermuted(p.length,s.length,!1),c=nf.getReshapedPermuted(h.shape,s,o,!1),f=VL({inputs:{x:h},backend:n,attrs:{shape:p}}),m=YL({inputs:{x:f},backend:n,attrs:{perm:d}}),g=VL({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var uV={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=GO(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var hV={kernelName:Er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=HO(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var pV={kernelName:$r,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=jO(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}};var dV={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=jO(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}};var cV={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=nf.calculateShapes(s,a,o);if("string"===s.dtype){let e=n.bufferSync(a),t=n.bufferSync(s),r=ga.decodeString(n.readSync(i.dataId)[0]),c=BO(e,t,o,d,h,u,l,p,r,false);return n.makeTensorInfo(o,c.dtype,c.values)}let c=new jW(u,l,a.shape.length,s.shape.length,p,[d,1],false),f=n.runWebGLProgram(c,[s,a,i],s.dtype),m=VL({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};var fV={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ga.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=Oz({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}},mV="return sqrt(x);",gV=FL({opSnippet:mV,packedOpSnippet:mV,cpuKernelImpl:qO}),yV={kernelName:Ir,backendName:"webgl",kernelFunc:gV},bV=FL({opSnippet:"return x * x;"}),xV={kernelName:Dr,backendName:"webgl",kernelFunc:bV},vV="return (a - b) * (a - b);",wV=RL({opSnippet:vV,packedOpSnippet:vV}),kV={kernelName:Rr,backendName:"webgl",kernelFunc:wV};var IV={kernelName:Zr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new uL(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var SV={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Uo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=VL({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){ga.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Uo.computeOutShape(x,v,w),n=Oz({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=VL({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=Ni(s.shape,s.dtype,e),a=KO(f,n,w,x);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=LM(n.length),s=LM(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(x,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=VL({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}};var NV={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,d=n.readSync(h.dataId),c=n.readSync(p.dataId),[f,m]=XO(d,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var TV={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,h,p]=YO(o,l,a),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var _V={kernelName:zr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=ZO(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},CV=FL({opSnippet:"return tan(x);"}),EV={kernelName:Br,backendName:"webgl",kernelFunc:CV},$V=FL({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),AV={kernelName:Wr,backendName:"webgl",kernelFunc:$V};function FV(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>ga.decodeString(e))):e,r=Ni(a.shape,a.dtype,t),i=QO(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=LM(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var RV={kernelName:Vr,backendName:"webgl",kernelFunc:FV},DV=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function MV(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function OV(e){let t=1;for(;t<e;)t*=2;return t}var LV={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ve().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ve().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let e=n.readSync(a.dataId),[t,r]=eL(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,JP({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=ga.sizeFromShape(u)/h,m=VL({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&MV(n,c);let g=OV(s),y=OV(h),b=null,x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{let a=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[h],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),MV(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new DV([f,e/2]),a=[[h],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),MV(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=Oz({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),MV(n,w);let k=pB({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});MV(n,m);let I=u.slice(0,-1);I.push(s),w=b,b=VL({inputs:{x:b},attrs:{shape:I},backend:n}),MV(n,w);let S=k;return k=VL({inputs:{x:k},attrs:{shape:I},backend:n}),MV(n,S),[k,b]}};var zV={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(p,d,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}};var PV={kernelName:jr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;bM(s,"unique");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=nL(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var BV={kernelName:qr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let e=0;e<o;e++)e!==s&&(u[h++]=i.shape[e]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=Oz({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=VL({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var WV,VV,UV,GV={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=nf.getAxesPermutation([u],o),p=a;null!=h&&(p=YL({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=nf.getInnerMostAxes(1,o)[0]);let d=nf.segment_util.computeOutShape(p.shape,u,i),c=ga.sizeFromShape([p.shape[u]]),f=VL({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=ss(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=nf.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=CW({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=FV({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=VL({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=h){l.push(y);let e=nf.getUndoAxesPermutation(h);b=YL({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},HV=[QL,tz,rz,sz,lz,uz,hz,pz,mz,gz,bz,vz,kz,Sz,Tz,Ez,$z,Az,Fz,Rz,Dz,zz,Pz,Bz,Hz,Kz,Xz,NL,Zz,rP,oP,lP,uP,hP,pP,cP,mP,yP,bP,IP,SP,NP,TP,EP,$P,AP,FP,RP,DP,OP,LP,PP,WP,UP,HP,KP,ZP,eB,tB,aB,iB,oB,lB,uB,hB,dB,fB,gB,IL,yB,eP,xB,wB,IB,CL,NB,_B,CB,$B,FB,DB,OB,zB,PB,BB,VB,GB,HB,jB,qB,KB,XB,YB,ZB,QB,eW,nW,hW,WL,pW,cW,mW,yW,Vz,bW,wW,kW,SW,TW,AL,_W,EW,Gz,aW,AW,RW,MW,UL,OW,LW,zW,PW,BW,WW,UW,HW,qW,KW,XW,ZW,QW,tV,rV,sV,Lz,uW,oV,lV,uV,hV,pV,dV,cV,fV,yV,xV,kV,IV,SV,NV,TV,_V,oW,XL,EV,AV,RV,LV,zV,ZL,PV,BV,GV,vW];for(let e of HV)ha(e);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(WV||(WV={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(VV||(VV={}));var jV={kernelName:ea,backendName:"wasm",setupFunc:function(e){UV=e.wasm.cwrap(ea,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=VV[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=No.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return UV(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,w),v}};function qV(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===ga.sizeFromShape(i.shape)||n(s,WV[a.dtype],o),i}}}var KV=qV(qe);function XV(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,h=nf.assertAndGetBroadcastShape(s.shape,i.shape),p=t.makeOutput(h,u);if(0===ga.sizeFromShape(h))return p;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return r(o,d,s.shape.length,l,c,i.shape.length,WV[s.dtype],f),p}}}var YV,ZV=XV(Ye);var JV={kernelName:Ze,backendName:"wasm",setupFunc:function(e){YV=e.wasm.cwrap(Ze,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ga.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return YV(s,a.length,WV[r.dtype],i),r}};function QV(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var eU,tU={kernelName:ln,backendName:"wasm",kernelFunc:QV};function nU(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=QV({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return eU(h,c,l.shape.length,WV[l.dtype],p,d,s.length),u}var rU,aU={kernelName:Hr,backendName:"wasm",kernelFunc:nU,setupFunc:function(e){eU=e.wasm.cwrap(Hr,null,["number","array","number","number","number","array","number"])}};function sU(e,t,n){let r=e.shape,a=e.shape.length,s=ga.parseAxisParam(t,r),i=s,o=nf.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=nf.getInnerMostAxes(i.length,a),l=nU({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var iU,oU={kernelName:Je,backendName:"wasm",setupFunc:function(e){rU=e.wasm.cwrap(Je,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=sU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("all",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=ga.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ga.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;rU(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var lU,uU={kernelName:Qe,backendName:"wasm",setupFunc:function(e){iU=e.wasm.cwrap(Qe,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=sU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("any",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=ga.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ga.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;iU(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var hU,pU={kernelName:et,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=sU(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=ga.sizeFromShape(c.shape),g=l.shape[h[0]];return lU(o,WV[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c},setupFunc:function(e){lU=e.wasm.cwrap(et,null,["number","number","number","number","number"])}};var dU={kernelName:ot,backendName:"wasm",setupFunc:function(e){hU=e.wasm.cwrap(ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=nf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let v=r.makeOutput(h.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return hU(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w),v}};function cU(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ga.sizeFromShape(r.shape),i=ga.inferFromImplicitShape(a,s);return ga.assert(s===ga.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var fU,mU={kernelName:ar,backendName:"wasm",kernelFunc:cU};var gU={kernelName:pt,backendName:"wasm",setupFunc:function(e){fU=e.wasm.cwrap(pt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ga.sizeFromShape(f),y=ga.sizeFromShape(m),b=No.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);ga.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let x=o?[y,c,p]:[y,p,c],v=cU({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=cU({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),_=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return fU(k,E,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),_.shape=b,_}};function yU(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Uo.parseSliceParams(t,n,r),o=Uo.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=ga.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=Uo.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+ga.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+ga.sizeFromShape(i))),u}if("string"===t.dtype){let e=ME(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,h[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let a=o;a<h;a++)for(let o=l;o<p;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,h[0],h[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<d;l++)for(let u=h;u<c;u++){let h=s*t+l*n+u*r+f;a.set(e.subarray(h,h+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],d,s,i);else{let e=ME(l,s,i,t.shape,t.dtype);d.set(e)}return u}var bU={kernelName:yr,backendName:"wasm",kernelFunc:yU};var xU={kernelName:dt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=nf.getReshaped(a.shape,s,o),u=nf.getPermuted(l.length,s.length),h=nf.getReshapedPermuted(a.shape,s,o),p=nf.getSliceBeginCoords(i,s.length),d=nf.getSliceSize(h,i,s.length),c=cU({inputs:{x:a},backend:n,attrs:{shape:l}}),f=nU({inputs:{x:c},backend:n,attrs:{perm:u}}),m=yU({inputs:{x:cU({inputs:{x:f},backend:n,attrs:{shape:h}})},backend:n,attrs:{begin:p,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function vU(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var wU,kU={kernelName:gt,backendName:"wasm",kernelFunc:vU},IU=qV(yt);var SU={kernelName:bt,backendName:"wasm",setupFunc:function(e){wU=e.wasm.cwrap(bt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return wU(o,s,i,u),l}};function NU(e){let{inputs:t,backend:n}=e,r=ga.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=nf.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>ga.sizeFromShape(e.shape)>0));if(1===s.length)return QV({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===ga.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(nf.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=ga.sizeFromShape(e.shape.slice(r));return cU({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=nf.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=EC(o,a,t[0].dtype,l),h=nf.computeOutShape(s.map((e=>e.shape)),r);return i.shape=h,n.dataIdMap.get(i.dataId).stringBytes=nf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=ga.sizeFromShape(s[0].shape.slice(0,r)),u=0,h=s.map((e=>{let t=ga.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let r=h[n],a=e*r,s=p[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var TU,_U={kernelName:wt,backendName:"wasm",kernelFunc:NU};var CU,EU={kernelName:kt,backendName:"wasm",setupFunc:function(e){TU=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=nf.convertConv2DDataFormat(d),f=nf.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return TU(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,_,w,k,I,S,N,T,E),C}};var $U,AU,FU={kernelName:St,backendName:"wasm",setupFunc:function(e){CU=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=nf.convertConv2DDataFormat(l),d=nf.computeConv2DInfo(h,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,_=ga.computeStrides(d.inShape),C=ga.computeStrides(a.shape),[E,$,A]=ga.computeStrides(s.shape),F=_[0],R=T?_[1]:_[2],D=T?_[2]:1,M=T?1:_[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return CU(V,U,c,f,m,y,b,g,v,w,x,k,I,S,N,E,$,A,F,R,D,M,O,L,z,P,W),B}},RU=qV(Ct),DU=qV(Et);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}($U||($U={}));var MU,OU={kernelName:Ft,backendName:"wasm",setupFunc:function(e){AU=e.wasm.cwrap(Ft,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=vU({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return AU(g,y,b,p,w,d,c,$U[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var LU,zU={kernelName:$t,backendName:"wasm",setupFunc:function(e){MU=e.wasm.cwrap($t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ga.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=nf.getAxesPermutation([s],l),h=a;null!==u&&(h=nU({inputs:{x:a},attrs:{perm:u},backend:n}));let p=nf.getInnerMostAxes(1,l)[0];nf.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;MU(f,i?1:0,o?1:0,c,m,WV[a.dtype]);let g=d;if(null!==u){g=nU({inputs:{x:d},attrs:{perm:nf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var PU,BU={kernelName:At,backendName:"wasm",setupFunc:function(e){LU=e.wasm.cwrap(At,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;ga.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=nf.getAxesPermutation([s],l),h=a;null!==u&&(h=nU({inputs:{x:a},attrs:{perm:u},backend:n}));let p=nf.getInnerMostAxes(1,l)[0];nf.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;LU(f,i?1:0,o?1:0,c,m,WV[a.dtype]);let g=d;if(null!==u){g=nU({inputs:{x:d},attrs:{perm:nf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var WU,VU={kernelName:Dt,backendName:"wasm",setupFunc:function(e){PU=e.wasm.cwrap(Dt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,h=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),p="NHWC"===i?[o,l,u,h]:[o,h,l,u],d=t.makeOutput(p,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ga.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(ga.computeStrides(p)).buffer),y=t.dataIdMap.get(d.dataId).id;return PU(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,p.length,y),d}};var UU={kernelName:Mt,backendName:"wasm",setupFunc:function(e){WU=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=nf.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,S=c.inChannels,N=c.outChannels,T="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(_.dataId).id;return WU(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),_}},GU=qV(Gt),HU=XV(qt,0,"bool"),jU=qV(Kt,"float32");function qU(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(ga.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),cU({inputs:{x:a},backend:r,attrs:{shape:o}})}var KU={kernelName:Xt,backendName:"wasm",kernelFunc:qU};function XU(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var YU,ZU={kernelName:Jt,backendName:"wasm",kernelFunc:XU};var JU,QU={kernelName:Qt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return YU(s,o,l,u,h,i),a},setupFunc:function(e){YU=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number"])}},eG=qV(en),tG=XV(tn);var nG,rG={kernelName:nn,backendName:"wasm",setupFunc:function(e){JU=e.wasm.cwrap(nn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ga.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return JU(h,p,d,c,f,a,g),m}};var aG,sG={kernelName:ta,backendName:"wasm",setupFunc:function(e){nG=e.wasm.cwrap(ta,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=nf.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=VV[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return nG(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var iG,oG={kernelName:na,backendName:"wasm",setupFunc:function(e){aG=e.wasm.cwrap(na,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=nf.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=VV[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return aG(y,R,D,M,b,w,k,v,I,S,N,T,F,_,C,E,$,A,x,g,z,f||0,L),O}};var lG,uG={kernelName:an,backendName:"wasm",setupFunc:function(e){iG=e.wasm.cwrap(an,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=Lo.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return iG(d,WV[r.dtype],c,i,p,o,f,m),u}};var hG,pG={kernelName:rn,backendName:"wasm",setupFunc:function(e){lG=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=ga.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];ga.assert(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}let p=nf.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=cU({inputs:{x:a},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=ga.sizeFromShape(s.shape),f=cU({inputs:{x:s},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,a.dtype);if(0===ga.sizeFromShape(a.shape))return g;let y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(ga.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(ga.computeStrides(m)).buffer);return lG(b,WV[a.dtype],w,y,x,p.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},dG=XV(sn,0,"bool"),cG=XV(on,0,"bool");var fG,mG={kernelName:fn,backendName:"wasm",setupFunc:function(e){hG=e.wasm.cwrap(fn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==ga.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;hG(a,WV[t.dtype],n,e)}return s}},gG=XV(mn,0,"bool"),yG=XV(gn,0,"bool"),bG=qV(bn),xG=XV(vn,0,"bool");var vG,wG={kernelName:_n,backendName:"wasm",setupFunc:function(e){fG=e.wasm.cwrap(_n,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=sU(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;nf.assertAxesAreInnerMostDims("max",h,c);let[f,m]=nf.computeOutAndReduceShapes(l.shape,h),g=ga.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==ga.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;fG(o,WV[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=nf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},kG=XV(Cn);var IG,SG={kernelName:En,backendName:"wasm",setupFunc:function(e){vG=e.wasm.cwrap(En,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;ga.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=nf.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return vG(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v,w,k,S),I}};var NG,TG={kernelName:Dn,backendName:"wasm",setupFunc:function(e){IG=e.wasm.cwrap(Dn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=sU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=ga.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=vU({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==ga.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;IG(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var _G,CG,EG={kernelName:Mn,backendName:"wasm",setupFunc:function(e){NG=e.wasm.cwrap(Mn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=sU(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;nf.assertAxesAreInnerMostDims("min",p,f);let[m,g]=nf.computeOutAndReduceShapes(u.shape,p),y=ga.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ga.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;NG(l,WV[i.dtype],y,e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},$G=XV(On);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(_G||(_G={}));var AG,FG={kernelName:Ln,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return CG(i,u,t.shape.length,WV[t.dtype],d,c,_G[a],l),o},setupFunc:function(e){CG=e.wasm.cwrap(Ln,null,["number","array","number","number","array","array","number","number"])}},RG=XV(Bn),DG=qV(Wn);function MG(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var OG,LG={kernelName:Un,backendName:"wasm",setupFunc:function(e){AG=e.wasm.cwrap(Un,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=AG(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=MG(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var zG,PG={kernelName:Gn,backendName:"wasm",setupFunc:function(e){OG=e.wasm.cwrap(Gn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=OG(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=MG(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var BG,WG={kernelName:Hn,backendName:"wasm",setupFunc:function(e){zG=e.wasm.cwrap(Hn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=zG(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=MG(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},VG=XV(Vn,0,"bool");var UG={kernelName:qn,backendName:"wasm",setupFunc:function(e){BG=e.wasm.cwrap(qn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(a.dataId).id;return BG(h,s,i,o,u),l}};var GG={kernelName:jn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var HG,jG={kernelName:Kn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return qU({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{ga.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ga.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=NU({inputs:t.map((e=>{let t=qU({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var qG,KG={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===ga.sizeFromShape(t.shape))return XU({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return HG(i,u,t.shape.length,WV[t.dtype],d,c,a,l),o},setupFunc:function(e){HG=e.wasm.cwrap(Xn,null,["number","array","number","number","array","array","number","number"])}},XG=XV(Zn);var YG,ZG={kernelName:Jn,backendName:"wasm",setupFunc:function(e){qG=e.wasm.cwrap(Jn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=vU({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let h=n.makeOutput(r.shape,"float32"),p=n.dataIdMap.get(h.dataId).id;return qG(o,i,p),"float32"!==l.dtype&&n.disposeData(u.dataId),h}};var JG,QG={kernelName:Qn,backendName:"wasm",setupFunc:function(e){YG=e.wasm.cwrap(Qn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=sU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=ga.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ga.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;YG(l,y,WV[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},eH={kernelName:er,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=_E(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},tH=XV(Vt),nH=qV(rr),rH=qV(ur);var aH,sH={kernelName:or,backendName:"wasm",setupFunc:function(e){JG=e.wasm.cwrap(or,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=vU({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===ga.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return JG(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var iH,oH={kernelName:hr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ga.parseAxisParam(s,a.shape);if(0===a.shape.length)return QV({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);aH(l,h,i.length,p,a.shape.length,u);let d=cU({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){aH=e.wasm.cwrap(hr,null,["number","array","number","array","number","number"])}};var lH,uH={kernelName:Qr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=nf.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return iH(u,p,d,c,f,s,m,g,b,y.length,h),l},setupFunc:function(e){iH=e.wasm.cwrap(Qr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},hH=qV(pr),pH=qV(dr);var dH,cH={kernelName:cr,backendName:"wasm",setupFunc:function(e){lH=e.wasm.cwrap(cr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ga.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=Po.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return lH(c,f,WV[s.dtype],l,u,h,m,d,g),o}};var fH,mH={kernelName:mr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:ga.sizeFromShape(a.shape.slice(1));return dH(i,o,l,c,h),u},setupFunc:function(e){dH=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var gH,yH={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){fH=e.wasm.cwrap(wr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ga.sizeFromShape(a.shape)||fH(r,s),a}},bH=qV(br);var xH={kernelName:_r,backendName:"wasm",setupFunc:function(e){gH=e.wasm.cwrap(_r,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=ga.sizeFromShape(n.shape)/o;return 0===ga.sizeFromShape(s.shape)||gH(a,i,o,l),s}};var vH,wH={kernelName:Nr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=ga.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=KG.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=nf.getReshaped(u.shape,s,o,!1),p=nf.getPermuted(h.length,s.length,!1),d=nf.getReshapedPermuted(u.shape,s,o,!1),c=cU({inputs:{x:u},backend:n,attrs:{shape:h}}),f=nU({inputs:{x:c},backend:n,attrs:{perm:p}}),m=cU({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var kH,IH={kernelName:Cr,backendName:"wasm",setupFunc:function(e){vH=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],h=n.readSync(i.dataId)[0],p=[l+h,u],d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([h],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],a.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),S=n.dataIdMap.get(I.dataId).id,N=vH(d,c,WV[s.dtype],l,h,u,f,g,b,v,k,S),T=n.readSync(I.dataId);switch(T[0]){case 1:t=nf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(T[1]);break;case 2:t=nf.getSparseFillEmptyRowsNegativeIndexErrorMessage(T[1],T[2]);break;case 3:t=nf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(T[1],T[2],T[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let _=m,C=y;return N!==p[0]&&(_=yU({inputs:{x:m},attrs:{begin:0,size:[N,u]},backend:n}),C=yU({inputs:{x:y},attrs:{begin:0,size:N},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[_,C,x,w]}};var SH,NH={kernelName:Er,backendName:"wasm",setupFunc:function(e){kH=e.wasm.cwrap(Er,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],h=ga.sizeFromShape(s.shape),p=t.makeOutput([u,h],r.dtype),d=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([h],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;kH(i,o,l,u,d,f,g);let y,b=t.readSync(m.dataId);switch(b[0]){case 0:y=nf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break;case 1:y=nf.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break;case 2:y=nf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=nf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=nf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}};function TH(e){SH=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function _H(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=a.shape.slice();h[0]=u;let p=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(h,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;SH(p,WV[a.dtype],a.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=nf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=nf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=nf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=nf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}var CH={kernelName:$r,backendName:"wasm",setupFunc:TH,kernelFunc:function(e){return _H(e,!0)}};var EH={kernelName:Ar,backendName:"wasm",setupFunc:TH,kernelFunc:function(e){return _H(e,!1)}};var $H,AH={kernelName:Tr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ga.parseAxisParam(i,a.shape)[0],l=nf.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=yU({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},FH=qV(Ir),RH=qV(Dr),DH=XV(Rr);var MH,OH={kernelName:Zr,backendName:"wasm",setupFunc:function(e){$H=e.wasm.cwrap(Zr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return $H(i,a,WV[s.dtype],l),o}};var LH,zH={kernelName:Mr,backendName:"wasm",setupFunc:function(e){MH=e.wasm.cwrap(Mr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=Uo.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=cU({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){ga.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Uo.computeOutShape(x,v,w),r=yU({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});t=cU({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(ga.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),h=new Uint8Array(new Int32Array(ga.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;MH(r,a,s.shape.length,i,o,l,u,h,f.length,p),t=cU({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},PH=XV(Pr);var BH,WH={kernelName:Sr,backendName:"wasm",setupFunc:function(e){LH=e.wasm.cwrap(Sr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=sU(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=nf.getInnerMostAxes(f.length,u.shape.length))}nf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=nf.computeOutAndReduceShapes(u.shape,f),y=ga.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==ga.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;LH(l,y,WV[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=nf.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},VH=qV(Br),UH=qV(Wr);var GH,HH={kernelName:Vr,backendName:"wasm",setupFunc:function(e){BH=e.wasm.cwrap(Vr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return BH(s,l,a.shape.length,u,o.length,WV[h.dtype],p),h}};var jH,qH={kernelName:Ur,backendName:"wasm",setupFunc:function(e){GH=e.wasm.cwrap(Ur,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return GH(i,o,r.shape.length,WV[r.dtype],a,s,h,d),[u,p]}};var KH={kernelName:Gr,backendName:"wasm",setupFunc:function(e){jH=e.wasm.cwrap(Gr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:h}=a,[p,d,c,f]=s.shape,[m,g]=null!=h?h:[d,c],y=[p,m,g,f],b=new Uint8Array(new Int32Array(ga.computeStrides(s.shape)).buffer),x=n.makeOutput(y,s.dtype),v=n.dataIdMap.get(x.dataId).id,w=n.dataIdMap.get(s.dataId).id,k=n.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return jH(w,k,i.shape[0]>1,p,m,g,f,c,d,b,s.shape.length-1,I,t,u,v),x}};var XH={kernelName:qr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<h.length;e++)p[s]=e,h[e]=yU({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}};var YH={kernelName:Yr,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},ZH=[jV,KV,ZV,JV,oU,uU,pU,dU,gU,xU,kU,IU,SU,_U,EU,FU,RU,DU,OU,zU,BU,VU,UU,GU,HU,jU,KU,ZU,QU,eG,tG,rG,sG,oG,uG,pG,dG,cG,tU,mG,gG,yG,bG,xG,wG,kG,SG,TG,EG,$G,FG,RG,DG,LG,PG,WG,VG,UG,GG,jG,KG,XG,ZG,QG,eH,tH,nH,rH,mU,sH,oH,uH,hH,pH,cH,mH,yH,bH,bU,xH,wH,IH,NH,CH,EH,AH,FH,RH,DH,OH,zH,PH,WH,VH,UH,HH,qH,KH,aU,XH,YH];for(let e of ZH)ha(e);var JH=Ve();JH.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),JH.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(JH.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var QH=c(B()),ej='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});',tj=c(W()),nj=class extends U{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(cj),fj=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new V(this,ro())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=ga.now();return e(),{kernelMs:ga.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=ga.sizeFromShape(n),o=i*ga.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||ga.sizeFromShape(s);let o=ga.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=ga.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ga.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function rj(e,t,n){if(null!=ij)return ij;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=lj&&null!=lj[r]?lj[r]:n+r}async function aj(){let[e,t]=await Promise.all([Ve().getAsync("WASM_HAS_SIMD_SUPPORT"),Ve().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e=ej.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?rj(e,t,null!=oj?oj:r):r+n}};hj&&(a.instantiateWasm=function(e){return(t,n)=>(ga.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(rj(e,t,null!=oj?oj:"")));let s,i=!1;a.onAbort=()=>{i||uj||(uj=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==ij?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+QH.default.toString()],{type:"text/javascript"}),s=(0,QH.default)(a)):s=(0,tj.default)(a),s.then((e=>{i=!0,uj=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var sj=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],ij=null,oj=null,lj={},uj=!1,hj=!1;function pj(e,t=!1){if(to(),uj)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");ij=e,hj=t}function dj(e,t=!1){if(uj)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)oj=e;else{lj=e;let t=sj.filter((e=>null==lj[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}hj=t}var cj=-1,fj=-1;function mj(e){cj=e}function gj(){if(-1===fj)throw new Error("WASM backend not initialized.");return fj}var yj="3.18.0";yo("wasm",(async()=>{let{wasm:e}=await aj();return new nj(e)}),2);var bj={tfjs:"3.18.0","tfjs-core":"3.18.0","tfjs-data":"3.18.0","tfjs-layers":"3.18.0","tfjs-converter":"3.18.0","tfjs-backend-cpu":"3.18.0","tfjs-backend-webgl":"3.18.0","tfjs-backend-wasm":"3.18.0"},xj={};function vj(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}r(xj,{AnchorPosition:()=>uq,DrawBox:()=>cq,DrawBoxOptions:()=>dq,DrawFaceLandmarks:()=>nK,DrawFaceLandmarksOptions:()=>tK,DrawTextField:()=>pq,DrawTextFieldOptions:()=>hq,drawContour:()=>vj,drawDetections:()=>fq,drawFaceExpressions:()=>Jq,drawFaceLandmarks:()=>rK});r({},{computeReshapedDimensions:()=>Aj,getCenterPoint:()=>Fj,isDimensions:()=>$j,isEven:()=>Cj,isFloat:()=>_j,isTensor:()=>kj,isTensor1D:()=>Ij,isTensor2D:()=>Sj,isTensor3D:()=>Nj,isTensor4D:()=>Tj,isValidNumber:()=>Dj,isValidProbablitiy:()=>Mj,range:()=>Rj,round:()=>Ej});var wj=class{constructor(e,t){if(!Dj(e)||!Dj(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new wj(1/this.width,1/this.height)}};function kj(e,t){return e instanceof qa&&e.shape.length===t}function Ij(e){return kj(e,1)}function Sj(e){return kj(e,2)}function Nj(e){return kj(e,3)}function Tj(e){return kj(e,4)}function _j(e){return e%1!=0}function Cj(e){return e%2==0}function Ej(e,t=2){let n=10**t;return Math.floor(e*n)/n}function $j(e){return e&&e.width&&e.height}function Aj({width:e,height:t},n){let r=n/Math.max(t,e);return new wj(Math.round(e*r),Math.round(t*r))}function Fj(e){return e.reduce(((e,t)=>e.add(t)),new Oj(0,0)).div(new Oj(e.length,e.length))}function Rj(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function Dj(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function Mj(e){return Dj(e)&&e>=0&&e<=1}var Oj=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new Oj(this.x+e.x,this.y+e.y)}sub(e){return new Oj(this.x-e.x,this.y-e.y)}mul(e){return new Oj(this.x*e.x,this.y*e.y)}div(e){return new Oj(this.x/e.x,this.y/e.y)}abs(){return new Oj(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Oj(Math.floor(this.x),Math.floor(this.y))}},Lj=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(Dj)}static assertIsValidBox(e,t,n=!1){if(!Lj.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(Dj),a=[n.x,n.y,n.width,n.height].every(Dj);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];Lj.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Oj(this.left,this.top)}get topRight(){return new Oj(this.right,this.top)}get bottomLeft(){return new Oj(this.left,this.bottom)}get bottomRight(){return new Oj(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new Lj({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new Lj({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new Lj({x:e,y:t,width:n,height:r})}rescale(e){let t=$j(e)?e.width:e,n=$j(e)?e.height:e;return new Lj({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new Lj({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new Lj({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new Lj({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new Lj({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},zj=class extends Lj{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Pj=class{constructor(e,t,n,r,a){this._imageDims=new wj(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new Lj(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new Lj(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new Pj(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},Bj=class extends Pj{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new Bj(n,r,a)}};function Wj(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function Vj(e,t){return io((()=>{let[n,r,a]=t,s=yh([...e.shape.slice(0,3),1],n,"float32"),i=yh([...e.shape.slice(0,3),1],r,"float32"),o=yh([...e.shape.slice(0,3),1],a,"float32"),l=au([s,i,o],3);return Wh(e,l)}))}function Uj(e){return 1/(1+Math.exp(-e))}var Gj,Hj=class extends Lj{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},jj=class{constructor(e,t,n=new Oj(0,0)){let{width:r,height:a}=t;this._imgDims=new wj(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new Oj(r,a)).add(n)))}get shift(){return new Oj(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new Oj(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Oj(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof Bj?e.box.floor():new Lj(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=Fj(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new Hj(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=function(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new zj(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},qj=class extends jj{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Fj)}},Kj=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${Ej(this.distance)})`:""}`}},Xj=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new Xj(e.label,t)}};function Yj(e){return e.detection instanceof Bj}function Zj(e,t){return{...e,detection:t}}function Jj(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Qj(){return"object"==typeof a.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function eq(e){let t="";if(!e&&Qj())try{e=n("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function tq(){let e=a.g.Canvas||a.g.HTMLCanvasElement,t=a.g.Image||a.g.HTMLImageElement,n=a.g.Video||a.g.HTMLVideoElement,r=a.g.fetch,s=eq();return{Canvas:e||class{},CanvasRenderingContext2D:a.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:a.g.ImageData||class{},Video:a.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...s}}function nq(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function rq(e){Gj=e}function aq(){return nq()?rq(Jj()):Qj()?rq(tq()):null}var sq={getEnv:function(){if(!Gj)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Gj},setEnv:rq,initialize:aq,createBrowserEnv:Jj,createFileSystem:eq,createNodejsEnv:tq,monkeyPatch:function(e){if(Gj||aq(),!Gj)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Gj.Canvas,Image:n=Gj.Image}=e;Gj.Canvas=t,Gj.Image=n,Gj.createCanvasElement=e.createCanvasElement||(()=>new t),Gj.createImageElement=e.createImageElement||(()=>new n),Gj.ImageData=e.ImageData||Gj.ImageData,Gj.Video=e.Video||Gj.Video,Gj.fetch=e.fetch||Gj.fetch,Gj.readFile=e.readFile||Gj.readFile},isBrowser:nq,isNodejs:Qj};function iq(e){return sq.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function oq(e){let{Canvas:t,CanvasRenderingContext2D:n}=sq.getEnv();if(e instanceof n)return e;let r=iq(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}aq();var lq,uq=((lq=uq||{}).TOP_LEFT="TOP_LEFT",lq.TOP_RIGHT="TOP_RIGHT",lq.BOTTOM_LEFT="BOTTOM_LEFT",lq.BOTTOM_RIGHT="BOTTOM_RIGHT",lq),hq=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},pq=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof pq?e.text:e,this.anchor=t,this.options=new hq(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=iq(e),n=oq(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},dq=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new hq({...s,...a})}},cq=class{constructor(e,t={}){this.box=new Lj(e),this.options=new dq(t)}draw(e){let t=oq(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new pq([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function fq(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof Bj?t.score:Yj(t)?t.detection.score:void 0,r=t instanceof Bj?t.box:Yj(t)?t.detection.box:new Lj(t),a=n?`${Ej(n)}`:void 0;new cq(r,{label:a}).draw(e)}))}function mq(e){let{Image:t,Video:n}=sq.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function gq(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=sq.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function yq(e){let{Image:t,Video:n}=sq.getEnv();return e instanceof t?new wj(e.naturalWidth,e.naturalHeight):e instanceof n?new wj(e.videoWidth,e.videoHeight):new wj(e.width,e.height)}function bq({width:e,height:t}){let{createCanvasElement:n}=sq.getEnv(),r=n();return r.width=e,r.height=t,r}function xq(e,t){let{ImageData:n}=sq.getEnv();if(!(e instanceof n||mq(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||yq(e),s=bq({width:r,height:a});return e instanceof n?oq(s).putImageData(e,0,0):oq(s).drawImage(e,0,0,r,a),s}function vq(e){let{Image:t,Canvas:n,Video:r}=sq.getEnv();return e instanceof t||e instanceof n||e instanceof r}var wq=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(Nj(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(Tj(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof sq.getEnv().Canvas?e:xq(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return Rj(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return Aj({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,io((()=>{let n=Rj(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof qa){let n=Tj(r)?r:ch(r);return n=function(e,t=!1){return io((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,yh(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Ti(e,"float32")));return au(h,i)}))}(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=Pc.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof sq.getEnv().Canvas)return $o.fromPixels(function(e,t,n=!1){let{Image:r,Canvas:a}=sq.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return bq({width:1,height:1});let s=yq(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=bq({width:t,height:t}),h=e instanceof a?e:xq(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return h.width>0&&h.height>0&&oq(u).drawImage(h,d,c,o,l),u}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return ad(n.map((e=>Ti(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function kq(e){if(e instanceof wq)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(iq);return r.forEach(((e,r)=>{if(!vq(e)&&!Nj(e)&&!Tj(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(Tj(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>vq(e)&&function(e){return new Promise(((t,n)=>{function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}(e instanceof sq.getEnv().Canvas||mq(e))&&t(null),e.addEventListener("load",a),e.addEventListener("error",r)}))}(e)))),new wq(r,Array.isArray(e))}async function Iq(e,t){let{Canvas:n}=sq.getEnv(),r=e;if(!(e instanceof n)){let t=await kq(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await async function(e,t){let n=t||sq.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(Tj(e)?1:0),i=io((()=>e.as3D(r,a,s).toInt()));return await $o.toPixels(i,n),i.dispose(),n}(a)}let a=oq(r);return t.map((e=>e instanceof Bj?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=bq({width:n,height:r});return n>0&&r>0&&oq(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function Sq(e,t){if(!Nj(e)&&!Tj(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(Tj(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return io((()=>{let[n,r,a]=e.shape.slice(Tj(e)?1:0);return t.map((e=>e instanceof Bj?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).filter((e=>e.width>0&&e.height>0)).map((({x:t,y:s,width:i,height:o})=>Kp(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function Nq(e,t){let{fetch:n}=sq.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function Tq(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function _q(e,t){let{manifestUri:n,modelBaseUri:r}=Tq(e,t),a=await async function(e){return(await Nq(e)).json()}(n);return Ei.loadWeights(a,r)}function Cq(e,t,n=!1){let{width:r,height:a}=n?yq(t):t;return e.width=r,e.height=a,{width:r,height:a}}var Eq=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Xa))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Xa)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=Fs(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await _q(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=sq.getEnv(),{manifestUri:n,modelBaseUri:r}=Tq(e,this.getDefaultModelName()),a=Ei.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof qa))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function $q(e,t,n){return io((()=>{let r=Wp(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=Sl(r,t.bias),r}))}function Aq(e,t,n=!1){return io((()=>{let r=Ap(n?Sl(Su(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):$q(e,t.conv0,[2,2])),a=$q(r,t.conv1,[1,1]),s=$q(Ap(Sl(r,a)),t.conv2,[1,1]);return Ap(Sl(r,Sl(a,s)))}))}function Fq(e,t,n=!1,r=!0){return io((()=>{let a=Ap(n?Sl(Su(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):$q(e,t.conv0,r?[2,2]:[1,1])),s=$q(a,t.conv1,[1,1]),i=$q(Ap(Sl(a,s)),t.conv2,[1,1]),o=$q(Ap(Sl(a,Sl(s,i))),t.conv3,[1,1]);return Ap(Sl(a,Sl(s,Sl(i,o))))}))}function Rq(e,t,n="same",r=!1){return io((()=>{let a=Sl(Su(e,t.filters,[1,1],n),t.bias);return r?Ap(a):a}))}function Dq(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function Mq(e,t){return(n,r,a,s)=>{let i=hd(e(n*r*a*a),[a,a,n,r]),o=ld(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function Oq(e,t){return(n,r,a)=>{let s=ud(e(n*r),[n,r]),i=ld(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var Lq=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function zq(e,t){return(n,r,a)=>{let s=hd(e(9*n),[3,3,n,1]),i=hd(e(n*r),[1,1,n,r]),o=ld(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new Lq(s,i,o)}}function Pq(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new Lq(n,r,a)}}function Bq(e,t){return(n,r,a)=>{let s=e[n];if(!kj(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function Wq(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function Vq(e,t){let n=Mq(e,t),r=zq(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function Uq(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function Gq(e,t){let n=Bq(e,t),r=Uq(n),a=Pq(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var Hq=class extends Eq{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return io((()=>{let n=Fq(Vj(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=Fq(n,t.dense1),n=Fq(n,t.dense2),n=Fq(n,t.dense3),n=nu(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await kq(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=Gq(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return Dq(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Wq(e),{extractDenseBlock4Params:a}=Vq(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function jq(e,t){return io((()=>Sl(Yi(e,t.weights),t.bias)))}function qq(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var Kq=class extends Eq{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return io((()=>{let n=e instanceof wq?this.faceFeatureExtractor.forwardInput(e):e;return jq(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=Wq(e),i=Oq(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=qq(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=Bq(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return Dq(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Xq=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Yq=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);Xq.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return Xq.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function Zq(e,t){return{...e,expressions:t}}function Jq(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof Yq?t:function(e){return e.expressions instanceof Yq}(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=Yj(t)?t.detection.box.bottomLeft:r||new Oj(0,0);new pq(s.map((e=>`${e.expression} (${Ej(e.probability)})`)),i).draw(e)}))}function Qq(e){return Yj(e)&&e.landmarks instanceof jj&&e.unshiftedLandmarks instanceof jj&&e.alignedRect instanceof Bj}function eK(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new Bj(e.detection.score,a.rescale(s.reverse()),s),o=function(e){let t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;let r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);let a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var tK=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},nK=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new tK(t)}draw(e){let t=oq(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof qj&&(t.strokeStyle=s,t.lineWidth=a,vj(t,this.faceLandmarks.getJawOutline()),vj(t,this.faceLandmarks.getLeftEyeBrow()),vj(t,this.faceLandmarks.getRightEyeBrow()),vj(t,this.faceLandmarks.getNose()),vj(t,this.faceLandmarks.getLeftEye(),!0),vj(t,this.faceLandmarks.getRightEye(),!0),vj(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function rK(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof jj?t:Qq(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new nK(n).draw(e)}))}function aK(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=Wq(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=Mq(e,t),r=zq(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},h={};Rj(t,0,1).forEach((e=>{h[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let p={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:h,exit_flow:p}}}function sK(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=Bq(e,t),r=Uq(n),a=Pq(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};Rj(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return Dq(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function iK(e,t,n){return Sl(Su(e,t.filters,n,"same"),t.bias)}function oK(e,t,n=!0){let r=n?Ap(e):e;return r=$q(r,t.separable_conv0,[1,1]),r=$q(Ap(r),t.separable_conv1,[1,1]),r=Zh(r,[3,3],[2,2],"same"),r=Sl(r,iK(e,t.expansion_conv,[2,2])),r}var lK=class extends Eq{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return io((()=>{let n=Vj(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),r=Ap(iK(n,t.entry_flow.conv_in,[2,2]));return r=oK(r,t.entry_flow.reduction_block_0,!1),r=oK(r,t.entry_flow.reduction_block_1),Rj(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=$q(Ap(e),t.separable_conv0,[1,1]);return n=$q(Ap(n),t.separable_conv1,[1,1]),n=$q(Ap(n),t.separable_conv2,[1,1]),n=Sl(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=oK(r,t.exit_flow.reduction_block),r=Ap($q(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await kq(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return sK(e,this._numMainBlocks)}extractParams(e){return aK(e,this._numMainBlocks)}};var uK,hK=((uK=hK||{}).FEMALE="female",uK.MALE="male",uK),pK=class extends Kq{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return io((()=>{let n=(e,t)=>ad([yh([68],e,"float32"),yh([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(yh([a,136],t,"float32")).sub(ad(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(ad(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return io((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await kq(e))}async detectLandmarks(e){let t=await kq(e),n=io((()=>yd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(e.dataSync()),a=r.filter(((e,t)=>Cj(t))),s=r.filter(((e,t)=>!Cj(t)));return new qj(Array(68).fill(0).map(((e,t)=>new Oj(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},dK=class extends pK{constructor(e=new Hq){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var cK=class extends Eq{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return io((()=>{let n=Aq(Vj(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=Aq(n,t.dense1),n=Aq(n,t.dense2),n=nu(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await kq(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=Gq(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return Dq(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Wq(e),{extractDenseBlock3Params:a}=Vq(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function fK(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=Su(e,s,n,a);return o=Sl(o,i),o=function(e,t){return Sl(_l(e,t.weights),t.biases)}(o,t.scale),r?Ap(o):o}function mK(e,t){return fK(e,t,[1,1],!1)}function gK(e,t){return fK(e,t,[2,2],!0,"valid")}function yK(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(_j(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return io((()=>Io(hd(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=ld(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){let o=n(r,a,s,`${i}/conv`),l=function(n,r){let a=ld(e(n)),s=ld(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:l}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function bK(e,t){let n=Bq(e,t);function r(e){let t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function xK(e,t){let n=function(e,t){return fK(e,t,[1,1],!0)}(e,t.conv1);return n=mK(n,t.conv2),n=Sl(n,e),n=Ap(n),n}function vK(e,t){let n=gK(e,t.conv1);n=mK(n,t.conv2);let r=nu(e,2,2,"valid"),a=np(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=np(e);n=au([n,t],1);let r=[...n.shape];r[2]=1;let a=np(r);n=au([n,a],2)}return r=s?au([r,a],3):r,n=Sl(r,n),n=Ap(n),n}var wK=class extends Eq{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return io((()=>{let n=gK(Vj(Ti(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Zh(n,3,2,"valid"),n=xK(n,t.conv32_1),n=xK(n,t.conv32_2),n=xK(n,t.conv32_3),n=vK(n,t.conv64_down),n=xK(n,t.conv64_1),n=xK(n,t.conv64_2),n=xK(n,t.conv64_3),n=vK(n,t.conv128_down),n=xK(n,t.conv128_1),n=xK(n,t.conv128_2),n=vK(n,t.conv256_down),n=xK(n,t.conv256_1),n=xK(n,t.conv256_2),n=vK(n,t.conv256_down_out);let r=n.mean([1,2]);return Yi(r,t.fc)}))}async forward(e){return this.forwardInput(await kq(e))}async computeFaceDescriptor(e){var t;if(null!=(t=null==e?void 0:e.shape)&&t.some((e=>e<=0)))return new Float32Array(128);let n=await kq(e),r=io((()=>yd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=bK(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!Sj(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return Dq(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=Wq(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=yK(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=io((()=>Io(ud(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function kK(e,t){return{...e,descriptor:t}}function IK(e,t){return{...e,age:t}}function SK(e,t,n){return{...e,gender:t,genderProbability:n}}function NK(e,t){function n(n,r,a,s,i){let o=hd(e(n*r*a*a),[a,a,n,r]),l=ld(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){let i=function(n,r){let a=hd(e(9*n),[3,3,n,1]),s=ld(e(n)),i=ld(e(n)),o=ld(e(n)),l=ld(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function TK(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=Bq(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!Nj(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return Dq(e,t),{params:s,paramMappings:t}}function _K(e,t,n){return io((()=>{let r=Su(e,t.filters,n,"same");return r=Sl(r,t.batch_norm_offset),xu(r,0,6)}))}function CK(e,t){return io((()=>{let n,r=_K(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return io((()=>{let r=Lu(e,t.filters,n,"same");return r=pu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),xu(r,0,6)}))}(r,e.depthwise_conv,s),r=_K(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function EK(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function $K(e,t){let{sizes:n,centers:r}=function(e){let t=yd(Io(e,[1,0])),n=[Wh(t[2],t[0]),Wh(t[3],t[1])];return{sizes:n,centers:[Sl(t[0],Tl(n[0],2)),Sl(t[1],Tl(n[1],2))]}}(e),a=yd(Io(t,[1,0])),s=Tl(_l(dh(Tl(a[2],5)),n[0]),2),i=Sl(_l(Tl(a[0],10),n[0]),r[0]),o=Tl(_l(dh(Tl(a[3],5)),n[1]),2),l=Sl(_l(Tl(a[1],10),n[1]),r[1]);return Io(ad([Wh(i,s),Wh(l,o),Sl(i,s),Sl(l,o)]),[1,0])}function AK(e,t){return io((()=>{let n=e.shape[0];return{boxPredictionEncoding:tu(Rq(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:tu(Rq(e,t.class_predictor),[n,-1,3])}}))}var FK=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},RK=class extends Eq{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return io((()=>{let n=Ti(e.toBatchTensor(512,!1),"float32"),r=CK(Wh(Tl(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return io((()=>{let r=_K(e,n.conv_0,[1,1]),a=_K(r,n.conv_1,[2,2]),s=_K(a,n.conv_2,[1,1]),i=_K(s,n.conv_3,[2,2]),o=_K(i,n.conv_4,[1,1]),l=_K(o,n.conv_5,[2,2]),u=_K(l,n.conv_6,[1,1]),h=_K(u,n.conv_7,[2,2]),p=AK(t,n.box_predictor_0),d=AK(e,n.box_predictor_1),c=AK(a,n.box_predictor_2),f=AK(i,n.box_predictor_3),m=AK(l,n.box_predictor_4),g=AK(h,n.box_predictor_5);return{boxPredictions:au([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:au([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return io((()=>{let r=e.shape[0],a=$K(tu(mh(n.extra_dim,[r,1,1]),[-1,4]),tu(e,[-1,4]));a=tu(a,[r,a.shape[0]/r,4]);let s=su(iu(t,[0,0,1],[-1,-1,-1])),i=iu(s,[0,0,0],[-1,-1,1]);return i=tu(i,[r,i.shape[1]]),{boxes:yd(a),scores:yd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await kq(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new FK(t),a=await kq(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(l.dataSync()),h=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=EK(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new Bj(u[e],new Hj(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return TK(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Wq(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=NK(n,t),i=a(),o=s(),l={extra_dim:Ao(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};var DK=[new Oj(.738768,.874946),new Oj(2.42204,2.65704),new Oj(4.30971,7.04493),new Oj(10.246,4.59428),new Oj(12.6868,11.8741)],MK=[new Oj(1.603231,2.094468),new Oj(6.041143,7.080126),new Oj(2.882459,3.518061),new Oj(4.266906,5.178857),new Oj(9.041765,10.66308)],OK=[117.001,114.697,97.404],LK=e=>"number"==typeof e;function zK(e){return io((()=>{let t=_l(e,sh(.10000000149011612));return Sl(Ap(Wh(e,t)),t)}))}function PK(e,t){return io((()=>{let n=fp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Su(n,t.conv.filters,[1,1],"valid"),n=Wh(n,t.bn.sub),n=_l(n,t.bn.truediv),n=Sl(n,t.conv.bias),zK(n)}))}function BK(e,t){return io((()=>{let n=fp(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Wp(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=Sl(n,t.bias),zK(n)}))}function WK(e,t){let n=Mq(e,t);let r=zq(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){let i=n(r,a,3,`${s}/conv`),o=function(n,r){let a=ld(e(n)),s=ld(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function VK(e,t){let n=Bq(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){let t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:Pq(n)}}var UK=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},GK=class extends Eq{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!LK(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>LK(e.x)&&LK(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(LK)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=PK(e,t.conv0);return n=Zh(n,[2,2],[2,2],"same"),n=PK(n,t.conv1),n=Zh(n,[2,2],[2,2],"same"),n=PK(n,t.conv2),n=Zh(n,[2,2],[2,2],"same"),n=PK(n,t.conv3),n=Zh(n,[2,2],[2,2],"same"),n=PK(n,t.conv4),n=Zh(n,[2,2],[2,2],"same"),n=PK(n,t.conv5),n=Zh(n,[2,2],[1,1],"same"),n=PK(n,t.conv6),n=PK(n,t.conv7),Rq(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?zK(Rq(e,t.conv0,"valid",!1)):BK(e,t.conv0);return n=Zh(n,[2,2],[2,2],"same"),n=BK(n,t.conv1),n=Zh(n,[2,2],[2,2],"same"),n=BK(n,t.conv2),n=Zh(n,[2,2],[2,2],"same"),n=BK(n,t.conv3),n=Zh(n,[2,2],[2,2],"same"),n=BK(n,t.conv4),n=Zh(n,[2,2],[2,2],"same"),n=BK(n,t.conv5),n=Zh(n,[2,2],[1,1],"same"),n=t.conv6?BK(n,t.conv6):n,n=t.conv7?BK(n,t.conv7):n,Rq(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return io((()=>{let r=Ti(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?Vj(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await kq(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new UK(t),a=await kq(e),s=await this.forwardInput(a,n),i=io((()=>yd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return function(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(Wj(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new Pj(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=VK(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return Dq(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||GK.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=Wq(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=WK(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),conv1:h(s,i,"conv1"),conv2:h(i,o,"conv2"),conv3:h(o,u,"conv3"),conv4:h(u,p,"conv4"),conv5:h(p,d,"conv5"),conv6:c?h(d,c,"conv6"):void 0,conv7:f?h(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,h,p,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,h,"conv4"),conv5:u(h,p,"conv5"),conv6:u(p,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=io((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?Yp(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):sh(0)]})),c=[],f=await p.array(),m=await h.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=Uj(f[e][t][r][0]);if(!n||a>n){let n=(t+Uj(m[e][t][r][0]))/l*i,s=(e+Uj(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,h=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,p=n-u/2,f=s-h/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new zj(p,f,p+u,f+h),score:a,classScore:a*y,label:b,...g})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},HK=GK;HK.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var jK=class extends HK{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:MK,meanRgb:OK}:{anchors:DK,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new Bj(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var qK=class extends UK{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},KK=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function XK(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map((e=>Qq(e)?a(e):e.detection)),i=r||(t instanceof qa?await Sq(t,s):await Iq(t,s)),o=await n(i);return i.forEach((e=>e instanceof qa&&e.dispose())),o}var YK=[new Oj(1.603231,2.094468),new Oj(6.041143,7.080126),new Oj(2.882459,3.518061),new Oj(4.266906,5.178857),new Oj(9.041765,10.66308)],ZK=[117.001,114.697,97.404],JK=class extends HK{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:YK,meanRgb:ZK,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new Bj(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},QK={ssdMobilenetv1:new RK,tinyFaceDetector:new JK,tinyYolov2:new jK,faceLandmark68Net:new dK,faceLandmark68TinyNet:new class extends pK{constructor(e=new cK){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new wK,faceExpressionNet:new class extends Kq{constructor(e=new Hq){super("FaceExpressionNet",e)}forwardInput(e){return io((()=>Yp(this.runNet(e))))}async forward(e){return this.forwardInput(await kq(e))}async predictExpressions(e){let t=await kq(e),n=await this.forwardInput(t),r=await Promise.all(yd(n).map((async e=>{let t=e.dataSync();return e.dispose(),t})));n.dispose();let a=r.map((e=>new Yq(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends Eq{constructor(e=new lK(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return io((()=>{let n=e instanceof wq?this.faceFeatureExtractor.forwardInput(e):e,r=nu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:jq(r,t.fc.age).as1D(),gender:jq(r,t.fc.gender)}}))}forwardInput(e){return io((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Yp(n)}}))}async forward(e){return this.forwardInput(await kq(e))}async predictAgeAndGender(e){let t=await kq(e),n=await this.forwardInput(t),r=yd(n.age),a=yd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=Wq(e),a=Oq(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=qq(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=Bq(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return Dq(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},eX=class extends KK{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},tX=class extends eX{async run(){let e=await this.parentTask,t=await XK(e,this.input,(async e=>Promise.all(e.map((e=>QK.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>Zq(e,t[n])))}withAgeAndGender(){return new aX(this,this.input)}},nX=class extends tX{withAgeAndGender(){return new sX(this,this.input)}withFaceDescriptors(){return new oX(this,this.input)}},rX=class extends KK{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},aX=class extends rX{async run(){let e=await this.parentTask,t=await XK(e,this.input,(async e=>Promise.all(e.map((e=>QK.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return IK(SK(e,a,s),r)}))}withFaceExpressions(){return new tX(this,this.input)}},sX=class extends aX{withFaceExpressions(){return new nX(this,this.input)}withFaceDescriptors(){return new oX(this,this.input)}},iX=class extends KK{constructor(e,t){super(),this.parentTask=e,this.input=t}},oX=class extends iX{async run(){let e=await this.parentTask;return(await XK(e,this.input,(e=>Promise.all(e.map((e=>QK.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>kK(e[n],t)))}withFaceExpressions(){return new nX(this,this.input)}withAgeAndGender(){return new sX(this,this.input)}},lX=class extends KK{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?QK.faceLandmark68TinyNet:QK.faceLandmark68Net}},uX=class extends lX{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof qa?await Sq(this.input,t):await Iq(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof qa&&e.dispose())),e.filter(((e,t)=>r[t])).map(((e,t)=>eK(e,r[t])))}withFaceExpressions(){return new nX(this,this.input)}withAgeAndGender(){return new sX(this,this.input)}withFaceDescriptors(){return new oX(this,this.input)}},hX=class extends KK{constructor(e,t=new FK){super(),this.input=e,this.options=t}},pX=class extends hX{async run(){let e,{input:t,options:n}=this;if(n instanceof qK)e=QK.tinyFaceDetector.locateFaces(t,n);else if(n instanceof FK)e=QK.ssdMobilenetv1.locateFaces(t,n);else{if(!(n instanceof UK))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");e=QK.tinyYolov2.locateFaces(t,n)}return e}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>Zj({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new uX(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new tX(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new aX(this.runAndExtendWithFaceDetections(),this.input)}};function dX(e,t=new FK){return new pX(e,t)}var cX=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof Xj)return e;if(e instanceof Float32Array)return new Xj(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new Xj(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>function(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new Kj(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new Kj("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>Xj.fromJSON(e)));return new cX(t,e.distanceThreshold)}};function fX(e,t){let{width:n,height:r}=new wj(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>fX(e,{width:n,height:r})));if(Qq(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return eK(Zj(e,t),a)}return Yj(e)?Zj(e,e.detection.forSize(n,r)):e instanceof jj||e instanceof Bj?e.forSize(n,r):e}function mX(e){switch(e.toLowerCase().trim()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function gX(e,t,n,r){const a=e.location.search,s=new URLSearchParams(a);for(const[e,t]of s)"number"==typeof n[e]?n[e]=parseInt(t,10):"boolean"==typeof n[e]?n[e]=mX(t):n[e]=t;"serviceWorker"in navigator&&(navigator.serviceWorker.register("./sw.js",{scope:"./"}).then((function(e){t.querySelector("footer").classList.remove("hidden")})).catch((function(e){})),function(e,t,n){const r=t.getElementById("butInstall");if(!r)return;let a;r.addEventListener("click",(e=>{r.classList.add("hidden"),a.prompt(),a.userChoice.then((e=>{}))})),e.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),a=e,n&&n.showInstall&&r.classList.remove("hidden")}))}(e,t,n)),r(e,t,n)}!function(e,t,n,r){!function(e,t,n,r,a){"loading"!==n.readyState?e(t,n,r,a):n.addEventListener("DOMContentLoaded",(function(s){e(t,n,r,a)}))}(gX,e,t,n,r)}(window,document,{modes:["yandexlavka","default"],mode:"yandexlavka",sound:!1},(function(e,t,n){const r=t.getElementById("imageUpload"),s=t.getElementById("video"),i=t.querySelector(".video_container"),o=t.querySelector(".image_container"),l=t.querySelector(".start_video"),u=t.querySelector(".main_header"),h=t.querySelector("footer"),p=t.querySelector(".processing");let d=null,c=function(){const e={unknown:"Хер с горы",petr:"Петруччо",serg:"Серж",sava:"Чемонин",lenya:"Лёня",chern:"Не лох",boys:"ЧернRк",glider:"Шурик"};return{convert:function(t,n){const r=e[t];return r?n&&"female"===n.gender&&"unknown"===t?"Незнакомка":r:t}}}();if(n.modes.includes(n.mode)&&"default"!==n.mode){let e=null;"diagnosis"===n.mode||"ira"===n.mode?e=a.e(967).then(a.bind(a,967)):"planeta"===n.mode?e=a.e(590).then(a.bind(a,590)):"max"===n.mode?e=a.e(352).then(a.bind(a,352)):"cat"===n.mode?e=a.e(833).then(a.bind(a,833)):"meshok"===n.mode?e=a.e(753).then(a.bind(a,753)):"yandexlavka"===n.mode?e=a.e(802).then(a.bind(a,802)):"membrana"===n.mode&&(e=a.e(327).then(a.bind(a,327))),e&&e.then((e=>{u.innerText=e.default.header,c=e.default.nameConvertor}))}let f="default";async function m(){i.classList.remove("hidden"),h.classList.add("hidden"),d&&clearInterval(d);const e={video:!0};try{navigator.mediaDevices.getUserMedia(e).then((function(e){s.srcObject=e})).catch((function(e){}))}catch(e){}}n.modes.includes(n.mode)&&(f=n.mode),Promise.all([async function(e){try{return(await fetch("/models/"+e+".json")).json()}catch(e){return(await fetch("/models/default.json")).json()}}(f),QK.faceRecognitionNet.loadFromUri("/models"),QK.faceLandmark68Net.loadFromUri("/models"),QK.ageGenderNet.loadFromUri("/models"),QK.ssdMobilenetv1.loadFromUri("/models")]).then((async function(e){const t=cX.fromJSON(e[0]);let n=null,a=null,u=null;function f(e,n){e.map((e=>t.findBestMatch(e.descriptor))).forEach(((t,r)=>{if(e.length>7&&"unknown"===t.label)return;const a=e[r],s=c.convert(t.label,a);if("unknown"!==s){new xj.DrawBox(a.detection.box,{label:s}).draw(n)}}))}r.addEventListener("click",(()=>{i.classList.remove("hidden"),h.classList.add("hidden")})),r.addEventListener("change",(async()=>{p.classList.remove("hidden"),n&&n.remove(),a&&a.remove(),n=await gq(r.files[0]),o.append(n),a=xq(n),o.append(a);const e={width:n.width,height:n.height};Cq(a,e);const t=fX(await dX(n).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),e);p.classList.add("hidden"),requestAnimationFrame((()=>{f(t,a)}))})),l.addEventListener("click",m),s.addEventListener("playing",(()=>{u&&u.remove();const e=xq(s);i.append(e),u=e;const t={width:s.getBoundingClientRect().width,height:s.getBoundingClientRect().height};Cq(e,t),d&&clearInterval(d),d=setInterval((async()=>{const n=fX(await dX(s).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),t);e.getContext("2d").clearRect(0,0,e.width,e.height),f(n,e)}),300)}))}))}))})()})();