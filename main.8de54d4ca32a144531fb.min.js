(()=>{var e,t,n={741:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=741,e.exports=t}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return n[e](s,s.exports,a),s.exports}a.m=n,a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+"."+{327:"47b5224a8e56e4e23356",352:"91c1808e1c8d0a1047b3",590:"ad476ae9046bad33d724",753:"cf426e7dc61916bfa2bb",802:"9d027bbd2e5631601370",833:"7c17ce4206f8fee5f98e",967:"e80f1f83e01402c093db"}[e]+".min.js",a.miniCssF=e=>{},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="nedanila:",a.l=(n,r,s,i)=>{if(e[n])e[n].push(r);else{var o,u;if(void 0!==s)for(var l=document.getElementsByTagName("script"),c=0;c<l.length;c++){var h=l[c];if(h.getAttribute("src")==n||h.getAttribute("data-webpack")==t+s){o=h;break}}o||(u=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=n),e[n]=[r];var d=(t,r)=>{o.onerror=o.onload=null,clearTimeout(p);var a=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),u&&document.head.appendChild(o)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=s);var i=a.p+a.u(t),o=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,s,[i,o,u]=n,l=0;if(i.some((t=>0!==e[t]))){for(r in o)a.o(o,r)&&(a.m[r]=o[r]);if(u)u(a)}for(t&&t(n);l<i.length;l++)s=i[l],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0},n=self.webpackChunknedanila=self.webpackChunknedanila||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e="/index.js",t=Object.defineProperty,n=(e=>a(741))(),r=(e,n)=>{for(var r in n)t(e,r,{get:n[r],enumerable:!0})};r({},{Abs:()=>qe,Acos:()=>Ke,Acosh:()=>Xe,AdadeltaOptimizer:()=>Mp,AdagradOptimizer:()=>Op,AdamOptimizer:()=>Lp,AdamaxOptimizer:()=>zp,Add:()=>Ye,AddN:()=>Ze,All:()=>Je,Any:()=>Qe,ArgMax:()=>et,ArgMin:()=>tt,Asin:()=>nt,Asinh:()=>rt,Atan:()=>at,Atan2:()=>it,Atanh:()=>st,AvgPool:()=>ot,AvgPool3D:()=>lt,AvgPool3DGrad:()=>ct,AvgPoolGrad:()=>ut,BackendWasm:()=>AG,BatchMatMul:()=>ht,BatchToSpaceND:()=>dt,Bincount:()=>pt,BroadcastArgs:()=>mt,BroadcastTo:()=>ft,Callback:()=>KI,CallbackList:()=>Pb,Cast:()=>gt,Ceil:()=>yt,ClipByValue:()=>bt,Complex:()=>xt,ComplexAbs:()=>vt,Concat:()=>wt,Conv2D:()=>kt,Conv2DBackpropFilter:()=>It,Conv2DBackpropInput:()=>St,Conv3D:()=>Nt,Conv3DBackpropFilterV2:()=>Tt,Conv3DBackpropInputV2:()=>Et,Cos:()=>Ct,Cosh:()=>_t,CropAndResize:()=>At,Cumsum:()=>$t,CustomCallback:()=>Vb,DataStorage:()=>V,DenseBincount:()=>Ft,DepthToSpace:()=>Rt,DepthwiseConv2dNative:()=>Dt,DepthwiseConv2dNativeBackpropFilter:()=>Mt,DepthwiseConv2dNativeBackpropInput:()=>Ot,Diag:()=>Lt,Dilation2D:()=>zt,Dilation2DBackpropFilter:()=>Bt,Dilation2DBackpropInput:()=>Pt,ENV:()=>Ge,EarlyStopping:()=>ZI,Einsum:()=>Vt,Elu:()=>Ut,EluGrad:()=>Gt,Environment:()=>Be,Equal:()=>jt,Erf:()=>Ht,Exp:()=>qt,ExpandDims:()=>Kt,Expm1:()=>Xt,FFT:()=>Yt,Fill:()=>Zt,FlipLeftRight:()=>Jt,Floor:()=>Qt,FloorDiv:()=>en,FromPixels:()=>Kr,FusedBatchNorm:()=>tn,FusedConv2D:()=>Zr,FusedDepthwiseConv2D:()=>Jr,GPGPUContext:()=>JD,GatherNd:()=>rn,GatherV2:()=>nn,GraphModel:()=>AN,Greater:()=>an,GreaterEqual:()=>sn,History:()=>Wb,IFFT:()=>un,Identity:()=>on,Imag:()=>ln,InputSpec:()=>Nb,IsFinite:()=>cn,IsInf:()=>hn,IsNan:()=>dn,KernelBackend:()=>U,LRN:()=>In,LRNGrad:()=>Sn,LayerVariable:()=>kb,LayersModel:()=>Zx,LeakyRelu:()=>pn,Less:()=>fn,LessEqual:()=>mn,LinSpace:()=>gn,Log:()=>yn,Log1p:()=>bn,LogSoftmax:()=>kn,LogicalAnd:()=>xn,LogicalNot:()=>vn,LogicalOr:()=>wn,MathBackendWebGL:()=>eO,Max:()=>Nn,MaxPool:()=>En,MaxPool3D:()=>_n,MaxPool3DGrad:()=>$n,MaxPoolGrad:()=>Cn,MaxPoolWithArgmax:()=>An,Maximum:()=>Tn,Mean:()=>Fn,Min:()=>Rn,Minimum:()=>Dn,MirrorPad:()=>Mn,Mod:()=>On,MomentumOptimizer:()=>Bp,Multinomial:()=>Ln,Multiply:()=>zn,Neg:()=>Pn,NonMaxSuppressionV3:()=>Wn,NonMaxSuppressionV4:()=>Vn,NonMaxSuppressionV5:()=>Un,NotEqual:()=>Bn,OP_SCOPE_SUFFIX:()=>Cs,OneHot:()=>Hn,OnesLike:()=>Gn,Optimizer:()=>Dp,OptimizerConstructors:()=>Vp,Pack:()=>jn,PadV2:()=>qn,Pool:()=>Kn,Pow:()=>Xn,Prelu:()=>Yn,Prod:()=>Zn,RMSPropOptimizer:()=>Wp,RNN:()=>aw,Range:()=>Jn,Rank:()=>ja,Real:()=>Qn,RealDiv:()=>Wt,Reciprocal:()=>er,Reduction:()=>up,Relu:()=>tr,Relu6:()=>or,Reshape:()=>nr,ResizeBilinear:()=>sr,ResizeBilinearGrad:()=>ir,ResizeNearestNeighbor:()=>rr,ResizeNearestNeighborGrad:()=>ar,Reverse:()=>ur,RotateWithOffset:()=>Xr,Round:()=>lr,Rsqrt:()=>cr,SGDOptimizer:()=>Pp,ScatterNd:()=>hr,Select:()=>dr,Selu:()=>pr,Sequential:()=>tv,Sigmoid:()=>br,Sign:()=>yr,Sin:()=>mr,Sinh:()=>gr,Slice:()=>fr,Softmax:()=>Sr,Softplus:()=>xr,SpaceToBatchND:()=>kr,SparseFillEmptyRows:()=>Nr,SparseReshape:()=>Tr,SparseSegmentMean:()=>Er,SparseSegmentSum:()=>Cr,SparseToDense:()=>_r,SplitV:()=>Ir,Sqrt:()=>vr,Square:()=>Ar,SquaredDifference:()=>$r,Step:()=>qr,StridedSlice:()=>Fr,StringNGrams:()=>Rr,StringSplit:()=>Dr,StringToHashBucketFast:()=>Mr,Sub:()=>Or,Sum:()=>wr,SymbolicTensor:()=>Tb,Tan:()=>Lr,Tanh:()=>zr,Tensor:()=>Ua,TensorBuffer:()=>Ba,Tile:()=>Pr,TopK:()=>Br,Transform:()=>Wr,Transpose:()=>Vr,Unique:()=>Ur,Unpack:()=>Gr,UnsortedSegmentSum:()=>Hr,Variable:()=>Ha,ZerosLike:()=>jr,_FusedMatMul:()=>Yr,abs:()=>wu,acos:()=>ku,acosh:()=>Iu,add:()=>yu,addN:()=>Su,all:()=>Nu,any:()=>Tu,argMax:()=>Eu,argMin:()=>Cu,asin:()=>_u,asinh:()=>$u,atan:()=>Au,atan2:()=>Fu,atanh:()=>Ru,avgPool:()=>Xu,avgPool3d:()=>Yu,backend:()=>mu,backend_util:()=>jp,basicLSTMCell:()=>tl,batchNorm:()=>rl,batchNorm2d:()=>al,batchNorm3d:()=>sl,batchNorm4d:()=>il,batchToSpaceND:()=>nl,bincount:()=>ol,booleanMaskAsync:()=>ld,broadcastArgs:()=>ul,broadcastTo:()=>ll,broadcast_util:()=>Yi,browser:()=>to,buffer:()=>Ni,callbacks:()=>tS,cast:()=>Ti,ceil:()=>cl,clipByValue:()=>hl,clone:()=>Ei,complex:()=>$s,concat:()=>Zu,concat1d:()=>dl,concat2d:()=>pl,concat3d:()=>fl,concat4d:()=>ml,constraints:()=>ig,conv1d:()=>yl,conv2d:()=>gl,conv2dTranspose:()=>xl,conv3d:()=>vl,conv3dTranspose:()=>kl,copyRegisteredKernels:()=>ca,cos:()=>Il,cosh:()=>Sl,cosineWindow:()=>bd,cumsum:()=>Nl,customGrad:()=>hc,data:()=>DN,denseBincount:()=>Tl,deprecationWarn:()=>Qo,depthToSpace:()=>El,depthwiseConv2d:()=>Cl,deregisterOp:()=>sS,device_util:()=>bs,diag:()=>_l,dilation2d:()=>$l,disableDeprecationWarnings:()=>Jo,dispose:()=>su,disposeVariables:()=>eu,div:()=>xu,divNoNan:()=>Dl,dot:()=>Ml,dropout:()=>gd,einsum:()=>Ol,elu:()=>Ll,enableDebugMode:()=>Zo,enableProdMode:()=>Yo,enclosingPowerOfTwo:()=>yd,engine:()=>tu,env:()=>Ve,equal:()=>Al,erf:()=>zl,exp:()=>Pl,expandDims:()=>Bl,expm1:()=>Wl,eye:()=>Ul,fft:()=>zh,fill:()=>Gl,findBackend:()=>du,findBackendFactory:()=>pu,floor:()=>Hl,floorDiv:()=>bu,forceHalfFloat:()=>nO,fused:()=>vd,gather:()=>jl,gatherND:()=>md,gather_util:()=>uo,getBackend:()=>cu,getGradient:()=>aa,getKernel:()=>ra,getKernelsForBackend:()=>sa,getThreadsCount:()=>HG,gpgpu_util:()=>_D,grad:()=>ic,grads:()=>oc,greater:()=>ql,greaterEqual:()=>Kl,ifft:()=>Ph,imag:()=>Xl,image:()=>_p,inTopKAsync:()=>xd,initializers:()=>jg,input:()=>sv,io:()=>_i,irfft:()=>Bh,isFinite:()=>Yl,isInf:()=>Zl,isNaN:()=>Jl,keep:()=>iu,kernel_impls:()=>qf,layers:()=>hb,leakyRelu:()=>Ql,less:()=>ec,lessEqual:()=>tc,linalg:()=>$p,linspace:()=>nc,loadGraphModel:()=>FN,loadLayersModel:()=>av,localResponseNormalization:()=>rc,log:()=>ac,log1p:()=>sc,logSigmoid:()=>mc,logSoftmax:()=>xc,logSumExp:()=>Cc,logicalAnd:()=>_c,logicalNot:()=>$c,logicalOr:()=>Ac,logicalXor:()=>Fc,losses:()=>Ap,matMul:()=>ji,math:()=>Hi,max:()=>gc,maxPool:()=>Rc,maxPool3d:()=>Dc,maxPoolWithArgmax:()=>Mc,maximum:()=>Oc,mean:()=>Lc,memory:()=>nu,meshgrid:()=>Bc,metrics:()=>EI,min:()=>Wc,minimum:()=>Vc,mirrorPad:()=>Uc,mod:()=>Gc,model:()=>nv,models:()=>UI,moments:()=>jc,movingAverage:()=>dd,mul:()=>vu,multiRNNCell:()=>qc,multinomial:()=>Kc,neg:()=>pc,nextFrame:()=>Hp,norm:()=>hd,notEqual:()=>Xc,oneHot:()=>qi,ones:()=>Pc,onesLike:()=>Yc,op:()=>_s,outerProduct:()=>Zc,pad:()=>Jc,pad1d:()=>Qc,pad2d:()=>eh,pad3d:()=>th,pad4d:()=>nh,pool:()=>ah,pow:()=>sh,prelu:()=>ih,print:()=>Ci,prod:()=>oh,profile:()=>ru,rand:()=>uh,randomGamma:()=>hh,randomNormal:()=>dh,randomUniform:()=>ph,range:()=>fh,ready:()=>lu,real:()=>mh,reciprocal:()=>gh,registerBackend:()=>fu,registerCallbackConstructor:()=>iv,registerGradient:()=>oa,registerKernel:()=>ia,registerOp:()=>rS,regularizers:()=>GI,relu:()=>yh,relu6:()=>bh,removeBackend:()=>hu,reshape:()=>Ku,reverse:()=>xh,reverse1d:()=>vh,reverse2d:()=>wh,reverse3d:()=>kh,reverse4d:()=>Ih,rfft:()=>Vh,round:()=>Sh,rsqrt:()=>Nh,scalar:()=>Th,scatterND:()=>pd,scatter_util:()=>co,selu:()=>Eh,separableConv2d:()=>Ch,sequential:()=>rv,serialization:()=>Ro,setBackend:()=>uu,setPlatform:()=>gu,setThreadsCount:()=>GG,setWasmPath:()=>BG,setWasmPaths:()=>WG,setWebGLContext:()=>aR,setdiff1dAsync:()=>_h,sigmoid:()=>Ju,sign:()=>$h,signal:()=>Cp,sin:()=>Ah,sinh:()=>Fh,slice:()=>Qu,slice1d:()=>Rh,slice2d:()=>Dh,slice3d:()=>Mh,slice4d:()=>Oh,slice_util:()=>mo,softmax:()=>Lh,softplus:()=>fc,spaceToBatchND:()=>rh,sparse:()=>Fp,sparseToDense:()=>fd,spectral:()=>Ep,split:()=>Wh,sqrt:()=>Uh,square:()=>Hc,squaredDifference:()=>Gh,squeeze:()=>Hh,stack:()=>jh,step:()=>qh,stridedSlice:()=>Kh,string:()=>Rp,sub:()=>yc,sum:()=>bc,sumOutType:()=>ss,tan:()=>Xh,tanh:()=>el,tensor:()=>Fs,tensor1d:()=>Yh,tensor2d:()=>Zh,tensor3d:()=>no,tensor4d:()=>Jh,tensor5d:()=>Qh,tensor6d:()=>ed,tensor_util:()=>ns,test_util:()=>Lo,tidy:()=>au,tile:()=>Vl,time:()=>ou,topk:()=>td,train:()=>Up,transpose:()=>Ki,truncatedNormal:()=>nd,unique:()=>rd,unregisterGradient:()=>la,unregisterKernel:()=>ua,unsortedSegmentSum:()=>ad,unstack:()=>sd,upcastType:()=>as,util:()=>da,valueAndGrad:()=>uc,valueAndGrads:()=>lc,variable:()=>id,variableGrads:()=>cc,version:()=>qG,version_converter:()=>RN,version_core:()=>Xo,version_layers:()=>Sx,version_wasm:()=>jG,version_webgl:()=>tO,webgl:()=>rO,webgl_util:()=>XF,where:()=>Fl,whereAsync:()=>ud,zeros:()=>zc,zerosLike:()=>Rl});var s=Object.create,i=Object.defineProperty,o=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyNames,l=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,h=(e,t)=>function(){return t||(0,e[u(e)[0]])((t={exports:{}}).exports,t),t.exports},d=(e,t)=>{for(var n in t)i(e,n,{get:t[n],enumerable:!0})},p=(e,t)=>{return((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of u(t))c.call(e,a)||!n&&"default"===a||i(e,a,{get:()=>t[a],enumerable:!(r=o(t,a))||r.enumerable});return e})((n=i(null!=e?s(l(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0}),i(n,"__esModule",{value:!0})),e);var n},f=h({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var d=u(c(n,o));s=s.mul(d).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?h(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var v=o(1,!0);r.UONE=v;var w=o(-1);r.NEG_ONE=w;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var S=l(0,-2147483648,!1);r.MIN_VALUE=S;var N=r.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+u)>>>16,c+=(h+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*p)>>>16,m+=(b+=s*p)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=r*p)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*c)>>>16,f+=t*p+r*h+s*c+i*o,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),h=u(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=u(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),m=h({"(disabled):node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/browser.js"(){}}),g=h({"(disabled):util"(){}}),y=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),b=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),x=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),v=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),w=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),k=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),I=h({"(disabled):crypto"(){}}),S=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,n){var r,s=this,i=256,o=n.pow(i,6),u=n.pow(2,52),l=2*u,c=255;function h(t,a,c){var h=[],y=m(f((a=1==a?{entropy:!0}:a||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,g(e)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),e),(a.pass||c||function(e,t,r,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),r?(n.random=e,t):e})(x,y,"global"in a?a.global:this==n,a.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(n.seedrandom=h,m(n.random(),e),"object"==typeof t&&t.exports){t.exports=h;try{r=I()}catch(e){}}else"function"==typeof define&&a.amdO&&define((function(){return h}))}([],Math)}}),N=h({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=y(),r=b(),a=x(),s=v(),i=w(),o=k(),u=S();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),T=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),E=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),C=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),_=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),$=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),A=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),F=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,n,r){var s,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function h(t,a,c){var h=[],y=m(f((a=1==a?{entropy:!0}:a||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var r=e.navigator,a=r&&r.plugins;return[+new Date,e,a,e.screen,g(n)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),n),(a.pass||c||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r.random=e,t):e})(x,y,"global"in a?a.global:this==r,a.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),"object"==typeof t&&t.exports){t.exports=h;try{s=I()}catch(e){}}else"function"==typeof define&&a.amdO?define((function(){return h})):r.seedrandom=h}("undefined"!=typeof self?self:e,[],Math)}}),R=h({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=T(),r=E(),a=C(),s=_(),i=$(),o=A(),u=F();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),D=h({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),M=h({"(disabled):fs"(){}}),O=h({"(disabled):path"(){}}),L=h({"(disabled):worker_threads"(){}}),z=h({"(disabled):perf_hooks"(){}}),P=h({"(disabled):os"(){}}),B=h({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(t,n){var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){function t(){return R.buffer!=W&&se(R.buffer),V}function n(){return R.buffer!=W&&se(R.buffer),U}function s(){return R.buffer!=W&&se(R.buffer),G}function i(){return R.buffer!=W&&se(R.buffer),H}function o(){return R.buffer!=W&&se(R.buffer),j}var u,l,c,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){u=e,l=t})),"undefined"!=typeof process&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,p={};for(d in h)h.hasOwnProperty(d)&&(p[d]=h[d]);var f=[],m=function(e,t){throw t},g=!1,y=!1,b=!1,x=!1;g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=!g&&!b&&!y;var v=h.ENVIRONMENT_IS_PTHREAD||!1;v&&(W=h.buffer);var w,k,I,S,N,T="";function E(e){return h.locateFile?h.locateFile(e,T):T+e}if(b){var C;T=y?O().dirname(T)+"/":"//",w=function(e,t){return S||(S=M()),N||(N=O()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof kn))throw e})),process.on("unhandledRejection",Ne),m=function(e){process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{C=L()}catch(e){throw e}a.g.Worker=C.Worker}else x?("undefined"!=typeof read&&(w=function(e){return read(e)}),I=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(K("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?T=self.location.href:"undefined"!=typeof document&&document.currentScript&&(T=document.currentScript.src),void 0!==r&&r&&(T=r),T=0!==T.indexOf("blob:")?T.substr(0,T.lastIndexOf("/")+1):"",b?(w=function(e,t){return S||(S=M()),N||(N=O()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(a.g.performance=z().performance);var _,$=h.print||void 0,A=h.printErr||void 0;for(d in p)p.hasOwnProperty(d)&&(h[d]=p[d]);function F(e){F.shown||(F.shown={}),F.shown[e]||(F.shown[e]=1,A(e))}p=null,h.arguments&&(f=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(m=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(_=h.wasmBinary);var R,D,B=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&Ne("no native wasm support detected");var W,V,U,G,H,j,q=!1;function K(e,t){e||Ne("Assertion failed: "+t)}function X(e){var t=h["_"+e];return K(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function Y(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);te(e,t=yn(n),n)}return t},array:function(e){var t=yn(e.length);return re(e,t),t}},i=X(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=mn()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?Q(h):"boolean"===t?Boolean(h):h,0!==u&&gn(u),d}function Z(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?X(e):function(){return Y(e,t,n,arguments)}}function J(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function Q(e,t){return e?J(n(),e,t):""}function ee(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function te(e,t,r){return ee(e,n(),t,r)}function ne(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function re(e,n){t().set(e,n)}function ae(e,t){return e%t>0&&(e+=t-e%t),e}function se(e){W=e,h.HEAP8=V=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=G=new Int32Array(e),h.HEAPU8=U=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=H=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=j=new Float64Array(e)}var ie,oe=h.INITIAL_MEMORY||16777216;if(v)R=h.wasmMemory,W=h.buffer;else if(h.wasmMemory)R=h.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:oe/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");R&&(W=R.buffer),oe=W.byteLength,se(W);var ue=[],le=[],ce=[],he=[],de=[];function pe(){if(!v){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)be(h.preRun.shift());Le(ue)}}function fe(){v||Le(le)}function me(){v||Le(ce)}function ge(){}function ye(){if(!v){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)xe(h.postRun.shift());Le(de)}}function be(e){ue.unshift(e)}function xe(e){de.unshift(e)}v||le.push({func:function(){Qt()}});var ve=0,we=null,ke=null;function Ie(e){K(!v,"addRunDependency cannot be used in a pthread worker"),ve++,h.monitorRunDependencies&&h.monitorRunDependencies(ve)}function Se(e){if(ve--,h.monitorRunDependencies&&h.monitorRunDependencies(ve),0==ve&&(null!==we&&(clearInterval(we),we=null),ke)){var t=ke;ke=null,t()}}function Ne(e){h.onAbort&&h.onAbort(e),A(e+=""),q=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function Te(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}h.preloadedImages={},h.preloadedAudios={};var Ee="data:application/octet-stream;base64,";function Ce(e){return Te(e,Ee)}var _e="file://";function $e(e){return Te(e,_e)}var Ae="tfjs-backend-wasm-threaded-simd.wasm";function Fe(e){try{if(e==Ae&&_)return new Uint8Array(_);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(e){Ne(e)}}function Re(){if(!_&&(g||y)){if("function"==typeof fetch&&!$e(Ae))return fetch(Ae,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ae+"'";return e.arrayBuffer()})).catch((function(){return Fe(Ae)}));if(k)return new Promise((function(e,t){k(Ae,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Fe(Ae)}))}function De(){var e={a:Jt};function t(e,t){var n=e.exports;if(h.asm=n,ie=h.asm.I,D=t,!v){var r=Ge.unusedWorkers.length;Ge.unusedWorkers.forEach((function(e){Ge.loadWasmModuleToWorker(e,(function(){--r||Se()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Re().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){A("failed to asynchronously prepare wasm: "+e),Ne(e)}))}if(v||Ie(),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return A("Module.instantiateWasm callback failed with error: "+e),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||Ce(Ae)||$e(Ae)||"function"!=typeof fetch?r(n):fetch(Ae,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}Ce(Ae)||(Ae=E(Ae));var Me={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){cn(e,t)}),0)}};function Oe(){Ge.initRuntime()}function Le(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ie.get(n)():ie.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}var ze={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Pe(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),wn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),wn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Be(e){if(v)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Ge.pthreads[e];t.worker.terminate(),Ge.freeThreadData(t),Ge.runningWorkers.splice(Ge.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function We(e){if(v)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Ge.pthreads[e].worker.postMessage({cmd:"cancel"})}function Ve(e){if(v)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Ge.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Ge.returnWorkerToPool(n)}}h._emscripten_futex_wake=Pe;var Ue,Ge={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Ge.allocateUnusedWorker()},initRuntime:function(){for(var e=en(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=en(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),fn(e,!y,1),un(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Ge.threadExitHandlers.length>0;)Ge.threadExitHandlers.pop()();v&&an()&&sn()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Ge.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Pe(e+0,2147483647),fn(0,0,0)},threadExit:function(e){var t=an();t&&(Ge.runExitHandlersAndDeinitThread(t,e),v&&postMessage({cmd:"exit"}))},threadCancel:function(){Ge.runExitHandlersAndDeinitThread(an(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Ge.pthreads)(r=Ge.pthreads[e])&&r.worker&&Ge.returnWorkerToPool(r.worker);Ge.pthreads={};for(var t=0;t<Ge.unusedWorkers.length;++t)(n=Ge.unusedWorkers[t]).terminate();for(Ge.unusedWorkers=[],t=0;t<Ge.runningWorkers.length;++t){var n,r=(n=Ge.runningWorkers[t]).pthread;Ge.freeThreadData(r),n.terminate()}Ge.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,tn(t),tn(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&tn(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Ge.runWithoutMainThreadQueuedCalls((function(){delete Ge.pthreads[e.pthread.threadInfoStruct],Ge.unusedWorkers.push(e),Ge.runningWorkers.splice(Ge.runningWorkers.indexOf(e),1),Ge.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[vn>>2]=0;try{e()}finally{s()[vn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Ge.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=an()){var s=Ge.pthreads[r.targetThread];return s&&s.worker.postMessage(n.data,r.transferList),void(Ge.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)on();else if("spawnThread"===a)Wt(n.data);else if("cleanupThread"===a)Ve(r.thread);else if("killThread"===a)Be(r.thread);else if("cancelThread"===a)We(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)$("Thread "+r.threadId+": "+r.text);else if("printErr"===a)A("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Ge.returnWorkerToPool(e);else if("exitProcess"===a)try{Sn(r.returnCode)}catch(e){if(e instanceof kn)return;throw e}else"cancelDone"===a?Ge.returnWorkerToPool(e):"objectTransfer"===a?Ge.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+a);Ge.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:D})},allocateUnusedWorker:function(){var e=E("tfjs-backend-wasm-threaded-simd.worker.js");Ge.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ge.unusedWorkers.length&&(Ge.allocateUnusedWorker(),Ge.loadWasmModuleToWorker(Ge.unusedWorkers[0])),Ge.unusedWorkers.length>0?Ge.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function He(e,t){bn(e,t),gn(e)}function je(){return B}function qe(e,t){return ie.get(e)(t)}function Ke(e,t,n,r){Ne("Assertion failed: "+Q(e)+", at: "+[t?Q(t):"unknown filename",n,r?Q(r):"unknown function"])}function Xe(e,t){_main(e,t)}function Ye(e){return s()[nn()>>2]=e,e}function Ze(e,t){if(v)return st(1,1,e,t)}function Je(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(v)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ge.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Qe(){Ne()}function et(e,t,n){var r=ut(t,n);return Me[e].apply(null,r)}function tt(e,t){}function nt(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),wn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),wn>>2,0),-73;if(0==Atomics.exchange(s(),wn>>2,0))break;if(on(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),wn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function rt(e,t,r){n().copyWithin(e,t,t+r)}function at(){return b?P().cpus().length:navigator.hardwareConcurrency}function st(e,t){for(var n=arguments.length-2,r=mn(),a=n,s=yn(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=dn(e,a,s,t);return gn(r),c}h.establishStackSpace=He,h.getNoExitRuntime=je,h.invokeEntryPoint=qe,Ue=b?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:v?function(){return performance.now()-h.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var it=[],ot=[];function ut(e,t){var r;for(ot.length=0,t>>=2;r=n()[e++];){var a=r<105;a&&1&t&&t++,ot.push(a?o()[t++>>1]:s()[t]),++t}return ot}function lt(e,t,n){it.length=t;for(var r=n>>3,a=0;a<t;a++)it[a]=o()[r+a];return(e<0?Me[-e-1]:Zt[e]).apply(null,it)}function ct(){return n().length}function ht(e){try{return R.grow(e-W.byteLength+65535>>>16),se(R.buffer),1}catch(e){}}function dt(e){var t=ct();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ht(Math.min(n,ae(Math.max(e,a),65536))))return!0}return!1}var pt={inEventHandler:0,removeAllEventListeners:function(){for(var e=pt.eventHandlers.length-1;e>=0;--e)pt._removeHandler(e);pt.eventHandlers=[],pt.deferredCalls=[]},registerRemoveEventListeners:function(){pt.removeEventListenersRegistered||(he.push(pt.removeAllEventListeners),pt.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in pt.deferredCalls){var s=pt.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}pt.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),pt.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<pt.deferredCalls.length;++t)pt.deferredCalls[t].targetFunction==e&&(pt.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return pt.inEventHandler&&pt.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(pt.canPerformEventHandlerRequests())for(var e=0;e<pt.deferredCalls.length;++e){var t=pt.deferredCalls[e];pt.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<pt.eventHandlers.length;++n)pt.eventHandlers[n].target!=e||t&&t!=pt.eventHandlers[n].eventTypeString||pt._removeHandler(n--)},_removeHandler:function(e){var t=pt.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),pt.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++pt.inEventHandler,pt.currentEventHandler=e,pt.runDeferredCalls(),e.handlerFunc(t),pt.runDeferredCalls(),--pt.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),pt.eventHandlers.push(e),pt.registerRemoveEventListeners();else for(var n=0;n<pt.eventHandlers.length;++n)pt.eventHandlers[n].target==e.target&&pt.eventHandlers[n].eventTypeString==e.eventTypeString&&pt._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=mn(),o=yn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,pn(0,e,637534208,t,r,o),gn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ge.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ft(e){var t=ne(e)+1,n=en(t);return te(e,n,t),n}function mt(e,t,n,r){var a=mn(),i=yn(12),o=0;t&&(o=ft(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,pn(0,e,657457152,0,o,i),gn(a)}function gt(e,t,n,r){mt(e,t=t?Q(t):"",n,r)}function yt(e){return e>2?Q(e):e}var bt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function xt(e){return e=yt(e),bt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function vt(e){return xt(e)}function wt(e,t,n){var r=vt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(gt(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function kt(e,t,n){return v?st(2,1,e,t,n):wt(e,t,n)}function It(e,t,n){return vt(e)?wt(e,t,n):kt(e,t,n)}function St(e){}function Nt(e,t){}function Tt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function Et(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function Ct(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function _t(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var $t={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){$t.lastError||($t.lastError=e)},getNewId:function(e){for(var t=$t.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=Q(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?$t.registerContext(n,t):0},registerContext:function(e,t){var n=en(8);s()[n+4>>2]=an();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),$t.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&$t.initExtensions(r),n},makeContextCurrent:function(e){return $t.currentContext=$t.contexts[e],h.ctx=Dt=$t.currentContext&&$t.currentContext.GLctx,!(e&&!Dt)},getContext:function(e){return $t.contexts[e]},deleteContext:function(e){$t.currentContext===$t.contexts[e]&&($t.currentContext=null),"object"==typeof pt&&pt.removeAllHandlersOnTarget($t.contexts[e].GLctx.canvas),$t.contexts[e]&&$t.contexts[e].GLctx.canvas&&($t.contexts[e].GLctx.canvas.GLctxObject=void 0),tn($t.contexts[e].handle),$t.contexts[e]=null},initExtensions:function(e){if(e||(e=$t.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;Tt(t),Et(t),Ct(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),_t(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=$t.programs[e],n=$t.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Dt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Dt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Dt.getUniformLocation(t,o);if(u){var l=$t.getNewId($t.uniforms);r[o]=[i.size,l],$t.uniforms[l]=u;for(var c=1;c<i.size;++c){var h=o+"["+c+"]";u=Dt.getUniformLocation(t,h),l=$t.getNewId($t.uniforms),$t.uniforms[l]=u}}}}},At=["default","low-power","high-performance"];function Ft(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:At[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=vt(e);return i?a.explicitSwapControl?0:$t.createContext(i,a):0}function Rt(e,t){return Ft(e,t)}var Dt,Mt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Mt.buffers[e];0===t||10===t?((1===e?$:A)(J(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Mt.varargs+=4,s()[Mt.varargs-4>>2]},getStr:function(e){return Q(e)},get64:function(e,t){return e}};function Ot(e){return v?st(3,1,e):0}function Lt(e,t,n,r,a){if(v)return st(4,1,e,t,n,r,a)}function zt(e,t,r,a){if(v)return st(5,1,e,t,r,a);for(var i=0,o=0;o<r;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Mt.printChar(e,n()[u+c]);i+=l}return s()[a>>2]=i,0}function Pt(e){var t=Ge.threadExitHandlers.pop();e&&t()}function Bt(e,t){Ge.threadExitHandlers.push((function(){ie.get(e)(t)}))}function Wt(e){if(v)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Ge.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Ge.runningWorkers.push(t);for(var n=en(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Ge.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=rn()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Vt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var a=[];if(v&&0===a.length)return hn(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=xn(16,o):K((u-=o)>0);for(var h=en(228),d=0;d<57;++d)i()[(h>>2)+d]=0;s()[e>>2]=h,s()[h+12>>2]=h;var p=h+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return v?(f.cmd="spawnThread",postMessage(f,a)):Wt(f),0}function Ut(){if(v){var e=an();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Gt(){b||y||F("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Ht(e,t,n){if(!e)return A("pthread_join attempted on a null thread pointer!"),ze.ESRCH;if(v&&an()==e)return A("PThread "+e+" is attempting to join to itself!"),ze.EDEADLK;if(!v&&ln()==e)return A("Main thread "+e+" is attempting to join to itself!"),ze.EDEADLK;if(s()[e+12>>2]!==e)return A("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),ze.ESRCH;if(Atomics.load(i(),e+64>>2))return A("Attempted to join thread "+e+", which was already detached!"),ze.EINVAL;for(n&&Gt();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),v?postMessage({cmd:"cleanupThread",thread:e}):Ve(e),0}if(!n)return ze.EBUSY;Ut(),v||on(),nt(e+0,r,v?100:1)}}function jt(e,t){return Ht(e,t,!0)}function qt(e){if(v)return st(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ye(28),-1}v||Ge.initMainThreadBlock();var Kt,Xt,Yt,Zt=[null,Ze,kt,Ot,Lt,zt,qt],Jt={e:Ke,r:Xe,x:Je,b:Qe,y:et,j:tt,d:nt,c:Pe,f:Ue,p:rt,A:at,u:lt,q:dt,v:It,i:St,s:Nt,w:Rt,l:Ot,n:Lt,g:zt,o:Oe,a:R||h.wasmMemory,z:Pt,k:Bt,h:Vt,m:jt,t:qt},Qt=(De(),h.___wasm_call_ctors=function(){return(Qt=h.___wasm_call_ctors=h.asm.B).apply(null,arguments)}),en=(h._init=function(){return(h._init=h.asm.C).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.D).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.E).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.F).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.G).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.H).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.J).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.K).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.L).apply(null,arguments)},h._All=function(){return(h._All=h.asm.M).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.N).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.O).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.P).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.Q).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.R).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.S).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.T).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.U).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.V).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.W).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.X).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Y).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.Z).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm._).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.$).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.aa).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.ba).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.ca).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.da).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.ea).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.fa).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.ga).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.ha).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.ia).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.ja).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.ka).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.la).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.ma).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.na).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.oa).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.pa).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.qa).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.ra).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.sa).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.ta).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.ua).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.va).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.wa).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.xa).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.ya).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.za).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.Aa).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.Ba).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.Ca).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.Da).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.Ea).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.Fa).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Ga).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Ha).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Ia).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.Ja).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Ka).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.La).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.Ma).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Na).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.Oa).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Pa).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Qa).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.Ra).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.Sa).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Ta).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Ua).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Va).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.Wa).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.Xa).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.Ya).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Za).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm._a).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.$a).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.ab).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.bb).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.cb).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.db).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.eb).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.fb).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.gb).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.hb).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.ib).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.jb).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm.kb).apply(null,arguments)},h._malloc=function(){return(en=h._malloc=h.asm.lb).apply(null,arguments)}),tn=h._free=function(){return(tn=h._free=h.asm.mb).apply(null,arguments)},nn=h.___errno_location=function(){return(nn=h.___errno_location=h.asm.nb).apply(null,arguments)},rn=h._emscripten_get_global_libc=function(){return(rn=h._emscripten_get_global_libc=h.asm.ob).apply(null,arguments)},an=h._pthread_self=function(){return(an=h._pthread_self=h.asm.pb).apply(null,arguments)},sn=h.___pthread_tsd_run_dtors=function(){return(sn=h.___pthread_tsd_run_dtors=h.asm.qb).apply(null,arguments)},on=h._emscripten_main_thread_process_queued_calls=function(){return(on=h._emscripten_main_thread_process_queued_calls=h.asm.rb).apply(null,arguments)},un=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.sb).apply(null,arguments)},h._emscripten_register_main_browser_thread_id=function(){return(un=h._emscripten_register_main_browser_thread_id=h.asm.tb).apply(null,arguments)}),ln=h._emscripten_main_browser_thread_id=function(){return(ln=h._emscripten_main_browser_thread_id=h.asm.ub).apply(null,arguments)},cn=h.__emscripten_do_dispatch_to_thread=function(){return(cn=h.__emscripten_do_dispatch_to_thread=h.asm.vb).apply(null,arguments)},hn=h._emscripten_sync_run_in_main_thread_4=function(){return(hn=h._emscripten_sync_run_in_main_thread_4=h.asm.wb).apply(null,arguments)},dn=h._emscripten_run_in_main_runtime_thread_js=function(){return(dn=h._emscripten_run_in_main_runtime_thread_js=h.asm.xb).apply(null,arguments)},pn=h.__emscripten_call_on_thread=function(){return(pn=h.__emscripten_call_on_thread=h.asm.yb).apply(null,arguments)},fn=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.zb).apply(null,arguments)},h.__emscripten_thread_init=function(){return(fn=h.__emscripten_thread_init=h.asm.Ab).apply(null,arguments)}),mn=h.stackSave=function(){return(mn=h.stackSave=h.asm.Bb).apply(null,arguments)},gn=h.stackRestore=function(){return(gn=h.stackRestore=h.asm.Cb).apply(null,arguments)},yn=h.stackAlloc=function(){return(yn=h.stackAlloc=h.asm.Db).apply(null,arguments)},bn=h._emscripten_stack_set_limits=function(){return(bn=h._emscripten_stack_set_limits=h.asm.Eb).apply(null,arguments)},xn=h._memalign=function(){return(xn=h._memalign=h.asm.Fb).apply(null,arguments)},vn=h.__emscripten_allow_main_runtime_queued_calls=10656,wn=h.__emscripten_main_thread_futex=12292;function kn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function In(e){if(e=e||f,!(ve>0)){if(v)return u(h),fe(),void postMessage({cmd:"loaded"});pe(),ve>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Kt||(Kt=!0,h.calledRun=!0,q||(fe(),me(),u(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),ye()))}}function Sn(e,t){if(!t||!B||0!==e){if(!t&&v)throw postMessage({cmd:"exitProcess",returnCode:e}),new kn(e);B||(Ge.terminateAllThreads(),ge(),h.onExit&&h.onExit(e),q=!0),m(e,new kn(e))}}if(h.cwrap=Z,h.PThread=Ge,h.PThread=Ge,h.wasmMemory=R,h.ExitStatus=kn,ke=function e(){Kt||In(),Kt||(ke=e)},h.run=In,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(v&&(B=!1,Ge.initWorker()),In(),c&&(Xt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!c.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!c.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Yt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Yt=e}if(Xt){var Nn=Yt._dispose;Yt._dispose=function(){Nn(),Xt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Xt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModuleThreadedSimd=s)}}),W=h({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.13.0_@tensorflow+tfjs-core@3.13.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(t,n){var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||e,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,h=!1,d=!1;l="object"==typeof window,c="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!l&&!h&&!c;var p,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}h?(b=c?O().dirname(b)+"/":"//",p=function(e,t){return g||(g=M()),y||(y=O()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ze))throw e})),process.on("unhandledRejection",se),s.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(p=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=s.print||void 0,I=s.printErr||void 0;for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(v=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&se("no native wasm support detected");var S=!1;function N(e,t){e||se("Assertion failed: "+t)}function T(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function E(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=Le(n),n)}return t},array:function(e){var t=Le(e.length);return B(e,t),t}},i=T(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Me()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?L(h):"boolean"===t?Boolean(h):h,0!==u&&Oe(u),d}function C(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return E(e,t,n,arguments)}}var _,$,A,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function L(e,t){return e?D(A,e,t):""}function z(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return z(e,A,t,n)}function B(e,t){$.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function V(e){_=e,s.HEAP8=$=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=F=new Int32Array(e),s.HEAPU8=A=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var U,G=[],H=[],j=[],q=[];function K(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)J(s.preRun.shift());me(G)}function X(){me(H)}function Y(){me(j)}function Z(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Q(s.postRun.shift());me(q)}function J(e){G.unshift(e)}function Q(e){q.unshift(e)}H.push({func:function(){Re()}});var ee=0,te=null,ne=null;function re(e){ee++,s.monitorRunDependencies&&s.monitorRunDependencies(ee)}function ae(e){if(ee--,s.monitorRunDependencies&&s.monitorRunDependencies(ee),0==ee&&(null!==te&&(clearInterval(te),te=null),ne)){var t=ne;ne=null,t()}}function se(e){s.onAbort&&s.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function ie(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var oe="data:application/octet-stream;base64,";function ue(e){return ie(e,oe)}var le="file://";function ce(e){return ie(e,le)}var he="tfjs-backend-wasm.wasm";function de(e){try{if(e==he&&v)return new Uint8Array(v);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){se(e)}}function pe(){if(!v&&(l||c)){if("function"==typeof fetch&&!ce(he))return fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return de(he)}));if(f)return new Promise((function(e,t){f(he,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return de(he)}))}function fe(){var e={a:Fe};function t(e,t){var n=e.exports;s.asm=n,V((w=s.asm.j).buffer),U=s.asm.r,ae()}function r(e){t(e.instance)}function a(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),se(e)}))}if(re(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||ue(he)||ce(he)||"function"!=typeof fetch?a(r):fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n),{}}function me(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function ge(){se()}function ye(e,t,n){A.copyWithin(e,t,t+n)}function be(){return A.length}function xe(e){try{return w.grow(e-_.byteLength+65535>>>16),V(w.buffer),1}catch(e){}}function ve(e){var t=be(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),xe(Math.min(n,W(Math.max(e,a),65536))))return!0}return!1}ue(he)||(he=x(he));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,F[we.varargs-4>>2]},getStr:function(e){return L(e)},get64:function(e,t){return e}};function ke(e){return 0}function Ie(e,t,n,r,a){}function Se(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)we.printChar(e,A[i+u]);a+=o}return F[r>>2]=a,0}function Ne(){return 6}function Te(){return 28}function Ee(e){return F[De()>>2]=e,e}function Ce(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ee(28),-1}var _e,$e,Ae,Fe={a:ge,d:ye,e:ve,f:ke,c:Ie,b:Se,h:Ne,g:Te,i:Ce},Re=(fe(),s.___wasm_call_ctors=function(){return(Re=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),De=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.Fa).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.Ga).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.Ha).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Ia).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ja).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ka).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.La).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ma).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Na).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Oa).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Pa).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Qa).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ra).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Sa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Ta).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ua).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Va).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Wa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Xa).apply(null,arguments)},s.___errno_location=function(){return(De=s.___errno_location=s.asm.Ya).apply(null,arguments)}),Me=s.stackSave=function(){return(Me=s.stackSave=s.asm.Za).apply(null,arguments)},Oe=s.stackRestore=function(){return(Oe=s.stackRestore=s.asm._a).apply(null,arguments)},Le=s.stackAlloc=function(){return(Le=s.stackAlloc=s.asm.$a).apply(null,arguments)};function ze(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Pe(e){function n(){_e||(_e=!0,s.calledRun=!0,S||(X(),Y(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),Z()))}e=e||u,ee>0||(K(),ee>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=C,ne=function e(){_e||Pe(),_e||(ne=e)},s.run=Pe,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(Pe(),a&&($e={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Ae=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ae=WasmBackendModuleThreadedSimd}if($e){var Be=Ae._dispose;Ae._dispose=function(){Be(),$e.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),$e.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof t&&"object"==typeof n?n.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof t&&(t.WasmBackendModule=s)}}),V=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},U=class{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r,a){return G("move")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}};function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,X(e,t,n)}function j(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,X(e,n,r),X(t,n,r)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function X(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Y(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Z(e,t){const n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t,n=""){Q(se(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function te(e){Q(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ne(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ve(e)&&!n)for(let r=0;r<e.length;++r)ne(e[r],t,n);else t.push(e);return t}function re(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ae(e){return 0===e.length}function se(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ie(e){return e%1==0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ue(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function le(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H(t),t}function ce(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function he(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function de(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function pe(e,t){const n=t.length;return Q((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Q(e.every((e=>ie(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function fe(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pe(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ye(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function be(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function xe(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ve(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function we(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ke(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ie(e){return"string"==typeof e||e instanceof String}function Se(e){return"boolean"==typeof e}function Ne(e){return"number"==typeof e}function Te(e){return Array.isArray(e)?Te(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ne(e)?"float32":Ie(e)?"string":Se(e)?"bool":"float32"}function Ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ce(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $e(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=$e(e+t*o,i,n,r)}return a}function Ae(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $e(0,e,t,n)}function Fe(e,t){const n=Re(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function De(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ae(e,new Float32Array(n));if("int32"===t)return Ae(e,new Int32Array(n));if("bool"===t)return Ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Me(e){e.forEach((t=>{Q(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Le(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function ze(e){return e&&e.then&&"function"==typeof e.then}var Pe="tfjsflags",Be=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=We,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&!Ve().getBool("IS_TEST")&&Ve().getBool("PROD"),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];!Ve().getBool("IS_TEST")&&Ve().getBool("PROD"),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ze(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Pe in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}};function We(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ve(){return Ge}var Ue,Ge=null;function He(){if(null==Ue){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ue=e}return Ue}function je(e,t){const n=function(){const e=He();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var qe="Abs",Ke="Acos",Xe="Acosh",Ye="Add",Ze="AddN",Je="All",Qe="Any",et="ArgMax",tt="ArgMin",nt="Asin",rt="Asinh",at="Atan",st="Atanh",it="Atan2",ot="AvgPool",ut="AvgPoolGrad",lt="AvgPool3D",ct="AvgPool3DGrad",ht="BatchMatMul",dt="BatchToSpaceND",pt="Bincount",ft="BroadcastTo",mt="BroadcastArgs",gt="Cast",yt="Ceil",bt="ClipByValue",xt="Complex",vt="ComplexAbs",wt="Concat",kt="Conv2D",It="Conv2DBackpropFilter",St="Conv2DBackpropInput",Nt="Conv3D",Tt="Conv3DBackpropFilterV2",Et="Conv3DBackpropInputV2",Ct="Cos",_t="Cosh",$t="Cumsum",At="CropAndResize",Ft="DenseBincount",Rt="DepthToSpace",Dt="DepthwiseConv2dNative",Mt="DepthwiseConv2dNativeBackpropFilter",Ot="DepthwiseConv2dNativeBackpropInput",Lt="Diag",zt="Dilation2D",Pt="Dilation2DBackpropInput",Bt="Dilation2DBackpropFilter",Wt="RealDiv",Vt="Einsum",Ut="Elu",Gt="EluGrad",Ht="Erf",jt="Equal",qt="Exp",Kt="ExpandDims",Xt="Expm1",Yt="FFT",Zt="Fill",Jt="FlipLeftRight",Qt="Floor",en="FloorDiv",tn="FusedBatchNorm",nn="GatherV2",rn="GatherNd",an="Greater",sn="GreaterEqual",on="Identity",un="IFFT",ln="Imag",cn="IsFinite",hn="IsInf",dn="IsNan",pn="LeakyRelu",fn="Less",mn="LessEqual",gn="LinSpace",yn="Log",bn="Log1p",xn="LogicalAnd",vn="LogicalNot",wn="LogicalOr",kn="LogSoftmax",In="LRN",Sn="LRNGrad",Nn="Max",Tn="Maximum",En="MaxPool",Cn="MaxPoolGrad",_n="MaxPool3D",$n="MaxPool3DGrad",An="MaxPoolWithArgmax",Fn="Mean",Rn="Min",Dn="Minimum",Mn="MirrorPad",On="Mod",Ln="Multinomial",zn="Multiply",Pn="Neg",Bn="NotEqual",Wn="NonMaxSuppressionV3",Vn="NonMaxSuppressionV4",Un="NonMaxSuppressionV5",Gn="OnesLike",Hn="OneHot",jn="Pack",qn="PadV2",Kn="Pool",Xn="Pow",Yn="Prelu",Zn="Prod",Jn="Range",Qn="Real",er="Reciprocal",tr="Relu",nr="Reshape",rr="ResizeNearestNeighbor",ar="ResizeNearestNeighborGrad",sr="ResizeBilinear",ir="ResizeBilinearGrad",or="Relu6",ur="Reverse",lr="Round",cr="Rsqrt",hr="ScatterNd",dr="Select",pr="Selu",fr="Slice",mr="Sin",gr="Sinh",yr="Sign",br="Sigmoid",xr="Softplus",vr="Sqrt",wr="Sum",kr="SpaceToBatchND",Ir="SplitV",Sr="Softmax",Nr="SparseFillEmptyRows",Tr="SparseReshape",Er="SparseSegmentMean",Cr="SparseSegmentSum",_r="SparseToDense",$r="SquaredDifference",Ar="Square",Fr="StridedSlice",Rr="StringNGrams",Dr="StringSplit",Mr="StringToHashBucketFast",Or="Sub",Lr="Tan",zr="Tanh",Pr="Tile",Br="TopK",Wr="Transform",Vr="Transpose",Ur="Unique",Gr="Unpack",Hr="UnsortedSegmentSum",jr="ZerosLike",qr="Step",Kr="FromPixels",Xr="RotateWithOffset",Yr="_FusedMatMul",Zr="FusedConv2D",Jr="FusedDepthwiseConv2D";function Qr(...e){!Ve().getBool("IS_TEST")&&Ve().getBool("PROD")}function ea(...e){!Ve().getBool("IS_TEST")&&Ve().getBool("PROD")}var ta=je("kernelRegistry",(()=>new Map)),na=je("gradRegistry",(()=>new Map));function ra(e,t){const n=ha(e,t);return ta.get(n)}function aa(e){return na.get(e)}function sa(e){const t=ta.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ia(e){const{kernelName:t,backendName:n}=e,r=ha(t,n);ta.has(r)&&Qr(),ta.set(r,e)}function oa(e){const{kernelName:t}=e;na.has(t)&&Ve().getBool("DEBUG")&&Qr(),na.set(t,e)}function ua(e,t){const n=ha(e,t);if(!ta.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ta.delete(n)}function la(e){if(!na.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);na.delete(e)}function ca(e,t){sa(e).forEach((e=>{ia(Object.assign({},e,{backendName:t}))}))}function ha(e,t){return`${t}_${e}`}var da={};d(da,{arraysEqual:()=>se,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>Me,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>ke,bytesPerElement:()=>we,checkConversionForErrors:()=>ye,clamp:()=>q,computeStrides:()=>_e,createScalarValue:()=>Ea,createShuffledIndices:()=>le,decodeString:()=>Fa,distSquared:()=>J,encodeString:()=>Aa,fetch:()=>$a,fingerPrint64:()=>Ta,flatten:()=>ne,getArrayFromDType:()=>ge,getTypedArrayFromDType:()=>me,hasEncodingLoss:()=>xe,hexToLong:()=>ma,indexToLoc:()=>Le,inferDtype:()=>Te,inferFromImplicitShape:()=>de,isBoolean:()=>Se,isFunction:()=>Ee,isInt:()=>ie,isNumber:()=>Ne,isPromise:()=>ze,isScalarShape:()=>ae,isString:()=>Ie,isTypedArray:()=>ve,isValidDtype:()=>be,locToIndex:()=>Oe,makeOnesTypedArray:()=>Fe,makeZerosNestedTypedArray:()=>De,makeZerosTypedArray:()=>Re,nearestDivisor:()=>Ce,nearestLargerEven:()=>K,now:()=>_a,parseAxisParam:()=>pe,randUniform:()=>Z,repeatedTry:()=>he,rightPad:()=>ce,shuffle:()=>H,shuffleCombo:()=>j,sizeFromShape:()=>re,sizeToSquarishShape:()=>ue,squeezeShape:()=>fe,sum:()=>Y,swap:()=>X,tanh:()=>oe,toNestedArray:()=>Ae,toTypedArray:()=>Ca});var pa=p(f()),fa=pa.default||pa;function ma(e){return fa.fromString(e,!0,16)}var ga=ma("c3a5c85c97cb3127"),ya=ma("b492b66fbe98f273"),ba=ma("9ae16a3b2f90404f");function xa(e){return e.xor(e.shru(47))}function va(e,t,n){const r=e.slice(t,t+n);return fa.fromBytes(Array.from(r),!0,!0)}function wa(e,t){return va(e,t,8)}function ka(e,t){return va(e,t,4)}function Ia(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Sa(e,t,n=ma("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Na(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ia(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Ia(a,44)),[a.add(r),s.add(i)]}(wa(e,t),wa(e,t+8),wa(e,t+16),wa(e,t+24),n,r)}function Ta(e,t=e.length){const n=fa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ba.add(2*t),r=wa(e,0).add(ba),a=wa(e,t-8);return Sa(Ia(a,37).mul(n).add(r),Ia(r,25).add(a).mul(n),n)}if(t>=4){const n=ba.add(2*t);return Sa(ka(e,0).shl(3).add(t),ka(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return xa(ba.mul(n).xor(ga.mul(r))).mul(ba)}return ba}(e,t):function(e,t=e.length){const n=ba.add(2*t),r=wa(e,0).mul(ya),a=wa(e,8),s=wa(e,t-8).mul(n),i=wa(e,t-16).mul(ba);return Sa(Ia(r.add(a),43).add(Ia(s,30)).add(i),r.add(Ia(a.add(ba),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ba.add(2*t),r=wa(e,0).mul(ba),a=wa(e,8),s=wa(e,t-8).mul(n),i=wa(e,t-16).mul(ba),o=Ia(r.add(a),43).add(Ia(s,30)).add(i),u=Sa(o,r.add(Ia(a.add(ba),18)).add(s),n),l=wa(e,16).mul(n),c=wa(e,24),h=o.add(wa(e,t-32)).mul(n),d=u.add(wa(e,t-24)).mul(n);return Sa(Ia(l.add(c),43).add(Ia(h,30)).add(d),l.add(Ia(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(ya).add(113),s=xa(a.mul(ba).add(113)).mul(ba),i=[fa.UZERO,fa.UZERO],o=[fa.UZERO,fa.UZERO];r=r.mul(ba).add(wa(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ia(r.add(a).add(i[0]).add(wa(e,u+8)),37).mul(ya),a=Ia(a.add(i[1]).add(wa(e,u+48)),42).mul(ya),r=r.xor(o[1]),a=a.add(i[0]).add(wa(e,u+40)),s=Ia(s.add(o[0]),33).mul(ya),i=Na(e,u,i[1].mul(ya),r.add(o[0])),o=Na(e,u+32,s.add(o[1]),a.add(wa(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=ya.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ia(r.add(a).add(i[0]).add(wa(e,u+8)),37).mul(h),a=Ia(a.add(i[1]).add(wa(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(wa(e,u+40))),s=Ia(s.add(o[0]),33).mul(h),i=Na(e,u,i[1].mul(h),r.add(o[0])),o=Na(e,u+32,s.add(o[1]),a.add(wa(e,u+16))),[s,r]=[r,s],Sa(Sa(i[0],o[0],h).add(xa(a).mul(ga)).add(s),Sa(i[1],o[1],h).add(r),h)}function Ea(e,t){return"string"===t?Aa(e):Ca([e],t)}function Ca(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ne(e)),Ve().getBool("DEBUG")&&ye(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function _a(){return Ve().platform.now()}function $a(e,t){return Ve().platform.fetch(e,t)}function Aa(e,t="utf-8"){return t=t||"utf-8",Ve().platform.encode(e,t)}function Fa(e,t="utf-8"){return t=t||"utf-8",Ve().platform.decode(e,t)}function Ra(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const n=e[t];if(isNaN(n)||!isFinite(n))return!0}return!1}var Da=class{logKernelProfile(e,t,n,r,a,s){"number"==typeof r?ce(`${r}ms`,9):r.error,ce(e,25),t.rank,t.size,ce(t.shape.toString(),14);let i="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;i+=`${e}: ${a}D ${a>0?r:""} `}}}};function Ma(e,t,n,r){const a=_e(t),s=function(e,t,n,r){const a=re(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Pa(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Oa(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=za(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Oa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ie(e)?`'${e}'`:"bool"===n?La(e):parseFloat(e.toFixed(7)).toString(),ce(r,t)}function La(e){return 0===e?"false":"true"}function za(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[Oa(Pa(e)[0],0,n)]}return"bool"===n?[La(e[0])]:[e[0].toString()]}if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Pa(r),s=Pa(s)),["["+r.map(((e,t)=>Oa(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Oa(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Pa(e):Array.from(e)).map(((e,t)=>Oa(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;d.push(...za(e.slice(r,s),l,n,c,a,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;d.push(...za(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;d.push(...za(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Pa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ba=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=re(e),null!=n){const e=n.length;Q(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ge(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),Q(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Wa().makeTensor(this.values,this.shape,this.dtype)}},Wa=null,Va=null;var Ua=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=re(e),this.strides=_e(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Va.buffer(this.shape,this.dtype,e)}bufferSync(){return Va.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Wa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Wa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Wa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Fa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Wa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Wa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Va.print(this,e)}clone(){return this.throwIfDisposed(),Va.clone(this)}toString(e=!1){return Ma(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Va.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Wa().makeVariable(this,e,t,n)}};function Ga(){return je("Tensor",(()=>Ua))}Object.defineProperty(Ua,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ga();var Ha=class extends Ua{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Wa().disposeTensor(this),this.dataId=e.dataId,Wa().incRef(this,null)}dispose(){Wa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ha,Symbol.hasInstance,{value:e=>e instanceof Ua&&null!=e.assign&&e.assign instanceof Function});var ja,qa,Ka,Xa,Ya,Za,Ja,Qa,es,ts,ns={};d(ns,{assertTypesMatch:()=>os,getTensorsInContainer:()=>ls,isTensorInList:()=>us,makeTypesMatch:()=>is}),(qa=ja||(ja={})).R0="R0",qa.R1="R1",qa.R2="R2",qa.R3="R3",qa.R4="R4",qa.R5="R5",qa.R6="R6",(Xa=Ka||(Ka={})).float32="float32",Xa.int32="int32",Xa.bool="int32",Xa.complex64="complex64",(Za=Ya||(Ya={})).float32="float32",Za.int32="int32",Za.bool="bool",Za.complex64="complex64",(Qa=Ja||(Ja={})).float32="float32",Qa.int32="float32",Qa.bool="float32",Qa.complex64="complex64",(ts=es||(es={})).float32="complex64",ts.int32="complex64",ts.bool="complex64",ts.complex64="complex64";var rs={float32:Ja,int32:Ka,bool:Ya,complex64:es};function as(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return rs[e][t]}function ss(e){return as(e,"int32")}function is(e,t){if(e.dtype===t.dtype)return[e,t];const n=as(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function os(e,t){Q(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function us(e,t){return t.some((t=>t.id===e.id))}function ls(e){const t=[];return cs(e,t,new Set),t}function cs(e,t,n){if(null==e)return;if(e instanceof Ua)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),cs(r,t,n))}}function hs(e){return null!=e.kernelName}var ds=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},ps=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ds}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Qr(),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Da)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=_a();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:_a()-i})}if(Ve().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const t=r[e];t.data().then((e=>{Ra(e,t.dtype)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){sa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){sa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Qr(),Qr(e.stack||e.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return Qr(),Qr(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ps.nextTensorId++}nextVariableId(){return ps.nextVariableId++}clone(e){const t=ms.runKernel(on,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ms.runKernel(gt,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=ra(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=hs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(hs(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=ra(t,this.backendName);Q(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=hs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=aa(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(Q(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Ie(e[0])&&(a=e.map((e=>Aa(e))));const s=r.write(a,t,n),i=new Ua(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=ke(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ua(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ha(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*we(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ha||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*we(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=aa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Re(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ls(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Q(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Q(a instanceof Ua,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Fe(re(e),"float32");return ms.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!se(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),gs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Q(Ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Q(t.every((e=>e instanceof Ua)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Q(n.value instanceof Ua,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Q(Ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Q(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Q(s.every((e=>e instanceof Ua)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=_a(),n=await this.backend.time(e);return n.wallMs=_a()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ds;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function fs(){const e=He();if(null==e._tfengine){const t=new Be(e);e._tfengine=new ps(t)}var t;return t=e._tfengine.ENV,Ge=t,Wa=()=>e._tfengine,e._tfengine}ps.nextTensorId=0,ps.nextVariableId=0;var ms=fs();function gs(e,t){const n={a:e,b:t};return ms.runKernel(Ye,n)}var ys,bs={};function xs(e){ys=e}function vs(e){if(void 0!==ys)return ys;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ws(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}d(bs,{isBrowser:()=>ws,isMobile:()=>vs,mockIsMobile:()=>xs});var ks=Ve();function Is(e,t){let n=e;if(ve(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ve(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ve().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ss(e,r,[]),r}function Ss(e,t,n){if(n=n||[],!Array.isArray(e)&&!ve(e))return void Q(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Q(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Q(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ss(e[t],r,n.concat(t))}function Ns(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ts(e,t,n,r="numeric"){if(e instanceof Ua)return Ns(r,e.dtype,t,n),e;let a=Te(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ns(r,a,t,n),null==e||!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Is(e,a);ve(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Ca(e,a):ne(e,[],!0);return ms.makeTensor(i,s,a)}function Es(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ts(e,`${t}[${a}]`,n,r)))}ks.registerFlag("DEBUG",(()=>!1),(e=>{})),ks.registerFlag("IS_BROWSER",(()=>ws())),ks.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ks.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ks.registerFlag("PROD",(()=>!1)),ks.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ks.getBool("DEBUG"))),ks.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ks.registerFlag("IS_TEST",(()=>!1)),ks.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ks.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var Cs="__op";function _s(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Cs;const a=(...e)=>{ms.startScope(n);try{const t=r(...e);return ze(t),ms.endScope(t),t}catch(e){throw ms.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var $s=_s({complex_:function(e,t){const n=Ts(e,"real","complex"),r=Ts(t,"imag","complex");ee(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ms.runKernel(xt,a)}});function As(e,t,n,r){if(null==r&&(r=Te(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ve(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Me(t);const e=re(t),r=re(n);Q(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==re(t.slice(e));Q(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ve(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ca(e,r):ne(e,[],!0),ms.makeTensor(e,t,r)}function Fs(e,t,n){return As(e,t,Is(e,n),n)}var Rs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ds(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Os(await Promise.all(r)),specs:n}}function Ms(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=re(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Rs[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Gs()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=re(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Rs[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Fs(e,o,"float32"),i=Fs(r,o,"float32");n[t]=$s(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Fs(l,o,i))}return n}function Os(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Ls="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function zs(e){return Ls?Buffer.byteLength(e):new Blob([e]).size}function Ps(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Bs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ws(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Vs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Us(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:zs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:zs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Gs(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Hs=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static registerSaveRouter(e){Hs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Hs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Hs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Hs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Hs.getInstance().loadRouters:Hs.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}},js=e=>Hs.registerSaveRouter(e),qs=e=>Hs.registerLoadRouter(e),Ks=e=>Hs.getSaveHandlers(e),Xs=(e,t)=>Hs.getLoadHandlers(e,t),Ys="tensorflowjs",Zs="models_store",Js="model_info_store";function Qs(){if(!Ve().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ei(e){const t=e.result;t.createObjectStore(Zs,{keyPath:"modelPath"}),t.createObjectStore(Js,{keyPath:"modelPath"})}var ti=class{constructor(e){if(this.indexedDB=Qs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Zs,"readonly"),r=t.objectStore(Zs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Us(t),s=a.transaction(Js,"readwrite");let i=s.objectStore(Js);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Zs,"readwrite");const o=u.objectStore(Zs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Js);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ti.URL_SCHEME="indexeddb://";var ni=e=>{return Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ti.URL_SCHEME)?(t=e.slice(ti.URL_SCHEME.length),new ti(t)):null;var t};Hs.registerSaveRouter(ni),Hs.registerLoadRouter(ni);var ri="/",ai="tensorflowjs_models",si="info",ii="model_topology",oi="weight_specs",ui="weight_data",li="model_metadata";function ci(e){return{info:[ai,e,si].join(ri),topology:[ai,e,ii].join(ri),weightSpecs:[ai,e,oi].join(ri),weightData:[ai,e,ui].join(ri),modelMetadata:[ai,e,li].join(ri)}}function hi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function di(e){const t=e.split(ri);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ri)}var pi=class{constructor(e){if(!Ve().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ci(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Us(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ls)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw hi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ls){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};pi.URL_SCHEME="localstorage://";var fi=e=>{return Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pi.URL_SCHEME)?(t=e.slice(pi.URL_SCHEME.length),new pi(t)):null;var t};Hs.registerSaveRouter(fi),Hs.registerLoadRouter(fi);var mi="://",gi=class{constructor(){this.managers={}}static getInstance(){return null==gi.instance&&(gi.instance=new gi),gi.instance}static registerManager(e,t){Q(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mi)&&(e=e.slice(0,e.indexOf(mi))),Q(e.length>0,(()=>"scheme must not be an empty string."));const n=gi.getInstance();Q(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function yi(e){if(-1===e.indexOf(mi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gi.getSchemes().join(",")}`);return{scheme:e.split(mi)[0],path:e.split(mi)[1]}}async function bi(e,t,n=!1){Q(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Hs.getLoadHandlers(e);Q(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Q(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Hs.getSaveHandlers(t);Q(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Q(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=yi(e).scheme,u=yi(e).path,l=o===yi(e).scheme,c=await a.load();n&&l&&await gi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await gi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function xi(){const e=gi.getSchemes(),t={};for(const n of e){const e=await gi.getManager(n).listModels();for(const r in e){t[n+mi+r]=e[r]}}return t}async function vi(e){const t=yi(e);return gi.getManager(t.scheme).removeModel(t.path)}async function wi(e,t){return bi(e,t,!1)}async function ki(e,t){return bi(e,t,!0)}if(Ve().get("IS_BROWSER")){Ve().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{gi.registerManager(pi.URL_SCHEME,new class{constructor(){Q(Ve().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Q("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ai+ri,n=ri+si;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[di(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ci(e=(t=e).startsWith(pi.URL_SCHEME)?t.slice(pi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return hi(n),r}})}catch(e){}try{gi.registerManager(ti.URL_SCHEME,new class{constructor(){this.indexedDB=Qs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ys,1);n.onupgradeneeded=()=>ei(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Js,"readonly"),s=a.objectStore(Js).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ti.URL_SCHEME)?t.slice(ti.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ys,1);r.onupgradeneeded=()=>ei(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Js,"readwrite"),i=s.objectStore(Js),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(Zs,"readwrite");const r=u.objectStore(Zs).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Ii,Si=()=>m();function Ni(e,t="float32",n){return t=t||"float32",Me(e),new Ba(e,t,n)}Ve().get("IS_NODE")&&Ve().setPlatform("node",new class{constructor(){this.util=g(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ve().global.fetch?Ve().global.fetch(e,t):(null==Ii&&(Ii=Si()),Ii(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Ti=_s({cast_:function(e,t){const n=Ts(e,"x","cast");if(!be(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ms.runKernel(gt,r,a)}});var Ei=_s({clone_:function(e){const t={x:Ts(e,"x","clone","string_or_numeric")};return ms.runKernel(on,t)}});function Ci(e,t=!1){}fs(),Va={buffer:Ni,cast:Ti,clone:Ei,print:Ci};var _i={};d(_i,{browserFiles:()=>Fi,browserHTTPRequest:()=>Wi,concatenateArrayBuffers:()=>Ps,copyModel:()=>wi,decodeWeights:()=>Ms,encodeWeights:()=>Ds,fromMemory:()=>Ui,getLoadHandlers:()=>Xs,getModelArtifactsForJSON:()=>Vs,getModelArtifactsInfoForJSON:()=>Us,getSaveHandlers:()=>Ks,http:()=>Bi,isHTTPScheme:()=>zi,listModels:()=>xi,loadWeights:()=>Mi,moveModel:()=>ki,registerLoadRouter:()=>qs,registerSaveRouter:()=>js,removeModel:()=>vi,weightsLoaderFactory:()=>Oi,withSaveHandler:()=>Gi});function $i(e){return new Promise((e=>setTimeout(e))).then(e)}var Ai=class{constructor(e){if(!Ve().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ai.URL_SCHEME)&&(e=e.slice(Ai.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ws(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await $i((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await $i((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Us(e)}}}};Ai.URL_SCHEME="downloads://";function Fi(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Vs(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Ps(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Bs(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Bs(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Ri(e,t,n,r){var a,s,i;Q(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,Q((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),Q(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),Q(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((a=>(a.then((a=>{const s=n+ ++o/e.length*(r-n);return t(s),a})),a))))}async function Di(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ve().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ri(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ri(a,t.onProgress,.5,1)}async function Mi(e,t="",n,r){return Oi((e=>Di(e,{requestInit:r})))(e,t,n)}function Oi(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Rs[u]*re(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=Ms(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}Hs.registerSaveRouter((e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ai.URL_SCHEME)?function(e="model"){return new Ai(e)}(e.slice(Ai.URL_SCHEME.length)):null));var Li=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ve().platform.fetch,Q(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Q(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ws(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Us(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Vs(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[s,Ps(await Di(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function zi(e){return null!=e.match(Li.URL_SCHEME_REGEX)}Li.URL_SCHEME_REGEX=/^https?:\/\//;var Pi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>zi(e))):zi(e),n)return Bi(e,t)}return null};function Bi(e,t){return new Li(e,t)}function Wi(e,t){return Bi(e,t)}Hs.registerSaveRouter(Pi),Hs.registerLoadRouter(Pi);var Vi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Ui(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return new Vi(t?e:{modelTopology:e})}return new Vi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Gi(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var Hi={};d(Hi,{confusionMatrix:()=>Xi});var ji=_s({matMul_:function(e,t,n=!1,r=!1){let a=Ts(e,"a","matMul"),s=Ts(t,"b","matMul");[a,s]=is(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return ms.runKernel(ht,i,o)}});var qi=_s({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ts(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return ms.runKernel(Hn,a,s)}});var Ki=_s({transpose_:function(e,t){const n=Ts(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Q(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return ms.runKernel(Vr,r,a)}});var Xi=_s({confusionMatrix_:function(e,t,n){const r=Ts(e,"labels","confusionMatrix"),a=Ts(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Q(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Q(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Q(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Q(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=qi(Ti(r,"int32"),n),i=qi(Ti(a,"int32"),n),o=Ki(s),u=ji(o,i);return Ti(u,"int32")}}),Yi={};function Zi(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Ji(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Qi(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}d(Yi,{assertAndGetBroadcastShape:()=>Qi,getBroadcastDims:()=>Zi,getReductionAxes:()=>Ji});var eo,to={};function no(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Is(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function ro(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=ra(Kr,ms.backendName)){const n={pixels:e},r={numChannels:t};return ms.runKernel(Kr,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==eo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");eo=new OffscreenCanvas(1,1).getContext("2d")}else eo=document.createElement("canvas").getContext("2d");eo.canvas.width=u,eo.canvas.height=l,eo.drawImage(e,0,0,u,l),c=eo.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return no(h,[l,u,t],"int32")}function ao(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function so(e,t=3){let n=null;if(Ve().getBool("WRAP_TO_IMAGEBITMAP")&&ao(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ro(n,t)}async function io(e,t){let n=Ts(e,"img","toPixels");if(!(e instanceof Ua)){const e=n;n=Ti(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}d(to,{fromPixels:()=>oo,fromPixelsAsync:()=>so,toPixels:()=>io});var oo=_s({fromPixels_:ro}),uo={};function lo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===re(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[..._e(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}d(uo,{prepareAndValidate:()=>lo});var co={};function ho(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function po(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ho(n,t,e)}function fo(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:re(t.shape)/o,sliceSize:i,strides:[..._e(n.slice(0,a)),1],outputSize:re(n)}}d(co,{calculateShapes:()=>fo,validateInput:()=>po,validateUpdateShape:()=>ho});var mo={};d(mo,{assertParamsValid:()=>go,computeFlatOffset:()=>_o,computeOutShape:()=>bo,getNormalizedAxes:()=>ko,isSliceContinous:()=>Co,maskToAxes:()=>yo,parseSliceParams:()=>$o,sliceInfo:()=>Ao,startForAxis:()=>To,startIndicesWithElidedDims:()=>Io,stopForAxis:()=>Eo,stopIndicesWithElidedDims:()=>So,stridesForAxis:()=>No,stridesWithElidedDims:()=>xo});function go(e,t,n){const r=e.shape.length;Q(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Q(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Q(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function yo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function bo(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function xo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function vo(e,t,n){return n<=e?n:n-(t-1)}function wo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ko(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Io(i,u,l,r,e),h=So(o,u,l,a,e),d=xo(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=To(i,r,s,e,t,u),h[t]=Eo(o,a,s,e,t,u),d[t]=No(s,t,u);return{begin:c,end:h,strides:d}}function Io(e,t,n,r,a){const s=[...a],i=wo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=vo(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function So(e,t,n,r,a){const s=[...a],i=wo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=vo(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=q(0,s[e],a[e])}return s}function No(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function To(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=q(0,i,u-1),i}function Eo(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?q(0,i,u):q(-1,i,u-1),i}function Co(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function _o(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function $o(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{Q(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(Q(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Ao(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Fo(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=Fo(d.end[t],1,d.strides[t],r,a,s);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Fo(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Ro={};d(Ro,{Serializable:()=>Do,SerializationMap:()=>Mo,registerClass:()=>Oo});var Do=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Mo=class{constructor(){this.classNameMap={}}static getMap(){return null==Mo.instance&&(Mo.instance=new Mo),Mo.instance}static register(e){Mo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Oo(e){Q(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Q("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Q(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Mo.register(e)}var Lo={};d(Lo,{TEST_EPSILON_FLOAT16:()=>zo,encodeStrings:()=>Ko,expectArrayBuffersEqual:()=>qo,expectArraysClose:()=>Po,expectArraysEqual:()=>Uo,expectNumbersClose:()=>Go,expectPromiseToFail:()=>Vo,expectValuesInRange:()=>jo,testEpsilon:()=>Bo});var zo=.1;function Po(e,t,n){return null==n&&(n=Bo()),Wo(e,t,((e,t)=>Ho(e,t,n)))}function Bo(){return 32===ms.backend.floatPrecision()?.001:zo}function Wo(e,t,n){let r=!0;if((ve(e)||ve(t))&&(r=!1),ve(e)&&ve(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Is(e),r=Is(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=ve(e)?e:ne(e),s=ve(t)?t:ne(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Vo(e,t){e().then((()=>t.fail()),(()=>t()))}function Uo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ie(e)||Ie(e[0])||Ie(t)||Ie(t[0])?Wo(e,n,((e,t)=>e==t)):Wo(e,t,((e,t)=>Ho(e,t,0)))}function Go(e,t,n){if(null==n&&(n=Bo()),!Ho(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Ho(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function jo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function qo(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Ko(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ko(n):e[t]=Aa(n)}return e}var Xo="3.13.0";function Yo(){Ve().set("PROD",!0)}function Zo(){Ve().set("DEBUG",!0)}function Jo(){Ve().set("DEPRECATION_WARNINGS_ENABLED",!1)}function Qo(e){Ve().getBool("DEPRECATION_WARNINGS_ENABLED")}function eu(){ms.disposeVariables()}function tu(){return ms}function nu(){return ms.memory()}function ru(e){return ms.profile(e)}function au(e,t){return ms.tidy(e,t)}function su(e){ls(e).forEach((e=>e.dispose()))}function iu(e){return ms.keep(e)}function ou(e){return ms.time(e)}function uu(e){return ms.setBackend(e)}function lu(){return ms.ready()}function cu(){return ms.backendName}function hu(e){ms.removeBackend(e)}function du(e){return ms.findBackend(e)}function pu(e){return ms.findBackendFactory(e)}function fu(e,t,n=1){return ms.registerBackend(e,t,n)}function mu(){return ms.backend}function gu(e,t){Ve().setPlatform(e,t)}var yu=_s({add_:function(e,t){let n=Ts(e,"a","add"),r=Ts(t,"b","add");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(Ye,a)}});var bu=_s({floorDiv_:function(e,t){let n=Ts(e,"a","floorDiv"),r=Ts(t,"b","floorDiv");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(en,a)}});var xu=_s({div_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");if([n,r]=is(n,r),"int32"===n.dtype&&"int32"===r.dtype)return bu(n,r);const a={a:n,b:r};return ms.runKernel(Wt,a,{})}});var vu=_s({mul_:function(e,t){let n=Ts(e,"a","mul"),r=Ts(t,"b","mul");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(zn,a)}});var wu=_s({abs_:function(e){const t=Ts(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ms.runKernel(vt,e)}{const e={x:t};return ms.runKernel(qe,e)}}});var ku=_s({acos_:function(e){const t={x:Ts(e,"x","acos")};return ms.runKernel(Ke,t)}});var Iu=_s({acosh_:function(e){const t={x:Ts(e,"x","acosh")};return ms.runKernel(Xe,t)}});var Su=_s({addN_:function(e){Q(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Q(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ts(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ms.runKernel(Ze,r)}});var Nu=_s({all_:function(e,t=null,n=!1){const r={x:Ts(e,"x","all","bool")},a={axis:t,keepDims:n};return ms.runKernel(Je,r,a)}});var Tu=_s({any_:function(e,t=null,n=!1){const r={x:Ts(e,"x","any","bool")},a={axis:t,keepDims:n};return ms.runKernel(Qe,r,a)}});var Eu=_s({argMax_:function(e,t=0){const n={x:Ts(e,"x","argMax")},r={axis:t};return ms.runKernel(et,n,r)}});var Cu=_s({argMin_:function(e,t=0){const n={x:Ts(e,"x","argMin")},r={axis:t};return ms.runKernel(tt,n,r)}});var _u=_s({asin_:function(e){const t={x:Ts(e,"x","asin")};return ms.runKernel(nt,t)}});var $u=_s({asinh_:function(e){const t={x:Ts(e,"x","asinh")};return ms.runKernel(rt,t)}});var Au=_s({atan_:function(e){const t={x:Ts(e,"x","atan")};return ms.runKernel(at,t)}});var Fu=_s({atan2_:function(e,t){let n=Ts(e,"a","atan2"),r=Ts(t,"b","atan2");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(it,a)}});var Ru=_s({atanh_:function(e){const t={x:Ts(e,"x","atanh")};return ms.runKernel(st,t)}});function Du(e,t,n,r,a="NHWC",s){return Lu(e,[...t,e[3]],n,s,r,null,null,ju(a))}function Mu(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Bu(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Lu(e,l,n,r,a,s,!1,i)}function Ou(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=Wu(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return zu(e,c,n,r,a,!1,h,s)}function Lu(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Bu(n),[y,b]=Bu(r),x=Vu(d,y),v=Vu(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Pu(e,t,n));const s=e[0],i=e[1],o=Uu((s-t+2*r)/n+1,a),u=Uu((i-t+2*r)/n+1,a);return[o,u]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Uu((t-s+d+p)/r+1,o),h=Uu((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,x,v,s,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function zu(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Wu(n),[v,w,k]=Wu(r),I=Vu(p,v),S=Vu(f,w),N=Vu(m,k),{padInfo:T,outDepth:E,outHeight:C,outWidth:_}=function(e,t,n,r,a,s,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Pu(e,t,r));const i=e[0],o=e[1],u=e[2],l=Uu((i-t+2*a)/r+1,s),c=Uu((o-t+2*a)/r+1,s),h=Uu((u-t+2*a)/r+1,s);return[l,c,h,n]}([t,n,r,1],o,1,a,e,c);d=s[0],p=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(d-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,y,b,x,I,S,N,o),$=s?g*d:g;let A;return"channelsFirst"===i?A=[u,$,E,C,_]:"channelsLast"===i&&(A=[u,E,C,_,$]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:C,outWidth:_,outChannels:$,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Pu(e,t,n,r=1){const a=Vu(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Bu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Wu(e){return"number"==typeof e?[e,e,e]:e}function Vu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Uu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Gu(e){const[t,n,r]=Bu(e);return 1===t&&1===n&&1===r}function Hu(e,t){return Gu(e)||Gu(t)}function ju(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function qu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Q(ie(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Q(ie(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Ku=_s({reshape_:function(e,t){const n={x:Ts(e,"x","reshape","string_or_numeric")},r={shape:t};return ms.runKernel(nr,n,r)}});var Xu=_s({avgPool_:function(e,t,n,r,a){const s=Ts(e,"x","avgPool","float32");Q(Hu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ku(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),qu("avgPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=ms.runKernel(ot,u,l);return c=Ti(c,s.dtype),o?Ku(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Yu=_s({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=Ts(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Q("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),qu("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=ms.runKernel(lt,l,c);return h=Ti(h,o.dtype),u?Ku(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Zu=_s({concat_:function(e,t=0){Q(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ei(n[0]);const r=n,a={axis:t};return ms.runKernel(wt,r,a)}});var Ju=_s({sigmoid_:function(e){const t={x:Ts(e,"x","sigmoid","float32")};return ms.runKernel(br,t)}});var Qu=_s({slice_:function(e,t,n){const r=Ts(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return ms.runKernel(fr,a,s)}});var el=_s({tanh_:function(e){const t={x:Ts(e,"x","tanh","float32")};return ms.runKernel(zr,t)}});var tl=_s({basicLSTMCell_:function(e,t,n,r,a,s){const i=Ts(e,"forgetBias","basicLSTMCell"),o=Ts(t,"lstmKernel","basicLSTMCell"),u=Ts(n,"lstmBias","basicLSTMCell"),l=Ts(r,"data","basicLSTMCell"),c=Ts(a,"c","basicLSTMCell"),h=Ts(s,"h","basicLSTMCell"),d=Zu([l,h],1),p=ji(d,o),f=yu(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Qu(f,[0,0],y),x=Qu(f,[0,g],y),v=Qu(f,[0,2*g],y),w=Qu(f,[0,3*g],y),k=yu(vu(Ju(b),el(x)),vu(c,Ju(yu(i,v))));return[k,vu(el(k),Ju(w))]}});var nl=_s({batchToSpaceND_:function(e,t,n){const r=Ts(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Q(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Q(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Q(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return ms.runKernel(dt,s,i)}});var rl=_s({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;null!=a&&(l=Ts(a,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),Q(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Q(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Q(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Ku(e,[1,1,1,e.size]):2===e.rank?Ku(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ku(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:s},f=ms.runKernel(tn,d,p);return Ku(f,i.shape)}});var al=_s({batchNorm2d_:function(e,t,n,r,a,s){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ts(a,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),Q(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),Q(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Q(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Q(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&Q(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),rl(i,o,u,c,l,s)}});var sl=_s({batchNorm3d_:function(e,t,n,r,a,s){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ts(a,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),Q(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),Q(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Q(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Q(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&Q(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),rl(i,o,u,c,l,s)}});var il=_s({batchNorm4d_:function(e,t,n,r,a,s){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),u=Ts(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ts(a,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),Q(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),Q(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Q(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Q(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&Q(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),rl(i,o,u,c,l,s)}});var ol=_s({bincount_:function(e,t,n){const r=Ts(e,"x","bincount"),a=Ts(t,"weights","bincount");Q("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return ms.runKernel(pt,s,i)}});var ul=_s({broadcastArgs_:function(e,t){const n=Ts(e,"s0","broadcastArgs","int32"),r=Ts(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return ms.runKernel(mt,a)}});var ll=_s({broadcastTo_:function(e,t){let n=Ts(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ku(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ei(n);const i={x:n},o={reps:s};return ms.runKernel(Pr,i,o)}});var cl=_s({ceil_:function(e){const t={x:Ts(e,"x","ceil","float32")};return ms.runKernel(yt,t)}});var hl=_s({clipByValue_:function(e,t,n){const r=Ts(e,"x","clipByValue");Q(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return ms.runKernel(bt,a,s)}});var dl=_s({concat1d_:function(e){return Zu(e,0)}});var pl=_s({concat2d_:function(e,t){return Zu(e,t)}});var fl=_s({concat3d_:function(e,t){return Zu(e,t)}});var ml=_s({concat4d_:function(e,t){return Zu(e,t)}});var gl=_s({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ts(e,"x","conv2d","float32"),u=Ts(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),qu("conv2d",r,i);const h="NHWC"===a?l.shape[3]:l.shape[1];Q(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),Q(Hu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=ms.runKernel(kt,d,p);return c?Ku(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var yl=_s({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=Ts(e,"x","conv1d"),u=Ts(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Ku(o,[1,o.shape[0],o.shape[1]])),Q(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Q(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),qu("conv1d",r,i),Q(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Q(Hu(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Q("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Ku(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Ku(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=gl(d,h,[1,n],r,"NHWC",[1,s],i);return Ku(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});var bl=_s({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Q(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),Q(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];Q(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Q(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),qu("conv2dDerInput",a,i);const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ms.runKernel(St,d,p);return l?Ku(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var xl=_s({conv2dTranspose_:function(e,t,n,r,a,s){const i=Ts(e,"x","conv2dTranspose"),o=Ts(t,"filter","conv2dTranspose");return bl(n,i,o,r,a,"NHWC",s)}});var vl=_s({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=Ts(e,"x","conv3d"),o=Ts(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Q(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Q(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Q(Hu(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Q("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},d=ms.runKernel(Nt,c,h);return l?Ku(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var wl=_s({conv3DBackpropInput_:function(e,t,n,r,a){Q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];Q(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Q(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Q(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Q(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Q(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},d=ms.runKernel(Et,c,h);return o?Ku(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var kl=_s({conv3dTranspose_:function(e,t,n,r,a){const s=Ts(e,"x","conv3dTranspose"),i=Ts(t,"filter","conv3dTranspose");return wl(n,s,i,r,a)}});var Il=_s({cos_:function(e){const t={x:Ts(e,"x","cos","float32")};return ms.runKernel(Ct,t)}});var Sl=_s({cosh_:function(e){const t={x:Ts(e,"x","cosh","float32")};return ms.runKernel(_t,t)}});var Nl=_s({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ts(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ms.runKernel($t,a,s)}});var Tl=_s({denseBincount_:function(e,t,n,r=!1){const a=Ts(e,"x","denseBincount"),s=Ts(t,"weights","denseBincount");Q("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Q(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return ms.runKernel(Ft,i,o)}});var El=_s({depthToSpace_:function(e,t,n="NHWC"){const r=Ts(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Q(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Q(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Q(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Q(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return ms.runKernel(Rt,o,u)}});var Cl=_s({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=Ts(e,"x","depthwiseConv2d","float32"),u=Ts(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),Q(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),qu("depthwiseConv2d",r,i);const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=ms.runKernel(Dt,h,d);return c?Ku(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var _l=_s({diag_:function(e){const t={x:Ts(e,"x","diag")};return ms.runKernel(Lt,t)}});var $l=_s({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=Ts(e,"x","dilation2d"),o=Ts(t,"filter","dilation2d");Q(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Q(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Q("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=ms.runKernel(zt,c,h);return l?Ku(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Al=_s({equal_:function(e,t){let n=Ts(e,"a","equal","string_or_numeric"),r=Ts(t,"b","equal","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(jt,a)}});var Fl=_s({where_:function(e,t,n){const r=Ts(t,"a","where"),a=Ts(n,"b","where"),s=Ts(e,"condition","where","bool"),i=Qi(Qi(s.shape,r.shape),a.shape),o={condition:ll(s,i),t:ll(r,i),e:ll(a,i)};return ms.runKernel(dr,o)}});var Rl=_s({zerosLike_:function(e){const t={x:Ts(e,"x","zerosLike")};return ms.runKernel(jr,t)}});var Dl=_s({divNoNan_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");[n,r]=is(n,r);const a=xu(n,r),s=Rl(a),i=Al(r,s);return Fl(i,s,a)}});var Ml=_s({dot_:function(e,t){const n=Ts(e,"t1","dot"),r=Ts(t,"t2","dot");Q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Q(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Ku(n,[1,-1]),t=Ku(r,[-1,1]),a=ji(e,t);return Ku(a,[])}if(1===n.rank&&2===r.rank){const e=Ku(n,[1,-1]),t=Ku(r,[r.shape[0],r.shape[1]]),a=ji(e,t);return Ku(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Ku(r,[-1,1]),t=ji(n,e);return Ku(t,[t.size])}{const e=Ku(r,[r.shape[0],r.shape[1]]);return ji(n,e)}}});var Ol=_s({einsum_:function(e,...t){const n=t.map(((e,t)=>Ts(e,`tensors${t}`,"einsum"))),r={equation:e};return ms.runKernel(Vt,n,r)}});var Ll=_s({elu_:function(e){const t={x:Ts(e,"x","elu","float32")};return ms.runKernel(Ut,t)}});var zl=_s({erf_:function(e){let t=Ts(e,"x","erf");Q("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ti(t,"float32"));const n={x:t};return ms.runKernel(Ht,n)}});var Pl=_s({exp_:function(e){const t={x:Ts(e,"x","exp")};return ms.runKernel(qt,t)}});var Bl=_s({expandDims_:function(e,t=0){const n=Ts(e,"x","expandDims","string_or_numeric");Q(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return ms.runKernel(Kt,r,a)}});var Wl=_s({expm1_:function(e){const t={x:Ts(e,"x","expm1")};return ms.runKernel(Xt,t)}});var Vl=_s({tile_:function(e,t){const n=Ts(e,"x","tile","string_or_numeric");Q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return ms.runKernel(Pr,r,a)}});var Ul=_s({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Ni([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Ku(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Vl(Bl(i,0),[n[0],1,1]);if(2===n.length)return Vl(Bl(Bl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Vl(Bl(Bl(Bl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Gl(e,t,n){const r={shape:e,value:t,dtype:n};return ms.runKernel(Zt,{},r)}var Hl=_s({floor_:function(e){const t={x:Ts(e,"x","floor","float32")};return ms.runKernel(Qt,t)}});var jl=_s({gather_:function(e,t,n=0,r=0){const a={x:Ts(e,"x","gather"),indices:Ts(t,"indices","gather","int32")},s={axis:n,batchDims:r};return ms.runKernel(nn,a,s)}});var ql=_s({greater_:function(e,t){let n=Ts(e,"a","greater","string_or_numeric"),r=Ts(t,"b","greater","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(an,a)}});var Kl=_s({greaterEqual_:function(e,t){let n=Ts(e,"a","greaterEqual","string_or_numeric"),r=Ts(t,"b","greaterEqual","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(sn,a)}});var Xl=_s({imag_:function(e){const t={input:Ts(e,"input","imag")};return ms.runKernel(ln,t)}});var Yl=_s({isFinite_:function(e){const t={x:Ts(e,"x","isFinite")};return ms.runKernel(cn,t)}});var Zl=_s({isInf_:function(e){const t={x:Ts(e,"x","isInf")};return ms.runKernel(hn,t)}});var Jl=_s({isNaN_:function(e){const t={x:Ts(e,"x","isNaN")};return ms.runKernel(dn,t)}});var Ql=_s({leakyRelu_:function(e,t=.2){const n={x:Ts(e,"x","leakyRelu")},r={alpha:t};return ms.runKernel(pn,n,r)}});var ec=_s({less_:function(e,t){let n=Ts(e,"a","less","string_or_numeric"),r=Ts(t,"b","less","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(fn,a)}});var tc=_s({lessEqual_:function(e,t){let n=Ts(e,"a","lessEqual","string_or_numeric"),r=Ts(t,"b","lessEqual","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(mn,a)}});function nc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ms.runKernel(gn,{},r)}var rc=_s({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Ts(e,"x","localResponseNormalization");Q(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Q(ie(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ku(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=ms.runKernel(In,u,l);return o?Ku(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var ac=_s({log_:function(e){const t={x:Ts(e,"x","log","float32")};return ms.runKernel(yn,t)}});var sc=_s({log1p_:function(e){const t={x:Ts(e,"x","log1p")};return ms.runKernel(bn,t)}});function ic(e){return Q(Ee(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ts(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ts(n,"dy","tf.grad"):null;return ms.tidy((()=>{const{value:t,grads:n}=ms.gradients((()=>e(r)),[r],a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),dc(n),n[0]}))}}function oc(e){return Q(Ee(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Q(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Es(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ts(n,"dy","tf.grads"):null;return ms.tidy((()=>{const{value:t,grads:n}=ms.gradients((()=>e(...r)),r,a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),dc(n),n}))}}function uc(e){return Q(Ee(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Q(t instanceof Ua,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Q(null==n||n instanceof Ua,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=ms.gradients((()=>e(t)),[t],n);return dc(r),{grad:r[0],value:a}}}function lc(e){return Q(Ee(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Q(Array.isArray(t)&&t.every((e=>e instanceof Ua)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Q(null==n||n instanceof Ua,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=ms.gradients((()=>e(...t)),t,n);return null!=n&&ee(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),dc(r.grads),r}}function cc(e,t){Q(Ee(e),(()=>"The f passed in variableGrads(f) must be a function")),Q(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ha)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ms.registeredVariables)t.push(ms.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;Q((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=ms.gradients(e,t,null,!0);Q(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Q(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function hc(e){return ms.customGrad(e)}function dc(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var pc=_s({neg_:function(e){const t={x:Ts(e,"x","neg")};return ms.runKernel(Pn,t)}});var fc=_s({softplus_:function(e){const t={x:Ts(e,"x","softplus")};return ms.runKernel(xr,t)}});var mc=_s({logSigmoid_:function(e){const t=Ts(e,"x","logSigmoid");return hc((e=>({value:pc(fc(pc(e))),gradFunc:t=>vu(t,Ju(pc(e)))})))(t)}});var gc=_s({max_:function(e,t=null,n=!1){const r={x:Ts(e,"x","max")},a={reductionIndices:t,keepDims:n};return ms.runKernel(Nn,r,a)}});var yc=_s({sub_:function(e,t){let n=Ts(e,"a","sub"),r=Ts(t,"b","sub");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(Or,a)}});var bc=_s({sum_:function(e,t=null,n=!1){let r=Ts(e,"x","sum");"bool"===r.dtype&&(r=Ti(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ms.runKernel(wr,a,s)}});var xc=_s({logSoftmax_:function(e,t=-1){const n=Ts(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return hc(((e,n)=>{const r=gc(e,t,!0),a=yc(e,r),s=yc(Ti(a,"float32"),ac(bc(Pl(a),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,a=Pl(r);return yc(e,vu(bc(e,t,!0),a))}}}))(n)}});function vc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function wc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function kc(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Ic(e,t){return wc(e,t.map((e=>1)),t)}function Sc(e,t,n){Q(vc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Nc(e,t){if(vc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Tc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ec(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Cc=_s({logSumExp_:function(e,t=null,n=!1){const r=Ts(e,"x","logSumExp"),a=pe(t,r.shape),s=gc(r,a,!0),i=yc(r,s),o=Pl(i),u=bc(o,a),l=ac(u),c=yu(Ku(s,l.shape),l);if(n){const e=Ic(c.shape,a);return Ku(c,e)}return c}});var _c=_s({logicalAnd_:function(e,t){const n=Ts(e,"a","logicalAnd","bool"),r=Ts(t,"b","logicalAnd","bool");Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(xn,a)}});var $c=_s({logicalNot_:function(e){const t={x:Ts(e,"x","logicalNot","bool")};return ms.runKernel(vn,t)}});var Ac=_s({logicalOr_:function(e,t){const n=Ts(e,"a","logicalOr","bool"),r=Ts(t,"b","logicalOr","bool");Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(wn,a)}});var Fc=_s({logicalXor_:function(e,t){const n=Ts(e,"a","logicalXor","bool"),r=Ts(t,"b","logicalXor","bool");return Qi(n.shape,r.shape),_c(Ac(e,t),$c(_c(e,t)))}});var Rc=_s({maxPool_:function(e,t,n,r,a){const s=Ts(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Ku(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Q(Hu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),qu("maxPool",r,a);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=ms.runKernel(En,u,l);return o?Ku(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Dc=_s({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=Ts(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Q("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),qu("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=ms.runKernel(_n,l,c);return u?Ku(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Mc=_s({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Ts(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=ms.runKernel(An,s,i);return{result:o[0],indexes:o[1]}}});var Oc=_s({maximum_:function(e,t){let n=Ts(e,"a","maximum"),r=Ts(t,"b","maximum");[n,r]=is(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(Tn,a)}});var Lc=_s({mean_:function(e,t=null,n=!1){const r={x:Ts(e,"x","mean")},a={axis:t,keepDims:n};return ms.runKernel(Fn,r,a)}});function zc(e,t="float32"){if("complex64"===t){const t=zc(e,"float32"),n=zc(e,"float32");return $s(t,n)}const n=Re(re(e),t);return ms.makeTensor(n,e,t)}function Pc(e,t="float32"){if("complex64"===t){const t=Pc(e,"float32"),n=zc(e,"float32");return $s(t,n)}const n=Fe(re(e),t);return ms.makeTensor(n,e,t)}function Bc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ts(e,"x","meshgrid",e instanceof Ua?e.dtype:"float32");if(void 0===t)return[r];let a=Ts(t,"y","meshgrid",t instanceof Ua?t.dtype:"float32");const s=re(r.shape),i=re(a.shape);return"xy"===n?(r=Ku(r,[1,-1]),a=Ku(a,[-1,1]),[ji(Pc([i,1],r.dtype),r),ji(a,Pc([1,s],a.dtype))]):(r=Ku(r,[-1,1]),a=Ku(a,[1,-1]),[ji(r,Pc([1,i],r.dtype)),ji(Pc([s,1],a.dtype),a)])}var Wc=_s({min_:function(e,t=null,n=!1){const r={x:Ts(e,"x","min")},a={axis:t,keepDims:n};return ms.runKernel(Rn,r,a)}});var Vc=_s({minimum_:function(e,t){let n=Ts(e,"a","minimum"),r=Ts(t,"b","minimum");[n,r]=is(n,r),"bool"===n.dtype&&(n=Ti(n,"int32"),r=Ti(r,"int32")),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(Dn,a)}});var Uc=_s({mirrorPad_:function(e,t,n){Q("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ts(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Q(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Q(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return ms.runKernel(Mn,i,s)}});var Gc=_s({mod_:function(e,t){let n=Ts(e,"a","mod"),r=Ts(t,"b","mod");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(On,a)}});var Hc=_s({square_:function(e){const t=Ts(e,"x","square");return ms.runKernel("Square",{x:t},{})}});var jc=_s({moments_:function(e,t=null,n=!1){const r=pe(t,(e=Ts(e,"x","moments")).shape),a=Lc(e,r,n);let s=a.shape;n||(s=Ic(a.shape,r));const i=Hc(yc(Ti(e,"float32"),Ku(a,s)));return{mean:a,variance:Lc(i,r,n)}}});var qc=_s({multiRNNCell_:function(e,t,n,r){const a=Ts(t,"data","multiRNNCell"),s=Es(n,"c","multiRNNCell"),i=Es(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var Kc=_s({multinomial_:function(e,t,n,r=!1){const a=Ts(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Ku(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=ms.runKernel(Ln,o,u);return 1===i?Ku(l,[l.size]):l}});var Xc=_s({notEqual_:function(e,t){let n=Ts(e,"a","notEqual","string_or_numeric"),r=Ts(t,"b","notEqual","string_or_numeric");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel(Bn,a)}});var Yc=_s({onesLike_:function(e){const t={x:Ts(e,"x","onesLike")};return ms.runKernel(Gn,t)}});var Zc=_s({outerProduct_:function(e,t){const n=Ts(e,"v1","outerProduct"),r=Ts(t,"v2","outerProduct");Q(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Ku(n,[-1,1]),s=Ku(r,[1,-1]);return ji(a,s)}});var Jc=_s({pad_:function(e,t,n=0){const r=Ts(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return ms.runKernel(qn,s,a)}});var Qc=_s({pad1d_:function(e,t,n=0){return Q(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Jc(e,[t],n)}});var eh=_s({pad2d_:function(e,t,n=0){return Q(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jc(e,t,n)}});var th=_s({pad3d_:function(e,t,n=0){return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jc(e,t,n)}});var nh=_s({pad4d_:function(e,t,n=0){return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jc(e,t,n)}});var rh=_s({spaceToBatchND_:function(e,t,n){const r=Ts(e,"x","spaceToBatchND");Q(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Q(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Q(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return ms.runKernel(kr,a,s)}});var ah=_s({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Ts(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(Hu(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Mu(u.shape,t,s,a,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?u:rh(u,h,f),b=("avg"===n?()=>Xu(y,t,s,g,i):()=>Rc(y,t,s,g,i))(),x=p?b:nl(b,h,m);return l?Ku(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var sh=_s({pow_:function(e,t){let n=Ts(e,"base","pow"),r=Ts(t,"exp","pow");[n,r]=is(n,r);const a={a:n,b:r};return ms.runKernel(Xn,a)}});var ih=_s({prelu_:function(e,t){const n={x:Ts(e,"x","prelu"),alpha:Ts(t,"alpha","prelu")};return ms.runKernel(Yn,n)}});var oh=_s({prod_:function(e,t=null,n=!1){let r=Ts(e,"x","prod");"bool"===r.dtype&&(r=Ti(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ms.runKernel(Zn,a,s)}});var uh=_s({rand_:function(e,t,n){const r=re(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ms.makeTensor(a,e,n)}}),lh=p(N()),ch=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=lh.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var hh=_s({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=lh.alea(a.toString()),this.randn=new ch(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var dh=_s({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new ch(t,n,r,!1,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var ph=_s({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Ni(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function fh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ms.runKernel(Jn,{},a)}var mh=_s({real_:function(e){const t={input:Ts(e,"input","real")};return ms.runKernel(Qn,t)}});var gh=_s({reciprocal_:function(e){const t={x:Ts(e,"x","reciprocal")};return ms.runKernel(er,t)}});var yh=_s({relu_:function(e){const t={x:Ts(e,"x","relu")};return ms.runKernel(tr,t)}});var bh=_s({relu6_:function(e){const t={x:Ts(e,"x","relu6")};return ms.runKernel(or,t)}});var xh=_s({reverse_:function(e,t){const n={x:Ts(e,"x","reverse")},r={dims:t};return ms.runKernel(ur,n,r)}});var vh=_s({reverse1d_:function(e){const t=Ts(e,"x","reverse");return Q(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),xh(t,0)}});var wh=_s({reverse2d_:function(e,t){const n=Ts(e,"x","reverse");return Q(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),xh(n,t)}});var kh=_s({reverse3d_:function(e,t){const n=Ts(e,"x","reverse");return Q(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),xh(n,t)}});var Ih=_s({reverse4d_:function(e,t){const n=Ts(e,"x","reverse");return Q(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),xh(n,t)}});var Sh=_s({round_:function(e){const t={x:Ts(e,"x","round")};return ms.runKernel(lr,t)}});var Nh=_s({rsqrt_:function(e){const t={x:Ts(e,"x","rsqrt","float32")};return ms.runKernel(cr,t)}});function Th(e,t){if((ve(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ve(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return As(e,[],[],t)}var Eh=_s({selu_:function(e){const t={x:Ts(e,"x","selu")};return ms.runKernel(pr,t)}});var Ch=_s({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=Ts(e,"x","separableConv2d"),u=Ts(t,"depthwiseFilter","separableConv2d"),l=Ts(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Q(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Q(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Q(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];Q(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=Cl(c,u,r,a,i,s),m=gl(f,l,1,"valid",i);return h?Ku(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var _h=async function(e,t){const n=Ts(e,"x","setdiff1d"),r=Ts(t,"y","setdiff1d");Q(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Q(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Q(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new Ba([o],n.dtype),l=new Ba([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};var $h=_s({sign_:function(e){const t={x:Ts(e,"x","sign")};return ms.runKernel(yr,t)}});var Ah=_s({sin_:function(e){const t={x:Ts(e,"x","sin","float32")};return ms.runKernel(mr,t)}});var Fh=_s({sinh_:function(e){const t={x:Ts(e,"x","sinh")};return ms.runKernel(gr,t)}});var Rh=_s({slice1d_:function(e,t,n){const r=Ts(e,"x","slice1d");return Q(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Qu(r,[t],[n])}});var Dh=_s({slice2d_:function(e,t,n){const r=Ts(e,"x","slice2d");return Q(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Qu(r,t,n)}});var Mh=_s({slice3d_:function(e,t,n){const r=Ts(e,"x","slice3d");return Q(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Qu(r,t,n)}});var Oh=_s({slice4d_:function(e,t,n){const r=Ts(e,"x","slice4d");return Q(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Qu(r,t,n)}});var Lh=_s({softmax_:function(e,t=-1){const n=Ts(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ms.runKernel(Sr,r,a)}});var zh=_s({fft_:function(e){Q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ms.runKernel(Yt,t)}});var Ph=_s({ifft_:function(e){Q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ms.runKernel(un,t)}});var Bh=_s({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Ku(e,[n,t]);r=Ph(a)}else{const a=[n,2*(t-1)],s=Ku(mh(e),[n,t]),i=Ku(Xl(e),[n,t]),o=xh(Qu(s,[0,1],[n,t-2]),1),u=vu(xh(Qu(i,[0,1],[n,t-2]),1),Th(-1)),l=Zu([s,o],1),c=Zu([i,u],1),h=Ku($s(l,c),[a[0],a[1]]);r=Ph(h)}if(r=mh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ku(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});var Wh=_s({split_:function(e,t,n=0){const r={x:Ts(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ms.runKernel(Ir,r,a)}});var Vh=_s({rfft_:function(e,t){Q("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Qu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Zu([e,zc(r)],e.shape.length-1),n=t}else a=e;const s=Rl(a),i=Ku($s(a,s),[r,n]),o=zh(i),u=Math.floor(n/2)+1,l=mh(o),c=Xl(o),h=Wh(l,[u,n-u],l.shape.length-1),d=Wh(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Ku($s(h[0],d[0]),p)}});var Uh=_s({sqrt_:function(e){const t={x:Ts(e,"x","sqrt","float32")};return ms.runKernel(vr,t)}});var Gh=_s({squaredDifference_:function(e,t){let n=Ts(e,"a","squaredDifference"),r=Ts(t,"b","squaredDifference");[n,r]=is(n,r),Qi(n.shape,r.shape);const a={a:n,b:r};return ms.runKernel($r,a,{})}});var Hh=_s({squeeze_:function(e,t){const n=Ts(e,"x","squeeze");return Ku(n,fe(n.shape,t).newShape)}});var jh=_s({stack_:function(e,t=0){const n=Es(e,"tensors","stack","string_or_numeric");Q(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Q(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return ms.runKernel(jn,r,a)}});var qh=_s({step_:function(e,t=0){const n={x:Ts(e,"x","step")},r={alpha:t};return ms.runKernel(qr,n,r)}});var Kh=_s({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:Ts(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return ms.runKernel(Fr,l,c)}});var Xh=_s({tan_:function(e){const t={x:Ts(e,"x","tan","float32")};return ms.runKernel(Lr,t)}});function Yh(e,t){te(e);const n=Is(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return As(e,null,n,t)}function Zh(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Is(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return As(e,t,r,n)}function Jh(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Is(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function Qh(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Is(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return As(e,t,r,n)}function ed(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Is(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return As(e,t=t||r,r,n)}var td=_s({topk_:function(e,t=1,n=!0){const r=Ts(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=ms.runKernel(Br,s,i);return{values:o,indices:u}}});var nd=_s({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new ch(t,n,r,!0,a),i=Ni(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var rd=_s({unique_:function(e,t=0){const n=Ts(e,"x","unique","string_or_numeric");Q(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=ms.runKernel(Ur,r,a);return{values:s,indices:i}}});var ad=_s({unsortedSegmentSum_:function(e,t,n){const r=Ts(e,"x","unsortedSegmentSum"),a=Ts(t,"segmentIds","unsortedSegmentSum","int32");Q(ie(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return ms.runKernel(Hr,s,i)}});var sd=_s({unstack_:function(e,t=0){const n=Ts(e,"x","unstack","string_or_numeric");Q(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return ms.runKernel(Gr,r,a)}});function id(e,t=!0,n,r){return ms.makeVariable(e,t,n,r)}function od(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ni(e,"int32"),a=Ni([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var ud=async function(e){const t=Ts(e,"condition","whereAsync","bool"),n=await t.data(),r=od(t.shape,n);return e!==t&&t.dispose(),r};var ld=async function(e,t,n){const r=Ts(e,"tensor","boolMask"),a=Ts(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Q(i>0,(()=>"mask cannot be scalar")),ee(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Ku(r,l),h=Ku(a,[-1]),d=await ud(h),p=Hh(d,[1]),f=jl(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};function cd(e,t,n=null){if(0===e.rank)return wu(e);if(1!==e.rank&&null===n)return cd(Ku(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return bc(wu(e),n);if(t===1/0)return gc(wu(e),n);if(t===-1/0)return Wc(wu(e),n);if("euclidean"===t||2===t)return Uh(bc(sh(wu(e),Th(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return gc(bc(wu(e),n[0]),n[1]-1);if(t===1/0)return gc(bc(wu(e),n[1]),n[0]);if(t===-1/0)return Wc(bc(wu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Uh(bc(Hc(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var hd=_s({norm_:function(e,t="euclidean",n=null,r=!1){const a=cd(e=Ts(e,"x","norm"),t,n);let s=a.shape;if(r){const t=pe(n,e.shape);s=Ic(a.shape,t)}return Ku(a,s)}});var dd=_s({movingAverage_:function(e,t,n,r,a=!0){const s=Ts(e,"v","movingAverage"),i=Ts(t,"x","movingAverage"),o=Ts(n,"decay","movingAverage");os(s,i),Q(se(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=Th(1),l=yc(u,o);let c=vu(yc(i,s),l);if(a){Q(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ts(r,"step","movingAverage");c=xu(c,yc(u,sh(o,e)))}return yu(s,c)}});var pd=_s({scatterND_:function(e,t,n){const r=Ts(e,"indices","scatterND","int32"),a=Ts(t,"updates","scatterND");po(a,r,n);const s={indices:r,updates:a},i={shape:n};return ms.runKernel(hr,s,i)}});var fd=_s({sparseToDense_:function(e,t,n,r=0){const a=Ts(e,"sparseIndices","sparseToDense","int32"),s=Ts(t,"sparseValues","sparseToDense"),i=Ts(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return ms.runKernel(_r,o,u)}});var md=_s({gatherND_:function(e,t){const n=Ts(t,"indices","gatherND","int32"),r={params:Ts(e,"x","gatherND","string_or_numeric"),indices:n};return ms.runKernel(rn,r)}});var gd=_s({dropout_:function(e,t,n,r){const a=Ts(e,"x","dropout");if(Q("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Q(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ua?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=xu(Hl(yu(ph(s,0,1,"float32",r),i)),i);return vu(a,o)}});function yd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function bd(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Yh(a,"float32")}var xd=async function(e,t,n=1){const r=Ts(e,"predictions","inTopK"),a=Ts(t,"targets","inTopK");Q(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Q(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),ee(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Q(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=me("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Fs(c,a.shape,"bool")},vd={};d(vd,{conv2d:()=>Td,depthwiseConv2d:()=>_d,matMul:()=>$d});var wd=_s({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Ku(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Q(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),Q(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];Q(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Q(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),qu("conv2dDerFilter",a,i);const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return ms.runKernel(It,h,d)}});function kd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return vu(e,qh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Id(e,t){let n=t;const r=Ji(e.shape,t.shape);return r.length>0&&(n=bc(n,r)),Ku(n,e.shape)}function Sd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return yh(e);if("elu"===t)return Ll(e);if("relu6"===t)return bh(e);if("prelu"===t)return ih(e,n);if("leakyrelu"===t)return Ql(e,r);if("sigmoid"===t)return Ju(e);throw new Error(`Unknown fused activation ${t}.`)}var Nd=(e,t)=>!(e>0)||"linear"===t;var Td=_s({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Nd(ms.state.gradientDepth,u)){let h=gl(e,t,n,r,a,s,i);return null!=o&&(h=yu(h,o)),Sd(h,u,l,c)}const h=Ts(e,"x","conv2d","float32"),d=Ts(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Ku(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),Q(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),qu("fused conv2d",r,i),Q(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),Q(Hu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Q("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Lu(p.shape,d.shape,n,s,r,i);let g,y;null!=o&&(g=Ts(o,"bias","fused conv2d"),[g]=is(g,h),Qi(m.outShape,g.shape)),null!=l&&(y=Ts(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=kd(e,o,u);Q(Gu(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[bl(i.shape,c,a,n,r),wd(i,c,a.shape,n,r)];if(null!=l){const e=Id(l,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){return hc(((e,t,n)=>{let r=ms.runKernel(Zr,x,v);return n([t,e,r]),f&&(r=Ku(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(p,d)}return hc(((e,t,n,r)=>{let a=ms.runKernel(Zr,x,v);return r([t,e,a,n]),f&&(a=Ku(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(p,d,g)}});var Ed=_s({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Ku(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return ms.runKernel(Mt,l,c)}});var Cd=_s({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=ms.runKernel(Ot,l,c);return u?Ku(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var _d=_s({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Nd(ms.state.gradientDepth,u)){let h=Cl(e,t,n,r,a,s,i);return null!=o&&(h=yu(h,o)),Sd(h,u,l,c)}const h=Ts(e,"x","depthwiseConv2d","float32"),d=Ts(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Ku(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),Q(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Q(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),Q(Hu(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),qu("fused depthwiseConv2d",r,i);const m=Lu(p.shape,d.shape,n,s,r,i,!0);let g,y;null!=o&&(g=Ts(o,"bias","fused conv2d"),[g]=is(g,h),Qi(m.outShape,g.shape)),null!=l&&(y=Ts(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Q(Gu(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,h=kd(e,l,u),d=Cd(o.shape,h,a,n,r,s,i),p=Ed(o,h,a.shape,n,r,s,i);if(null!=c){return[d,p,Id(g,h)]}return[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){return hc(((e,t,n)=>{let r=ms.runKernel(Jr,x,v);return n([t,e,r]),f&&(r=Ku(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(p,d)}return hc(((e,t,n,r)=>{let a=ms.runKernel(Jr,x,v);return r([t,e,a,n]),f&&(a=Ku(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(p,d,g)}});var $d=_s({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Nd(ms.state.gradientDepth,s)){let u=ji(e,t,n,r);return null!=a&&(u=yu(u,a)),Sd(u,s,i,o)}let u=Ts(e,"a","fused matMul"),l=Ts(t,"b","fused matMul");[u,l]=is(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=re(f),y=re(m);Q(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Qi(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),x=Ku(u,n?[g,c,d]:[g,d,c]),v=Ku(l,r?[y,p,h]:[y,h,p]);let w,k;null!=a&&(w=Ts(a,"bias","fused matMul"),[w]=is(w,u),Qi(b,w.shape)),null!=i&&(k=Ts(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=kd(Ku(e,u.shape),u,s);let h,d;if(n||r?!n&&r?(h=ji(c,o,!1,!1),d=ji(c,i,!0,!1)):n&&!r?(h=ji(o,c,!1,!0),d=ji(i,c,!1,!1)):(h=ji(o,c,!0,!0),d=ji(c,i,!0,!0)):(h=ji(c,o,!1,!0),d=ji(i,c,!0,!1)),null!=a){return[h,d,Id(l,c)]}return[h,d]},S={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){return hc(((e,t,n)=>{const r=ms.runKernel(Yr,S,N);return n([e,t,r]),{value:Ku(r,b),gradFunc:I}}))(x,v)}return hc(((e,t,n,r)=>{const a=ms.runKernel(Yr,S,N);return r([e,t,a,n]),{value:Ku(a,b),gradFunc:I}}))(x,v,w)}});var Ad=_s({hammingWindow_:function(e){return bd(e,.54,.46)}});var Fd=_s({hannWindow_:function(e){return bd(e,.5,.5)}});var Rd=_s({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Qu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Zu([Qu(e,s,t-r),Gl([r],a)]);i.push(o),s+=n}return 0===i.length?Zh([],[0,t]):Ku(Zu(i),[i.length,t])}});var Dd=_s({stft_:function(e,t,n,r,a=Fd){null==r&&(r=yd(t));const s=Rd(e,t,n),i=vu(s,a(t));return Vh(i,r)}});var Md=_s({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Ts(e,"image","cropAndResize"),o=Ts(t,"boxes","cropAndResize","float32"),u=Ts(n,"boxInd","cropAndResize","int32"),l=o.shape[0];Q(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Q(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),Q(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),Q(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Q(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Q("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return ms.runKernel(At,c,h)}});var Od=_s({flipLeftRight_:function(e){const t=Ts(e,"image","flipLeftRight","float32");Q(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ms.runKernel(Jt,n,{})}});var Ld=_s({grayscaleToRGB_:function(e){const t=Ts(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Q(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Q(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Vl(t,a)}});var zd=_s({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ts(e,"image","rotateWithOffset","float32");Q(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return ms.runKernel(Xr,s,i)}});function Pd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),Q(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Q(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Q(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Q(1===t.rank,(()=>"scores must be a 1D tensor")),Q(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Q(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Bd=_s({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ts(e,"boxes","nonMaxSuppression","float32"),i=Ts(t,"scores","nonMaxSuppression","float32"),o=Pd(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ms.runKernel(Wn,{boxes:s,scores:i},u)}});function Wd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Vd)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Vd(e,t){return e>t?1:e<t?-1:0}function Ud(e,t,n,r,a){return jd(e,t,n,r,a,0)}function Gd(e,t,n,r,a,s){return jd(e,t,n,r,a,0,!1,s,!0)}function Hd(e,t,n,r,a,s){return jd(e,t,n,r,a,s,!0)}function jd(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Xd);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=qd(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Kd(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&Wd(l,t,Xd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function qd(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Kd(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Xd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Yd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ts(e,"boxes","nonMaxSuppressionAsync"),i=Ts(t,"scores","nonMaxSuppressionAsync"),o=Pd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Ud(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Yh(h,"int32")};var Zd=_s({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),u=Pd(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=ms.runKernel(Un,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});var Jd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),u=Pd(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Hd(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Yh(d,"int32"),selectedScores:Yh(p)}};var Qd=_s({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),u=Pd(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=ms.runKernel(Vn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});var ep=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),u=Pd(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Gd(d,p,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Yh(f,"int32"),validOutputs:Th(m,"int32")}};var tp=_s({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ts(e,"images","resizeBilinear");Q(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Q(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Q(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ku(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ms.runKernel(sr,o,u);return i?Ku(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var np=_s({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ts(e,"images","resizeNearestNeighbor");Q(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Q(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Q("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Q(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ku(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ms.runKernel(rr,o,u);return i?Ku(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var rp=_s({threshold_:function(e,t="binary",n=!1,r=.5){const a=Ts(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=vu(Yh([r]),255);if(Q(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),Q(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),Q("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),Q("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Wh(a,[1,1,1],-1);const e=vu(i,.2989),t=vu(o,.587),n=vu(u,.114);l=yu(yu(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,s,i,o,u=Yh([-1]),l=Yh([0]),c=Yh([0]);for(let h=0;h<e.size-1;h++){n=Qu(e,0,h+1),r=Qu(e,h+1),i=xu(bc(n),t),o=xu(bc(r),t);const d=bc(vu(n,fh(0,n.size)));a=xu(d,bc(n));const p=Gl(r.shape,n.size),f=yu(fh(0,r.size),p),m=vu(r,f);s=xu(bc(m),bc(r));const g=yc(a,s),y=yc(a,s),b=vu(i,o);c=vu(vu(b,g),y);const x=ql(c,l);l=Fl(x,c,l),u=Fl(x,Yh([h]),u)}return u}(ol(Ti(Sh(l),"int32"),Fs([]),256),s)}const h=n?tc(l,c):ql(l,c);return Ti(vu(h,255),"int32")}});var ap=_s({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Ts(e,"image","transform","float32"),o=Ts(t,"transforms","transform","float32");Q(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Q(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ms.runKernel(Wr,u,l)}});var sp=_s({bandPart_:function(e,t,n){Q(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Q(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ts(e,"a","bandPart");Q(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Ku(fh(0,s,1,"int32"),[-1,1]),u=fh(0,i,1,"int32"),l=yc(o,u),c=_c(tc(l,Th(+t,"int32")),Kl(l,Th(-n,"int32"))),h=zc([s,i],r.dtype);return Ku(jh(sd(Ku(r,[-1,s,i])).map((e=>Fl(c,e,h)))),a)}});var ip=_s({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Wh(e,e.shape[0],0).map((e=>Hh(e,[0])));Q(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ms.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=vu(bc(vu(n[r],e)),n[r]);e=yc(e,t)}return xu(e,hd(e,"euclidean"))})));return t?jh(n,0):n}});function op(e,t=!1){return ms.tidy((()=>{Q(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Ul(n),s=Ei(e);const i=Zh([[1]],[1,1]);let o=Ei(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=ms.tidy((()=>{const t=Qu(s,[e,e],[n-e,1]),u=hd(t),l=Qu(s,[e,e],[1,1]),c=Fl(ql(l,0),Zh([[-1]]),Zh([[1]])),h=yc(l,vu(c,u)),d=xu(t,h);o=1===d.shape[0]?Ei(i):Zu([i,Qu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=pc(xu(ji(c,h),u)),f=Qu(s,[e,0],[n-e,r]),m=vu(p,o),g=Ki(o);if(0===e)s=yc(f,ji(m,ji(g,f)));else{const t=yc(f,ji(m,ji(g,f)));s=Zu([Qu(s,[0,0],[e,r]),t],0)}const y=Ki(m),b=Qu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=yc(b,ji(ji(b,o),y));else{const t=yc(b,ji(ji(b,o),y));a=Zu([Qu(a,[0,0],[n,e]),t],1)}return[o,s,a]})),su([t,u,l])}return!t&&n>r&&(a=Qu(a,[0,0],[n,r]),s=Qu(s,[0,0],[r,r])),[a,s]}))}var up,lp,cp=_s({qr_:function(e,t=!1){if(Q(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return op(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=sd(Ku(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=op(e,t);a.push(n),s.push(r)}));return[Ku(jh(a,0),e.shape),Ku(jh(s,0),e.shape)]}}});(lp=up||(up={}))[lp.NONE=0]="NONE",lp[lp.MEAN=1]="MEAN",lp[lp.SUM=2]="SUM",lp[lp.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var hp=_s({computeWeightedLoss_:function(e,t,n=up.SUM_BY_NONZERO_WEIGHTS){const r=Ts(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ts(t,"weights","computeWeightedLoss"));const s=null==a?r:vu(r,a);if(n===up.NONE)return s;if(n===up.SUM)return bc(s);if(n===up.MEAN){if(null==a)return Lc(s);{const e=r.size/a.size,t=xu(bc(s),bc(a));return e>1?xu(t,Th(e)):t}}if(n===up.SUM_BY_NONZERO_WEIGHTS){if(null==a)return xu(bc(s),Th(r.size));{const e=vu(a,Pc(r.shape)),t=Ti(bc(Xc(e,Th(0))),"float32");return xu(bc(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var dp=_s({absoluteDifference_:function(e,t,n,r=up.SUM_BY_NONZERO_WEIGHTS){const a=Ts(e,"labels","absoluteDifference"),s=Ts(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ts(n,"weights","absoluteDifference")),ee(a.shape,s.shape,"Error in absoluteDifference: ");const o=wu(yc(a,s));return hp(o,i,r)}});var pp=_s({cosineDistance_:function(e,t,n,r,a=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(e,"labels","cosineDistance"),i=Ts(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ts(r,"weights","cosineDistance")),ee(s.shape,i.shape,"Error in cosineDistance: ");const u=Th(1),l=yc(u,bc(vu(s,i),n,!0));return hp(l,o,a)}});var fp=_s({hingeLoss_:function(e,t,n,r=up.SUM_BY_NONZERO_WEIGHTS){let a=Ts(e,"labels","hingeLoss");const s=Ts(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ts(n,"weights","hingeLoss")),ee(a.shape,s.shape,"Error in hingeLoss: ");const o=Th(1);a=yc(vu(Th(2),a),o);const u=yh(yc(o,vu(a,s)));return hp(u,i,r)}});var mp=_s({huberLoss_:function(e,t,n,r=1,a=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(e,"labels","huberLoss"),i=Ts(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ts(n,"weights","huberLoss")),ee(s.shape,i.shape,"Error in huberLoss: ");const u=Th(r),l=wu(yc(i,s)),c=Vc(l,u),h=yc(l,c),d=yu(vu(Th(.5),Hc(c)),vu(u,h));return hp(d,o,a)}});var gp=_s({logLoss_:function(e,t,n,r=1e-7,a=up.SUM_BY_NONZERO_WEIGHTS){const s=Ts(e,"labels","logLoss"),i=Ts(t,"predictions","logLoss");let o=null;null!=n&&(o=Ts(n,"weights","logLoss")),ee(s.shape,i.shape,"Error in logLoss: ");const u=Th(1),l=Th(r),c=pc(vu(s,ac(yu(i,l)))),h=vu(yc(u,s),ac(yu(yc(u,i),l))),d=yc(c,h);return hp(d,o,a)}});var yp=_s({meanSquaredError_:function(e,t,n,r=up.SUM_BY_NONZERO_WEIGHTS){const a=Ts(e,"labels","meanSquaredError"),s=Ts(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ts(n,"weights","meanSquaredError")),ee(a.shape,s.shape,"Error in meanSquaredError: ");const o=Gh(a,s);return hp(o,i,r)}});var bp=_s({sigmoidCrossEntropy_:function(e,t,n,r=0,a=up.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ts(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ts(n,"weights","sigmoidCrossEntropy")),ee(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Th(r),t=Th(1),n=Th(.5);s=yu(vu(s,yc(t,e)),vu(n,e))}const u=function(e,t){const n=Ts(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ts(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=yh(r),s=vu(r,n),i=sc(Pl(pc(wu(r))));return yu(yc(a,s),i)}(s,i);return hp(u,o,a)}});var xp=_s({softmaxCrossEntropy_:function(e,t,n,r=0,a=up.SUM_BY_NONZERO_WEIGHTS){let s=Ts(e,"onehotLabels","softmaxCrossEntropy");const i=Ts(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ts(n,"weights","softmaxCrossEntropy")),ee(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Th(r),t=Th(1),n=Th(s.shape[1]);s=yu(vu(s,yc(t,e)),xu(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return hc(((e,t,r)=>{const a=Cc(t,[n],!0),s=yc(Ti(t,"float32"),a);r([e,s]);const i=pc(vu(s,e));return{value:bc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Ic(e.shape,[n]);return[vu(Ku(e,s),yc(Ti(r,"float32"),Pl(a))),vu(Ku(e,s),yc(Pl(a),Ti(r,"float32")))]}}}))(e,t)}(s,i);return hp(u,o,a)}});var vp=_s({sparseFillEmptyRows_:function(e,t,n,r){const a=Ts(e,"indices","sparseFillEmptyRows","int32"),s=Ts(t,"values","sparseFillEmptyRows"),i=Ts(n,"denseShape","sparseFillEmptyRows","int32"),o=Ts(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=ms.runKernel(Nr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});var wp=_s({sparseReshape_:function(e,t,n){const r=Ts(e,"inputIndices","sparseReshape","int32"),a=Ts(t,"inputShape","sparseReshape","int32"),s=Ts(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=ms.runKernel(Tr,i);return{outputIndices:o[0],outputShape:o[1]}}});var kp=_s({sparseSegmentMean_:function(e,t,n){const r=Ts(e,"data","sparseSegmentMean"),a=Ts(t,"indices","sparseSegmentMean","int32"),s=Ts(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ms.runKernel(Er,i)}});var Ip=_s({sparseSegmentSum_:function(e,t,n){const r=Ts(e,"data","sparseSegmentSum"),a=Ts(t,"indices","sparseSegmentSum","int32"),s=Ts(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ms.runKernel(Cr,i)}});var Sp=_s({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=Ts(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ts(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=ms.runKernel(Rr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});var Np=_s({stringSplit_:function(e,t,n=!0){const r=Ts(e,"input","stringSplit","string"),a=Ts(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=ms.runKernel(Dr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var Tp=_s({stringToHashBucketFast_:function(e,t){const n=Ts(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ms.runKernel(Mr,a,r)}}),Ep={fft:zh,ifft:Ph,rfft:Vh,irfft:Bh},Cp={hammingWindow:Ad,hannWindow:Fd,frame:Rd,stft:Dd},_p={flipLeftRight:Od,grayscaleToRGB:Ld,resizeNearestNeighbor:np,resizeBilinear:tp,rotateWithOffset:zd,cropAndResize:Md,nonMaxSuppression:Bd,nonMaxSuppressionAsync:Yd,nonMaxSuppressionWithScore:Zd,nonMaxSuppressionWithScoreAsync:Jd,nonMaxSuppressionPadded:Qd,nonMaxSuppressionPaddedAsync:ep,threshold:rp,transform:ap},$p={bandPart:sp,gramSchmidt:ip,qr:cp},Ap={absoluteDifference:dp,computeWeightedLoss:hp,cosineDistance:pp,hingeLoss:fp,huberLoss:mp,logLoss:gp,meanSquaredError:yp,sigmoidCrossEntropy:bp,softmaxCrossEntropy:xp},Fp={sparseFillEmptyRows:vp,sparseReshape:wp,sparseSegmentMean:kp,sparseSegmentSum:Ip},Rp={stringNGrams:Sp,stringSplit:Np,stringToHashBucketFast:Tp},Dp=class extends Do{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return su(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return cc(e,t)}dispose(){null!=this.iterations_&&su(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Th(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Dp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Mp=class extends Dp{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ms.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:au((()=>Rl(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:au((()=>Rl(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;au((()=>{const e=yu(vu(s,this.rho),vu(Hc(a),1-this.rho)),t=vu(xu(Uh(yu(i,this.epsilon)),Uh(yu(s,this.epsilon))),a),n=yu(vu(i,this.rho),vu(Hc(t),1-this.rho));s.assign(e),i.assign(n);const o=yu(vu(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(su(this.accumulatedGrads.map((e=>e.variable))),su(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Mp.className="Adadelta",Oo(Mp);var Op=class extends Dp{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ms.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:au((()=>Gl(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;au((()=>{const e=yu(s,Hc(a));s.assign(e);const t=yu(vu(xu(a,Uh(yu(e,ms.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&su(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Op.className="Adagrad",Oo(Op);var Lp=class extends Dp{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],au((()=>{this.accBeta1=Th(t).variable(),this.accBeta2=Th(n).variable()})),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);au((()=>{const n=yc(1,this.accBeta1),r=yc(1,this.accBeta2);t.forEach(((t,a)=>{const s=ms.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:au((()=>Rl(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:au((()=>Rl(s).variable(false)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=yu(vu(o,this.beta1),vu(i,1-this.beta1)),c=yu(vu(u,this.beta2),vu(Hc(i),1-this.beta2)),h=xu(l,n),d=xu(c,r);o.assign(l),u.assign(c);const p=yu(vu(xu(h,yu(Uh(d),this.epsilon)),-this.learningRate),s);s.assign(p)})),this.accBeta1.assign(vu(this.accBeta1,this.beta1)),this.accBeta2.assign(vu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&su(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&su(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),au((()=>{this.accBeta1.assign(sh(this.beta1,this.iterations_+1)),this.accBeta2.assign(sh(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Lp.className="Adam",Oo(Lp);var zp=class extends Dp{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],au((()=>{this.iteration=Th(0).variable(),this.accBeta1=Th(t).variable()})),null==r&&(this.epsilon=ms.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);au((()=>{const n=yc(1,this.accBeta1),r=xu(-this.learningRate,yu(vu(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=ms.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Rl(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Rl(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=yu(vu(o,this.beta1),vu(i,1-this.beta1)),c=vu(u,this.beta2),h=wu(i),d=Oc(c,h);o.assign(l),u.assign(d);const p=yu(vu(xu(r,n),xu(l,yu(d,this.epsilon))),s);s.assign(p)})),this.iteration.assign(yu(this.iteration,1)),this.accBeta1.assign(vu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&su(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&su(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};zp.className="Adamax",Oo(zp);var Pp=class extends Dp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ms.registeredVariables[t];au((()=>{const e=yu(vu(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=iu(Th(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Pp.className="SGD",Oo(Pp);var Bp=class extends Pp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Th(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ms.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:au((()=>Rl(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&au((()=>{let e;const t=yu(vu(this.m,a),s);e=this.useNesterov?yu(vu(this.c,yu(s,vu(t,this.m))),r):yu(vu(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&su(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Bp.className="Momentum",Oo(Bp);var Wp=class extends Dp{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ms.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ms.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:au((()=>Rl(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:au((()=>Rl(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:au((()=>Rl(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;au((()=>{const e=yu(vu(i,this.decay),vu(Hc(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=yu(vu(t,this.decay),vu(s,1-this.decay)),u=xu(vu(s,this.learningRate),Uh(yc(e,yu(Hc(a),this.epsilon)))),l=yu(vu(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=yc(r,l);r.assign(c)}else{const e=yu(vu(i,this.decay),vu(Hc(s),1-this.decay)),t=yu(vu(o,this.momentum),xu(vu(s,this.learningRate),Uh(yu(e,this.epsilon))));i.assign(e),o.assign(t);const n=yc(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&su(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&su(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&su(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Wp.className="RMSProp",Oo(Wp);var Vp=class{static sgd(e){return new Pp(e)}static momentum(e,t,n=!1){return new Bp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Wp(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Lp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Mp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new zp(e,t,n,r,a)}static adagrad(e,t=.1){return new Op(e,t)}},Up={sgd:Vp.sgd,momentum:Vp.momentum,adadelta:Vp.adadelta,adagrad:Vp.adagrad,rmsprop:Vp.rmsprop,adamax:Vp.adamax,adam:Vp.adam},Gp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Hp(){return new Promise((e=>Gp((()=>e()))))}var jp={};function qp(e,t){const n=e[0].length;e.forEach(((e,t)=>{Q(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Q(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Q(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Kp(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}d(jp,{ERF_A1:()=>of,ERF_A2:()=>uf,ERF_A3:()=>lf,ERF_A4:()=>cf,ERF_A5:()=>hf,ERF_P:()=>sf,PARALLELIZE_THRESHOLD:()=>Xp,SELU_SCALE:()=>af,SELU_SCALEALPHA:()=>rf,applyActivation:()=>Sd,assertAndGetBroadcastShape:()=>Qi,assertAxesAreInnerMostDims:()=>Sc,assertParamsConsistent:()=>qp,assignToTypedArray:()=>yf,axesAreInnerMostDims:()=>vc,calculateShapes:()=>fo,checkEinsumDimSizes:()=>Sf,checkPadOnDimRoundingMode:()=>qu,combineLocations:()=>wc,complexWithEvenIndex:()=>ff,complexWithOddIndex:()=>mf,computeConv2DInfo:()=>Lu,computeConv3DInfo:()=>zu,computeDefaultPad:()=>Pu,computeDilation2DInfo:()=>Du,computeOptimalWindowSize:()=>Yp,computeOutAndReduceShapes:()=>kc,computeOutShape:()=>Kp,computePool2DInfo:()=>Mu,computePool3DInfo:()=>Ou,convertConv2DDataFormat:()=>ju,decodeEinsumEquation:()=>kf,eitherStridesOrDilationsAreOne:()=>Hu,expandShapeToKeepDim:()=>Ic,exponent:()=>xf,exponents:()=>bf,fromStringArrayToUint8:()=>jf,fromUint8ToStringArray:()=>Hf,getAxesPermutation:()=>Nc,getBroadcastDims:()=>Zi,getComplexWithIndex:()=>gf,getEinsumComputePath:()=>Nf,getEinsumPermutation:()=>If,getFusedBiasGradient:()=>Id,getFusedDyActivation:()=>kd,getImageCenter:()=>Zp,getInnerMostAxes:()=>Ec,getPermuted:()=>Qp,getReductionAxes:()=>Ji,getReshaped:()=>Jp,getReshapedPermuted:()=>ef,getSliceBeginCoords:()=>tf,getSliceSize:()=>nf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>_f,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>$f,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Af,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Df,getSparseReshapeInputOutputMismatchErrorMessage:()=>Of,getSparseReshapeInputOutputMultipleErrorMessage:()=>Mf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ff,getSparseReshapeNegativeOutputDimErrorMessage:()=>Rf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Bf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Lf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>zf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Pf,getUndoAxesPermutation:()=>Tc,isIdentityPermutation:()=>Tf,log:()=>ea,mergeRealAndImagArrays:()=>df,prepareAndValidate:()=>lo,prepareSplitSize:()=>Cf,segment_util:()=>Wf,shouldFuse:()=>Nd,slice_util:()=>mo,splitRealAndImagArrays:()=>pf,tupleValuesAreOne:()=>Gu,upcastType:()=>as,validateInput:()=>po,validateUpdateShape:()=>ho,warn:()=>Qr});var Xp=30;function Yp(e){return e<=Xp?e:Ce(e,Math.floor(Math.sqrt(e)))}function Zp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Jp(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Qp(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function ef(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function tf(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function nf(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var rf=1.7580993408473768,af=1.0507009873554805,sf=.3275911,of=.254829592,uf=-.284496736,lf=1.421413741,cf=-1.453152027,hf=1.061405429;function df(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function pf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ff(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function mf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function gf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function yf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function bf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function xf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var vf="->",wf=/->/g;function kf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(wf,"").length)/vf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(vf);Q(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function If(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Sf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Q(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Nf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Ef(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Tf(e){return e.every(((e,t)=>e===t))}function Ef(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Cf(e,t,n=0){let r=[];if("number"==typeof t)Q(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Q(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Q(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function _f(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function $f(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Af(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Ff(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Rf(e,t){return`size ${e} must be non-negative, not ${t}`}function Df(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Mf(e,t){return`Input to reshape is a SparseTensor with ${re(e)}\n  dense values, but the requested shape requires a multiple of ${re(t)}. inputShape=${e} outputShape= ${t}`}function Of(e,t){return`Input to reshape is a tensor with ${re(e)} dense values, but the requested shape has ${re(t)}. inputShape=${e} outputShape=${t}`}function Lf(){return"segment ids must be >= 0"}function zf(){return"segment ids are not increasing"}function Pf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Bf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Wf={};function Vf(e,t){let n,r=!1;for(e<=Xp?(n=e,r=!0):n=Ce(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ce(e,n+1);return n}function Uf(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Gf(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Hf(e){try{return e.map((e=>Fa(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function jf(e){return e.map((e=>Aa(e)))}d(Wf,{collectGatherOpShapeInfo:()=>Gf,computeOutShape:()=>Uf,segOpComputeOptimalWindowSize:()=>Vf});var qf={};d(qf,{nonMaxSuppressionV3Impl:()=>Ud,nonMaxSuppressionV4Impl:()=>Gd,nonMaxSuppressionV5Impl:()=>Hd,whereImpl:()=>od});var Kf={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,qh(Ti(n,"float32"),-1))}}},Xf={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Hc(Ti(n,"float32")),r=Uh(yc(Th(1),t));return pc(xu(e,r))}}}},Yf={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Uh(yc(Hc(Ti(n,"float32")),1));return xu(e,t)}}}},Zf={kernelName:Ye,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{let t=e;const r=Ji(n.shape,a);return r.length>0&&(t=bc(t,r)),Ku(t,n.shape)},b:()=>{let t=e;const n=Ji(r.shape,a);return n.length>0&&(t=bc(t,n)),Ku(t,r.shape)}}}},Jf={kernelName:Ze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Qf={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Rl(n)}}},em={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Rl(n)}}},tm={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,Uh(yc(Th(1),Hc(Ti(n,"float32")))))}}},nm={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Uh(yu(Th(1),Hc(Ti(n,"float32"))));return xu(e,t)}}}},rm={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{const t=yu(Hc(n),Hc(r));let s=vu(e,xu(r,t));const i=Ji(n.shape,a);return i.length>0&&(s=bc(s,i)),Ku(s,n.shape)},b:()=>{const t=yu(Hc(n),Hc(r));let s=pc(vu(e,xu(n,t)));const i=Ji(r.shape,a);return i.length>0&&(s=bc(s,i)),Ku(s,r.shape)}}}},am={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,yu(Hc(Ti(n,"float32")),1))}}},sm={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,yc(Th(1),Hc(Ti(n,"float32"))))}}};var im=_s({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Ts(e,"dy","avgPool3dGrad"),o=Ts(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),Q(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),qu("avgPool3dGrad",a,s);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=ms.runKernel(ct,h,d);return c?Ku(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),om={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>im(e,r,a,s,i,o)}}};var um=_s({avgPoolGrad_:function(e,t,n,r,a){const s=Ts(e,"dy","avgPoolGrad"),i=Ts(t,"input","avgPoolGrad");Q(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Ku(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Ku(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),Q(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=ms.runKernel(ut,c,h);return l?Ku(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),lm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>um(e,r,a,s,i)}}},cm={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>ji(e,a,!1,!1),b:()=>ji(e,r,!0,!1)}:s&&!i?{a:()=>ji(a,e,!1,!0),b:()=>ji(r,e,!1,!1)}:{a:()=>ji(a,e,!0,!0),b:()=>ji(e,r,!0,!0)}:{a:()=>ji(e,a,!1,!0),b:()=>ji(r,e,!0,!1)}}},hm={kernelName:dt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>rh(e,r,a)}}},dm={kernelName:ft,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>bc(e,o,!0)}}},pm={kernelName:gt,gradFunc:e=>({x:()=>e.clone()})},fm={kernelName:yt,gradFunc:e=>({x:()=>Rl(e)})},mm={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Fl(_c(Kl(r,a),tc(r,s)),e,Rl(e))}}},gm={kernelName:vt,inputsToSave:["x"],gradFunc:Kf.gradFunc},ym={kernelName:wt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=pe(a,t[0].shape)[0],i=r.map((e=>e[s]));return Wh(e,i,s).map((e=>()=>e))}},bm={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return Q(Gu(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>bl(r.shape,e,a,i,o,u),filter:()=>wd(r,e,a.shape,i,o,u)}}},xm={kernelName:St,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>gl(e,a,s,i,o,1,u),filter:()=>wd(e,r,a.shape,s,i,o,u)}}};var vm=_s({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ku(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ku(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Q(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Q(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Q(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Q(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return ms.runKernel(Tt,o,u)}}),wm={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;Q(Gu(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>wl(i.shape,e,o,a,s),filter:()=>vm(i,e,o.shape,a,s)}}},km={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(pc(Ah(Ti(n,"float32"))),e)}}},Im={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(Fh(Ti(n,"float32")),e)}}},Sm={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Nc([a],r.rank);let n=Nl(e,a,s,!i);return null!=t&&(n=Ki(n,t)),n}}}},Nm={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Q(Gu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return Q(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Q(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Q(Hu(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),qu("depthwiseConv2d",s,i),{x:()=>Cd(u.shape,e,l,a,s,o,i),filter:()=>Ed(u,e,l.shape,a,s,o,i)}}},Tm={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>ms.runKernel(Pt,s,n),filter:()=>ms.runKernel(Bt,i,n)}}},Em={kernelName:Ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ms.runKernel(Gt,r)}}},Cm={kernelName:Ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=vu(Pl(pc(Hc(n))),2/Math.sqrt(Math.PI));return{x:()=>vu(e,r)}}},_m={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,n)}}},$m={kernelName:Kt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ku(e,n.shape)}}},Am={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,Pl(n))}}},Fm={kernelName:Qt,gradFunc:e=>({x:()=>Rl(e)})},Rm={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{const t=xu(e,Ti(r,"float32")),s=Ji(n.shape,a);return s.length>0?Ku(bc(t,s),n.shape):t},b:()=>{let t=vu(e,Ti(n,"float32"));const s=Ji(r.shape,a);s.length>0&&(t=Ku(bc(t,s),r.shape));const i=Hc(r);return pc(xu(t,Ti(i,"float32")))}}}},Dm={kernelName:tn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Th(1):o,l=Ji(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=yc(a,s),d=vu(e,u),p=Nh(yu(i,Th(r))),f=vu(vu(vu(p,p),p),Th(-.5));return{x:()=>1===s.rank?Ku(vu(vu(e,Vl(Ku(p,[1,1,1,s.shape[0]]),c)),u),a.shape):Ku(vu(vu(e,p),u),a.shape),mean:()=>{let e=vu(vu(p,Th(-1)),d);return 1===s.rank&&(e=bc(e,l)),Ku(e,s.shape)},variance:()=>{let e=vu(vu(f,h),d);return 1===s.rank&&(e=bc(e,l)),Ku(e,s.shape)},scale:()=>{const t=vu(h,p);let n=vu(e,t);return 1===s.rank&&(n=bc(n,l)),Ku(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=bc(t,l)),Ku(t,s.shape)}}}},Mm={kernelName:nn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=pe(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=Om(0,u),d=Om(u+1,u+1+c),p=Lm([o,[n],l]),f=Ku(e,p),m=Ku(a,[n]),g=Lm([[u],h,d]),y=Ki(f,g);let b=ad(y,m,r.shape[i]);const x=Tc(g);return b=Ki(b,x),b},indices:()=>a}}};function Om(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Lm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var zm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Rl(n),b:()=>Rl(r)}}},Pm={kernelName:on,gradFunc:e=>({x:()=>Ti(e,"float32")})},Bm={kernelName:cn,gradFunc:e=>({x:()=>Rl(e)})},Wm={kernelName:hn,gradFunc:e=>({x:()=>Rl(e)})},Vm={kernelName:dn,gradFunc:e=>({x:()=>Rl(e)})},Um={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=ql(r,0);return{x:()=>Fl(s,e,vu(e,a))}}},Gm={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,yu(n,1))}}},Hm={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,Ti(n,"float32"))}}},jm={kernelName:kn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Pl(r);return yc(e,vu(bc(e,a,!0),t))}}}};var qm=_s({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return ms.runKernel(Sn,o,u)}}),Km={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>qm(r,a,e,s,i,o,u)}}};function Xm(e,t,n,r){return t.rank<n.rank&&(t=Ku(t,Ic(t.shape,r))),e.rank<n.rank&&(e=Ku(e,Ic(e.shape,r))),{x:()=>vu(e,Ti(Al(n,t),e.dtype))}}var Ym={kernelName:Nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Xm(e,t[1],s,pe(a,s.shape));return{x:()=>i.x()}}},Zm={kernelName:Tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>vu(e,Ti(Kl(n,r),"float32")),b:()=>vu(e,Ti(ec(n,r),"float32"))}}};var Jm=_s({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Ts(e,"dy","maxPool3dGrad"),u=Ts(t,"input","maxPool3dGrad"),l=Ts(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Ku(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ku(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Ku(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Q(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Q(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Q(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),qu("maxPool3dGrad",s,i);const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=ms.runKernel($n,f,m);return p?Ku(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Qm={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Jm(e,r,a,s,i,o,u)}}};var eg=_s({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Ts(e,"dy","maxPoolGrad"),u=Ts(t,"input","maxPoolGrad"),l=Ts(n,"output","maxPoolGrad");Q(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),Q(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Q(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),qu("maxPoolGrad",s,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return ms.runKernel(Cn,c,h)}}),tg={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Qu(e,s,r.shape)}}},ng={kernelName:kr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>nl(e,r,a)}}},rg={kernelName:Ir,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Zu(e,r)}}};var ag=[Kf,Xf,Yf,Zf,Jf,Qf,em,tm,nm,rm,am,sm,om,lm,cm,hm,dm,pm,fm,mm,gm,ym,xm,bm,wm,km,Im,Sm,Nm,Tm,{kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{const t=xu(e,Ti(r,"float32")),s=Ji(n.shape,a);return s.length>0?Ku(bc(t,s),n.shape):t},b:()=>{let t=vu(e,Ti(n,"float32"));const s=Ji(r.shape,a);s.length>0&&(t=Ku(bc(t,s),r.shape));const i=Hc(r);return pc(xu(t,Ti(i,"float32")))}}}},Em,Cm,_m,$m,Am,Rm,Fm,Dm,Mm,zm,Pm,Bm,Wm,Vm,Um,Gm,Hm,jm,Km,Ym,Ym,Zm,Qm,{kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>eg(e,r,a,s,i,o)}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=pe(a,r.shape),i=re(kc(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Ku(e,t);return xu(vu(n,Pc(r.shape,"float32")),i)}}}},{kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Xm(e,i,s,pe(a,s.shape));return{x:()=>o.x()}}},{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>vu(e,Ti(tc(n,r),"float32")),b:()=>vu(e,Ti(ql(n,r),"float32"))}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Qu(e,s,r.shape)}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{const t=Ji(n.shape,a);return t.length>0?Ku(bc(e,t),n.shape):e},b:()=>{const t=vu(e,pc(Hl(xu(n,r)))),s=Ji(r.shape,a);return s.length>0?Ku(bc(t,s),r.shape):t}}}},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{const t=vu(e,Ti(r,"float32")),s=Ji(n.shape,a);return s.length>0?Ku(bc(t,s),n.shape):t},b:()=>{const t=vu(e,Ti(n,"float32")),s=Ji(r.shape,a);return s.length>0?Ku(bc(t,s),r.shape):t}}}},{kernelName:Pn,gradFunc:e=>({x:()=>pc(e)})},{kernelName:Hn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>zc(n.shape,"float32")}}},{kernelName:Gn,gradFunc:e=>({x:()=>Rl(e)})},{kernelName:jn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return sd(e,r).map((e=>()=>e))}},tg,tg,{kernelName:Xn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Qi(s.shape,i.shape);return{a:()=>{const t=Ti(i,"float32");let n=vu(e,vu(t,sh(s,yc(t,Th(1)))));const r=Ji(s.shape,o);return r.length>0&&(n=bc(n,r)),Ku(n,s.shape)},b:()=>{const t=ql(s,0),n=Fl(t,ac(s),Rl(s));let r=vu(e,vu(a,n));const u=Ji(i.shape,o);return u.length>0&&(r=bc(r,u)),Ku(r,i.shape)}}}},{kernelName:Yn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=ql(n,0);return{x:()=>Fl(a,e,vu(e,r)),alpha:()=>{let t=Fl(a,Rl(e),vu(e,n));const s=Ji(r.shape,e.shape);return s.length>0&&(t=bc(t,s)),Ku(t,r.shape)}}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,pc(Hc(n)))}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=vu(tc(n,6),qh(n));return{x:()=>vu(e,Ti(r,"float32"))}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,Ti(qh(n),"float32"))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ku(e,n.shape)}}},{kernelName:sr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ms.runKernel(ir,a,n)}}},{kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ms.runKernel(ar,a,n)}}},{kernelName:ur,gradFunc:(e,t,n)=>{const{dims:r}=n,a=pe(r,e.shape);return{x:()=>xh(e,a)}}},{kernelName:lr,gradFunc:e=>({x:()=>Rl(e)})},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pc(xu(e,vu(sh(n,1.5),2)))}}},{kernelName:dr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ti(Rl(n),"float32"),t:()=>vu(e,Ti(n,e.dtype)),e:()=>vu(e,Ti($c(n),e.dtype))}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ql(n,Th(0)),r=Th(rf),a=Th(af),s=vu(e,a),i=vu(vu(e,r),Pl(Ti(n,"float32")));return Fl(t,s,i)}}}},{kernelName:br,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,vu(n,yc(Th(1),n)))}}},{kernelName:yr,gradFunc:e=>({x:()=>Rl(e)})},{kernelName:mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(Il(Ti(n,"float32")),e)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(Sl(Ti(n,"float32")),e)}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=$o(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Jc(e,l)}}},{kernelName:Sr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=vu(e,r);return{logits:()=>yc(s,vu(bc(s,[a],true),r))}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,Ju(n))}}},ng,ng,rg,rg,{kernelName:vr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,vu(Uh(Ti(n,"float32")),2))}}},{kernelName:$r,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Th(2);return{a:()=>vu(e,vu(a,yc(n,r))),b:()=>vu(e,vu(a,yc(r,n)))}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(e,vu(Ti(n,"float32"),2))}}},{kernelName:qr,gradFunc:e=>({x:()=>Rl(e)})},{kernelName:Or,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Qi(n.shape,r.shape);return{a:()=>{let t=e;const r=Ji(n.shape,a);return r.length>0&&(t=bc(t,r)),Ku(t,n.shape)},b:()=>{let t=e;const n=Ji(r.shape,a);return n.length>0&&(t=bc(t,n)),Ku(pc(t),r.shape)}}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;pe(s,r.shape).forEach((e=>{a[e]=1}));const i=Ku(e,a),o=vu(i,Pc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xu(e,Hc(Il(n)))}}},{kernelName:zr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vu(yc(Th(1),Hc(n)),e)}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Rl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=yu(t,Qu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=yu(t,Qu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=yu(t,Qu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=yu(t,Qu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Vr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Tc(a);return{x:()=>Ki(e,s)}}},{kernelName:Gr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>jh(e,a)}}},{kernelName:Hr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Oc(t,Rl(t)),r=jl(e,n);let a=Kl(t,Th(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Bl(a,e+1);a=_c(a,Pc(r.shape,"bool"));const i=Rl(r);return Fl(a,r,i)}(e,n)}}},{kernelName:jr,gradFunc:e=>({x:()=>Rl(e)})}];for(const e of ag)oa(e);Ga().prototype.abs=function(){return this.throwIfDisposed(),wu(this)},Ga().prototype.acos=function(){return this.throwIfDisposed(),ku(this)},Ga().prototype.acosh=function(){return this.throwIfDisposed(),Iu(this)},Ga().prototype.add=function(e){return this.throwIfDisposed(),yu(this,e)},Ga().prototype.all=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},Ga().prototype.any=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},Ga().prototype.argMax=function(e){return this.throwIfDisposed(),Eu(this,e)},Ga().prototype.argMin=function(e){return this.throwIfDisposed(),Cu(this,e)},Ga().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,(()=>"The array must have only 1 element.")),Ku(this,[])},Ga().prototype.asType=function(e){return this.throwIfDisposed(),Ti(this,e)},Ga().prototype.as1D=function(){return this.throwIfDisposed(),Ku(this,[this.size])},Ga().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ku(this,[e,t])},Ga().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ku(this,[e,t,n])},Ga().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ku(this,[e,t,n,r])},Ga().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Ku(this,[e,t,n,r,a])},Ga().prototype.asin=function(){return this.throwIfDisposed(),_u(this)},Ga().prototype.asinh=function(){return this.throwIfDisposed(),$u(this)},Ga().prototype.atan=function(){return this.throwIfDisposed(),Au(this)},Ga().prototype.atan2=function(e){return this.throwIfDisposed(),Fu(this,e)},Ga().prototype.atanh=function(){return this.throwIfDisposed(),Ru(this)},Ga().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Xu(this,e,t,n,r)},Ga().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),nl(this,e,t)},Ga().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),rl(this,e,t,n,r,a)},Ga().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ll(this,e)},Ga().prototype.cast=function(e){return this.throwIfDisposed(),Ti(this,e)},Ga().prototype.ceil=function(){return this.throwIfDisposed(),cl(this)},Ga().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},Ga().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ua&&(e=[e]),Zu([this,...e],t)},Ga().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),yl(this,e,t,n,r,a,s)},Ga().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),xl(this,e,t,n,r,a)},Ga().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),gl(this,e,t,n,r,a,s)},Ga().prototype.cos=function(){return this.throwIfDisposed(),Il(this)},Ga().prototype.cosh=function(){return this.throwIfDisposed(),Sl(this)},Ga().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Nl(this,e,t,n)},Ga().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),El(this,e,t)},Ga().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Cl(this,e,t,n,r,a,s)},Ga().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),$l(this,e,t,n,r,a)},Ga().prototype.divNoNan=function(e){return this.throwIfDisposed(),Dl(this,e)},Ga().prototype.div=function(e){return this.throwIfDisposed(),xu(this,e)},Ga().prototype.dot=function(e){return this.throwIfDisposed(),Ml(this,e)},Ga().prototype.elu=function(){return this.throwIfDisposed(),Ll(this)},Ga().prototype.equal=function(e){return this.throwIfDisposed(),Al(this,e)},Ga().prototype.erf=function(){return this.throwIfDisposed(),zl(this)},Ga().prototype.exp=function(){return this.throwIfDisposed(),Pl(this)},Ga().prototype.expandDims=function(e){return this.throwIfDisposed(),Bl(this,e)},Ga().prototype.expm1=function(){return this.throwIfDisposed(),Wl(this)},Ga().prototype.fft=function(){return this.throwIfDisposed(),zh(this)},Ga().prototype.flatten=function(){return this.throwIfDisposed(),Ku(this,[this.size])},Ga().prototype.floor=function(){return this.throwIfDisposed(),Hl(this)},Ga().prototype.floorDiv=function(e){return this.throwIfDisposed(),bu(this,e)},Ga().prototype.gather=function(e,t){return this.throwIfDisposed(),jl(this,e,t)},Ga().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Kl(this,e)},Ga().prototype.greater=function(e){return this.throwIfDisposed(),ql(this,e)},Ga().prototype.ifft=function(){return this.throwIfDisposed(),Ph(this)},Ga().prototype.irfft=function(){return this.throwIfDisposed(),Bh(this)},Ga().prototype.isFinite=function(){return this.throwIfDisposed(),Yl(this)},Ga().prototype.isInf=function(){return this.throwIfDisposed(),Zl(this)},Ga().prototype.isNaN=function(){return this.throwIfDisposed(),Jl(this)},Ga().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ql(this,e)},Ga().prototype.lessEqual=function(e){return this.throwIfDisposed(),tc(this,e)},Ga().prototype.less=function(e){return this.throwIfDisposed(),ec(this,e)},Ga().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),rc(this,e,t,n,r)},Ga().prototype.logSigmoid=function(){return this.throwIfDisposed(),mc(this)},Ga().prototype.logSoftmax=function(e){return this.throwIfDisposed(),xc(this,e)},Ga().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Cc(this,e,t)},Ga().prototype.log=function(){return this.throwIfDisposed(),ac(this)},Ga().prototype.log1p=function(){return this.throwIfDisposed(),sc(this)},Ga().prototype.logicalAnd=function(e){return this.throwIfDisposed(),_c(this,e)},Ga().prototype.logicalNot=function(){return this.throwIfDisposed(),$c(this)},Ga().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ac(this,e)},Ga().prototype.logicalXor=function(e){return this.throwIfDisposed(),Fc(this,e)},Ga().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ji(this,e,t,n)},Ga().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Rc(this,e,t,n,r)},Ga().prototype.max=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},Ga().prototype.maximum=function(e){return this.throwIfDisposed(),Oc(this,e)},Ga().prototype.mean=function(e,t){return this.throwIfDisposed(),Lc(this,e,t)},Ga().prototype.min=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},Ga().prototype.minimum=function(e){return this.throwIfDisposed(),Vc(this,e)},Ga().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Uc(this,e,t)},Ga().prototype.mod=function(e){return this.throwIfDisposed(),Gc(this,e)},Ga().prototype.mul=function(e){return this.throwIfDisposed(),vu(this,e)},Ga().prototype.neg=function(){return this.throwIfDisposed(),pc(this)},Ga().prototype.norm=function(e,t,n){return this.throwIfDisposed(),hd(this,e,t,n)},Ga().prototype.notEqual=function(e){return this.throwIfDisposed(),Xc(this,e)},Ga().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),qi(this,e,t,n)},Ga().prototype.onesLike=function(){return this.throwIfDisposed(),Yc(this)},Ga().prototype.pad=function(e,t){return this.throwIfDisposed(),Jc(this,e,t)},Ga().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),ah(this,e,t,n,r,a,s)},Ga().prototype.pow=function(e){return this.throwIfDisposed(),sh(this,e)},Ga().prototype.prelu=function(e){return this.throwIfDisposed(),ih(this,e)},Ga().prototype.prod=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},Ga().prototype.reciprocal=function(){return this.throwIfDisposed(),gh(this)},Ga().prototype.relu=function(){return this.throwIfDisposed(),yh(this)},Ga().prototype.relu6=function(){return this.throwIfDisposed(),bh(this)},Ga().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ku(this,e.shape)},Ga().prototype.reshape=function(e){return this.throwIfDisposed(),Ku(this,e)},Ga().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),tp(this,e,t,n)},Ga().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),np(this,e,t,n)},Ga().prototype.reverse=function(e){return this.throwIfDisposed(),xh(this,e)},Ga().prototype.rfft=function(){return this.throwIfDisposed(),Vh(this)},Ga().prototype.round=function(){return this.throwIfDisposed(),Sh(this)},Ga().prototype.rsqrt=function(){return this.throwIfDisposed(),Nh(this)},Ga().prototype.selu=function(){return this.throwIfDisposed(),Eh(this)},Ga().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ch(this,e,t,n,r,a,s)},Ga().prototype.sigmoid=function(){return this.throwIfDisposed(),Ju(this)},Ga().prototype.sign=function(){return this.throwIfDisposed(),$h(this)},Ga().prototype.sin=function(){return this.throwIfDisposed(),Ah(this)},Ga().prototype.sinh=function(){return this.throwIfDisposed(),Fh(this)},Ga().prototype.slice=function(e,t){return this.throwIfDisposed(),Qu(this,e,t)},Ga().prototype.softmax=function(e){return this.throwIfDisposed(),Lh(this,e)},Ga().prototype.softplus=function(){return this.throwIfDisposed(),fc(this)},Ga().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},Ga().prototype.split=function(e,t){return this.throwIfDisposed(),Wh(this,e,t)},Ga().prototype.sqrt=function(){return this.throwIfDisposed(),Uh(this)},Ga().prototype.square=function(){return this.throwIfDisposed(),Hc(this)},Ga().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Gh(this,e)},Ga().prototype.squeeze=function(e){return this.throwIfDisposed(),Hh(this,e)},Ga().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ua?[this,e]:[this,...e];return jh(n,t)},Ga().prototype.step=function(e){return this.throwIfDisposed(),qh(this,e)},Ga().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Kh(this,e,t,n,r,a,s,i,o)},Ga().prototype.sub=function(e){return this.throwIfDisposed(),yc(this,e)},Ga().prototype.sum=function(e,t){return this.throwIfDisposed(),bc(this,e,t)},Ga().prototype.tan=function(){return this.throwIfDisposed(),Xh(this)},Ga().prototype.tanh=function(){return this.throwIfDisposed(),el(this)},Ga().prototype.tile=function(e){return this.throwIfDisposed(),Vl(this,e)},Ga().prototype.toBool=function(){return this.throwIfDisposed(),Ti(this,"bool")},Ga().prototype.toFloat=function(){return this.throwIfDisposed(),Ti(this,"float32")},Ga().prototype.toInt=function(){return this.throwIfDisposed(),Ti(this,"int32")},Ga().prototype.topk=function(e,t){return this.throwIfDisposed(),td(this,e,t)},Ga().prototype.transpose=function(e){return this.throwIfDisposed(),Ki(this,e)},Ga().prototype.unique=function(e){return this.throwIfDisposed(),rd(this,e)},Ga().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ad(this,e,t)},Ga().prototype.unstack=function(e){return this.throwIfDisposed(),sd(this,e)},Ga().prototype.where=function(e,t){return this.throwIfDisposed(),Fl(e,this,t)},Ga().prototype.zerosLike=function(){return this.throwIfDisposed(),Rl(this)};var sg,ig={};function og(){return null==sg&&(sg=mu().epsilon()),sg}d(ig,{maxNorm:()=>Vg,minMaxNorm:()=>Hg,nonNeg:()=>Gg,unitNorm:()=>Ug});var ug=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ug.prototype)}},lg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lg.prototype)}},cg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cg.prototype)}},hg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hg.prototype)}},dg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dg.prototype)}};function pg(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function fg(e,t){if(!e)throw new dg(t)}function mg(e,t){let n=0;for(const r of e)r===t&&n++;return n}function gg(e){return 1===e.length?e[0]:e}function yg(e){return Array.isArray(e)?e:[e]}function bg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function xg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var vg={};function wg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function kg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>kg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?kg(t):e[n]=t.value)}}}function Ig(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in vg)s=vg[a];else if(s=t[a],null==s)throw new cg(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new cg(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in vg?[o,u]=vg.className:i in t&&([o,u]=t[i]),null==o)throw new cg(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(vg))e[t]=vg[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},vg);for(const e of Object.keys(n))vg[e]=n[e];kg(s.config);const r=u(o,s.config,n,a);return vg=Object.assign({},t),r}{const e=Object.assign({},vg);for(const e of Object.keys(n))vg[e]=n[e];const t=new o(s.config);return vg=Object.assign({},e),t}}}function Sg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ng(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Tg(e){if(null==e)throw new cg(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Eg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new cg(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Cg(e,t,n=0,r=1/0){return fg(n>=0),fg(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function _g(e,t){Array.isArray(e)?(da.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>_g(e,`element ${n+1} of ${t}`)))):da.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${$g(e)}.`))}function $g(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>$g(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Ag(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Fg(e,t){return au((()=>Uh(bc(vu(e,e),t,!0))))}var Rg=class extends Ro.Serializable{getConfig(){return{}}},Dg=class extends Rg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return au((()=>{const t=Fg(e,this.axis),n=hl(t,0,this.maxValue);return vu(e,xu(n,yu(og(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Dg.className="MaxNorm",Ro.registerClass(Dg);var Mg=class extends Rg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return au((()=>xu(e,yu(og(),Fg(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Mg.className="UnitNorm",Ro.registerClass(Mg);var Og=class extends Rg{apply(e){return yh(e)}};Og.className="NonNeg",Ro.registerClass(Og);var Lg=class extends Rg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return au((()=>{const t=Fg(e,this.axis),n=yu(vu(this.rate,hl(t,this.minValue,this.maxValue)),vu(1-this.rate,t));return vu(e,xu(n,yu(og(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Lg.className="MinMaxNorm",Ro.registerClass(Lg);var zg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pg(e){return wg(e)}function Bg(e,t={}){return Ig(e,Ro.SerializationMap.getMap().classNameMap,t,"constraint")}function Wg(e){if(null==e)return null;if("string"==typeof e){return Bg({className:e in zg?zg[e]:e,config:{}})}return e instanceof Rg?e:Bg(e)}function Vg(e){return new Dg(e)}function Ug(e){return new Mg(e)}function Gg(){return new Og}function Hg(e){return new Lg(e)}var jg={};d(jg,{constant:()=>Jy,glorotNormal:()=>sb,glorotUniform:()=>ab,heNormal:()=>ib,heUniform:()=>ob,identity:()=>nb,leCunNormal:()=>ub,leCunUniform:()=>lb,ones:()=>Zy,orthogonal:()=>cb,randomNormal:()=>eb,randomUniform:()=>Qy,truncatedNormal:()=>tb,varianceScaling:()=>rb,zeros:()=>Yy});var qg=["channelsFirst","channelsLast"],Kg=["nearest","bilinear"],Xg=["valid","same","causal"],Yg=["max","avg"],Zg=["sum","mul","concat","ave"],Jg=new Map;function Qg(e){Eg(qg,"DataFormat",e)}function ey(e){Eg(Xg,"PaddingMode",e)}function ty(e){Eg(Yg,"PoolMode",e)}var ny=[];function ry(e,t){ny.push(e);try{const e=t();return ny.pop(),e}catch(e){throw ny.pop(),e}}function ay(e){if(!oy(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ny.length?"":ny.join("/")+"/")+e}function sy(e){if(!oy(e))throw new Error("Not a valid tensor name: '"+e+"'");Jg.has(e)||Jg.set(e,0);const t=Jg.get(e);if(Jg.set(e,Jg.get(e)+1),t>0){const n=`${e}_${t}`;return Jg.set(n,1),n}return e}var iy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function oy(e){return!!e.match(iy)}function uy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function ly(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function cy(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function hy(e,t){if(t<e)throw new cg(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function dy(e,t){return Ti(e,t)}function py(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ku(e,n)}function fy(e,t,n){return au((()=>{switch(e.rank){case 1:return Rh(e,t,n);case 2:return Dh(e,[t,0],[n,e.shape[1]]);case 3:return Mh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Oh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Qu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Qu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new cg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function my(e,t,n){return au((()=>{switch(e.rank){case 1:return Rh(e,t,n);case 2:return Dh(e,[0,t],[e.shape[0],n]);case 3:return Mh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Oh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new cg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gy(e,t,n,r){return au((()=>{switch(e.rank){case 1:return Rh(e,t,n);case 2:switch(r){case 1:return fy(e,t,n);case 2:return my(e,t,n);default:throw new cg(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return fy(e,t,n);case 2:return Mh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return my(e,t,n);default:throw new cg(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return fy(e,t,n);case 2:return Oh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Oh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return my(e,t,n);default:throw new cg(`The axis is not within the rank of the tensor ${r}`)}default:throw new cg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Zu(e,t)}function by(e,t){switch(e.rank){case 1:return dl([e,t]);case 2:return pl([e,t],0);case 3:return fl([e,t],0);case 4:return ml([e,t],0);default:throw new cg(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function xy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new cg(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Vl(e,t)}function vy(e,t=0,n=1,r,a){return dh(e,t,n,r,a)}function wy(e,t,n,r){if(e.rank<2||t.rank<2)throw new hg(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new hg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,s=!1;return vd.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?Sy(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=Ku(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ku(Ki(t,c),[u,-1]);const h=[...a,...l],d=!1,p=!1;return Ku(vd.matMul({a:e,b:t,transposeA:d,transposeB:p,bias:r?Sy(e.rank,r,"channelsLast"):null,activation:n}),h)}}function ky(e,t,n){return au((()=>(t=Array.isArray(t)?Yh(t,"int32"):Ti(t,"int32"),jl(e,t,n))))}function Iy(e){return vu(e,e)}function Sy(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new cg(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ku(t,[1,r[0],1,1,1]):Ku(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ku(t,[1,1,1,1,r[0]]):Ku(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ku(t,[1,r[0],1,1]):Ku(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ku(t,[1,1,1,r[0]]):Ku(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ku(t,[1,r[0],1]):Ku(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ku(t,[1,1,r[0]]):Ku(t,[1].concat(r))}else if(e<3)return t;throw new cg(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ny(e,t,n){return au((()=>(null==n&&(n="channelsLast"),Qg(n),yu(e,Sy(e.rank,t,n)))))}function Ty(e,t,n,r){return au((()=>gd(e,t,n,r)))}function Ey(e,t,n=!1){return n?e():t()}var Cy=["fanIn","fanOut","fanAvg"],_y=["normal","uniform","truncatedNormal"];var $y=class extends Ro.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Ay=class extends $y{apply(e,t){return zc(e,t)}};Ay.className="Zeros",Ro.registerClass(Ay);var Fy=class extends $y{apply(e,t){return Pc(e,t)}};Fy.className="Ones",Ro.registerClass(Fy);var Ry=class extends $y{constructor(e){if(super(),"object"!=typeof e)throw new cg(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new cg(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return au((()=>vu(Th(this.value),Pc(e,t))))}getConfig(){return{value:this.value}}};Ry.className="Constant",Ro.registerClass(Ry);var Dy=class extends $y{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ph(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Dy.className="RandomUniform",Ro.registerClass(Dy);var My=class extends $y{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hg(`randomNormal does not support dType ${t}.`);return vy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};My.className="RandomNormal",Ro.registerClass(My);var Oy=class extends $y{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hg(`truncatedNormal does not support dType ${t}.`);return nd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Oy.className="TruncatedNormal",Ro.registerClass(Oy);var Ly=class extends $y{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return au((()=>{if(2!==e.length||e[0]!==e[1])throw new cg("Identity matrix initializer can only be used for 2D square matrices.");return vu(this.gain,Ul(e[0]))}))}getConfig(){return{gain:this.gain}}};Ly.className="Identity",Ro.registerClass(Ly);var zy=class extends $y{constructor(e){if(super(),e.scale<0)throw new cg(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Eg(Cy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Eg(_y,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Qg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=uy(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=uy(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=uy(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new hg(`${this.getClassName()} does not support dType ${t}.`);return nd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return ph(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};zy.className="VarianceScaling",Ro.registerClass(zy);var Py=class extends zy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zy.className}};Py.className="GlorotUniform",Ro.registerClass(Py);var By=class extends zy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zy.className}};By.className="GlorotNormal",Ro.registerClass(By);var Wy=class extends zy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zy.className}};Wy.className="HeNormal",Ro.registerClass(Wy);var Vy=class extends zy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zy.className}};Vy.className="HeUniform",Ro.registerClass(Vy);var Uy=class extends zy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zy.className}};Uy.className="LeCunNormal",Ro.registerClass(Uy);var Gy=class extends zy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zy.className}};Gy.className="LeCunNormal",Ro.registerClass(Gy);var Hy=class extends $y{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new hg("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return au((()=>{if(e.length<2)throw new hg("Shape must be at least 2D.");e[0],e[1];const t=vy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=$p.gramSchmidt(t);return e[0]>e[1]&&(n=Ki(n)),vu(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Hy.className="Orthogonal",Ro.registerClass(Hy);var jy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qy(e,t={}){return Ig(e,Ro.SerializationMap.getMap().classNameMap,t,"initializer")}function Ky(e){return wg(e)}function Xy(e){if("string"==typeof e){const t=e in jy?jy[e]:e;if("GlorotNormal"===t)return new By;if("GlorotUniform"===t)return new Py;if("HeNormal"===t)return new Wy;if("HeUniform"===t)return new Vy;if("LeCunNormal"===t)return new Uy;if("LeCunUniform"===t)return new Gy;{const e={};return e.className=t,e.config={},qy(e)}}return e instanceof $y?e:qy(e)}function Yy(){return new Ay}function Zy(){return new Fy}function Jy(e){return new Ry(e)}function Qy(e){return new Dy(e)}function eb(e){return new My(e)}function tb(e){return new Oy(e)}function nb(e){return new Ly(e)}function rb(e){return new zy(e)}function ab(e){return new Py(e)}function sb(e){return new By(e)}function ib(e){return new Wy(e)}function ob(e){return new Vy(e)}function ub(e){return new Uy(e)}function lb(e){return new Gy(e)}function cb(e){return new Hy(e)}var hb={};d(hb,{Layer:()=>$b,RNN:()=>aw,RNNCell:()=>sw,activation:()=>Tk,add:()=>Mk,alphaDropout:()=>NI,average:()=>Ok,averagePooling1d:()=>Hk,averagePooling2d:()=>Kk,averagePooling3d:()=>Zk,avgPool1d:()=>jk,avgPool2d:()=>Xk,avgPool3d:()=>Jk,avgPooling1d:()=>qk,avgPooling2d:()=>Yk,avgPooling3d:()=>Qk,batchNormalization:()=>Vk,bidirectional:()=>yI,concatenate:()=>Lk,conv1d:()=>yk,conv2d:()=>bk,conv2dTranspose:()=>xk,conv3d:()=>vk,conv3dTranspose:()=>wk,convLstm2d:()=>pI,convLstm2dCell:()=>fI,cropping2D:()=>Ik,dense:()=>Ek,depthwiseConv2d:()=>Nk,dot:()=>Wk,dropout:()=>Ck,elu:()=>hk,embedding:()=>Dk,flatten:()=>$k,gaussianDropout:()=>SI,gaussianNoise:()=>II,globalAveragePooling1d:()=>eI,globalAveragePooling2d:()=>tI,globalMaxPool1d:()=>xI,globalMaxPool2d:()=>vI,globalMaxPooling1d:()=>nI,globalMaxPooling2d:()=>rI,gru:()=>oI,gruCell:()=>uI,input:()=>sv,inputLayer:()=>ck,layerNormalization:()=>Uk,leakyReLU:()=>pk,lstm:()=>lI,lstmCell:()=>cI,masking:()=>TI,maxPool1d:()=>wI,maxPool2d:()=>kI,maxPooling1d:()=>aI,maxPooling2d:()=>sI,maxPooling3d:()=>iI,maximum:()=>zk,minimum:()=>Pk,multiply:()=>Bk,permute:()=>Rk,prelu:()=>fk,reLU:()=>dk,repeatVector:()=>Ak,reshape:()=>Fk,rnn:()=>mI,separableConv2d:()=>kk,simpleRNN:()=>hI,simpleRNNCell:()=>dI,softmax:()=>mk,spatialDropout1d:()=>_k,stackedRNNCells:()=>gI,thresholdedReLU:()=>gk,timeDistributed:()=>bI,upSampling2d:()=>Sk,zeroPadding2d:()=>Gk});var db=0;function pb(){return db++}var fb={};function mb(e=""){return e in fb||(fb[e]=0),fb[e]+=1,e+fb[e].toString()}function gb(e){return Array.isArray(e)&&Array.isArray(e[0])}function yb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function bb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new cg(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function xb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new cg(`Expected exactly 1 Shape; got ${e.length}`)}return e}function vb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var wb="Variable",kb=class{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=pb(),n=null==n?wb:n,this.originalName=ay(n),this.name=sy(this.originalName),this.trainable_=r,this.constraint=a,this.val=id(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Ib(e){return e.map((e=>e.read()))}function Sb(e){e.forEach((e=>{e[0].write(e[1])}))}var Nb=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Tb=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=pb(),null!=s&&(this.originalName=ay(s),this.name=sy(this.originalName)),this.rank=t.length}},Eb=0,Cb=class{constructor(e,t){this.callArgs=t,this.id=Eb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},_b=0,$b=class extends Ro.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_b++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=bg(e)+"_"+mb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new lg(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new cg(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return gg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return gg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ug(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ug(`Layer ${this.name} is not connected, no input to return.`);return gg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ug(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ug(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return gg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=yg(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=yg(this.inputSpec);if(e.length!==t.length)throw new cg(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new cg(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new cg(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new cg(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new cg(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new cg(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new cg(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=yg(e);let r=!0;for(const e of n)if(!(e instanceof Tb)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Tb){a=!1;break}if(r===a)throw new cg("Arguments to apply() must be all SymbolicTensors or all Tensors");return ry(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of yg(e))t.push(n.shape);this.build(gg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=yg(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=gg(s),null!=this.activityRegularizer)throw new hg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=yg(e);const t=[];for(const n of e)t.push(n.shape);return gg(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Tb(s,n,this,yg(e),t,this.name,r))):new Tb(s,r,this,yg(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new hg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ug(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ug(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new lg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return vb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ib(e?this.trainableWeights:this.weights)}setWeights(e){au((()=>{const t=this.weights;if(t.length!==e.length)throw new cg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ib(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!da.arraysEqual(s.shape,o.shape))throw new cg(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Sb(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new cg(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Xy("zeros"));const u=r.apply(t,n),l=new kb(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=yg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=yg(e);t=yg(t),n=yg(n),r=yg(r),a=yb(a),s=yb(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Cb({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Ab(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ab(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var Fb,Rb,Db=class extends $b{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:mb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new cg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new cg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new cg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Tb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Cb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new cg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Mb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new cg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new Db({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ob(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];su(r)}}function Lb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}Db.className="InputLayer",Ro.registerClass(Db),(Rb=Fb||(Fb={}))[Rb.SILENT=0]="SILENT",Rb[Rb.VERBOSE=1]="VERBOSE";var zb=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Pb=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},Bb=class extends zb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=au((()=>yu(this.totals[e],vu(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:au((()=>{const n=vu(xu(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),iu(t[e])})))}},Wb=class extends zb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}},Vb=class extends zb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Hp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");da.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():da.now();return(...s)=>{const i=null!=n?n():da.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ob(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ob(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ob(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ob(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ob(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):da.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ob(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ob(e),await this.trainEnd(e))}};function Ub(e,t){if(null==e&&(e={}),e instanceof zb)return[e];if(Array.isArray(e)&&e[0]instanceof zb)return e;return yg(e).map((e=>new Vb(e,t)))}var Gb=class{constructor(){}static registerCallbackConstructor(e,t){da.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Gb.checkForDuplicate(t),null==Gb.constructors[e]&&(Gb.constructors[e]=[]),Gb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Gb.constructors){Gb.constructors[+t].forEach((t=>{if(t===e)throw new cg("Duplicate callback constructor.")}))}}static clear(){Gb.constructors={}}static createCallbacks(e){const t=[];for(const n in Gb.constructors){const r=+n;e>=r&&t.push(...Gb.constructors[r])}return t.map((e=>new e))}};function Hb(e,t,n,r,a,s,i,o,u){const l=new Wb,c=[new Bb,...Gb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Pb(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function jb(e,t={},n=!1){return Ig(e,Ro.SerializationMap.getMap().classNameMap,t,"layer",n)}function qb(e,t){return au((()=>{"float32"!==e.dtype&&(e=Ti(e,"float32"));const n=bc(Iy(e),t,!0),r=Gl(n.shape,og()),a=Uh(Oc(n,r));return xu(e,a)}))}function Kb(e,t){return au((()=>Lc(Iy(yc(t,e)),-1)))}function Xb(e,t){return au((()=>Lc(wu(yc(t,e)),-1)))}function Yb(e,t){return au((()=>{const n=yc(e,t),r=hl(wu(e),og(),Number.MAX_VALUE),a=wu(xu(n,r));return vu(100,Lc(a,-1))}))}function Zb(e,t,n=!1){return au((()=>{if(n)t=Lh(t);else{const e=bc(t,t.shape.length-1,!0);t=xu(t,e)}return t=hl(t,og(),1-og()),pc(bc(vu(Ti(e,"float32"),ac(t)),t.shape.length-1))}))}function Jb(e,t,n=!1){return au((()=>{const r=Ti(Hl(function(e){const t=[uy(e.shape)];return Ku(e,t)}(e)),"int32"),a=(t=hl(t,og(),1-og())).shape;return Zb(Ku(qi(r,a[a.length-1]),a),t,n)}))}function Qb(e,t){return au((()=>{let n;return n=hl(t,og(),1-og()),n=ac(xu(n,yc(1,n))),Lc(function(e,t){if(!da.arraysEqual(e.shape,t.shape))throw new cg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return au((()=>{const n=yh(t),r=pc(wu(t));return yu(yc(n,vu(t,e)),sc(Pl(r)))}))}(e,n),-1)}))}function ex(e,t){return au((()=>{const n=qb(e,-1),r=qb(t,-1),a=vu(n,r);return pc(bc(a,-1))}))}Gb.constructors={};var tx={meanSquaredError:Kb,meanAbsoluteError:Xb,meanAbsolutePercentageError:Yb,meanSquaredLogarithmicError:function(e,t){return au((()=>{const n=hl(t,og(),Number.MAX_VALUE),r=ac(yu(1,n)),a=hl(e,og(),Number.MAX_VALUE),s=ac(yu(1,a));return Lc(Iy(yc(r,s)),-1)}))},squaredHinge:function(e,t){return au((()=>{const n=Oc(0,yc(1,vu(e,t)));return Lc(Iy(n),-1)}))},hinge:function(e,t){return au((()=>{const n=Oc(0,yc(1,vu(e,t)));return Lc(n,-1)}))},categoricalHinge:function(e,t){return au((()=>{const n=bc(vu(e,t),-1),r=gc(vu(yc(1,e),t),-1);return Oc(0,yu(1,yc(r,n)))}))},logcosh:function(e,t){return au((()=>{const n=Math.log(2),r=yc(t,e),a=yc(yu(r,fc(vu(-2,r))),n);return Lc(a,-1)}))},categoricalCrossentropy:Zb,sparseCategoricalCrossentropy:Jb,binaryCrossentropy:Qb,kullbackLeiblerDivergence:function(e,t){return au((()=>{const n=hl(e,og(),1),r=hl(t,og(),1);return bc(vu(e,ac(xu(n,r))),-1)}))},poisson:function(e,t){return au((()=>{const n=ac(yu(og(),t));return Lc(yc(t,vu(e,n)),-1)}))},cosineProximity:ex};function nx(e){if("string"==typeof e){if(e in tx)return tx[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new cg(t)}return e}function rx(e,t){return au((()=>{const n=vu(.5,Yc(t)),r=dy(ql(t,n),e.dtype);return Lc(Al(e,r),-1)}))}function ax(e,t){return au((()=>dy(Al(Eu(e,-1),Eu(t,-1)),"float32")))}function sx(e,t){return au((()=>Ti(bc(_c(Al(e,1),Al(t,1))),"float32")))}function ix(e,t){return au((()=>{const n=sx(e,t),r=function(e,t){return au((()=>Ti(bc(_c(Al(e,0),Al(t,1))),"float32")))}(e,t),a=yu(n,r);return Ti(Fl(ql(a,0),xu(n,a),0),"float32")}))}function ox(e,t){return au((()=>{const n=sx(e,t),r=function(e,t){return au((()=>Ti(bc(_c(Al(e,1),Al(t,0))),"float32")))}(e,t),a=yu(n,r);return Ti(Fl(ql(a,0),xu(n,a),0),"float32")}))}function ux(e,t){return Qb(e,t)}function lx(e,t){return e.rank===t.rank&&(e=Hh(e,[e.rank-1])),(t=Eu(t,-1)).dtype!==e.dtype&&(t=Ti(t,e.dtype)),Ti(Al(e,t),"float32")}var cx=Zb,hx=Jb,dx={binaryAccuracy:rx,categoricalAccuracy:ax,precision:ix,categoricalCrossentropy:cx,sparseCategoricalCrossentropy:hx,mse:Kb,MSE:Kb,mae:Xb,MAE:Xb,mape:Yb,MAPE:Yb,cosine:ex};function px(e){if("string"==typeof e&&e in dx)return dx[e];if("string"!=typeof e&&null!=e)return e;throw new cg(`Unknown metric ${e}`)}function fx(e){if(fg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(tx))if(tx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(dx))if(dx[n]===e){t=n;break}return void 0!==t?t:e.name}}function mx(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!gx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){JSON.stringify(e).length}}function gx(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!gx(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!gx(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function yx(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),bx(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?xx(o[e],n,r):vx(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?vb(e.collectedTrainableWeights):vb(e.trainableWeights);return t}(e),l=vb(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function bx(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function xx(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}bx([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function vx(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];bx([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)bx(["","","",s[e]],t,r)}function wx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function kx(e,t){if(null===e)return null;if("string"==typeof e)return xg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];wx(t,a,r)?n.push(r):n.push(kx(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=xg(n);t[e]=kx(r,e)}}return t}}function Ix(e,t){if(null==e)return null;if("string"==typeof e)return bg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];wx(t,a,r)?n.push(r):n.push(Ix(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=bg(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Ix(r,n):r}return t}}var Sx="3.13.0";var Nx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Nx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new cg(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ti(t,e.dtype)}catch(n){throw new cg(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Tb){if(null==this.id2Value[e.id])throw new cg(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new cg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Tb){if(null==this.id2Value[e.id])throw new cg(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new cg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&su(this.id2Mask)}},Tx={},Ex={};function Cx(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Tx[c]){const e=function(e,t){da.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=$x(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=$x(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:_x(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Tx[c]=h,Ex[c]=d}h=Tx[c],d={},a||Object.assign(d,Ex[c]);const p=new Nx(t);for(let e=0;e<h.length;++e){if(null!=r){const e=nu().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof Db)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=yg(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Ax(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||su(f)}return p.disposeMasks(),s?u:u[0]}function _x(e){const t={};for(const n in e)t[n]=e[n].size;return t}function $x(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Ax(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Fx=class extends $b{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=mb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ng(this.inputs).length!==this.inputs.length)throw new cg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ng(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;fg(0===n,"input layer has >1 nodes"),fg(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Db))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new lg(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Fx.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Sg);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Fx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Sg);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new lg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new lg(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Cb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new cg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new cg(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new cg(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new cg(`${e.length} of ${r} weights are not set: ${e}`)}Sb(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Sx}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ix(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return au((()=>{e=yg(e);const n=new Nx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Cx(this.outputs,n,t)}))}computeMask(e,t){return au((()=>{let n;return e=yg(e),n=null==t?pg(null,e.length):yg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=yb(e);if(t.length!==this.inputLayers.length)throw new cg(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Sg);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=yb(t.computeOutputShape(gg(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];fg(t in n),a.push(n[t])}return gg(a)}runInternalGraph(e,t){null==t&&(t=pg(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Sg);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=yg(t.call(e,l)),u=yg(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=yg(t.call(r,l)),u=yg(t.computeMask(r,i));if(t.activityRegularizer)throw new hg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){fg(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Fx?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Fx.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new cg(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new cg("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new cg(`No such layer: ${e}`)}calculateLosses(){return au((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Fx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Fx.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Fx.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Fx.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Fx.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(gg(n),r)}function u(e){const n=e.name,s=jb(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new cg(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Tg(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];fg(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];fg(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new cg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){au((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Rx(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Dx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=au((()=>{if(1===e.shape.length)return Ei(e);if(2===e.shape.length){if(e.shape[1]>1){return Eu(e,1)}if(1===e.shape[1])return Ku(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());su(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Yh(a,"float32")}return null}function Mx(e,t){return vu(e,t)}function Ox(e,t){let n,r;const a=t;n=a.xs,r=a.ys,da.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Lx("input",e.inputNames,n),i=Lx("output",e.outputNames,r),o=s[0].shape[0];da.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),da.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)da.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)da.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Lx(e,t,n){if(n instanceof Ua)return[n];if(Array.isArray(n))return da.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new cg(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function zx(e,t,n){const r=null!=n.batchesPerEpoch;if(da.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),da.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),da.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),da.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),da.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Px(n.validationData))da.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new hg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Ub(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Hb(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done)break;if(null!=t.value){const{xs:r,ys:a}=Ox(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Rx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Dx(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);su(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,iu(n)}await d.onBatchEnd(h,s),Lb(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Px(n.validationData)?yg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):yg(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Px(e){return"function"==typeof e.iterator}function Bx(e){da.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Wx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>fy(e,t,n-t))):fy(e,t,n-t)}function Vx(e,t){return au((()=>null==e?null:Array.isArray(e)?e.map((e=>Vx(e,t))):ky(e,"int32"===t.dtype?t:Ti(t,"int32"))))}function Ux(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Gx(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c,h,d;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;Bx(p);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,p);a=m[0],s=m[1],d=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new hg("validationData including sample weights is not supported yet."):new cg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,p);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];c=Wx(a,e,t),i=a,a=Wx(a,0,e),h=Wx(s,e,t),o=s,s=Wx(s,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const I=Ub(r.callbacks,r.yieldEvery),S=await async function(e,t,n,r,a,s,i,o,u,l,c,h,d,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=u&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new cg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=hy(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Hb(o,i,s,d,g,p,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);const s={};if(null!=p)throw new hg("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new hg("batch shuffling is not implemneted yet");c&&da.shuffle(y);const i=Yh(y),o=Ux(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),au((()=>{const d=o[c][0],p=o[c][1],f=fy(i,d,p-d);h.batch=c,h.size=p-d;const g=Vx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,iu(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];iu(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),Lb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,v,p,r.epochs,r.verbose,I,w,g,r.shuffle,k,r.initialEpoch,null,null);return S}finally{e.isTraining=!1,jx(a,t),jx(s,n),jx(i,t),jx(o,n),jx(c,u),jx(h,l),null!=d&&su(d)}}function Hx(e){const t=[];e instanceof Ua&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(py(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function jx(e,t){if(null==e)return;const n=[];if(t instanceof Ua)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ua)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function qx(e){return Array.isArray(e)}function Kx(e){return!function(e){return e instanceof Ua}(e)&&!qx(e)}function Xx(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(qx(e)&&e.length>0)t=!0;else if(Kx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new cg(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Kx(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new cg(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(qx(e)){if((e=e).length!==t.length)throw new cg(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new cg(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Hx(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new cg(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new cg(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Yx(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new cg(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new cg(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new cg(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new cg(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var Zx=class extends Fx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new cg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");yx(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Up.adagrad(.01),Adadelta:()=>Up.adadelta(1,.95,og()),Adam:()=>Up.adam(.001,.9,.999,og()),Adamax:()=>Up.adamax(.002,.9,.999,og(),0),RMSProp:()=>Up.rmsprop(.001,.9,0,og()),SGD:()=>Up.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new cg(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Dp))throw new cg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new cg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>nx(e)))}else{const n=nx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new cg(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)e.loss[n],t.push(nx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ry("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ry("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Qb?-1!==["accuracy","acc"].indexOf(i)?r=rx:-1!==["crossentropy","ce"].indexOf(i)&&(r=ux):this.lossFunctions[e]===Jb?-1!==["accuracy","acc"].indexOf(i)?r=lx:-1!==["crossentropy","ce"].indexOf(i)&&(r=hx):-1!==["accuracy","acc"].indexOf(i)?r=ax:-1!==["crossentropy","ce"].indexOf(i)&&(r=cx),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=px(i);s=e,n=""+fx(i)}let t;ry(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Bx(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return gg(this.testLoop(i,s,r,n.verbose,n.steps))}finally{jx(a[0],e),jx(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new hg("Verbose mode is not implemented yet.");da.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=au((()=>{if(t.value){const{xs:n,ys:r}=Ox(e,t.value),i=n.concat(r),l=au((()=>a(i)));if(su(i),0===u)for(let e=0;e<l.length;++e)s.push(Th(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=au((()=>yu(s[e],vu(c,t)))),u>0&&su(n)}su(l),o+=c,++u}return s})),t.done)break}for(let e=0;e<s.length;++e){const t=s[e];s[e]=xu(s[e],o),su(t)}return gg(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new cg(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new cg(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new cg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Nx;if(e instanceof Ua&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new cg(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new cg(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Cx(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=pg(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new cg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return au((()=>{const r=this.checkNumSamples(e);if(n)throw new hg("Verbose predictLoop() is not implemented yet.");const a=Ux(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){au((()=>{const n=a[t][0],r=a[t][1],s=Wx(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Nx(i);return Cx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)))}return gg(s.map((e=>Zu(e,0))))}))}predict(e,t={}){const n=Hx(e);Yx(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Bx(r),this.predictLoop(n,r)}finally{jx(n,e)}}predictOnBatch(e){Yx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new lg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Jb?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=Ng(e.map((e=>e.shape[0])));r.sort();const a=Ng(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new cg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new cg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!da.arraysEqual(r,a))throw new cg(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Xx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xx(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Kb,Qb,Zb];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Zb&&1===s.shape[s.shape.length-1])throw new cg(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new cg(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new cg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Rx(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Dx(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return au((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new hg("Verbose mode is not implemented yet.");if(null!=a)throw new hg("steps mode in testLoop() is not implemented yet");{const r=Ux(s,n),a=Yh(hy(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=fy(a,s,o-s),l=Vx(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Th(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=yu(i[e],vu(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=xu(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(mg(e,r)>1){a+=`_${mg(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Nx(e),o=Cx(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Mx(n,a[e]));const s=Lc(n);t.push(s),u=0===e?n:yu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Lc(t(r[a],o[a]))}iu(n),s.push(n)}return u=Lc(u),this.calculateLosses().forEach((e=>{u=yu(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>au((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Nx(s),o=Cx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Lc(r(a[e],o[e]));n=0===e?s:yu(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Lc(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return Gx(this,e,t,n)}async fitDataset(e,t){return zx(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return su(s),jx(n[0],e),jx(n[1],t),gg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=nu().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-nu().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=bg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>bg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=bg(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[bg(fx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>bg(fx(e))));{const e={};for(const t in this.metrics)e[t]=bg(fx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=jb(kx(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=xg(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>xg(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=xg(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>xg(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=xg(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=_i.getSaveHandlers(e);if(0===t.length)throw new cg(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new cg(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new cg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await _i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Sx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await _i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=_i.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;mx(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){mx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Zx.className="Model",Ro.registerClass(Zx);var Jx=class extends Zx{};async function Qx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=jb(kx(n),t);if(null!=e.weightsManifest){const t=await _i.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),su(t)}return r}async function ev(e,t){if(null==t&&(t={}),"string"==typeof e){const n=_i.getLoadHandlers(e,t);if(0===n.length)n.push(_i.browserHTTPRequest(e,t));else if(n.length>1)throw new cg(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new cg("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=jb(kx(a),t,i),u=r.trainingConfig;null!=u&&o.loadTrainingConfig(u);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new cg("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=_i.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),su(e),su(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Jx.className="Functional",Ro.registerClass(Jx);var tv=class extends Zx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:mb("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new cg(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof tv||e instanceof Zx;let n;if(t){if(n=e,1!==n.outputs.length)throw new cg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new cg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new cg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Mb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new cg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new cg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ab(this.outputs[0])}this.inboundNodes=[],new Cb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(xb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new lg("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new lg("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new lg("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new lg("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new cg("Legacy serialization format not supported yet.");a=t}else da.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof tv))throw new hg(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=jb(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new cg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new cg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function nv(e){return new Zx(e)}function rv(e){return new tv(e)}function av(e,t){return null==t&&(t={}),ev(e,t)}function sv(e){return Mb(e)}function iv(e,t){Gb.registerCallbackConstructor(e,t)}tv.className="Sequential",Ro.registerClass(tv);var ov=class extends Ro.Serializable{getConfig(){return{}}},uv=class extends ov{apply(e,t=1){return function(e,t=1){if(1!==t)throw new hg(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ll(e)}(e,t)}};uv.className="elu",Ro.registerClass(uv);var lv=class extends ov{apply(e){return Eh(e)}};lv.className="selu",Ro.registerClass(lv);var cv=class extends ov{apply(e){return yh(e)}};cv.className="relu",Ro.registerClass(cv);var hv=class extends ov{apply(e){return au((()=>Vc(6,yh(e))))}};hv.className="relu6",Ro.registerClass(hv);var dv=class extends ov{apply(e){return e}};dv.className="linear",Ro.registerClass(dv);var pv=class extends ov{apply(e){return Ju(e)}};pv.className="sigmoid",Ro.registerClass(pv);var fv=class extends ov{apply(e){return function(e){return au((()=>{const t=yu(.5,vu(.2,e));return hl(t,0,1)}))}(e)}};fv.className="hardSigmoid",Ro.registerClass(fv);var mv=class extends ov{apply(e){return fc(e)}};mv.className="softplus",Ro.registerClass(mv);var gv=class extends ov{apply(e){return function(e){return au((()=>xu(e,yu(wu(e),1))))}(e)}};gv.className="softsign",Ro.registerClass(gv);var yv=class extends ov{apply(e){return el(e)}};yv.className="tanh",Ro.registerClass(yv);var bv=class extends ov{apply(e,t=-1){return Lh(e,t)}};bv.className="softmax",Ro.registerClass(bv);var xv=class extends ov{apply(e,t=-1){return xc(e,t)}};xv.className="logSoftmax",Ro.registerClass(xv);var vv=class extends ov{apply(e,t=1){return au((()=>vu(Ju(vu(e,t)),e)))}};vv.className="swish",Ro.registerClass(vv);var wv=class extends ov{apply(e){return au((()=>vu(e,el(fc(e)))))}};function kv(e){return e.getClassName()}function Iv(e,t={}){return Ig(e,Ro.SerializationMap.getMap().classNameMap,t,"activation")}function Sv(e){if(null==e){const e={className:"linear",config:{}};return Iv(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Iv(t)}return e instanceof ov?e:Iv(e)}function Nv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}wv.className="mish",Ro.registerClass(wv);var Tv=class extends Ro.Serializable{},Ev=class extends Tv{constructor(e){super(),Nv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return au((()=>{let t=zc([1]);return this.hasL1&&(t=yu(t,bc(vu(this.l1,wu(e))))),this.hasL2&&(t=yu(t,bc(vu(this.l2,Iy(e))))),Ku(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Ev.className="L1L2",Ro.registerClass(Ev);var Cv={l1l2:"L1L2"};function _v(e){return wg(e)}function $v(e,t={}){return Ig(e,Ro.SerializationMap.getMap().classNameMap,t,"regularizer")}function Av(e){if(null==e)return null;if("string"==typeof e){return $v({className:e in Cv?Cv[e]:e,config:{}})}return e instanceof Tv?e:$v(e)}var Fv=class extends $b{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=bb(e);let n=yh(e);return null!=this.maxValue&&(n=hl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Fv.className="ReLU",Ro.registerClass(Fv);var Rv=class extends $b{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=bb(e);return Ql(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Rv.className="LeakyReLU",Ro.registerClass(Rv);var Dv=class extends $b{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Xy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Av(e.alphaRegularizer),this.alphaConstraint=Wg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new cg(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=xb(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Nb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=bb(e),ih(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ky(this.alphaInitializer),alphaRegularizer:_v(this.alphaRegularizer),alphaConstraint:Pg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Dv.className="PReLU",Ro.registerClass(Dv);var Mv=class extends $b{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new hg(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=bb(e);return Ll(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Mv.className="ELU",Ro.registerClass(Mv);var Ov=class extends $b{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=bb(e);return vu(n,Ti(ql(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Ov.className="ThresholdedReLU",Ro.registerClass(Ov);var Lv=class extends $b{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new bv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=bb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function zv(e,t,n){if("number"==typeof e)return pg(e,t);if(e.length!==t)throw new cg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new cg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Pv(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Bv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+cy([n-t,0]);else{if("same"!==r)throw new cg(`Unsupport padding mode: ${r}.`);e*=t}return e}function Wv(e,t){return au((()=>(Qg(t),"channelsFirst"===t?Ki(e,[0,2,3,1]):e)))}function Vv(e,t){return au((()=>(Qg(t),"channelsFirst"===t?Ki(e,[0,2,3,4,1]):e)))}function Uv(e,t,n,r=[1,1],a="valid",s,i,o=null){return au((()=>{if(null==s&&(s="channelsLast"),Qg(s),3!==e.rank&&4!==e.rank)throw new cg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new cg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Wv(e,s);if("causal"===a)throw new hg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=vd.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Ki(u,[0,3,1,2])),u}))}Lv.className="Softmax",Ro.registerClass(Lv);var Gv=class extends $b{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Gv.verifyArgs(t),this.rank=e,_g(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new hg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zv(t.kernelSize,e,"kernelSize"),this.strides=zv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,ey(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Qg(this.dataFormat),this.activation=Sv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Xy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Wg(t.biasConstraint),this.biasRegularizer=Av(t.biasRegularizer),this.activityRegularizer=Av(t.activityRegularizer),this.dilationRate=zv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new cg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new cg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new cg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(fg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Cg(e.kernelSize,"number",1,3))throw new cg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:kv(this.activation),useBias:this.useBias,biasInitializer:Ky(this.biasInitializer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),biasConstraint:Pg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Hv=class extends Gv{constructor(e,t){super(e,t),this.kernel=null,Hv.verifyArgs(t),this.filters=t.filters,_g(this.filters,"filters"),this.kernelInitializer=Xy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Wg(t.kernelConstraint),this.kernelRegularizer=Av(t.kernelRegularizer)}build(e){e=xb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cg(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return au((()=>{let t;e=bb(e);const n=null==this.bias?null:this.bias.read(),r=Ag(this.activation.getClassName());if(null!=r&&2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return au((()=>{if(null==s&&(s="channelsLast"),Qg(s),3!==e.shape.length)throw new cg(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new cg(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new cg(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Ki(e,[0,2,1])),"causal"===a)throw new hg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=yl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Ny(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new hg("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return au((()=>{if(null==s&&(s="channelsLast"),Qg(s),4!==e.rank&&5!==e.rank)throw new cg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new cg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Vv(e,s);if("causal"===a)throw new hg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=vl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Ny(o,n)),"channelsFirst"===s&&(o=Ki(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=xb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Pv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ky(this.kernelInitializer),kernelRegularizer:_v(this.kernelRegularizer),kernelConstraint:Pg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new cg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},jv=class extends Hv{constructor(e){super(2,e),jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Cg(e.kernelSize,"number",1,2))throw new cg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};jv.className="Conv2D",Ro.registerClass(jv);var qv=class extends Hv{constructor(e){super(3,e),qv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new cg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};qv.className="Conv3D",Ro.registerClass(qv);var Kv=class extends jv{constructor(e){if(super(e),this.inputSpec=[new Nb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new cg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=xb(e)).length)throw new cg("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Nb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return au((()=>{let t=bb(e);if(4!==t.shape.length)throw new cg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Bv(i,c,u,this.padding),Bv(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ki(t,[0,2,3,1]));let p=xl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Ki(p,[0,3,1,2])),null!=this.bias&&(p=Ny(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=xb(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Bv(t[r],o,s,this.padding),t[a]=Bv(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};Kv.className="Conv2DTranspose",Ro.registerClass(Kv);var Xv=class extends qv{constructor(e){if(super(e),this.inputSpec=[new Nb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new cg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=xb(e)).length)throw new cg("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new cg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Nb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return au((()=>{let t=bb(e);if(5!==t.shape.length)throw new cg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Bv(o,p,c,this.padding),Bv(u,f,h,this.padding),Bv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ki(t,[0,2,3,4,1]));let y=kl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ki(y,[0,4,1,2,3])),null!==this.bias&&(y=Ny(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=xb(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Bv(t[r],l,i,this.padding),t[a]=Bv(t[a],c,o,this.padding),t[s]=Bv(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};Xv.className="Conv3DTranspose",Ro.registerClass(Xv);var Yv=class extends Hv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new cg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new cg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new cg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Xy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Av(t.depthwiseRegularizer),this.depthwiseConstraint=Wg(t.depthwiseConstraint),this.pointwiseInitializer=Xy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Av(t.pointwiseRegularizer),this.pointwiseConstraint=Wg(t.pointwiseConstraint)}build(e){if((e=xb(e)).length<this.rank+2)throw new cg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new cg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Nb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return au((()=>{let t;if(e=bb(e),1===this.rank)throw new hg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ki(e,[0,2,3,1])),t=Ch(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Ny(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ki(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ky(this.depthwiseInitializer),e.pointwiseInitializer=Ky(this.pointwiseInitializer),e.depthwiseRegularizer=_v(this.depthwiseRegularizer),e.pointwiseRegularizer=_v(this.pointwiseRegularizer),e.depthwiseConstraint=Pg(this.depthwiseConstraint),e.pointwiseConstraint=Pg(this.pointwiseConstraint),e}};Yv.className="SeparableConv";var Zv=class extends Yv{constructor(e){super(2,e)}};Zv.className="SeparableConv2D",Ro.registerClass(Zv);var Jv=class extends Hv{constructor(e){super(1,e),Jv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Cg(e.kernelSize,"number",1,1))throw new cg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Jv.className="Conv1D",Ro.registerClass(Jv);var Qv=class extends $b{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return au((()=>{if(e=bb(e),"channelsLast"===this.dataFormat){const t=gy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=gy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Qv.className="Cropping2D",Ro.registerClass(Qv);var ew=class extends $b{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Eg(Kg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return au((()=>{let t=bb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ki(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?_p.resizeNearestNeighbor(t,[e,r]):_p.resizeBilinear(t,[e,r]);return Ki(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?_p.resizeNearestNeighbor(t,[e,r]):_p.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ew.className="UpSampling2D",Ro.registerClass(ew);var tw=class extends Gv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Xy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Wg(e.depthwiseConstraint),this.depthwiseRegularizer=Av(e.depthwiseRegularizer)}build(e){if((e=xb(e)).length<4)throw new cg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new cg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return au((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return au((()=>{null==a&&(a="channelsLast"),Qg(a);let i=Wv(e,a);if(4!==e.rank)throw new cg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new cg(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Cl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Ki(i,[0,3,1,2])),i}))}(e=bb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Ny(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=xb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Pv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Pv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ky(this.depthwiseInitializer),e.depthwiseRegularizer=_v(this.depthwiseRegularizer),e.depthwiseConstraint=Pg(this.depthwiseRegularizer),e}};function nw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new cg("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function rw(e,t,n,r=!1,a,s,i=!1,o=!1){return au((()=>{const i=t.shape.length;if(i<3)throw new cg(`Input should be at least 3D, but is ${i}D.`);const u=[1,0].concat(hy(2,i));if(t=Ki(t,u),null!=s)throw new hg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");null!=a&&((a=Ti(Ti(a,"bool"),"float32")).rank===i-1&&(a=Bl(a,-1)),a=Ki(a,u)),r&&(t=xh(t,0),null!=a&&(a=xh(a,0)));const l=[];let c,h=n;const d=t.shape[0],p=sd(t);let f,m;null!=a&&(f=sd(a));for(let t=0;t<d;++t){const n=p[t],r=au((()=>e(n,h)));if(null==a)c=r[0],h=r[1];else{const e=au((()=>{const e=f[t],n=yc(Yc(e),e);return{output:yu(vu(r[0],e),vu(h[0],n)),newStates:h.map(((t,a)=>yu(vu(r[1][a],e),vu(t,n))))}}));c=e.output,h=e.newStates}o&&l.push(c)}if(o){m=jh(l,1)}return[c,m,h]}))}tw.className="DepthwiseConv2D",Ro.registerClass(tw);var aw=class extends $b{constructor(e){let t;if(super(e),null==e.cell)throw new cg("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new dw({cells:e.cell}):e.cell,null==t.stateSize)throw new cg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Nb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return hy(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){gb(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return au((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new hg("Constants support is not implemented in RNN yet.");gb(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Nb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!da.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new cg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Nb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){au((()=>{if(!this.stateful)throw new ug("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new cg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zc([n,e]))):this.states_=[zc([n,this.cell.stateSize])];else if(null==e)su(this.states_),null!=this.keptStates&&(su(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zc([n,e]))):this.states_[0]=zc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):su(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!da.arraysEqual(r.shape,s))throw new cg(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>iu(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nw(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Nb({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Tb){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return au((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=bb(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new cg(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll;const i={training:r},o=rw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return au((()=>{let t=zc(e.shape);return t=bc(t,[1,2]),t=py(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?xy(t,[1,e]):t)):this.cell.stateSize>1?[xy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===aw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=jb(t.cell,n);return new e(Object.assign(t,{cell:r}))}};aw.className="RNN",Ro.registerClass(aw);var sw=class extends $b{},iw=class extends sw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_g(this.units,"units"),this.activation=Sv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=ly([1,cy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ly([1,cy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return au((()=>{if(2!==(e=e).length)throw new cg(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Yc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Yc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=wy(null!=s?vu(e,s):e,this.kernel.read()),null!=this.bias&&(a=Ny(a,this.bias.read())),null!=i&&(n=vu(n,i));let o=yu(a,wy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kv(this.activation),useBias:this.useBias,kernelInitializer:Ky(this.kernelInitializer),recurrentInitializer:Ky(this.recurrentInitializer),biasInitializer:Ky(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Pg(this.kernelConstraint),recurrentConstraint:Pg(this.recurrentConstraint),biasConstraint:Pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};iw.className="SimpleRNNCell",Ro.registerClass(iw);var ow=class extends aw{constructor(e){e.cell=new iw(e),super(e)}call(e,t){return au((()=>{null!=this.cell.dropoutMask&&(su(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(su(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};ow.className="SimpleRNN",Ro.registerClass(ow);var uw=class extends sw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new cg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,_g(this.units,"units"),this.activation=Sv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=ly([1,cy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ly([1,cy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=xb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return au((()=>{if(2!==(e=e).length)throw new cg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Yc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Yc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=vu(e,a[0]));let l=wy(e,this.kernel.read());this.useBias&&(l=Ny(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=vu(r,s[0]));const c=this.recurrentKernel.read(),[h,d]=Wh(c,[2*this.units,this.units],c.rank-1),p=wy(r,h),[f,m,g]=Wh(l,3,l.rank-1),[y,b]=Wh(p,2,p.rank-1);i=this.recurrentActivation.apply(yu(f,y)),o=this.recurrentActivation.apply(yu(m,b));const x=wy(vu(o,r),d);u=this.activation.apply(yu(g,x));const v=yu(vu(i,r),vu(yu(1,pc(i)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kv(this.activation),recurrentActivation:kv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ky(this.kernelInitializer),recurrentInitializer:Ky(this.recurrentInitializer),biasInitializer:Ky(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Pg(this.kernelConstraint),recurrentConstraint:Pg(this.recurrentConstraint),biasConstraint:Pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};uw.className="GRUCell",Ro.registerClass(uw);var lw=class extends aw{constructor(e){e.implementation,e.cell=new uw(e),super(e)}call(e,t){return au((()=>{null!=this.cell.dropoutMask&&(su(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(su(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};lw.className="GRU",Ro.registerClass(lw);var cw=class extends sw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_g(this.units,"units"),this.activation=Sv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Wg(e.kernelConstraint),this.recurrentConstraint=Wg(e.recurrentConstraint),this.biasConstraint=Wg(e.biasConstraint),this.dropout=ly([1,cy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ly([1,cy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=xb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends $y{apply(t,r){const a=e.apply([n]),s=(new Fy).apply([n]),i=e.apply([2*n]);return by(by(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return au((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new cg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Yc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Yc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=vu(e,s[0]));let h=wy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=vu(r,i[0])),h=yu(h,wy(r,this.recurrentKernel.read())),this.useBias&&(h=Ny(h,this.bias.read()));const[d,p,f,m]=Wh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=yu(vu(u,a),vu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=vu(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kv(this.activation),recurrentActivation:kv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ky(this.kernelInitializer),recurrentInitializer:Ky(this.recurrentInitializer),biasInitializer:Ky(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Pg(this.kernelConstraint),recurrentConstraint:Pg(this.recurrentConstraint),biasConstraint:Pg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};cw.className="LSTMCell",Ro.registerClass(cw);var hw=class extends aw{constructor(e){e.implementation,e.cell=new cw(e),super(e)}call(e,t){return au((()=>{null!=this.cell.dropoutMask&&(su(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(su(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};hw.className="LSTM",Ro.registerClass(hw);var dw=class extends sw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return au((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;gb(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{ry(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(jb(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ib(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Sb(t)}};function pw(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):Ty(t(),n),o=()=>Ey(i,t,r);if(!a||a<=1)return iu(o().clone());return Array(a).fill(void 0).map(o).map((e=>iu(e.clone())))}dw.className="StackedRNNCells",Ro.registerClass(dw);var fw=class extends aw{constructor(e){if(e.unroll)throw new hg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new hg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Nb({ndim:5})]}call(e,t){return au((()=>{if(null!=this.cell.dropoutMask&&(su(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(su(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new cg("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return au((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=zc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){au((()=>{if(!this.stateful)throw new ug("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new cg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zc(a))):this.states_=[zc(a)];else if(null==e)su(this.states_),null!=this.keptStates&&(su(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zc(a))):this.states_[0]=zc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new cg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):su(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!da.arraysEqual(n.shape,r))throw new cg(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>iu(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Pv(u,r[0],a,s[0],i[0]),h=Pv(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}};fw.className="ConvRNN2D";var mw=class extends cw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,_g(this.filters,"filters"),this.kernelSize=zv(n,2,"kernelSize"),this.kernelSize.forEach((e=>_g(e,"kernelSize"))),this.strides=zv(r||1,2,"strides"),this.strides.forEach((e=>_g(e,"strides"))),this.padding=a||"valid",ey(this.padding),this.dataFormat=s||"channelsLast",Qg(this.dataFormat),this.dilationRate=zv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>_g(e,"dilationRate")))}build(e){var t;e=xb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new cg(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends $y{apply(e,t){return yy([n.apply([r]),Pc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return au((()=>{if(3!==e.length)throw new cg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Yc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?vu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Yc(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[y,b,x,v]=Wh(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?Wh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,E,C]=Wh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,E),g=this.recurrentConv(g,C);const _=this.recurrentActivation.apply(yu(u,p)),$=this.recurrentActivation.apply(yu(l,f)),A=yu(vu($,s),vu(_,this.activation.apply(yu(c,m)))),F=vu(this.recurrentActivation.apply(yu(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=gl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ny(a,n,this.dataFormat):a}recurrentConv(e,t){return gl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};mw.className="ConvLSTM2DCell",Ro.registerClass(mw);var gw=class extends fw{constructor(e){const t=new mw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};gw.className="ConvLSTM2D",Ro.registerClass(gw);var yw=class extends $b{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Ey((()=>Ty(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};yw.className="Dropout",Ro.registerClass(yw);var bw=class extends yw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};bw.className="SpatialDropout1D",Ro.registerClass(bw);var xw=class extends $b{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,_g(this.units,"units"),this.activation=Sv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Xy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Wg(e.kernelConstraint),this.biasConstraint=Wg(e.biasConstraint),this.kernelRegularizer=Av(e.kernelRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=xb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=xb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e),r=Ag(this.activation.getClassName());let a;return null!=r?a=wy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=wy(n,this.kernel.read()),null!=this.bias&&(a=Ny(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:kv(this.activation),useBias:this.useBias,kernelInitializer:Ky(this.kernelInitializer),biasInitializer:Ky(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Pg(this.kernelConstraint),biasConstraint:Pg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};xw.className="Dense",Ro.registerClass(xw);var vw=class extends $b{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=xb(e);for(const t of e.slice(1))if(null==t)throw new cg(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],uy(e,1)]}call(e,t){return au((()=>{this.invokeCallHook(e,t);let n=bb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ki(n,e)}return function(e){if(e.rank<=1)throw new cg(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],uy(e.shape,1)];return Ku(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};vw.className="Flatten",Ro.registerClass(vw);var ww=class extends $b{constructor(e){super(e),this.supportsMasking=!0,this.activation=Sv(e.activation)}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:kv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};ww.className="Activation",Ro.registerClass(ww);var kw=class extends $b{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return au((()=>{return e=bb(e),t=e,n=this.n,au((()=>{if(2!==t.shape.length)throw new cg(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return xy(py(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};kw.className="RepeatVector",Ro.registerClass(kw);var Iw=class extends $b{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new cg("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=uy(e);if(null!==s){if(0===a||i%a!=0)throw new cg(n);r[s]=i/a}else if(i!==a)throw new cg(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ku(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Iw.className="Reshape",Ro.registerClass(Iw);var Sw=class extends $b{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=hy(1,e.dims.length+1);if(!da.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Nb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=xb(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Ki(bb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Sw.className="Permute",Ro.registerClass(Sw);var Nw=class extends $b{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=bb(e);return Tu(Xc(n,this.maskValue),-1)}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e),r=Tu(Xc(n,this.maskValue),-1,!0);return vu(n,Ti(r,n.dtype))}))}};Nw.className="Masking",Ro.registerClass(Nw);var Tw=class extends $b{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(yg(e.inputLength))}this.inputDim=e.inputDim,_g(this.inputDim,"inputDim"),this.outputDim=e.outputDim,_g(this.outputDim,"outputDim"),this.embeddingsInitializer=Xy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Av(e.embeddingsRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.embeddingsConstraint=Wg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return au((()=>this.maskZero?(e=bb(e),Xc(e,Rl(e))):null))}computeOutputShape(e){if(e=xb(e),null==this.inputLength)return[...e,this.outputDim];const t=yg(this.inputLength);if(t.length!==e.length-1)throw new cg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new cg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return au((()=>{this.invokeCallHook(e,t);let n=bb(e);"int32"!==n.dtype&&(n=dy(n,"int32"));const r=ky(this.embeddings.read(),Ku(n,[n.size]));return Ku(r,xb(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ky(this.embeddingsInitializer),embeddingsRegularizer:_v(this.embeddingsRegularizer),activityRegularizer:_v(this.activityRegularizer),embeddingsConstraint:Pg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Tw.className="Embedding",Ro.registerClass(Tw);var Ew=class extends $b{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new hg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new cg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[xb(e)]),(e=e).length<2)throw new cg(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ng(t),t.length>1)throw new cg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ng(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return au((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=cy(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=py(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Ku(r,[a].concat(uy(e.slice(1))));i=Ki(i,[1,0]),i=Ku(i,s),t.push(i),n=!0}else if(e>1){const a=hy(1,e).concat([0]);t.push(Ki(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ku(Ki(Ku(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(hy(0,a-1));r=Ki(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ng(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return au((()=>{if(null==t)return null;if(!Array.isArray(t))throw new cg("`mask` should be an Array");if(!Array.isArray(e))throw new cg("`inputs` should be an Array");if(t.length!==e.length)throw new cg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Bl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=_c(n,t[e]);return n}))}},Cw=class extends Ew{constructor(e){super(e)}mergeFunction(e){return au((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yu(t,e[n]);return t}))}};Cw.className="Add",Ro.registerClass(Cw);var _w=class extends Ew{constructor(e){super(e)}mergeFunction(e){return au((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=vu(t,e[n]);return t}))}};_w.className="Multiply",Ro.registerClass(_w);var $w=class extends Ew{constructor(e){super(e)}mergeFunction(e){return au((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yu(t,e[n]);return vu(1/e.length,t)}))}};$w.className="Average",Ro.registerClass($w);var Aw=class extends Ew{constructor(e){super(e)}mergeFunction(e){return au((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Oc(t,e[n]);return t}))}};Aw.className="Maximum",Ro.registerClass(Aw);var Fw=class extends Ew{constructor(e){super(e)}mergeFunction(e){return au((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vc(t,e[n]);return t}))}};Fw.className="Minimum",Ro.registerClass(Fw);var Rw=class extends Ew{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new cg("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(da.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new cg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return au((()=>yy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new cg("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new cg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new cg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new cg(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return au((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ti(Yc(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Bl(t[n],-1)):r.push(t[n]);const a=Zu(r,this.axis);return Nu(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Dw(e,t){for(;e<0;)e+=t;return e}Rw.className="Concatenate",Ro.registerClass(Rw);var Mw=class extends Ew{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){da.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new hg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new cg(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new cg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Dw(t,e[n].shape.length))):[Dw(this.axes,n.shape.length),Dw(this.axes,r.shape.length)],this.normalize&&(n=qb(n,t[0]),r=qb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new hg("batchDot is not implemented for tensors of 4D or higher rank yet");if(da.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),da.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new hg("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return au((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ku(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ku(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?bc(vu(e,t),s[0]):bc(vu(Ki(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=ji(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Hh(i,t)}return 1===i.shape.length&&(i=Bl(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Dw(this.axes,e.length),Dw(this.axes,t.length)],n}computeOutputShape(e){da.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new hg("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Mw.className="Dot",Ro.registerClass(Mw);var Ow=class extends $b{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e);return Ey((()=>yu(vy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};Ow.className="GaussianNoise",Ro.registerClass(Ow);var Lw=class extends $b{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return au((()=>{this.invokeCallHook(e,t);const n=bb(e);if(this.rate>0&&this.rate<1){return Ey((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return vu(n,vy(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}};Lw.className="GaussianDropout",Ro.registerClass(Lw);var zw=class extends $b{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||bb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return au((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Ey((()=>{const t=bb(e),r=-1.7580993408473766;let a=Kl(ph(n),this.rate);a=dy(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=yu(vu(t,a),vu(yu(a,-1),r));return yu(vu(o,s),i)}),(()=>bb(e)),t.training||!1)}return e}))}};function Pw(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=al(e,t,n,r,a,s);else if(3===e.rank)i=sl(e,t,n,r,a,s);else{if(4!==e.rank)throw new hg(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=il(e,t,n,r,a,s)}return i}function Bw(e,t,n,r,a=.001){return da.arraysEqual(r.slice().sort(),hy(0,e.rank-1))?function(e,t,n,r,a=.001){return au((()=>{const s=jc(e,r),i=s.mean,o=s.variance;return[Pw(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return au((()=>{const s=jc(e,r),i=s.mean,o=s.variance,u=[];for(const t of hy(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Ku(i,u),c=Ku(o,u),h=null==t?null:Ku(t,u),d=null==n?null:Ku(n,u);return[Pw(e,l,c,d,h,a),i,o]}))}(e,t,n,r,a)}zw.className="AlphaDropout",Ro.registerClass(zw);var Ww=class extends $b{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xy(e.betaInitializer||"zeros"),this.gammaInitializer=Xy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Xy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xy(e.movingVarianceInitializer||"ones"),this.betaConstraint=Wg(e.betaConstraint),this.gammaConstraint=Wg(e.gammaConstraint),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer)}build(e){e=xb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new cg(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Nb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return au((()=>{const n=null!=t.training&&t.training,r=bb(e),a=r.shape,s=a.length,i=hy(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=pg(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!da.arraysEqual(l,hy(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Ku(this.movingMean.read(),u),t=Ku(this.movingVariance.read(),u),n=this.center?Ku(this.beta.read(),u):null,a=this.scale?Ku(this.gamma.read(),u):null;return Pw(r,e,t,n,a,this.epsilon)}return Pw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Bw(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{au((()=>{const r=1-n,a=e.read(),s=vu(yc(a,t),r);e.write(yc(a,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ky(this.betaInitializer),gammaInitializer:Ky(this.gammaInitializer),movingMeanInitializer:Ky(this.movingMeanInitializer),movingVarianceInitializer:Ky(this.movingVarianceInitializer),betaRegularizer:_v(this.betaRegularizer),gammaRegularizer:_v(this.gammaRegularizer),betaConstraint:Pg(this.betaConstraint),gammaConstraint:Pg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ww.className="BatchNormalization",Ro.registerClass(Ww);var Vw=class extends $b{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xy(e.betaInitializer||"zeros"),this.gammaInitializer=Xy(e.gammaInitializer||"ones"),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=xb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ng(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=bb(e),r=n.shape,a=r.length;return au((()=>{let{mean:e,variance:t}=jc(n,this.axis,!0);const s=pg(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?Ku(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=Vl(e,l),t=Vl(t,l),o=Vl(o,c),u=Vl(u,c),Pw(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ky(this.betaInitializer),gammaInitializer:Ky(this.gammaInitializer),betaRegularizer:_v(this.betaRegularizer),gammaRegularizer:_v(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Vw.className="LayerNormalization",Ro.registerClass(Vw);var Uw=class extends $b{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new cg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new cg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new cg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Nb({ndim:4})]}computeOutputShape(e){let t,n;return e=xb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return au((()=>{return t=bb(e),n=this.padding,r=this.dataFormat,au((()=>{if(4!==t.rank)throw new cg(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new cg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new cg(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Jc(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Gw(e,t,n,r,a,s){return au((()=>{let i;Qg(a),ty(s),ey(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Wv(e,a);const o="same"===r?"same":"valid";return i="max"===s?Rc(e,t,n,o):Xu(e,t,n,o),"channelsFirst"===a&&(i=Ki(i,[0,3,1,2])),i}))}function Hw(e,t,n,r,a,s){return au((()=>{let i;Qg(a),ty(s),ey(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Vv(e,a);const o="same"===r?"same":"valid";return i="max"===s?Dc(e,t,n,o):Yu(e,t,n,o),"channelsFirst"===a&&(i=Ki(i,[0,4,1,2,3])),i}))}Uw.className="ZeroPadding2D",Ro.registerClass(Uw);var jw=class extends $b{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new cg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(_g(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new cg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}_g(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,ey(this.padding),this.inputSpec=[new Nb({ndim:3})]}computeOutputShape(e){const t=Pv((e=xb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return au((()=>{this.invokeCallHook(e,t),e=py(bb(e),2);const n=this.poolingFunction(bb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Hh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},qw=class extends jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Gw(e,t,n,r,a,"max")}};qw.className="MaxPooling1D",Ro.registerClass(qw);var Kw=class extends jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Gw(e,t,n,r,a,"avg")}};Kw.className="AveragePooling1D",Ro.registerClass(Kw);var Xw=class extends $b{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new cg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];_g(this.poolSize,"poolSize"),_g(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qg(this.dataFormat),ey(this.padding),this.inputSpec=[new Nb({ndim:4})]}computeOutputShape(e){e=xb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Pv(t,this.poolSize[0],this.padding,this.strides[0]),n=Pv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return au((()=>(this.invokeCallHook(e,t),this.poolingFunction(bb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Yw=class extends Xw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Gw(e,t,n,r,a,"max")}};Yw.className="MaxPooling2D",Ro.registerClass(Yw);var Zw=class extends Xw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Gw(e,t,n,r,a,"avg")}};Zw.className="AveragePooling2D",Ro.registerClass(Zw);var Jw=class extends $b{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new cg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];_g(this.poolSize,"poolSize"),_g(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qg(this.dataFormat),ey(this.padding),this.inputSpec=[new Nb({ndim:5})]}computeOutputShape(e){e=xb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Pv(t,this.poolSize[0],this.padding,this.strides[0]),n=Pv(n,this.poolSize[1],this.padding,this.strides[1]),r=Pv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return au((()=>(this.invokeCallHook(e,t),this.poolingFunction(bb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Qw=class extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Hw(e,t,n,r,a,"max")}};Qw.className="MaxPooling3D",Ro.registerClass(Qw);var ek=class extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Qg(a),ey(r),Hw(e,t,n,r,a,"avg")}};ek.className="AveragePooling3D",Ro.registerClass(ek);var tk=class extends $b{constructor(e){super(e),this.inputSpec=[new Nb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new hg}},nk=class extends tk{constructor(e){super(e||{})}call(e,t){return au((()=>{const t=bb(e);return Lc(t,1)}))}};nk.className="GlobalAveragePooling1D",Ro.registerClass(nk);var rk=class extends tk{constructor(e){super(e||{})}call(e,t){return au((()=>{const t=bb(e);return gc(t,1)}))}};rk.className="GlobalMaxPooling1D",Ro.registerClass(rk);var ak=class extends $b{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Qg(this.dataFormat),this.inputSpec=[new Nb({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new hg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},sk=class extends ak{call(e,t){return au((()=>{const t=bb(e);return"channelsLast"===this.dataFormat?Lc(t,[1,2]):Lc(t,[2,3])}))}};sk.className="GlobalAveragePooling2D",Ro.registerClass(sk);var ik=class extends ak{call(e,t){return au((()=>{const t=bb(e);return"channelsLast"===this.dataFormat?gc(t,[1,2]):gc(t,[2,3])}))}};ik.className="GlobalMaxPooling2D",Ro.registerClass(ik);var ok=class extends $b{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=jb(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},uk=class extends ok{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=xb(e)).length<3)throw new cg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=xb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return au((()=>rw(((e,n)=>[bb(this.layer.call(e,t)),[]]),e=bb(e),[],!1,null,null,!1,!0)[1]))}};uk.className="TimeDistributed",Ro.registerClass(uk);var lk=class extends ok{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=jb(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=jb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Eg(Zg,"BidirectionalMergeMode",a),e.weights)throw new hg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):gg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nw(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new cg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Nb({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new hg("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Tb;for(const e of s)if(e instanceof Tb!==o)throw new cg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return au((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=xh(a,1)),"concat"===this.mergeMode?i=yy([r,a]):"sum"===this.mergeMode?i=yu(r,a):"ave"===this.mergeMode?i=vu(.5,yu(r,a)):"mul"===this.mergeMode?i=vu(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ry(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ry(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=jb(t.layer);if(delete t.layer,null!=t.numConstants)throw new hg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function ck(e){return new Db(e)}function hk(e){return new Mv(e)}function dk(e){return new Fv(e)}function pk(e){return new Rv(e)}function fk(e){return new Dv(e)}function mk(e){return new Lv(e)}function gk(e){return new Ov(e)}function yk(e){return new Jv(e)}function bk(e){return new jv(e)}function xk(e){return new Kv(e)}function vk(e){return new qv(e)}function wk(e){return new Xv(e)}function kk(e){return new Zv(e)}function Ik(e){return new Qv(e)}function Sk(e){return new ew(e)}function Nk(e){return new tw(e)}function Tk(e){return new ww(e)}function Ek(e){return new xw(e)}function Ck(e){return new yw(e)}function _k(e){return new bw(e)}function $k(e){return new vw(e)}function Ak(e){return new kw(e)}function Fk(e){return new Iw(e)}function Rk(e){return new Sw(e)}function Dk(e){return new Tw(e)}function Mk(e){return new Cw(e)}function Ok(e){return new $w(e)}function Lk(e){return new Rw(e)}function zk(e){return new Aw(e)}function Pk(e){return new Fw(e)}function Bk(e){return new _w(e)}function Wk(e){return new Mw(e)}function Vk(e){return new Ww(e)}function Uk(e){return new Vw(e)}function Gk(e){return new Uw(e)}function Hk(e){return new Kw(e)}function jk(e){return Hk(e)}function qk(e){return Hk(e)}function Kk(e){return new Zw(e)}function Xk(e){return Kk(e)}function Yk(e){return Kk(e)}function Zk(e){return new ek(e)}function Jk(e){return Zk(e)}function Qk(e){return Zk(e)}function eI(e){return new nk(e)}function tI(e){return new sk(e)}function nI(e){return new rk(e)}function rI(e){return new ik(e)}function aI(e){return new qw(e)}function sI(e){return new Yw(e)}function iI(e){return new Qw(e)}function oI(e){return new lw(e)}function uI(e){return new uw(e)}function lI(e){return new hw(e)}function cI(e){return new cw(e)}function hI(e){return new ow(e)}function dI(e){return new iw(e)}function pI(e){return new gw(e)}function fI(e){return new mw(e)}function mI(e){return new aw(e)}function gI(e){return new dw(e)}function yI(e){return new lk(e)}function bI(e){return new uk(e)}lk.className="Bidirectional",Ro.registerClass(lk);var xI=nI,vI=rI,wI=aI,kI=sI;function II(e){return new Ow(e)}function SI(e){return new Lw(e)}function NI(e){return new zw(e)}function TI(e){return new Nw(e)}var EI={};function CI(e,t){return rx(e,t)}function _I(e,t){return ux(e,t)}function $I(e,t){return lx(e,t)}function AI(e,t){return ax(e,t)}function FI(e,t){return cx(e,t)}function RI(e,t){return ix(e,t)}function DI(e,t){return ox(e,t)}function MI(e,t){return ex(e,t)}function OI(e,t){return Xb(e,t)}function LI(e,t){return Yb(e,t)}function zI(e,t){return Yb(e,t)}function PI(e,t){return Yb(e,t)}function BI(e,t){return Kb(e,t)}function WI(e,t){return Kb(e,t)}function VI(e,t){return Kb(e,t)}d(EI,{MAPE:()=>zI,MSE:()=>WI,binaryAccuracy:()=>CI,binaryCrossentropy:()=>_I,categoricalAccuracy:()=>AI,categoricalCrossentropy:()=>FI,cosineProximity:()=>MI,mape:()=>PI,meanAbsoluteError:()=>OI,meanAbsolutePercentageError:()=>LI,meanSquaredError:()=>BI,mse:()=>VI,precision:()=>RI,recall:()=>DI,sparseCategoricalAccuracy:()=>$I});var UI={};d(UI,{modelFromJSON:()=>Qx});var GI={};function HI(e){return new Ev(e)}function jI(e){return Nv(t=e),new Ev({l1:null!=t?t.l1:null,l2:0});var t}function qI(e){return Nv(t=e),new Ev({l2:null!=t?t.l2:null,l1:0});var t}d(GI,{l1:()=>jI,l1l2:()=>HI,l2:()=>qI});var KI=class extends zb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Zx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function XI(e,t){return e<t}function YI(e,t){return e>t}var ZI=class extends KI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new hg("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=XI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=YI:this.monitorFunc=XI,this.monitorFunc===XI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===XI?1/0:-1/0}async onEpochEnd(e,t){await Ob(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return t}};var JI,QI,eS,tS={earlyStopping:function(e){return new ZI(e)}};Ve().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{})),(QI=JI||(JI={}))[QI.DT_INVALID=0]="DT_INVALID",QI[QI.DT_FLOAT=1]="DT_FLOAT",QI[QI.DT_DOUBLE=2]="DT_DOUBLE",QI[QI.DT_INT32=3]="DT_INT32",QI[QI.DT_UINT8=4]="DT_UINT8",QI[QI.DT_INT16=5]="DT_INT16",QI[QI.DT_INT8=6]="DT_INT8",QI[QI.DT_STRING=7]="DT_STRING",QI[QI.DT_COMPLEX64=8]="DT_COMPLEX64",QI[QI.DT_INT64=9]="DT_INT64",QI[QI.DT_BOOL=10]="DT_BOOL",QI[QI.DT_QINT8=11]="DT_QINT8",QI[QI.DT_QUINT8=12]="DT_QUINT8",QI[QI.DT_QINT32=13]="DT_QINT32",QI[QI.DT_BFLOAT16=14]="DT_BFLOAT16",QI[QI.DT_QINT16=15]="DT_QINT16",QI[QI.DT_QUINT16=16]="DT_QUINT16",QI[QI.DT_UINT16=17]="DT_UINT16",QI[QI.DT_COMPLEX128=18]="DT_COMPLEX128",QI[QI.DT_HALF=19]="DT_HALF",QI[QI.DT_RESOURCE=20]="DT_RESOURCE",QI[QI.DT_VARIANT=21]="DT_VARIANT",QI[QI.DT_UINT32=22]="DT_UINT32",QI[QI.DT_UINT64=23]="DT_UINT64",QI[QI.DT_FLOAT_REF=101]="DT_FLOAT_REF",QI[QI.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",QI[QI.DT_INT32_REF=103]="DT_INT32_REF",QI[QI.DT_UINT8_REF=104]="DT_UINT8_REF",QI[QI.DT_INT16_REF=105]="DT_INT16_REF",QI[QI.DT_INT8_REF=106]="DT_INT8_REF",QI[QI.DT_STRING_REF=107]="DT_STRING_REF",QI[QI.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",QI[QI.DT_INT64_REF=109]="DT_INT64_REF",QI[QI.DT_BOOL_REF=110]="DT_BOOL_REF",QI[QI.DT_QINT8_REF=111]="DT_QINT8_REF",QI[QI.DT_QUINT8_REF=112]="DT_QUINT8_REF",QI[QI.DT_QINT32_REF=113]="DT_QINT32_REF",QI[QI.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",QI[QI.DT_QINT16_REF=115]="DT_QINT16_REF",QI[QI.DT_QUINT16_REF=116]="DT_QUINT16_REF",QI[QI.DT_UINT16_REF=117]="DT_UINT16_REF",QI[QI.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",QI[QI.DT_HALF_REF=119]="DT_HALF_REF",QI[QI.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",QI[QI.DT_VARIANT_REF=121]="DT_VARIANT_REF",QI[QI.DT_UINT32_REF=122]="DT_UINT32_REF",QI[QI.DT_UINT64_REF=123]="DT_UINT64_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(eS||(eS={}));var nS={};function rS(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};nS[e]=n}function aS(e){return nS[e]}function sS(e){delete nS[e]}function iS(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return oS(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type){return t.inputNames.slice(e,i).map((e=>oS(e,n,r,a)))}const o=oS(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:da.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function oS(e,t,n,r){const[a,s]=cS(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[lS(a,e)]));return void 0!==i?t[lS(a,i)][s]:void 0}function uS(e,t){const[n,r,a]=cS(e);return[lS(n,t&&t.currentContextId),r,a]}function lS(e,t){return t?`${e}-${t}`:e}function cS(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function hS(e,t,n){let r=iS("pad",e,t,n);if("explicit"===r){r=iS("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function dS(e){return e.kept?e:Ei(e)}var pS={};d(pS,{json:()=>fS});var fS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mS={};d(mS,{json:()=>gS});var gS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yS={};d(yS,{json:()=>bS});var bS=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],xS={};d(xS,{json:()=>vS});var vS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],wS={};d(wS,{json:()=>kS});var kS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],IS={};d(IS,{json:()=>SS});var SS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NS={};d(NS,{json:()=>TS});var TS=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ES={};d(ES,{json:()=>CS});var CS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],_S={};d(_S,{json:()=>$S});var $S=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],AS={};d(AS,{json:()=>FS});var FS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],RS={};d(RS,{json:()=>DS});var DS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MS={};d(MS,{json:()=>OS});var OS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],LS={};d(LS,{json:()=>zS});var zS=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],PS={};d(PS,{json:()=>BS});var BS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],WS={};d(WS,{json:()=>VS});var VS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],US={};d(US,{json:()=>GS});var GS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],HS={};d(HS,{json:()=>jS});var jS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],qS={};d(qS,{json:()=>KS});var KS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],XS={};d(XS,{json:()=>YS});var YS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],ZS=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[pS,mS,yS,xS,wS,IS,NS,ES,_S,AS,RS,MS,LS,PS,WS,US,HS,qS,XS].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=uS(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=uS(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=uS(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=aS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=QS(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=QS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=lN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=lN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=tN(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=tN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=uN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=uN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=eN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=eN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=hN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=hN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=oN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=cN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=cN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=aN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=aN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=sN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=sN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=rN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=rN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=uS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:nN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=uS(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=uS(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function JS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ve().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function QS(e,t,n,r=!1){const a=e[t];return null!=a?JS(a.s,r):n}function eN(e,t,n){const r=e[t];return r?r.b:n}function tN(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function nN(e){switch("string"==typeof e&&(e=JI[e]),e){case JI.DT_FLOAT:case JI.DT_HALF:return"float32";case JI.DT_INT32:case JI.DT_INT64:case JI.DT_INT8:case JI.DT_UINT8:return"int32";case JI.DT_BOOL:return"bool";case JI.DT_DOUBLE:return"float32";case JI.DT_STRING:return"string";default:return null}}function rN(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function aN(e,t,n){const r=e[t];return r&&r.type?nN(r.type):n}function sN(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>nN(e))):n}function iN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function oN(e,t,n){const r=e[t];return r&&r.shape?iN(r.shape):n}function uN(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function lN(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>JS(e,r))):n}function cN(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>iN(e))):n}function hN(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function dN(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){da.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];da.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function pN(e){return"number"!=typeof e&&!e.some((e=>e<0))}function fN(e,t,n){let r=mN(e,n);const a=!pN(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=mN(e.shape,r)})),!pN(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function mN(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var gN=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);dN(t,e.shape,"TensorList shape mismatch: "),iu(e)})),this.idTensor=Th(0),this.maxNumElements=r,iu(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);dN(e,this.elementShape,"TensorList shape mismatch: ");const r=fN(this.elementShape,this.tensors,e);return au((()=>{const e=this.tensors.map((e=>Ku(e,r)));return jh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=fN(this.elementShape,this.tensors,e),r=this.tensors.pop();return dN(r.shape,e,"TensorList shape mismatch: "),Ku(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(dN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");iu(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);dN(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=fN(this.elementShape,this.tensors,t);return Ku(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);dN(this.elementShape,t.shape,"TensorList shape mismatch: "),iu(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);dN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=fN(this.elementShape,this.tensors,n);return 0===e.length?Fs([],[0].concat(r)):au((()=>{const t=e.map((e=>Ku(this.tensors[e],r)));return jh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);dN(this.elementShape,t,"TensorList shape mismatch: ");const n=fN(this.elementShape,this.tensors,t);return 0===this.size()?Fs([],[0].concat(n)):au((()=>{const e=this.tensors.map((e=>Ku(e,n)));return Zu(e,0)}))}};var yN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=iS("thenBranch",e,t,n),a=iS("elseBranch",e,t,n),s=iS("cond",e,t,n),i=iS("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=iS("body",e,t,n),a=iS("cond",e,t,n),s=iS("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[dS(iS("pred",e,t,n))];case"Switch":{const r=iS("pred",e,t,n);let a=iS("data",e,t,n);return a.kept||(a=dS(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==oS(e,t,n)));if(r){return[dS(oS(r,t,n))]}return}case"Enter":{const r=iS("frameName",e,t,n),a=iS("tensor",e,t,n);return n.enterFrame(r),[dS(a)]}case"Exit":{const r=iS("tensor",e,t,n);return n.exitFrame(),[dS(r)]}case"NextIteration":{const r=iS("tensor",e,t,n);return n.nextIteration(),[dS(r)]}case"TensorArrayV3":{const r=iS("size",e,t,n),a=iS("dtype",e,t,n),s=iS("elementShape",e,t,n),i=iS("dynamicSize",e,t,n),o=iS("clearAfterRead",e,t,n),u=iS("identicalElementShapes",e,t,n),l=iS("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Th(0),iu(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),dN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,iu(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Fs([],[0].concat(this.elementShape));const n=this.readMany(e);return dN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),jh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Fs([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return dN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Zu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,sd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];au((()=>{t=Ku(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ku(Qu(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,Th(1)]}case"TensorArrayWriteV3":{const r=iS("tensorArrayId",e,t,n),a=iS("index",e,t,n),s=iS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=iS("tensorArrayId",e,t,n),a=iS("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=iS("tensorArrayId",e,t,n),a=iS("indices",e,t,n),s=iS("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=iS("tensorArrayId",e,t,n),a=iS("indices",e,t,n),s=iS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=iS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=iS("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=iS("tensorArrayId",e,t,n),a=iS("tensor",e,t,n),s=iS("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=iS("tensorArrayId",e,t,n);return[Th(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=iS("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=iS("tensorListId",e,t,n),a=iS("index",e,t,n),s=iS("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=iS("tensorListId",e,t,n),a=iS("index",e,t,n),s=iS("elementShape",e,t,n),i=iS("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=iS("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new gN([],n,e.dtype,r),i=sd(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(iS("tensor",e,t,n),r,iS("elementShape",e,t,n),iS("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=iS("elementShape",e,t,n),a=iS("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new gN([],e,t,n)}(r,a,iS(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=iS("tensorListId",e,t,n),a=iS("indices",e,t,n),s=iS("elementShape",e,t,n),i=iS("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=iS("tensorListId",e,t,n),a=iS("elementShape",e,t,n),s=iS("elementDType",e,t,n),i=iS("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);dN(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=sd(e);return new gN(a,t,r)}(iS("tensor",e,t,n),iS("elementShape",e,t,n),iS("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=iS("tensorListId",e,t,n),a=n.getTensorList(r.id),s=iS("dtype",e,t,n),i=iS("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=iS("tensorListId",e,t,n),a=iS("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=iS("tensorListId",e,t,n),a=iS("elementShape",e,t,n),s=iS("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=iS("tensor",e,t,n),a=iS("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=mN(e.shape.slice(1),n),i=0===r?0:e.size/r,o=au((()=>{const n=[];e=Ku(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Ku(Qu(e,o,u),s)}return e.dispose(),n})),u=new gN([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,iS("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function bN(e,t,n){const[r,a]=iS("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=iS("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=iS("strides",e,t,n),h=hS(e,t,n),d=iS("dataFormat",e,t,n).toUpperCase(),p=iS("dilations",e,t,n);let[f,m]=iS("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:iS("leakyreluAlpha",e,t,n)}}function xN(e,t,n){return{boxes:iS("boxes",e,t,n),scores:iS("scores",e,t,n),maxOutputSize:iS("maxOutputSize",e,t,n),iouThreshold:iS("iouThreshold",e,t,n),scoreThreshold:iS("scoreThreshold",e,t,n),softNmsSigma:iS("softNmsSigma",e,t,n)}}var vN=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=iS("keyDType",e,t,n),s=iS("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Th(0),this.tensorMap=new Map,iu(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Th(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),au((()=>{const e=sd(t),r=n.length,a=e.length;da.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];iu(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return au((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return jh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=iS("tableHandle",e,t,n,r),s=iS("keys",e,t,n),i=iS("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=iS("tableHandle",e,t,n,r),s=iS("keys",e,t,n),i=iS("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=iS("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function wN(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return au((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[yu(iS("a",e,t,n),iS("b",e,t,n))];case"AddN":return[Su(iS("tensors",e,t,n))];case"FloorMod":case"Mod":return[Gc(iS("a",e,t,n),iS("b",e,t,n))];case"Mul":return[vu(iS("a",e,t,n),iS("b",e,t,n))];case"RealDiv":case"Div":return[xu(iS("a",e,t,n),iS("b",e,t,n))];case"DivNoNan":return[Dl(iS("a",e,t,n),iS("b",e,t,n))];case"FloorDiv":return[bu(iS("a",e,t,n),iS("b",e,t,n))];case"Sub":return[yc(iS("a",e,t,n),iS("b",e,t,n))];case"Minimum":return[Vc(iS("a",e,t,n),iS("b",e,t,n))];case"Maximum":return[Oc(iS("a",e,t,n),iS("b",e,t,n))];case"Pow":return[sh(iS("a",e,t,n),iS("b",e,t,n))];case"SquaredDifference":return[Gh(iS("a",e,t,n),iS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return au((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[wu(iS("x",e,t,n))];case"Acos":return[ku(iS("x",e,t,n))];case"Acosh":return[Iu(iS("x",e,t,n))];case"Asin":return[_u(iS("x",e,t,n))];case"Asinh":return[$u(iS("x",e,t,n))];case"Atan":return[Au(iS("x",e,t,n))];case"Atan2":return[Fu(iS("x",e,t,n),iS("y",e,t,n))];case"Atanh":return[Ru(iS("x",e,t,n))];case"Ceil":return[cl(iS("x",e,t,n))];case"Complex":return[$s(iS("real",e,t,n),iS("imag",e,t,n))];case"Cos":return[Il(iS("x",e,t,n))];case"Cosh":return[Sl(iS("x",e,t,n))];case"Elu":return[Ll(iS("x",e,t,n))];case"Erf":return[zl(iS("x",e,t,n))];case"Exp":return[Pl(iS("x",e,t,n))];case"Expm1":return[Wl(iS("x",e,t,n))];case"Floor":return[Hl(iS("x",e,t,n))];case"Log":return[ac(iS("x",e,t,n))];case"Log1p":return[sc(iS("x",e,t,n))];case"Imag":return[Xl(iS("x",e,t,n))];case"Neg":return[pc(iS("x",e,t,n))];case"Reciprocal":return[gh(iS("x",e,t,n))];case"Real":return[mh(iS("x",e,t,n))];case"Relu":return[yh(iS("x",e,t,n))];case"Round":return[Sh(iS("x",e,t,n))];case"Selu":return[Eh(iS("x",e,t,n))];case"Sigmoid":return[Ju(iS("x",e,t,n))];case"Sin":return[Ah(iS("x",e,t,n))];case"Sign":return[$h(iS("x",e,t,n))];case"Sinh":return[Fh(iS("x",e,t,n))];case"Softplus":return[fc(iS("x",e,t,n))];case"Sqrt":return[Uh(iS("x",e,t,n))];case"Square":return[Hc(iS("x",e,t,n))];case"Tanh":return[el(iS("x",e,t,n))];case"Tan":return[Xh(iS("x",e,t,n))];case"ClipByValue":return[hl(iS("x",e,t,n),iS("clipValueMin",e,t,n),iS("clipValueMax",e,t,n))];case"Relu6":return[bh(iS("x",e,t,n))];case"Rsqrt":return[Nh(oS(e.inputNames[0],t,n))];case"Prod":return[oh(iS("x",e,t,n),iS("axes",e,t,n))];case"LeakyRelu":return[Ql(iS("x",e,t,n),iS("alpha",e,t,n))];case"Prelu":return[ih(iS("x",e,t,n),iS("alpha",e,t,n))];case"IsNan":return[Jl(oS(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return yN(e,t,n);case"convolution":return au((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=iS("stride",e,t,n),a=iS("pad",e,t,n),s=iS("dataFormat",e,t,n).toUpperCase(),i=iS("dilation",e,t,n);return[yl(iS("x",e,t,n),iS("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=iS("strides",e,t,n),a=hS(e,t,n),s=iS("dataFormat",e,t,n).toUpperCase(),i=iS("dilations",e,t,n);return[gl(iS("x",e,t,n),iS("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=bN(e,t,n);return[vd.conv2d({x:iS("x",e,t,n),filter:iS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=bN(e,t,n);return[vd.depthwiseConv2d({x:iS("x",e,t,n),filter:iS("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=iS("outputShape",e,t,n),a=iS("strides",e,t,n),s=hS(e,t,n);return[xl(iS("x",e,t,n),iS("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=iS("strides",e,t,n),a=hS(e,t,n),s=iS("dilations",e,t,n),i=iS("dataFormat",e,t,n).toUpperCase();return[Cl(iS("input",e,t,n),iS("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("dataFormat",e,t,n).toUpperCase(),i=iS("dilations",e,t,n);return[vl(iS("x",e,t,n),iS("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("kernelSize",e,t,n);return[Xu(iS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("kernelSize",e,t,n);return[Rc(iS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("kernelSize",e,t,n),i=iS("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Mc(iS("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("kernelSize",e,t,n);return[Yu(iS("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("kernelSize",e,t,n);return[Dc(iS("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=iS("strides",e,t,n),a=iS("pad",e,t,n),s=iS("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[$l(iS("x",e,t,n),iS("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return au((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=iS("shape",e,t,n),a=iS("dtype",e,t,n);return[Gl(r,iS("value",e,t,n),a)]}case"LinSpace":return[nc(iS("start",e,t,n),iS("stop",e,t,n),iS("num",e,t,n))];case"Multinomial":{const r=iS("logits",e,t,n),a=iS("numSamples",e,t,n),s=iS("seed",e,t,n);return[Kc(r,a,s)]}case"OneHot":{const r=iS("indices",e,t,n),a=iS("depth",e,t,n),s=iS("onValue",e,t,n),i=iS("offValue",e,t,n);return[qi(r,a,s,i)]}case"Ones":return[Pc(iS("shape",e,t,n),iS("dtype",e,t,n))];case"OnesLike":return[Yc(iS("x",e,t,n))];case"RandomUniform":return[ph(iS("shape",e,t,n),iS("minval",e,t,n),iS("maxval",e,t,n),iS("dtype",e,t,n))];case"Range":return[fh(iS("start",e,t,n),iS("stop",e,t,n),iS("step",e,t,n),iS("dtype",e,t,n))];case"TruncatedNormal":{const r=iS("shape",e,t,n),a=iS("mean",e,t,n),s=iS("stdDev",e,t,n),i=iS("seed",e,t,n);return[nd(r,a,s,iS("dtype",e,t,n),i)]}case"Zeros":return[zc(iS("shape",e,t,n),iS("dtype",e,t,n))];case"ZerosLike":return[Rl(iS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=xN(e,t,n),l=await _p.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=xN(e,t,n),u=iS("padToMaxOutputSize",e,t,n),l=await _p.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=xN(e,t,n);return[await _p.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ti(iS("condition",e,t,n),"bool"),a=[await ud(r)];return r.dispose(),a}case"ListDiff":return _h(iS("x",e,t,n),iS("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return au((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=iS("x",e,t,n),a=iS("k",e,t,n),s=iS("sorted",e,t,n),i=td(r,a,s);return[i.values,i.indices]}case"Unique":{const r=iS("x",e,t,n),a=rd(r);return[a.values,a.indices]}case"UniqueV2":{const r=iS("x",e,t,n),a=iS("axis",e,t,n),s=rd(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return au((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=iS("images",e,t,n),a=iS("size",e,t,n),s=iS("alignCorners",e,t,n),i=iS("halfPixelCenters",e,t,n);return[_p.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=iS("images",e,t,n),a=iS("size",e,t,n),s=iS("alignCorners",e,t,n),i=iS("halfPixelCenters",e,t,n);return[_p.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=iS("image",e,t,n),a=iS("boxes",e,t,n),s=iS("boxInd",e,t,n),i=iS("cropSize",e,t,n),o=iS("method",e,t,n),u=iS("extrapolationValue",e,t,n);return[_p.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return au((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=iS("default",e,t,n);return[oS(e.name,t,n)||r];case"Placeholder":return[oS(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[dS(iS("x",e,t,n))];case"IdentityN":return iS("x",e,t,n).map((e=>dS(e)));case"Shape":return[Yh(iS("x",e,t,n).shape,"int32")];case"ShapeN":return iS("x",e,t,n).map((e=>Yh(e.shape)));case"Size":return[Th(iS("x",e,t,n).size,"int32")];case"Rank":return[Th(iS("x",e,t,n).rank,"int32")];case"NoOp":return[Th(1)];case"Print":const a=iS("x",e,t,n),s=iS("data",e,t,n);iS("message",e,t,n),iS("summarize",e,t,n);for(let e=0;e<s.length;e++);return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return au((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Al(iS("a",e,t,n),iS("b",e,t,n))];case"NotEqual":return[Xc(iS("a",e,t,n),iS("b",e,t,n))];case"Greater":return[ql(iS("a",e,t,n),iS("b",e,t,n))];case"GreaterEqual":return[Kl(iS("a",e,t,n),iS("b",e,t,n))];case"Less":return[ec(iS("a",e,t,n),iS("b",e,t,n))];case"LessEqual":return[tc(iS("a",e,t,n),iS("b",e,t,n))];case"LogicalAnd":return[_c(iS("a",e,t,n),iS("b",e,t,n))];case"LogicalNot":return[$c(iS("a",e,t,n))];case"LogicalOr":return[Ac(iS("a",e,t,n),iS("b",e,t,n))];case"Select":case"SelectV2":return[Fl(iS("condition",e,t,n),iS("a",e,t,n),iS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return au((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ji(iS("a",e,t,n),iS("b",e,t,n),iS("transposeA",e,t,n),iS("transposeB",e,t,n))];case"Einsum":return[Ol(iS("equation",e,t,n),...iS("tensors",e,t,n))];case"Transpose":return[Ki(iS("x",e,t,n),iS("perm",e,t,n))];case"_FusedMatMul":const[r,a]=iS("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=iS("numArgs",e,t,n),u=iS("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=iS("args",e,t,n);return[vd.matMul({a:iS("a",e,t,n),b:iS("b",e,t,n),transposeA:iS("transposeA",e,t,n),transposeB:iS("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return au((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[rl(iS("x",e,t,n),iS("mean",e,t,n),iS("variance",e,t,n),iS("offset",e,t,n),iS("scale",e,t,n),iS("epsilon",e,t,n))];case"LRN":return[rc(iS("x",e,t,n),iS("radius",e,t,n),iS("bias",e,t,n),iS("alpha",e,t,n),iS("beta",e,t,n))];case"Softmax":return[Lh(iS("x",e,t,n))];case"LogSoftmax":return[xc(iS("x",e,t,n))];case"SparseToDense":return[fd(iS("sparseIndices",e,t,n),iS("outputShape",e,t,n),iS("sparseValues",e,t,n),iS("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return au((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[gc(iS("x",e,t,n),r,a)]}case"Mean":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[Lc(iS("x",e,t,n),r,a)]}case"Min":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[Wc(iS("x",e,t,n),r,a)]}case"Sum":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[bc(iS("x",e,t,n),r,a)]}case"All":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[Nu(iS("x",e,t,n),r,a)]}case"Any":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[Tu(iS("x",e,t,n),r,a)]}case"ArgMax":{const r=iS("axis",e,t,n);return[Eu(iS("x",e,t,n),r)]}case"ArgMin":{const r=iS("axis",e,t,n);return[Cu(iS("x",e,t,n),r)]}case"Prod":{const r=iS("axis",e,t,n),a=iS("keepDims",e,t,n);return[oh(iS("x",e,t,n),r,a)]}case"Cumsum":{const r=iS("axis",e,t,n),a=iS("exclusive",e,t,n),s=iS("reverse",e,t,n);return[Nl(iS("x",e,t,n),r,a,s)]}case"Bincount":const r=iS("x",e,t,n),a=iS("weights",e,t,n),s=iS("size",e,t,n);return[ol(r,a,s)];case"DenseBincount":{const r=iS("x",e,t,n),a=iS("weights",e,t,n),s=iS("size",e,t,n),i=iS("binaryOutput",e,t,n);return[Tl(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return au((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=iS("n",e,t,n),a=iS("axis",e,t,n);let s=iS("tensors",e,t,n);return s=s.slice(0,r),[Zu(s,a)]}case"Gather":{const r=iS("x",e,t,n),a=iS("indices",e,t,n);return[jl(r,Ti(a,"int32"),0)]}case"GatherV2":{const r=iS("axis",e,t,n),a=iS("batchDims",e,t,n),s=iS("x",e,t,n),i=iS("indices",e,t,n);return[jl(s,Ti(i,"int32"),r,a)]}case"Reverse":{const r=iS("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=iS("x",e,t,n);return[xh(s,a)]}case"ReverseV2":{const r=iS("axis",e,t,n),a=iS("x",e,t,n);return[xh(a,r)]}case"Slice":{const r=iS("begin",e,t,n),a=iS("size",e,t,n);return[Qu(iS("x",e,t,n),r,a)]}case"StridedSlice":{const r=iS("begin",e,t,n),a=iS("end",e,t,n),s=iS("strides",e,t,n),i=iS("beginMask",e,t,n),o=iS("endMask",e,t,n),u=iS("ellipsisMask",e,t,n),l=iS("newAxisMask",e,t,n),c=iS("shrinkAxisMask",e,t,n),h=iS("x",e,t,n);return[Kh(h,r,a,s,i,o,u,l,c)]}case"Pack":return au((()=>{const r=iS("axis",e,t,n),a=iS("tensors",e,t,n),s=a[0].shape,i=Hh(a[0]).shape,o=a.map((e=>{const t=da.arraysEqual(e.shape,s);if(!t&&!da.arraysEqual(Hh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ku(e,s)}));return[jh(o,r)]}));case"Unpack":{const r=iS("axis",e,t,n),a=iS("tensor",e,t,n);return sd(a,r)}case"Tile":{const r=iS("reps",e,t,n);return[Vl(iS("x",e,t,n),r)]}case"Split":case"SplitV":{const r=iS("axis",e,t,n),a=iS("numOrSizeSplits",e,t,n),s=iS("x",e,t,n);return Wh(s,a,r)}case"ScatterNd":{const r=iS("indices",e,t,n),a=iS("values",e,t,n),s=iS("shape",e,t,n);return[pd(r,a,s)]}case"GatherNd":{const r=iS("x",e,t,n),a=iS("indices",e,t,n);return[md(r,a)]}case"SparseToDense":{const r=iS("sparseIndices",e,t,n),a=iS("outputShape",e,t,n),s=iS("sparseValues",e,t,n),i=iS("defaultValue",e,t,n);return[fd(r,s,a,s.dtype===i.dtype?i:Ti(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return au((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Fp.sparseFillEmptyRows(iS("indices",e,t,n),iS("values",e,t,n),iS("denseShape",e,t,n),iS("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Fp.sparseReshape(iS("inputIndices",e,t,n),iS("inputShape",e,t,n),iS("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Fp.sparseSegmentMean(iS("data",e,t,n),iS("indices",e,t,n),iS("segmentIds",e,t,n))];case"SparseSegmentSum":return[Fp.sparseSegmentSum(iS("data",e,t,n),iS("indices",e,t,n),iS("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return au((()=>((e,t,n)=>{switch(e.op){case"FFT":return[zh(iS("x",e,t,n))];case"IFFT":return[Ph(iS("x",e,t,n))];case"RFFT":return[Vh(iS("x",e,t,n))];case"IRFFT":return[Bh(iS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return au((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Rp.stringNGrams(iS("data",e,t,n),iS("dataSplits",e,t,n),iS("separator",e,t,n),iS("nGramWidths",e,t,n),iS("leftPad",e,t,n),iS("rightPad",e,t,n),iS("padWidth",e,t,n),iS("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Rp.stringSplit(iS("input",e,t,n),iS("delimiter",e,t,n),iS("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Rp.stringToHashBucketFast(iS("input",e,t,n),iS("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return au((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ti(iS("x",e,t,n),iS("dtype",e,t,n))];case"ExpandDims":{const r=iS("axis",e,t,n);return[Bl(iS("x",e,t,n),r)]}case"Squeeze":{const r=iS("axis",e,t,n);return[Hh(iS("x",e,t,n),r)]}case"Reshape":return[Ku(iS("x",e,t,n),iS("shape",e,t,n))];case"MirrorPad":return[Uc(iS("x",e,t,n),iS("padding",e,t,n),iS("mode",e,t,n))];case"PadV2":case"Pad":return[Jc(iS("x",e,t,n),iS("padding",e,t,n),iS("constantValue",e,t,n))];case"SpaceToBatchND":{const r=iS("blockShape",e,t,n),a=iS("paddings",e,t,n);return[rh(iS("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=iS("blockShape",e,t,n),a=iS("crops",e,t,n);return[nl(iS("x",e,t,n),r,a)]}case"DepthToSpace":{const r=iS("blockSize",e,t,n),a=iS("dataFormat",e,t,n).toUpperCase();return[El(iS("x",e,t,n),r,a)]}case"BroadcastTo":return[ll(iS("x",e,t,n),iS("shape",e,t,n))];case"BroadcastArgs":return[ul(iS("s0",e,t,n),iS("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return vN(e,t,n,r);case"custom":const a=aS(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return oS(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return oS(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return tN(this.node.rawAttrs,e,t);if(null!=n.s)return QS(this.node.rawAttrs,e,t);if(null!=n.b)return eN(this.node.rawAttrs,e,t);if(null!=n.shape)return oN(this.node.rawAttrs,e,t);if(null!=n.type)return aN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return uN(this.node.rawAttrs,e,t);if(null!=n.list.s)return lN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return cN(this.node.rawAttrs,e,t);if(null!=n.list.b)return hN(this.node.rawAttrs,e,t);if(null!=n.list.type)return sN(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return da.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var kN=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function IN(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>cS(e)[0]));let c=[];null!=r&&(c=r.map((e=>cS(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(EN(e)||CN(e)||_N(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var SN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],NN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],TN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function EN(e){return SN.indexOf(e.op)>=0}function CN(e){return NN.indexOf(e.op)>=0}function _N(e){return TN.indexOf(e.op)>=0}var $N=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new $N(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=IN(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>cS(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[cS(e)[0]])),a=t.map((e=>cS(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return au((()=>{const n=new kN(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=cS(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=wN(t,r,n,this._resourceManager);if(da.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>oS(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[lS(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=uS(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){}this.resetIntermediateTensors();const s=new kN(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>oS(e,this.tensorsMap,s))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[cS(e)[0]])),i=n.map((e=>cS(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=IN(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=cS(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(s,d,t,p,g,m,i,f,u);await Promise.all(e)}const y=o.filter((e=>!EN(e)&&!oS(e.name,p,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&iS("isConstant",e.node,r,n)&&([c]=uS(e.node.name,n)),null==r[e.node.name]){const h=wN(e.node,r,n,this._resourceManager);c||([c]=uS(e.node.name,n));const d=n.currentContext;da.isPromise(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=uS(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!oS(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!oS(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=cS(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));da.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&da.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=cS(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=cS(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},AN=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=_i.browserHTTPRequest(e,this.loadOptions);else{const t=_i.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(_i.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=_i.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new $N(ZS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ZS.Instance.transformGraph(e.modelInitializer);this.initializer=new $N(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=_i.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ua||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function FN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new AN(e,t);return await n.load(),n}var RN="3.13.0",DN={};d(DN,{CSVDataset:()=>TT,Dataset:()=>fT,FileDataSource:()=>PT,TextLineDataset:()=>xT,URLDataSource:()=>BT,array:()=>gT,csv:()=>WT,func:()=>VT,generator:()=>UT,microphone:()=>HT,version_data:()=>jT,webcam:()=>GT,zip:()=>yT});var MN=p(R()),ON=p(R());function LN(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(VN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=LN(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function zN(e,t=BN){return PN(e,t)}function PN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(VN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=PN(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function BN(e){return null===e?null:VN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function WN(e,t){const n=new Map;LN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(da.isPromise(t)){const r=await t;n.set(e,r)}}return LN(e,t,n)}function VN(e){let t=!1;if(Ve().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=D();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ua)&&!(e instanceof Promise)&&!t)}function UN(e){return LN(e,GN)}function GN(e){return e instanceof Ua?{value:e.clone(),recurse:!1}:VN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var HN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},jN=class extends HN{constructor(){super(jN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function qN(e){return new JN(e)}function KN(e){return new QN(e)}jN.INITIAL_CAPACITY=32;var XN,YN,ZN=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new iT(this,e)}filter(e){return new aT(this,e)}map(e){return new sT(this,e)}mapAsync(e){return new oT(this,e)}serialMapAsync(e){return new oT(this,e).serial()}flatmap(e){return new lT(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new rT(this,e,t)}columnMajorBatch(e,t=!0,n=BN){return this.rowMajorBatch(e,t).map((e=>zN(e,n)))}concatenate(e,t){return new cT(qN([this,e]),t)}take(e){return e<0||null==e?this:new nT(this,e)}skip(e){return e<0||null==e?this:new tT(this,e)}prefetch(e){return new dT(this,e)}shuffle(e,t){return new pT(this,e,t)}serial(){return new eT(this)}},JN=class extends ZN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:UN(e),done:!1}}},QN=class extends ZN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},eT=class extends ZN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},tT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;su(e.value)}return this.upstream.next()}},nT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},rT=class extends ZN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},aT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;su(e.value)}}},sT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=ns.getTensorsInContainer(n);for(const e of t)ns.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},iT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},oT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ns.getTensorsInContainer(e.value),n=await this.transform(e.value),r=ns.getTensorsInContainer(n);for(const e of t)ns.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},uT=class extends ZN{constructor(){super(),this.outputQueue=new jN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},lT=class extends uT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ns.getTensorsInContainer(e.value),n=this.transform(e.value),r=ns.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)ns.isTensorInList(e,r)||e.dispose();return!0}},cT=class extends ZN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(YN=XN||(XN={}))[YN.FAIL=0]="FAIL",YN[YN.SHORTEST=1]="SHORTEST",YN[YN.LONGEST=2]="LONGEST";var hT=class extends ZN{constructor(e,t=XN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await WN(this.iterators,(function(e){if(e instanceof ZN){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case XN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case XN.SHORTEST:return{value:null,done:!0};case XN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},dT=class extends ZN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new HN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},pT=class extends dT{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ON.alea(n||da.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},fT=class{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return da.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),mT((async()=>(await n.iterator()).columnMajorBatch(e,t,bT)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,mT((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,mT((async()=>(await t.iterator()).filter((t=>au((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return mT((async()=>(await t.iterator()).map((t=>au((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return mT((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return mT((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,mT((async()=>{const n=KN((async()=>({value:await t.iterator(),done:!1})));return r=n.take(e),new cT(r,a);var r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,mT((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=MN.alea(t||da.now().toString());return mT((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,mT((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function mT(e,t=null){return new class extends fT{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function gT(e){return mT((async()=>qN(e)),e.length)}function yT(e){if(!VN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return mT((async()=>function(e,t=XN.FAIL){return new hT(e,t)}(await WN(e,(e=>{if(e instanceof fT)return{value:e.iterator(),recurse:!1};if(VN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),XN.SHORTEST)),t)}function bT(e){if(null===e)return null;const t=e[0];if(null==(n=t)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof Ua||da.isTypedArray(n)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ua?jh(e):Fs(e)}(e),recurse:!1}}var n,r;return{value:null,recurse:!0}}fT.MAX_BUFFER_SIZE=1e4;var xT=class extends fT{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},vT='"',wT=Symbol("out"),kT=Symbol("field"),IT=Symbol("quote"),ST=Symbol("quoteafterquote"),NT=Symbol("quoteinquote"),TT=class extends fT{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new xT(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(da.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&da.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(da.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=wT;for(let t=0;t<a;t++)switch(s){case wT:switch(e.charAt(t)){case vT:r=t+1,s=IT;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=wT;break;default:s=kT,r=t}break;case kT:if(e.charAt(t)===this.delimiter)n.push(e.substring(r,t)),s=wT,r=t+1;break;case IT:if(e.charAt(t)===vT)s=ST;break;case ST:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=wT,r=t+1;break;case vT:s=IT;break;default:s=NT}break;case NT:if(e.charAt(t)===vT)s=IT}if(s===ST?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},ET=class extends ZN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Ve().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new ET(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(da.sizeFromShape(t));return n.set(e,n.length-e.length),Fs(n,t)}},CT=class extends ZN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Yh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Zh([r,n,s,a],[1,4])}else this.cropBox=Zh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Ve().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new CT(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&da.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=to.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return au((()=>{const t=Bl(Ti(e,"float32"),0);let n;n=_p.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Ku(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},_T=class{},$T=class extends ZN{split(e){return new AT(this,e)}},AT=class extends $T{constructor(e,t){super(),this.upstream=e,this.impl=new FT(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},FT=class extends uT{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},RT=class extends ZN{decodeUTF8(){return new DT(this)}},DT=class extends $T{constructor(e){super(),this.upstream=e,this.impl=new MT(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},MT=class extends uT{constructor(e){if(super(),this.upstream=e,Ve().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=D();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ve().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},OT=class extends RT{constructor(e,t={}){super(),this.file=e,this.options=t,da.assert(e instanceof Uint8Array||!!Ve().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}};var LT=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function zT(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var PT=class extends _T{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(zT(this.input)&&Ve().get("IS_NODE")){const e=M();this.input=e.readFileSync(this.input.substr(7))}return new OT(this.input,this.options)}},BT=class extends _T{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return zT(this.url)?new PT(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=LT(e));const s=await(n||da.fetch)(r,a);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new OT(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function WT(e,t={}){return new TT(new BT(e),t)}function VT(e){const t=KN(e);return mT((async()=>t))}function UT(e){return mT((async()=>{const t=await e();return KN((()=>t.next()))}))}async function GT(e,t){return CT.create(e,t)}async function HT(e){return ET.create(e)}var jT="3.13.0";function qT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&da.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var KT=qf.whereImpl,XT=class extends U{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,tu())}nextDataId(){return XT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ve().get("IS_NODE")&&jp.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&da.isString(n[0])){const a=n.map((e=>da.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return jp.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>da.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return tu().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=da.now();e();return{kernelMs:da.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){qT([e],"where");const t=this.readSync(e.dataId);return KT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};XT.nextDataId=0;var YT={};function ZT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}d(YT,{addImpl:()=>hE,bincountImpl:()=>mE,bincountReduceImpl:()=>gE,ceilImpl:()=>vE,concatImpl:()=>IE,equalImpl:()=>SE,expImpl:()=>EE,expm1Impl:()=>$E,floorImpl:()=>RE,gatherNdImpl:()=>OE,gatherV2Impl:()=>LE,greaterEqualImpl:()=>WE,greaterImpl:()=>zE,lessEqualImpl:()=>qE,lessImpl:()=>GE,linSpaceImpl:()=>YE,logImpl:()=>ZE,maxImpl:()=>eC,maximumImpl:()=>tC,minimumImpl:()=>aC,multiplyImpl:()=>oC,negImpl:()=>hC,notEqualImpl:()=>pC,prodImpl:()=>xC,rangeImpl:()=>wC,rsqrtImpl:()=>kC,sigmoidImpl:()=>NC,simpleAbsImpl:()=>ZT,sliceImpl:()=>CC,sparseFillEmptyRowsImpl:()=>AC,sparseReshapeImpl:()=>FC,sparseSegmentReductionImpl:()=>RC,sqrtImpl:()=>DC,squaredDifferenceImpl:()=>LC,stridedSliceImpl:()=>BC,stringNGramsImpl:()=>WC,stringSplitImpl:()=>UC,stringToHashBucketFastImpl:()=>GC,subImpl:()=>HC,tileImpl:()=>XC,topKImpl:()=>JC,transposeImpl:()=>gC,uniqueImpl:()=>QC});var JT={kernelName:qe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;qT(t,"abs");let r=new Float32Array(da.sizeFromShape(t.shape));return r=ZT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function QT(e){return(t,n,r,a,s)=>{const i=jp.assertAndGetBroadcastShape(t,n),o=i.length,u=da.computeStrides(i),l=da.sizeFromShape(i),c=da.getTypedArrayFromDType(s,l),h=t.length,d=n.length,p=da.computeStrides(t),f=da.computeStrides(n),m=jp.getBroadcastDims(t,i),g=jp.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<c.length;++t){const n=da.indexToLoc(t,o,u),s=n.slice(-h);m.forEach((e=>s[e]=0));const i=da.locToIndex(s,h,p),l=n.slice(-d);g.forEach((e=>l[e]=0));const y=da.locToIndex(l,d,f);c[t]=e(r[i],a[y])}return[c,i]}}function eE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var tE={kernelName:xt,backendName:"cpu",kernelFunc:eE};function nE(e,t,n="float32"){if("complex64"===n){return eE({inputs:{real:nE(e,t,"float32"),imag:nE(e,t,"float32")},backend:e})}const r=da.makeZerosTypedArray(da.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function rE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var aE={kernelName:on,backendName:"cpu",kernelFunc:rE};function sE(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var iE={kernelName:Qn,backendName:"cpu",kernelFunc:sE};function oE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return rE({inputs:{x:a},backend:n});const e=nE(n,a.shape,a.dtype),t=oE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=eE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=sE({inputs:{input:a},backend:n}),t=oE({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!da.hasEncodingLoss(a.dtype,s)){const e=rE({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=da.toTypedArray([0],a.dtype),[r,s]=QT(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var uE={kernelName:gt,backendName:"cpu",kernelFunc:oE};function lE(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;qT([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?jp.fromUint8ToStringArray(u):u,h="string"===s.dtype?jp.fromUint8ToStringArray(l):l,d=r||s.dtype,[p,f]=t(s.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=oE({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=oE({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=eE({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function cE(e){return(t,n,r,a,s,i)=>{const o=jp.assertAndGetBroadcastShape(t,n),u=da.sizeFromShape(o),l=o.length,c=da.computeStrides(o),h=da.getTypedArrayFromDType("float32",u),d=da.getTypedArrayFromDType("float32",u),p=jp.getBroadcastDims(t,o),f=jp.getBroadcastDims(n,o),m=jp.mergeRealAndImagArrays(r,a),g=jp.mergeRealAndImagArrays(s,i),y=t.length,b=da.computeStrides(t),x=n.length,v=da.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=da.indexToLoc(t,l,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const a=da.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=da.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}var hE=QT(((e,t)=>e+t)),dE=cE(((e,t,n,r)=>({real:e+n,imag:t+r}))),pE=lE(Ye,hE,dE),fE={kernelName:Ye,backendName:"cpu",kernelFunc:pE};function mE(e,t,n,r,a){const s=da.sizeFromShape(r),i=da.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function gE(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Ni([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function yE(e){return(t,n,r)=>{const a=da.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function bE(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(qT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=da.sizeFromShape(i.shape),c=n||i.dtype,h=da.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function xE(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(qT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}var vE=yE((e=>Math.ceil(e))),wE=xE(yt,vE),kE={kernelName:yt,backendName:"cpu",kernelFunc:wE};function IE(e,t,n,r){const a=da.getArrayFromDType(n,da.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=da.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?jp.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var SE=QT(((e,t)=>e===t?1:0)),NE=lE(jt,SE,null,"bool"),TE={kernelName:jt,backendName:"cpu",kernelFunc:NE},EE=yE((e=>Math.exp(e))),CE=xE(qt,EE,"float32"),_E={kernelName:qt,backendName:"cpu",kernelFunc:CE},$E=yE((e=>Math.expm1(e))),AE=xE(Xt,$E),FE={kernelName:Xt,backendName:"cpu",kernelFunc:AE},RE=yE((e=>Math.floor(e))),DE=xE(Qt,RE),ME={kernelName:Qt,backendName:"cpu",kernelFunc:DE};function OE(e,t,n,r,a,s,i,o,u){const l=Ni([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}function LE(e,t,n){const r=Ni(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}var zE=QT(((e,t)=>e>t?1:0)),PE=lE(an,zE,null,"bool"),BE={kernelName:an,backendName:"cpu",kernelFunc:PE},WE=QT(((e,t)=>e>=t?1:0)),VE=lE(sn,WE,null,"bool"),UE={kernelName:sn,backendName:"cpu",kernelFunc:VE},GE=QT(((e,t)=>e<t?1:0)),HE=lE(fn,GE,null,"bool"),jE={kernelName:fn,backendName:"cpu",kernelFunc:HE},qE=QT(((e,t)=>e<=t?1:0)),KE=lE(mn,qE,null,"bool"),XE={kernelName:mn,backendName:"cpu",kernelFunc:KE};function YE(e,t,n){const r=(t-e)/(n-1),a=da.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var ZE=yE((e=>Math.log(e))),JE=xE(yn,ZE),QE={kernelName:yn,backendName:"cpu",kernelFunc:JE};function eC(e,t,n,r){const a=da.getTypedArrayFromDType(r,da.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var tC=QT(((e,t)=>Math.max(e,t))),nC=lE(Tn,tC),rC={kernelName:Tn,backendName:"cpu",kernelFunc:nC},aC=QT(((e,t)=>Math.min(e,t))),sC=lE(Dn,aC),iC={kernelName:Dn,backendName:"cpu",kernelFunc:sC},oC=QT(((e,t)=>e*t)),uC=cE(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),lC=lE(zn,oC,uC),cC={kernelName:zn,backendName:"cpu",kernelFunc:lC};function hC(e,t,n){const r=da.createScalarValue(-1,n);return oC([],t,r,e,n)}var dC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;qT(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=hC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},pC=QT(((e,t)=>e!==t?1:0)),fC=lE(Bn,pC,null,"bool"),mC={kernelName:Bn,backendName:"cpu",kernelFunc:fC};function gC(e,t,n,r,a){const s=t.length,i=da.sizeFromShape(t),o=da.computeStrides(t),u=da.computeStrides(a),l=da.getTypedArrayFromDType(n,da.sizeFromShape(a));for(let t=0;t<i;++t){const n=da.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[da.locToIndex(a,s,u)]=e[t]}return l}function yC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;qT(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=gC(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}var bC={kernelName:Vr,backendName:"cpu",kernelFunc:yC};function xC(e,t,n,r){const[a,s]=jp.computeOutAndReduceShapes(e,r),i=as(t,"int32"),o=da.makeZerosTypedArray(da.sizeFromShape(a),i),u=da.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var vC={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;qT(a,"prod");const o=a.shape.length,u=da.parseAxisParam(s,a.shape),l=jp.getAxesPermutation(u,o);let c=u,h=a;const d=[];null!=l&&(h=yC({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=jp.getInnerMostAxes(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=xC(h.shape,h.dtype,p,c);let y=m;return i&&(y=jp.expandShapeToKeepDim(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function wC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return da.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=da.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var kC=yE((e=>1/Math.sqrt(e))),IC=xE(cr,kC),SC={kernelName:cr,backendName:"cpu",kernelFunc:IC},NC=yE((e=>1/(1+Math.exp(-e)))),TC=bE(br,(e=>1/(1+Math.exp(-e)))),EC={kernelName:br,backendName:"cpu",kernelFunc:TC};function CC(e,t,n,r,a){const s=mo.isSliceContinous(r,t,n),i=da.sizeFromShape(n),o=da.computeStrides(r);if(s){const n=mo.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=Ni(r,a,"string"===a?jp.fromUint8ToStringArray(e):e),l=Ni(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?jp.fromStringArrayToUint8(l.values):l.values}function _C(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;qT(a,"slice");const[o,u]=mo.parseSliceParams(a,s,i);mo.assertParamsValid(a,o,u);const l=CC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var $C={kernelName:fr,backendName:"cpu",kernelFunc:_C};function AC(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(jp.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[da.getArrayFromDType(n,0),[0,h],da.getArrayFromDType(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(jp.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error(jp.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=da.getArrayFromDType(n,t*h),d=da.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],i=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}}return[s,[t,h],d,l,c]}}function FC(e,t,n,r,a){const s=da.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(jp.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(jp.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error(jp.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/l);if(l*e!==s)throw new Error(jp.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(da.sizeFromShape(u)!==s)throw new Error(jp.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=da.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function RC(e,t,n,r,a,s=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error(jp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=da.getArrayFromDType(n,d);if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error(jp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(jp.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(jp.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&p.fill(i,g*l,y*l);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(jp.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<l;t++)p[y*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&p.fill(i,g*l,c*l),[p,h]}var DC=yE((e=>Math.sqrt(e))),MC=bE(vr,(e=>Math.sqrt(e))),OC={kernelName:vr,backendName:"cpu",kernelFunc:MC},LC=QT(((e,t)=>{const n=e-t;return n*n})),zC=lE($r,LC),PC={kernelName:$r,backendName:"cpu",kernelFunc:zC};function BC(e,t,n,r){const a=Ni(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function WC(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=da.encodeString(e),this.nGramWidths=t,this.leftPad=da.encodeString(n),this.rightPad=da.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=da.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function VC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function UC(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;VC(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=da.getArrayFromDType("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}function GC(e,t){const n=da.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=da.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var HC=QT(((e,t)=>e-t)),jC=cE(((e,t,n,r)=>({real:e-n,imag:t-r}))),qC=lE(Or,HC,jC),KC={kernelName:Or,backendName:"cpu",kernelFunc:qC};function XC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ni(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var YC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function ZC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);ZC(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(da.swap(e,n,t),YC(e[r],a)>0&&da.swap(e,n,r);s<i;){for(da.swap(e,s,i),s++,i--;YC(e[s],a)<0;)s+=1;for(;YC(e[i],a)>0;)i-=1}0===YC(e[n],a)?da.swap(e,n,i):(i+=1,da.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function JC(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=da.getTypedArrayFromDType(n,i*r),l=da.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(ZC(i,r),i=i.slice(0,r)),a&&i.sort(YC);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ni(c,n,u),Ni(c,"int32",l)]}function QC(e,t,n,r){const a=da.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Ba(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const d=new Ba(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}fu("cpu",(()=>new XT),1);var e_=bE(Ut,(e=>e>=0?e:Math.exp(e)-1)),t_={kernelName:Ut,backendName:"cpu",kernelFunc:e_};function n_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;qT([a],"leakyRelu");const i=da.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=da.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}var r_={kernelName:pn,backendName:"cpu",kernelFunc:n_},a_=QT(((e,t)=>e<0?t*e:e));function s_(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;qT([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=a_(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}var i_={kernelName:Yn,backendName:"cpu",kernelFunc:s_},o_=bE(tr,(e=>Math.max(0,e))),u_={kernelName:tr,backendName:"cpu",kernelFunc:o_},l_=bE(or,(e=>Math.min(Math.max(0,e),6))),c_={kernelName:or,backendName:"cpu",kernelFunc:l_};function h_(e,t,n,r,a){if("linear"===n)return rE({inputs:{x:t},backend:e});if("relu"===n)return o_({inputs:{x:t},backend:e});if("elu"===n)return e_({inputs:{x:t},backend:e});if("relu6"===n)return l_({inputs:{x:t},backend:e});if("prelu"===n)return s_({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return n_({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return TC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function d_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=da.sizeFromShape(a.shape),o=da.inferFromImplicitShape(s,i),u=da.sizeFromShape(o);da.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var p_={kernelName:nr,backendName:"cpu",kernelFunc:d_};function f_(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;qT([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=da.sizeFromShape(f),y=da.sizeFromShape(m),b=Yi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);da.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=d_({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=d_({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,E=n.data.get(w.dataId).values,C=da.computeStrides(v.shape),_=da.computeStrides(w.shape),[$,A,F]=i?[C[0],1,C[1]]:[C[0],C[1],1],[R,D,M]=o?[1,_[1],_[0]]:[_[1],1,_[0]],O=I*S,L=Ni([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){const a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*F]*E[a*R+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}var m_={kernelName:ht,backendName:"cpu",kernelFunc:f_};var g_={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=f_({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=pE({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=h_(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},y_=bE(Ke,(e=>Math.acos(e))),b_={kernelName:Ke,backendName:"cpu",kernelFunc:y_},x_=bE(Xe,(e=>Math.acosh(e))),v_={kernelName:Xe,backendName:"cpu",kernelFunc:x_};var w_={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;qT(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Ni(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var k_={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;qT(a,"all");const o=da.parseAxisParam(s,a.shape);let u=o;const l=jp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=yC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=jp.getInnerMostAxes(u.length,a.shape.length)),jp.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,d]=jp.computeOutAndReduceShapes(c.shape,u),p=da.sizeFromShape(d),f=da.makeZerosTypedArray(da.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=d_({inputs:{x:g},backend:n,attrs:{shape:jp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var I_={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;qT(a,"any");const o=da.parseAxisParam(s,a.shape);let u=o;const l=jp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=yC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=jp.getInnerMostAxes(u.length,a.shape.length)),jp.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,d]=jp.computeOutAndReduceShapes(c.shape,u),p=da.sizeFromShape(d),f=da.makeZerosTypedArray(da.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=d_({inputs:{x:g},backend:n,attrs:{shape:jp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var S_={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;qT(a,"argMax");let i=da.parseAxisParam(s,a.shape);const o=jp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=yC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=jp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],jp.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=jp.computeOutAndReduceShapes(u.shape,i),d=da.sizeFromShape(c),p=da.makeZerosTypedArray(d,"int32"),f=da.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}};var N_={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;qT(a,"argMin");let i=da.parseAxisParam(s,a.shape);const o=jp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=yC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=jp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],jp.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=jp.computeOutAndReduceShapes(u.shape,i),d=da.sizeFromShape(c),p=da.makeZerosTypedArray(d,"int32"),f=da.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},T_=bE(nt,(e=>Math.asin(e))),E_={kernelName:nt,backendName:"cpu",kernelFunc:T_},C_=bE(rt,(e=>Math.asinh(e))),__={kernelName:rt,backendName:"cpu",kernelFunc:C_},$_=bE(at,(e=>Math.atan(e))),A_={kernelName:at,backendName:"cpu",kernelFunc:$_},F_=QT(((e,t)=>Math.atan2(e,t))),R_=lE(it,F_),D_={kernelName:it,backendName:"cpu",kernelFunc:R_},M_=bE(st,(e=>Math.atanh(e))),O_={kernelName:st,backendName:"cpu",kernelFunc:M_};function L_(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ni(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function z_(e,t,n,r,a=!1,s=!1){const i=Ni(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Ni(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>v&&(v=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(w,e,n,o,t)}}return i}function P_(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ni(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=l;const E=Math.min(a.inDepth,d+N),C=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+i),w=C+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+i),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<E;n+=l){const a=x+n*r[1];for(let n=d;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}var B_={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qT(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;da.assert(jp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=jp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&da.arraysEqual(l.inShape,l.outShape))c=rE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=da.computeStrides(a.shape),r=L_(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};var W_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;qT(a,"avgPool3d");const c=jp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=P_(n.data.get(a.dataId).values,a.shape,a.dtype,da.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};var V_={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;qT([a,s],"avgPool3DGrad");const c=jp.computePool3DInfo(s.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=Ni(s.shape,"float32"),E=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;u+=C.get(e,r,a,s,t)}}}T.set(u*E,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};var U_={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;qT([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=jp.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Ni(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=Ni(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;i+=S.get(e,r,a,t)}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var G_={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;da.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),da.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),da.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),qT([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var H_={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;qT([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=jp.getReshaped(a.shape,s,o),l=jp.getPermuted(u.length,s.length),c=jp.getReshapedPermuted(a.shape,s,o),h=jp.getSliceBeginCoords(i,s.length),d=jp.getSliceSize(c,i,s.length),p=d_({inputs:{x:a},backend:n,attrs:{shape:u}}),f=yC({inputs:{x:p},backend:n,attrs:{perm:l}}),m=d_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_C({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var j_={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=mE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var q_={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=jp.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},K_=bE(bt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),X_={kernelName:bt,backendName:"cpu",kernelFunc:K_},Y_={kernelName:vt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(da.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Z_(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var J_={kernelName:ln,backendName:"cpu",kernelFunc:Z_};function Q_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=da.parseAxisParam(a,t[0].shape)[0];let i=jp.computeOutShape(t.map((e=>e.shape)),s);if(0===da.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>da.sizeFromShape(e.shape)>0));if(1===o.length)return rE({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(jp.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>sE({inputs:{input:e},backend:n}))),t=o.map((e=>Z_({inputs:{input:e},backend:n}))),r=Q_({inputs:e,backend:n,attrs:{axis:s}}),a=Q_({inputs:t,backend:n,attrs:{axis:s}}),i=eE({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=da.sizeFromShape(e.shape.slice(s));return d_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=jp.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=IE(c,i,t[0].dtype,h),p=jp.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var e$={kernelName:wt,backendName:"cpu",kernelFunc:Q_};function t$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;qT([a,s],"conv2d");const h=jp.convertConv2DDataFormat(u),d=jp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ba(d.outShape,a.dtype),w=da.computeStrides(a.shape),k=da.computeStrides(s.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],E=v.strides[0],C=x?v.strides[1]:v.strides[2],_=x?v.strides[2]:1,$=x?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<d.outHeight;++e){const r=n+e*C,a=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*_,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[a+e*T];for(let e=0;e<d.outChannels;++e)R[t+e*$]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var n$={kernelName:kt,backendName:"cpu",kernelFunc:t$};var r$={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;qT([a,s],"conv2dBackpropFilter");const h=jp.convertConv2DDataFormat(u),d=jp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ba(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ba(a.shape,a.dtype,w),S=new Ba(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var a$={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;qT([a,s],"conv2dBackpropInput");const h=da.computeStrides(s.shape),d=da.computeStrides(a.shape);let p=jp.convertConv2DDataFormat(l);const f=jp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,p),m=new Ba(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:E,outChannels:C,outHeight:_,outWidth:$,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-R,a=Math.max(0,Math.ceil(r/A)),s=Math.min(_,(I+r)/A);for(let i=0;i<E;++i){const o=i-D,u=Math.max(0,Math.ceil(o/F)),l=Math.min($,(S+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+v*(S-1-(r*F-o))+w*t;for(let e=0;e<C;++e){c+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var s$={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;qT([a,s],"conv3d");const l=jp.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Ba(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,S=da.computeStrides(a.shape),N=da.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*v.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var i$={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;qT([a,s],"conv3dBackpropFilterV2");const l=da.computeStrides(a.shape),c=da.computeStrides(s.shape),h=jp.computeConv3DInfo(a.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ba(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,E,C]=c,_=n.data.get(a.dataId).values,[$,A,F,R]=l,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/p)),i=Math.min(h.outHeight,(h.inHeight+O-a)/p),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*N;for(let m=t;m<n;++m){const t=(e+m*d-D)*A+h,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*p-O)*F+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*C+i;g+=_[(r+e*f-M)*R+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var o$={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;qT([a],"conv3dBackpropInputV2");const l=da.computeStrides(a.shape),c=da.computeStrides(s.shape),h=jp.computeConv3DInfo(u,s.shape,o,1,i),d=new Ba(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[S,N,T,E]=c,{batchSize:C,filterDepth:_,filterHeight:$,filterWidth:A,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=_-1-h.padInfo.front,G=$-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(_+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,($+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),C=Math.min(P,(A+h)/V);let F=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=d;i<C;++i){const o=x*e+v*n+w*r+k*i,u=S*(_-1-a)+N*($-1-s)+T*(A-1-(i*V-h))+E*t;for(let e=0;e<O;++e){F+=b[o+e]*I[u+e]}}}}p[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},u$=bE(Ct,(e=>Math.cos(e))),l$={kernelName:Ct,backendName:"cpu",kernelFunc:u$},c$=bE(_t,(e=>Math.cosh(e))),h$={kernelName:_t,backendName:"cpu",kernelFunc:c$};var d$={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=s.shape[0],[m,g]=o,y=Ni([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=da.computeStrides(a.shape),k=da.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+s)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const p=l+(c-l)*b,f=d+(v[s]-d)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var p$={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;qT(a,"cumsum");const u=jp.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=yC({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=jp.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=as(l.dtype,"int32"),d=da.makeZerosTypedArray(da.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=yC({inputs:{x:g},backend:n,attrs:{perm:jp.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};var f$={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=mE(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=gE(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var m$={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;da.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,d=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};function g$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;qT([a,s],"depthwiseConv2DNative");const c=da.computeStrides(a.shape),h=da.computeStrides(s.shape);let d=u;null==d&&(d=[1,1]),da.assert(jp.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=jp.computeConv2DInfo(a.shape,s.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Ba(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*h[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[u+e]+=t*S[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var y$={kernelName:Dt,backendName:"cpu",kernelFunc:g$};var b$={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;qT([a,s],"depthwiseConv2dNativeBackpropFilter");const h=jp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ba(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new Ba(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new Ba(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var x$={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;qT([a,s],"depthwiseConv2DNativeBackpropInput");const h=da.computeStrides(a.shape),d=da.computeStrides(s.shape),p=jp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new Ba(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:E,filterHeight:C,filterWidth:_,inChannels:$,inHeight:A,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=C-1-p.padInfo.top,P=_-1-p.padInfo.left,B=R/$;for(let e=0;e<E;++e)for(let t=0;t<$;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(C+r)/O);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,(_+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=v*e+w*n+k*r,i=S*(C-1-a)+N*(_-1-(r*L-o))+T*t;for(let e=0;e<B;++e){c+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var v$={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=da.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Ni([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},w$={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=jp.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),E=da.sizeFromShape(T),C=T.length,_=da.getArrayFromDType(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const i=s*w-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=da.locToIndex([e,s,p,o],c,da.computeStrides(r.shape)),f=da.locToIndex([t,n,o],d,da.computeStrides(a.shape)),m=l[i]+h[f];m>u&&(u=m)}}}_[da.locToIndex([e,t,s,o],C,da.computeStrides(T))]=u}}}return{dataId:u.write(da.toTypedArray(_,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},k$={kernelName:Bt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=da.toNestedArray(r.shape,l.data.get(r.dataId).values),h=da.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=jp.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);da.assert(s.rank===N.length,(()=>`Error in ${Bt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=da.toNestedArray(N,l.data.get(s.dataId).values),E=da.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}E[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(da.toTypedArray(E,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},I$={kernelName:Pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=da.toNestedArray(r.shape,l.data.get(r.dataId).values),h=da.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=jp.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);da.assert(s.rank===N.length,(()=>`Error in ${Pt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=da.toNestedArray(N,l.data.get(s.dataId).values),E=da.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}E[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(da.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function S$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;qT(a,"sum"),o="bool"===a.dtype?oE({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):rE({inputs:{x:a},backend:n});const u=o.shape.length,l=da.parseAxisParam(s,o.shape),c=jp.getAxesPermutation(l,u);let h=l,d=o;null!=c&&(d=yC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=jp.getInnerMostAxes(h.length,u)),jp.assertAxesAreInnerMostDims("sum",h,d.shape.length);const[p,f]=jp.computeOutAndReduceShapes(d.shape,h);let m=nE(n,p,jp.upcastType(d.dtype,"int32"));const g=da.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=d_({inputs:{x:m},backend:n,attrs:{shape:jp.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}var N$={kernelName:wr,backendName:"cpu",kernelFunc:S$};var T$={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=jp.decodeEinsumEquation(a,s.length);jp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=jp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=jp.getEinsumPermutation(p,u[t]);let a;jp.isIdentityPermutation(e)?a=s[t]:(a=yC({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);da.arraysEqual(a.shape,i)||(a=d_({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=lC({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=S$({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};var E$={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;qT([r,a],"eluGrad");const s=new Float32Array(da.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},C$=jp.ERF_P,_$=jp.ERF_A1,$$=jp.ERF_A2,A$=jp.ERF_A3,F$=jp.ERF_A4,R$=jp.ERF_A5,D$=bE(Ht,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+C$*n);return t*(1-((((R$*r+F$)*r+A$)*r+$$)*r+_$)*r*Math.exp(-n*n))})),M$={kernelName:Ht,backendName:"cpu",kernelFunc:D$};function O$(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(da.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),d_({inputs:{x:a},backend:n,attrs:{shape:o}})}var L$={kernelName:Kt,backendName:"cpu",kernelFunc:O$},z$=QT(((e,t)=>e/t)),P$=lE(Wt,z$),B$={kernelName:Wt,backendName:"cpu",kernelFunc:P$};function W$(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=da.sizeFromShape(l),h=da.getTypedArrayFromDType("float32",c),d=da.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=_C({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=_C({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=eE({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=V$(i,t,n),p=jp.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=jp.getComplexWithIndex(p,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=eE({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function V$(e,t,n){const r=da.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=U$(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",da.createScalarValue(r,"float32")),i=rE({inputs:{x:s},backend:n}),u=B$.kernelFunc({inputs:{a:e,b:s},backend:n}),l=B$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=jp.exponent(a*r,t,n),u=jp.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),jp.assignToTypedArray(r,s,i,a)}return r}(jp.mergeRealAndImagArrays(s,i),r,t);return jp.splitRealAndImagArrays(e)}var o}function U$(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=jp.mergeRealAndImagArrays(e,t),i=n/2,o=jp.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=eE({inputs:{real:h,imag:d},backend:a}),f=jp.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=eE({inputs:{real:b,imag:x},backend:a}),w=U$(u,l,i,r,a),k=w.real,I=w.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),E=eE({inputs:{real:N,imag:T},backend:a}),C=U$(m,g,i,r,a),_=C.real,$=C.imag,A=[_.length],F=a.makeTensorInfo(A,"float32",_),R=a.makeTensorInfo(A,"float32",$),D=eE({inputs:{real:F,imag:R},backend:a}),M=jp.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=eE({inputs:{real:L,imag:z},backend:a}),B=lC({inputs:{a:P,b:D},backend:a}),W=pE({inputs:{a:E,b:B},backend:a}),V=qC({inputs:{a:E,b:B},backend:a}),U=sE({inputs:{input:W},backend:a}),G=sE({inputs:{input:V},backend:a}),H=Z_({inputs:{input:W},backend:a}),j=Z_({inputs:{input:V},backend:a}),q=Q_({inputs:[U,G],backend:a,attrs:{axis:0}}),K=Q_({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var G$={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=da.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=d_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=W$(i,!1,n),u=d_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function H$(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||da.inferDtype(a),o=da.getArrayFromDType(i,da.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var j$={kernelName:Zt,backendName:"cpu",kernelFunc:H$};var q$={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=da.getTypedArrayFromDType(r.dtype,da.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let h=c[o];if(i>=0&&i<u){h=c[t+n+i*l+a]}s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},K$=QT(((e,t)=>Math.floor(e/t))),X$=lE(en,K$,null,"int32"),Y$={kernelName:en,backendName:"cpu",kernelFunc:X$};var Z$={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=t$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=pE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=h_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var J$={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=g$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=pE({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=h_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var Q$={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=da.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=jp.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=OE(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,d.values)}};var eA={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;qT([a,s],"gatherV2");const u=da.parseAxisParam(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];da.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=da.sizeFromShape(s.shape),p=jp.segment_util.collectGatherOpShapeInfo(a,s,u,h),f=d_({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=d_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=LE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};var tA={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=da.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=d_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=W$(i,!0,n),u=d_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},nA=bE(cn,(e=>Number.isFinite(e)?1:0),"bool"),rA={kernelName:cn,backendName:"cpu",kernelFunc:nA},aA=bE(hn,(e=>Math.abs(e)===1/0?1:0),"bool"),sA={kernelName:hn,backendName:"cpu",kernelFunc:aA},iA=bE(dn,(e=>Number.isNaN(e)?1:0),"bool"),oA={kernelName:dn,backendName:"cpu",kernelFunc:iA};var uA={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=YE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},lA=bE(bn,(e=>Math.log1p(e))),cA={kernelName:bn,backendName:"cpu",kernelFunc:lA},hA=QT(((e,t)=>e&&t)),dA=lE(xn,hA,null,"bool"),pA={kernelName:xn,backendName:"cpu",kernelFunc:dA},fA=bE(vn,(e=>e?0:1),"bool"),mA={kernelName:vn,backendName:"cpu",kernelFunc:fA},gA=QT(((e,t)=>e||t)),yA=lE(wn,gA,null,"bool"),bA={kernelName:wn,backendName:"cpu",kernelFunc:yA};var xA={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;qT(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=da.sizeFromShape(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}};var vA={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;qT(i,"LRNGrad");const h=da.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function wA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=da.parseAxisParam(s,u);let h=c;const d=jp.getAxesPermutation(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=gC(p,u,a.dtype,d,e),h=jp.getInnerMostAxes(h.length,l),u=e}qT(a,"max"),jp.assertAxesAreInnerMostDims("max",h,l);const[f,m]=jp.computeOutAndReduceShapes(u,h),g=eC(p,da.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;if(i){b=jp.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:a.dtype}}var kA={kernelName:Nn,backendName:"cpu",kernelFunc:wA};var IA={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qT(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;da.assert(jp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=jp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&da.arraysEqual(l.inShape,l.outShape))c=rE({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=da.computeStrides(a.shape),r=L_(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};var SA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;qT(a,"maxPool3d");const c=jp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=P_(n.data.get(a.dataId).values,a.shape,a.dtype,da.computeStrides(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};var NA={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;qT([a,s],"maxPool3DGrad");const c=jp.computePool3DInfo(s.shape,i,o,1,u,l),h=function(e,t){const n=Ni(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*h+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Ni(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*v-1-h.get(e,r,s,l,t)===n*x*v+a*v+i?1:0;if(0===d)continue;u+=N.get(e,r,s,l,t)*d}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};var TA={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;qT([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=jp.computePool2DInfo(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=Ni(d.outShape,o.dtype,z_(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ni(o.shape,"float32"),S=n.data.get(a.dataId).values,N=Ni(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;if(0===u)continue;i+=N.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var EA={kernelName:An,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;qT(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=jp.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=function(e,t,n,r,a){const s=L_(e,0,n,da.computeStrides(t),a,"max"),i=z_(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};var CA={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=da.parseAxisParam(s,a.shape),u=jp.computeOutAndReduceShapes(a.shape,o)[1],l=da.sizeFromShape(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=oE({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=P$({inputs:{a:d,b:h},backend:n});c.push(p);const f=S$({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var _A={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;qT(a,"min");const o=da.parseAxisParam(s,a.shape);let u=o;const l=jp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=yC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=jp.getInnerMostAxes(u.length,a.shape.length)),jp.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,d]=jp.computeOutAndReduceShapes(c.shape,u),p=da.sizeFromShape(d),f=da.makeZerosTypedArray(da.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=d_({inputs:{x:g},backend:n,attrs:{shape:jp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var $A={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;qT(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=da.computeStrides(a.shape),f=da.sizeFromShape(o),m=o.length,g=da.computeStrides(o),y=da.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=da.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=da.locToIndex(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},AA=QT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),FA=lE(On,AA),RA={kernelName:On,backendName:"cpu",kernelFunc:FA},DA=p(N());function MA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=da.parseAxisParam([o],a.shape),l=wA({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=jp.expandShapeToKeepDim(l.shape,u),h=d_({inputs:{x:l},backend:n,attrs:{shape:c}}),d=qC({inputs:{a,b:h},backend:n}),p=CE({inputs:{x:d},backend:n}),f=S$({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=d_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=P$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var OA={kernelName:Sr,backendName:"cpu",kernelFunc:MA};var LA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;qT(a,"multinomial");const u=o?a:MA({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,s],p=da.makeZerosTypedArray(da.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=DA.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},zA=qf.nonMaxSuppressionV3Impl;var PA={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;qT(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=zA(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},BA=qf.nonMaxSuppressionV4Impl;var WA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;qT(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=BA(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},VA=qf.nonMaxSuppressionV5Impl;var UA={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;qT(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=VA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var GA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;qT(a,"oneHot");const u=da.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function HA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=sE({inputs:{input:r},backend:n}),t=HA({inputs:{x:e},backend:n}),a=Z_({inputs:{input:r},backend:n}),s=HA({inputs:{x:a},backend:n}),i=eE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return H$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var jA={kernelName:jr,backendName:"cpu",kernelFunc:HA};var qA={kernelName:Gn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=sE({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Z_({inputs:{input:a},backend:r}),i=HA({inputs:{x:s},backend:r}),o=eE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return H$({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function KA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return O$({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{da.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),da.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=Q_({inputs:t.map((e=>{const t=O$({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}var XA={kernelName:jn,backendName:"cpu",kernelFunc:KA};var YA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;qT(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=da.sizeFromShape(a.shape),h=a.shape.length,d=da.computeStrides(a.shape),p=da.sizeFromShape(o),f=o.length,m=da.computeStrides(o),g=da.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=da.indexToLoc(e,h,d).map(((e,t)=>e+u[t]));g[da.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},ZA=QT(((e,t)=>Math.pow(e,t))),JA=lE(Xn,ZA),QA={kernelName:Xn,backendName:"cpu",kernelFunc:JA};var eF={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=wC(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},tF=bE(er,(e=>1/e)),nF={kernelName:er,backendName:"cpu",kernelFunc:tF};var rF={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;qT(a,"resizeBilinear");const u=da.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(da.sizeFromShape([h,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};var aF={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;qT([s,a],"resizeBilinearGrad");const o=da.computeStrides(a.shape),[u,l,c,h]=a.shape,[,d,p]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*l,k=d*a,I=u*l,S=u*a;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};var sF={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;qT(a,"resizeNearestNeighbor");const u=da.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}};var iF={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;qT([s,a],"resizeNearestNeighborGrad");const o=da.computeStrides(a.shape),u=da.computeStrides(s.shape),[l,c,h,d]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*h*d),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var oF={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;qT(a,"reverse");const i=a.shape.length,o=da.parseAxisParam(s,a.shape);if(0===i)return rE({inputs:{x:a},backend:n});const u=new Ba(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},uF={kernelName:Xr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=da.getTypedArrayFromDType(r.dtype,da.sizeFromShape(r.shape)),[l,c,h,d]=r.shape,[p,f]=jp.getImageCenter(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],b=o[2],x=o[1];let v=(b-p)*g-(x-f)*m,w=(b-p)*m+(x-f)*g;v=Math.round(v+p),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<c){k=y[t+w*(h*d)+v*d+i]}u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},lF=bE(lr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),cF={kernelName:lr,backendName:"cpu",kernelFunc:lF};function hF(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return Ni(n,t.dtype);const p=Ni(c,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}var dF={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=jp.calculateShapes(s,a,i),d=hF(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};var pF={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;qT([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=as(a.dtype,s.dtype),h=da.makeZerosTypedArray(da.sizeFromShape(a.shape),c);let d=0;const p=0===i||i>1||1===a.shape.length?1:da.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},fF=jp.SELU_SCALEALPHA,mF=jp.SELU_SCALE,gF=bE(pr,(e=>e>=0?mF*e:fF*(Math.exp(e)-1))),yF={kernelName:pr,backendName:"cpu",kernelFunc:gF},bF=bE(yr,(e=>e<0?-1:e>0?1:0)),xF={kernelName:yr,backendName:"cpu",kernelFunc:bF},vF=bE(mr,(e=>Math.sin(e))),wF={kernelName:mr,backendName:"cpu",kernelFunc:vF},kF=bE(gr,(e=>Math.sinh(e))),IF={kernelName:gr,backendName:"cpu",kernelFunc:kF},SF=Math.log(1.1920928955078125e-7)+2,NF=bE(xr,(e=>{const t=e>-SF,n=e<SF,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),TF={kernelName:xr,backendName:"cpu",kernelFunc:NF};var EF={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;qT([a],"spaceToBatchND");const o=da.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=YA.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=jp.getReshaped(l.shape,s,o,!1),h=jp.getPermuted(c.length,s.length,!1),d=jp.getReshapedPermuted(l.shape,s,o,!1),p=d_({inputs:{x:l},backend:n,attrs:{shape:c}}),f=yC({inputs:{x:p},backend:n,attrs:{perm:h}}),m=d_({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};var CF={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=AC(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var _F={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=FC(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var $F={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=RC(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};var AF={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=RC(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};var FF={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=jp.calculateShapes(s,a,o),p=hF(n.bufferSync(a),n.bufferSync(s),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}};var RF={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=da.parseAxisParam(i,a.shape)[0],u=jp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=_C({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},DF={kernelName:Ar,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;qT(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},MF=bE(qr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OF={kernelName:qr,backendName:"cpu",kernelFunc:MF};var LF={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;qT(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=mo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=d_({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){da.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=mo.computeOutShape(b,x,v),t=_C({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=d_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=BC(p,n.bufferSync(a),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};var zF={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=WC(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var PF={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=UC(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var BF={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=GC(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},WF=bE(Lr,(e=>Math.tan(e))),VF={kernelName:Lr,backendName:"cpu",kernelFunc:WF},UF=bE(zr,(e=>Math.tanh(e)));function GF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return da.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return da.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return da.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function HF(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function jF(e,t,n,r,a,s,i,o,u,l,c){return HF(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function qF(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*HF(e,t,n,r,a,s,i,h,d,l,c)+(u-d)*HF(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*HF(e,t,n,r,a,s,i,p,d,l,c)+(u-d)*HF(e,t,n,r,a,s,i,p,f,l,c))}var KF=[g_,JT,b_,v_,fE,w_,k_,I_,S_,N_,E_,__,A_,D_,O_,B_,W_,V_,U_,m_,G_,H_,j_,q_,uE,kE,X_,tE,Y_,e$,n$,r$,a$,s$,i$,o$,l$,h$,d$,p$,f$,m$,y$,b$,x$,v$,w$,k$,I$,T$,t_,E$,TE,M$,_E,L$,FE,G$,j$,q$,ME,Y$,Z$,J$,Q$,eA,BE,UE,aE,tA,J_,rA,sA,oA,r_,jE,XE,uA,QE,cA,pA,mA,bA,xA,vA,kA,rC,IA,SA,NA,TA,EA,CA,_A,iC,$A,RA,LA,cC,dC,PA,WA,UA,mC,GA,qA,XA,YA,QA,i_,vC,eF,iE,B$,nF,u_,c_,p_,rF,aF,sF,iF,oF,uF,cF,SC,dF,pF,yF,EC,xF,wF,IF,$C,OA,TF,EF,CF,_F,$F,AF,FF,RF,OC,DF,PC,OF,LF,zF,PF,BF,KC,N$,VF,{kernelName:zr,backendName:"cpu",kernelFunc:UF},{kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;qT(a,"tile");const i=XC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;qT(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=JC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=da.computeStrides(a.shape),b=y[0],x=y[1],v=y[2],w=da.getTypedArrayFromDType(a.dtype,da.sizeFromShape(g));w.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=GF(c,d,o),m=GF(p,h,o);switch(i){case"nearest":s=jF(k,h,d,b,x,v,e,m,f,a,u);break;case"bilinear":s=qF(k,h,d,b,x,v,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}},bC,{kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;qT(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=QC(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[s]=e;const t=_C({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=d_({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;qT(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=O$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=da.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=NE({inputs:{a:r,b:c},backend:n}),i=oE({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=lC({inputs:{a:i,b:a},backend:n}),h=S$({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=KA({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},jA];for(const e of KF)ia(e);var XF={};d(XF,{assertNotComplex:()=>aD,bindCanvasToFramebuffer:()=>DR,bindColorTextureToFramebuffer:()=>MR,bindTextureToProgramUniformSampler:()=>RR,bindTextureUnit:()=>_R,bindVertexBufferToProgramAttribute:()=>CR,callAndCheck:()=>cR,canBeRepresented:()=>hR,createFragmentShader:()=>mR,createFramebuffer:()=>ER,createProgram:()=>xR,createStaticIndexBuffer:()=>IR,createStaticVertexBuffer:()=>kR,createTexture:()=>NR,createVertexShader:()=>fR,getBatchDim:()=>WR,getExtensionOrThrow:()=>pR,getFramebufferErrorMessage:()=>zR,getMaxTexturesInShader:()=>YR,getNumChannels:()=>SR,getProgramUniformLocation:()=>FR,getProgramUniformLocationOrThrow:()=>AR,getRowsCols:()=>VR,getShapeAs3D:()=>UR,getTextureShapeFromLogicalShape:()=>GR,getWebGLDisjointQueryTimerVersion:()=>ZR,getWebGLErrorMessage:()=>dR,getWebGLMaxTextureSize:()=>qR,hasExtension:()=>JR,isCapableOfRenderingToFloatTexture:()=>eD,isDownloadFloatTextureEnabled:()=>tD,isReshapeFree:()=>jR,isWebGLFenceEnabled:()=>rD,isWebGLVersionEnabled:()=>QR,linkProgram:()=>vR,resetMaxTextureSize:()=>KR,resetMaxTexturesInShader:()=>XR,unbindColorTextureFromFramebuffer:()=>OR,unbindTextureUnit:()=>$R,validateFramebuffer:()=>LR,validateProgram:()=>wR,validateTextureSize:()=>TR});var YF,ZF,JF,QF,eR,tR,nR={},rR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function aR(e,t){nR[e]=t}function sR(e,t){if(!(e in nR)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete nR[e]}),!1),1===e)return n.getContext("webgl",rR)||n.getContext("experimental-webgl",rR);return n.getContext("webgl2",rR)}(e,t);if(null===n)return null;nR[e]=n}const n=nR[e];return null==n||n.isContextLost()?(delete nR[e],sR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),nR[e])}function iR(e,t){return[t,e]}function oR(e){const t=da.sizeFromShape(e),n=Math.ceil(t/4);return da.sizeToSquarishShape(n)}function uR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function lR(e,t){const n=e;let r,a,s,i,o,u,l,c,h,d;return 2===Ve().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function cR(e,t){const n=t();return Ve().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+dR(e,t))}(e),n}(ZF=YF||(YF={}))[ZF.DENSE=0]="DENSE",ZF[ZF.SHARED_BATCH=1]="SHARED_BATCH",(QF=JF||(JF={}))[QF.RENDER=0]="RENDER",QF[QF.UPLOAD=1]="UPLOAD",QF[QF.PIXELS=2]="PIXELS",QF[QF.DOWNLOAD=3]="DOWNLOAD",(tR=eR||(eR={}))[tR.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",tR[tR.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",tR[tR.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",tR[tR.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",tR[tR.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function hR(e){return!!(Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function dR(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function pR(e,t){return PR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function fR(e,t){const n=PR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(cR(e,(()=>e.shaderSource(n,t))),cR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n}function mR(e,t){const n=PR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(cR(e,(()=>e.shaderSource(n,t))),cR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=bR.exec(t);if(null==n)return;const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>da.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);i.slice(0,r-1),i.slice(r-1,r),i.slice(r)}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var gR,yR,bR=/ERROR: [0-9]+:([0-9]+):/g;function xR(e){return PR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function vR(e,t){if(cR(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")}function wR(e,t){if(cR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function kR(e,t){const n=PR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return cR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),cR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function IR(e,t){const n=PR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return cR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),cR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function SR(){return 2===Ve().getNumber("WEBGL_VERSION")?1:4}function NR(e){return PR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function TR(e,t){const n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function ER(e){return PR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function CR(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(cR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),cR(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),cR(e,(()=>e.enableVertexAttribArray(o))),!0)}function _R(e,t,n){BR(e,n),cR(e,(()=>e.activeTexture(e.TEXTURE0+n))),cR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function $R(e,t){BR(e,t),cR(e,(()=>e.activeTexture(e.TEXTURE0+t))),cR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function AR(e,t,n){return PR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function FR(e,t,n){return e.getUniformLocation(t,n)}function RR(e,t,n,r){cR(e,(()=>_R(e,t,r))),cR(e,(()=>e.uniform1i(n,r)))}function DR(e){cR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),cR(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),cR(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function MR(e,t,n){cR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),cR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function OR(e,t){cR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),cR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function LR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+zR(e,t))}function zR(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function PR(e,t,n){const r=cR(e,(()=>t()));if(null==r)throw new Error(n);return r}function BR(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function WR(e,t=2){return da.sizeFromShape(e.slice(0,e.length-t))}function VR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function UR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[WR(e),...VR(e)]),t}function GR(e,t=!1){let n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?da.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=da.squeezeShape(e);e=t.newShape}let r=da.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=WR(e);let n=2,a=2;return e.length&&([n,a]=VR(e)),r=t*(n/2)*(a/2),da.sizeToSquarishShape(r).map((e=>2*e))}return da.sizeToSquarishShape(r)}function HR(e){return e%2==0}function jR(e,t){if(e=e.slice(-2),t=t.slice(-2),da.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(HR(n)&&HR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&HR(e[0])&&HR(t[0])}function qR(e){if(null==gR){const t=sR(e);gR=t.getParameter(t.MAX_TEXTURE_SIZE)}return gR}function KR(){gR=null}function XR(){yR=null}function YR(e){if(null==yR){const t=sR(e);yR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,yR)}function ZR(e){if(0===e)return 0;let t;const n=sR(e);return t=JR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:JR(n,"EXT_disjoint_timer_query")?1:0,t}function JR(e,t){return null!=e.getExtension(t)}function QR(e){try{if(null!=sR(e))return!0}catch(e){return!1}return!1}function eD(e){if(0===e)return!1;const t=sR(e);if(1===e){if(!JR(t,"OES_texture_float"))return!1}else if(!JR(t,"EXT_color_buffer_float"))return!1;return nD(t)}function tD(e){if(0===e)return!1;const t=sR(e);if(1!==e){if(JR(t,"EXT_color_buffer_float"))return nD(t);const e="EXT_color_buffer_half_float";if(JR(t,e)){const n=t.getExtension(e);return function(e,t){const n=lR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!JR(t,"OES_texture_float"))return!1;if(!JR(t,"WEBGL_color_buffer_float"))return!1;return nD(t)}function nD(e){const t=lR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function rD(e){if(2!==e)return!1;return null!=sR(e).fenceSync}function aD(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&da.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var sD=Ve();function iD(){let e,t,n,r,a,s,i,o,u,l;return 2===Ve().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function oD(e,t,n="index"){const r=da.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function uD(e,t,n="index"){const r=da.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function lD(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function cD(e){const t=da.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}sD.registerFlag("HAS_WEBGL",(()=>sD.getNumber("WEBGL_VERSION")>0)),sD.registerFlag("WEBGL_VERSION",(()=>QR(2)?2:QR(1)?1:0)),sD.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),sD.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===sD.get("WEBGL_VERSION"))),sD.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),sD.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),sD.registerFlag("WEBGL_PACK",(()=>sD.getBool("HAS_WEBGL"))),sD.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_CLIP",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_PACK_REDUCE",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_LAZILY_UNPACK",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_CONV_IM2COL",(()=>sD.getBool("WEBGL_PACK"))),sD.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>qR(sD.getNumber("WEBGL_VERSION")))),sD.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>YR(sD.getNumber("WEBGL_VERSION")))),sD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=sD.getNumber("WEBGL_VERSION");return 0===e?0:ZR(e)})),sD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>sD.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!bs.isMobile())),sD.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>eD(sD.getNumber("WEBGL_VERSION")))),sD.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!sD.getBool("WEBGL_FORCE_F16_TEXTURES")&&sD.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),sD.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>tD(sD.getNumber("WEBGL_VERSION")))),sD.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>rD(sD.getNumber("WEBGL_VERSION")))),sD.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>sD.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),sD.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),sD.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>bs.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),sD.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),sD.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),sD.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),sD.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var hD="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:dD}=jp;function pD(e,t,n){const r=[];if(e.forEach((e=>{const t=da.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=SD(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?mD(e,r):fD(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=dD(e.shapeInfo.logicalShape,t.logicalShape),u=ID(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===da.sizeFromShape(e.shapeInfo.logicalShape),m=1===da.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&da.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=ID(u),c=dD(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=iD(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${gD}\n    ${yD}\n    ${bD}\n  `}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return vD();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(da.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return vD();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(da.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${uD(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=oD(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${uD(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=oD(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=oD(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=oD(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=xD);return[h,u,c,a,l,s,n.userCode].join("\n")}function fD(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=wD(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${kD(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=wD(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&da.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=da.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${fD(ND(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${TD(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${kD(e)}\n      }\n    `;const l=s[0],c=s[1],h=wD(r);if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=da.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${fD(ND(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${TD(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${kD(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=wD(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=da.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${fD(ND(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${TD(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${kD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=wD(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=da.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${fD(ND(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${TD(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${kD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=wD(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=da.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${fD(ND(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${TD(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${kD(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=wD(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function mD(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=iD();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=iD();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=iD();if(null!=s&&da.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${mD(ND(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${TD(s,r)});\n        }\n      `}const o=iD();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=iD();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let d=h*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var gD="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yD="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bD="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xD="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function vD(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function wD(e){return`offset${e}`}function kD(e){const t=e.name,n=da.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ID(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function SD(e,t,n){const{newShape:r,keptDims:a}=da.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!da.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function ND(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function TD(e,t){return t.map((t=>e[t])).join(", ")}function ED(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!da.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!da.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function CD(e){return Ve().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var _D={};function $D(e){const t=iD();return fR(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function AD(e){return kR(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function FD(e){return IR(e,new Uint16Array([0,1,2,2,1,3]))}function RD(e,t,n,r,a,s){TR(t,n);const i=NR(e),o=e.TEXTURE_2D;return cR(e,(()=>e.bindTexture(o,i))),cR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),cR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),cR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),cR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ve().getNumber("WEBGL_VERSION")?cR(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):cR(e,(()=>e.texStorage2D(o,1,r,t,n))),cR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function DD(e){return e.internalFormatFloat}function MD(e,t,n,r){const[a,s]=iR(t,n);return RD(e,a,s,DD(r),r.textureFormatFloat,e.FLOAT)}function OD(e){return e.internalFormatHalfFloat}function LD(e,t,n,r){const[a,s]=iR(t,n);return RD(e,a,s,OD(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function zD(e){return e.downloadTextureFormat}function PD(e,t,n,r){const[a,s]=iR(t,n);return RD(e,a,s,zD(r),e.RGBA,e.UNSIGNED_BYTE)}function BD(e){return e.internalFormatPackedFloat}function WD(e,t,n,r){const[a,s]=uR(t,n);return RD(e,a,s,BD(r),e.RGBA,e.FLOAT)}function VD(e){return e.internalFormatPackedHalfFloat}function UD(e,t,n,r){const[a,s]=uR(t,n);return RD(e,a,s,VD(r),e.RGBA,r.textureTypeHalfFloat)}function GD(e,t,n){cR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return CR(e,t,"clipSpacePos",n,3,20,0)&&CR(e,t,"uv",n,2,20,12)}function HD(e,t,n,r,a,s){let i,o,u;cR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),2===Ve().getNumber("WEBGL_VERSION")?cR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):cR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),cR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function jD(e,t,n){cR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ve().getNumber("WEBGL_VERSION")?cR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):cR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ve().getNumber("WEBGL_VERSION")?cR(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):cR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),cR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function qD(e,t,n,r){const a=e.createBuffer();cR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return cR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),cR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),cR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function KD(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function XD(e,t,n,r){const[a,s]=iR(t,n),i=new Uint8Array(t*n*4);return cR(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function YD(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=uR(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function ZD(e,t,n){const r=new Float32Array(t*n*4);return cR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}d(_D,{bindVertexProgramAttributeStreams:()=>GD,createBufferFromOutputTexture:()=>qD,createFloat16MatrixTexture:()=>LD,createFloat16PackedMatrixTexture:()=>UD,createFloat32MatrixTexture:()=>MD,createIndexBuffer:()=>FD,createPackedMatrixTexture:()=>WD,createUnsignedBytesMatrixTexture:()=>PD,createVertexBuffer:()=>AD,createVertexShader:()=>$D,downloadByteEncodedFloatMatrixFromOutputTexture:()=>XD,downloadFloat32MatrixFromBuffer:()=>KD,downloadMatrixFromPackedOutputTexture:()=>ZD,downloadPackedMatrixFromBuffer:()=>YD,getInternalFormatForFloat16MatrixTexture:()=>OD,getInternalFormatForFloat16PackedMatrixTexture:()=>VD,getInternalFormatForFloat32MatrixTexture:()=>DD,getInternalFormatForPackedMatrixTexture:()=>BD,getInternalFormatForUnsignedBytesMatrixTexture:()=>zD,uploadDenseMatrixToTexture:()=>HD,uploadPixelDataToTexture:()=>jD});var JD=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ve().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,aR(t,e)):this.gl=sR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Ve().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=pR(this.gl,e),JR(this.gl,t))this.textureHalfFloatExtension=pR(this.gl,t);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),JR(this.gl,r))this.colorBufferHalfFloatExtension=pR(this.gl,r);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",JR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!JR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=AD(this.gl),this.indexBuffer=FD(this.gl),this.framebuffer=ER(this.gl),this.textureConfig=lR(this.gl,this.textureHalfFloatExtension)}get debug(){return Ve().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;const e=this.gl;cR(e,(()=>e.finish())),cR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),cR(e,(()=>e.deleteFramebuffer(this.framebuffer))),cR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),cR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),cR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),MD(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),LD(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),PD(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jD(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),HD(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),UD(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),WD(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(OR(this.gl,this.framebuffer),this.outputTexture=null),cR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>XD(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return YD(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return KD(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=qD(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ve().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ZD(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=$D(t));const n=xR(t);return cR(t,(()=>t.attachShader(n,this.vertexShader))),cR(t,(()=>t.attachShader(n,e))),vR(t,n),this.debug&&wR(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=GD(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&cR(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&wR(this.gl,this.program),cR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?AR(this.gl,e,t):FR(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),cR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=uR(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&wR(this.gl,this.program),LR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),cR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),cR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=pR(this.gl,2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await da.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||da.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),MR(this.gl,e,this.framebuffer),this.debug&&LR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(MR(this.gl,this.outputTexture,this.framebuffer),this.debug&&LR(this.gl)):OR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;MR(r,e,this.framebuffer),this.debug&&LR(r),this.outputTexture=e,cR(r,(()=>r.viewport(0,0,t,n))),cR(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),cR(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:QD,bincountImpl:eM,bincountReduceImpl:tM,ceilImpl:nM,concatImpl:rM,equalImpl:aM,expImpl:sM,expm1Impl:iM,floorImpl:oM,gatherNdImpl:uM,gatherV2Impl:lM,greaterImpl:cM,greaterEqualImpl:hM,lessImpl:dM,lessEqualImpl:pM,linSpaceImpl:fM,logImpl:mM,maxImpl:gM,maximumImpl:yM,minimumImpl:bM,multiplyImpl:xM,negImpl:vM,notEqualImpl:wM,prodImpl:kM,rangeImpl:IM,rsqrtImpl:SM,sigmoidImpl:NM,simpleAbsImpl:TM,sliceImpl:EM,sparseFillEmptyRowsImpl:CM,sparseReshapeImpl:_M,sparseSegmentReductionImpl:$M,sqrtImpl:AM,stridedSliceImpl:FM,stringNGramsImpl:RM,stringSplitImpl:DM,stringToHashBucketFastImpl:MM,subImpl:OM,tileImpl:LM,topKImpl:zM,transposeImpl:PM,uniqueImpl:BM}=YT;function WM(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function VM(e,t){return 1===t?[e]:WM(e,t)}var UM=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?lD(["r","c","d"],"inputShape"):oD(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cD(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function GM(e,t,n,r,a){const s=function(e,t){switch(e){case eR.PACKED_2X2_FLOAT32:return BD(t);case eR.PACKED_2X2_FLOAT16:return VD(t);case eR.UNPACKED_FLOAT32:return DD(t);case eR.UNPACKED_FLOAT16:return OD(t);case eR.PACKED_4X1_UNSIGNED_BYTE:return zD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=uR(e[0],e[1]);i=t*n}else{const[t,n]=iR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function HM(e,t){if(e===JF.UPLOAD)return eR.PACKED_2X2_FLOAT32;if(e===JF.RENDER||null==e)return function(e){return Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?eR.PACKED_2X2_FLOAT32:eR.UNPACKED_FLOAT32:e?eR.PACKED_2X2_FLOAT16:eR.UNPACKED_FLOAT16}(t);if(e===JF.DOWNLOAD||e===JF.PIXELS)return eR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function jM(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var qM=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},KM="return abs(x);",XM="return x;",YM=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},ZM=qf.whereImpl,JM={};var QM=Ve().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var eO=class extends U{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ve().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof JD)t=e;else{const n=sR(Ve().getNumber("WEBGL_VERSION"),e);t=new JD(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=sR(Ve().getNumber("WEBGL_VERSION"));t=new JD(e),this.binaryCache=((n=Ve().getNumber("WEBGL_VERSION"))in JM||(JM[n]={}),JM[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=HM(t,n),a=jM(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=GM(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===eR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===eR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===eR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===eR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===eR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=HM(n,r),s=jM(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=GM(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ve().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ve().global.screen?1024:Ve().global.screen.height*Ve().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new V(this,tu())}nextDataId(){return eO.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ve().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ve().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:JF.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Ve().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:JF.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new YM(i,XM):new qM(i,XM);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=da.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=jp.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=da.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new YM(r,XM):new qM(r,XM);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ve().getBool("DEBUG")&&!Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ve().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Ve().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...oR(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=jp.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=da.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;cR(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&tu().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new YM(a,XM):new qM(a,XM);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=tu().makeTensorFromDataId(l.dataId,l.shape,l.dtype),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>da.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ni(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!hR(n)){if(Ve().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=da.sizeFromShape(t);if(Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...oR(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Ve().getBool("WEBGL_PACK")&&!0===r,i=s?UR(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=JF.DOWNLOAD;const t=iD();this.outputShape=e,this.userCode=`\n      ${hD}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=JF.DOWNLOAD;const t=iD();this.outputShape=e,this.userCode=`\n      ${hD}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=da.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=da.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=da.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:da.now(),endMs:null}}endTimer(e){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=da.now(),e)}async getQueryTime(e){if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=QM){return Ve().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&da.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){jp.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ZM(e.shape,t)}packedUnaryOp(e,t,n){const r=new YM(e.shape,t),a=this.compileAndRun(r,[e],n);return tu().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=TM(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,KM,e.dtype);const t=new qM(e.shape,KM),n=this.compileAndRun(t,[e]);return tu().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&da.isString(n[0])){const a=n.map((e=>da.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return tu().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length);const t=e.length,n=VM("rc",t),r=ID(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=CD(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=VM("rc",this.rank),t=ID(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[WR(e.shape),...VR(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[WR(t),...VR(t)],s=new UM(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){const e=da.sizeFromShape(a),n=t[0]*t[1]*4;da.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=UR(a);let o;o=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=YF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=iD();this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?uD(["r","c","d"],e):oD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=YF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=iD();this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?uD(["r","c","d"],e):oD(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(i);const u=[null!=t?t:oR(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===YF.DENSE){const t=null!=s?s:oR(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===da.sizeFromShape(i.shape))return o.values=da.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&da.sizeFromShape(t.shape)<=Ve().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!jR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=SD(e.packedInputs,t.shape,s);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=da.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&da.arraysEqual(t.shape,s),f=1===da.sizeFromShape(t.shape),m=jp.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&da.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Ve().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=pD(a,i,t),u=mR(e.gl,o),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===Ve().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const d=!1,p={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(l,r,d),p[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,d),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,d),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,d))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",d),b=e.getUniformLocation(l,"outShapeStrides",d),y=e.getUniformLocation(l,"outTexShape",d));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,d)})),{program:t,fragmentShader:u,source:o,webGLProgram:l,uniformLocations:p,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(ED(t.inShapeInfos,n),ED([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ve().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=SD(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(da.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=da.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Ve().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=da.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ve().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ve().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=au((()=>{if(!Ve().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ve().getBool("DEBUG");Ve().set("DEBUG",!1);const t=this.abs(Th(1e-8)).dataSync()[0];if(Ve().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=da.now());let c=t.texShape;if(null==c&&(c=GR(n,o),t.texShape=c),null!=a){const e=UR(n);let s,i=c[1],h=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([i,h]=uR(c[0],c[1])),s=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=iD();this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cD(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(e,d):new class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=iD();this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cD(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?JF.PIXELS:JF.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const g=[[h,i]],y=!0,b=this.runWebGLProgram(s,[f],r,g,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=da.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*da.bytesPerElement(t)}};eO.nextDataId=0;var tO="3.13.0";function nO(){Ve().set("WEBGL_FORCE_F16_TEXTURES",!0)}bs.isBrowser()&&fu("webgl",(()=>new eO),2);var rO={forceHalfFloat:nO},aO=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=jp.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=CD(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},sO=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=jp.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=CD(a);let s="";if(r)if(0===a||1===da.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${ID(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=VM("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function iO(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var oO={kernelName:on,backendName:"webgl",kernelFunc:iO};function uO(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=iO({inputs:{x:r},backend:n}),u=iO({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var lO={kernelName:xt,backendName:"webgl",kernelFunc:uO},cO="return (a < 0.) ? b * a : a;",hO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var dO={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",da.createScalarValue(s,"float32")),o=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sO(hO,a.shape,i.shape):new aO(cO,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},pO="return (a < 0.) ? b * a : a;",fO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var mO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sO(fO,r.shape,a.shape):new aO(pO,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function gO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new YM(i.shape,t):new qM(i.shape,e),o.runWebGLProgram(l,[i],u)}}function yO({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new aO(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],as(n.dtype,r.dtype))})),s=uO({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||as(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?jp.fromUint8ToStringArray(e):e,r="string"===u.dtype?jp.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let d;return d=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new sO(t,u.shape,l.shape,n):new aO(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function bO(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?fO:pO;if("leakyrelu"===e)return t?hO:cO;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var xO=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=CD(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},vO="return areal * breal - aimag * bimag;",wO="return areal * bimag + aimag * breal;",kO=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=jp.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},IO="return a * b;";function SO(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=jp.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new kO(vO,r.shape,a.shape),i=new kO(wO,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=uO({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=xM(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sO(IO,r.shape,a.shape):new aO(IO,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var NO={kernelName:zn,backendName:"webgl",kernelFunc:SO};function TO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=da.sizeFromShape(a.shape),u=da.inferFromImplicitShape(s,o),l=da.sizeFromShape(u);da.assert(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||jR(a.shape,u)||null!==c.texture&&jR(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[WR(e.shape),...VR(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[WR(t),...VR(t)],i=new UM(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}var EO={kernelName:nr,backendName:"webgl",kernelFunc:TO},CO=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${da.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},_O=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}};function $O(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=jp.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new CO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new CO({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new _O({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}function AO(e,t,n){const r=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ID(this.rank),a=WM("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=ID(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function FO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=da.parseAxisParam(a,e.shape);let o=i;const u=jp.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=AO(e,u,r),o=jp.getInnerMostAxes(o.length,s)),jp.assertAxesAreInnerMostDims("sum",o,s);const[h,d]=jp.computeOutAndReduceShapes(c.shape,o);let p=h;n&&(p=jp.expandShapeToKeepDim(h,i));const f=da.sizeFromShape(d),m=TO({inputs:{x:c},attrs:{shape:[da.sizeFromShape(e.shape)/f,f]},backend:r}),g=$O(m,ss(e.dtype),"sum",r),y=TO({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}var RO={kernelName:wr,backendName:"webgl",kernelFunc:FO};function DO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=PM(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype);i.texData.get(l.dataId).values=t}else l=AO(a,s,i);return l}var MO={kernelName:Vr,backendName:"webgl",kernelFunc:DO};function OO({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=da.sizeFromShape(m),b=da.sizeFromShape(g),x=Yi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);da.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,p]:[y,p,h],w=r?[b,f,d]:[b,d,f],k=TO({inputs:{x:e},backend:a,attrs:{shape:v}}),I=TO({inputs:{x:t},backend:a,attrs:{shape:w}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],E=null!=s,C=null!=i,_="leakyrelu"===u,$=null!=u?bO(u,!0):null;let A;if((1===p||1===f)&&T>1e3&&!1===(E||C||_||null!=$)){let e=k,t=I;n&&(e=DO({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=DO({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===f;let i=e;1!==f&&(i=TO({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;s&&(u=TO({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),S.push(u));const l=SO({inputs:{a:i,b:u},backend:a});A=FO({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=as(e.dtype,t.dtype),l=new xO(v,w,[N,p,f],n,r,E,$,C,_),c=[k,I];if(null!=s&&c.push(s),C&&c.push(i),_){const e=a.makeTensorInfo([],"float32",da.createScalarValue(o,"float32"));c.push(e),S.push(e)}A=a.runWebGLProgram(l,c,u)}const F=TO({inputs:{x:A},backend:a,attrs:{shape:x}});S.push(A);for(const e of S)a.disposeIntermediateTensorInfo(e);return F}var LO={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return OO({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},zO="return abs(x);";var PO={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=TM(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new YM(r.shape,zO):new qM(r.shape,zO),n.runWebGLProgram(a,[r],r.dtype)}},BO=gO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),WO={kernelName:Ke,backendName:"webgl",kernelFunc:BO},VO=gO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),UO={kernelName:Xe,backendName:"webgl",kernelFunc:VO},GO="return a + b;",HO=yO({opSnippet:GO,packedOpSnippet:GO,supportsComplex:!0,cpuKernelImpl:QD}),jO={kernelName:Ye,backendName:"webgl",kernelFunc:HO};var qO={kernelName:Ze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return iO({inputs:{x:a[0]},backend:r});if(a.length>Ve().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>as(e,t))),i=a.map((e=>e.shape)),o=Ve().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var KO={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=da.parseAxisParam(s,a.shape);let l=u;const c=jp.getAxesPermutation(l,o);let h=a;null!=c&&(h=DO({inputs:{x:a},backend:n,attrs:{perm:c}}),l=jp.getInnerMostAxes(l.length,o)),jp.assertAxesAreInnerMostDims("all",l,o);const[d,p]=jp.computeOutAndReduceShapes(h.shape,l),f=TO({inputs:{x:h},backend:n,attrs:{shape:[-1,da.sizeFromShape(p)]}}),m=$O(f,f.dtype,"all",n);let g;if(i){g=TO({inputs:{x:m},backend:n,attrs:{shape:jp.expandShapeToKeepDim(d,u)}})}else g=TO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};var XO={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=da.parseAxisParam(s,a.shape);let l=u;const c=jp.getAxesPermutation(l,o);let h=a;null!=c&&(h=DO({inputs:{x:a},backend:n,attrs:{perm:c}}),l=jp.getInnerMostAxes(l.length,o)),jp.assertAxesAreInnerMostDims("any",l,o);const[d,p]=jp.computeOutAndReduceShapes(h.shape,l),f=TO({inputs:{x:h},backend:n,attrs:{shape:[-1,da.sizeFromShape(p)]}}),m=$O(f,f.dtype,"any",n);let g;if(i){g=TO({inputs:{x:m},backend:n,attrs:{shape:jp.expandShapeToKeepDim(d,u)}})}else g=TO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};function YO(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=jp.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=YO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function ZO(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=jp.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,da.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=ID(o),l=VM("coords",o);let c,h;if(1===s){h=o+1;const e=ID(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=VM("sourceLocR",h-1).concat("inIdx.r"),g=VM("sourceLocG",h-1).concat("inIdx.g"),y=VM("sourceLocB",h-1).concat("inIdx.b"),b=VM("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=ZO(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function JO(e,t,n,r){const a=[n];if(jp.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Ve().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=jp.computeOutAndReduceShapes(i.shape,a),l=da.sizeFromShape(u),c=TO({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=YO(e,c,r);n.push(h);const d=TO({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return ZO(e,t,r)}var QO={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=da.parseAxisParam(s,a.shape);const o=jp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=DO({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=jp.getInnerMostAxes(i.length,u.shape.length)),jp.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=JO(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};var eL={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=da.parseAxisParam(s,a.shape);const o=jp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=DO({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=jp.getInnerMostAxes(i.length,u.shape.length)),jp.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=JO(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},tL=gO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),nL={kernelName:nt,backendName:"webgl",kernelFunc:tL},rL=gO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),aL={kernelName:rt,backendName:"webgl",kernelFunc:rL},sL=gO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),iL={kernelName:at,backendName:"webgl",kernelFunc:sL},oL=yO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),uL={kernelName:it,backendName:"webgl",kernelFunc:oL},lL=gO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),cL={kernelName:st,backendName:"webgl",kernelFunc:lL},hL=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},dL=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var pL={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;aD(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;da.assert(jp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=jp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&da.arraysEqual(l.inShape,l.outShape))return iO({inputs:{x:a},backend:n});const c=new hL(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};var fL={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=jp.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new dL(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var mL={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=jp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a],i.dtype)}};var gL={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;aD([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=jp.computePool2DInfo(i.shape,o,u,1,l),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[a],i.dtype)}};var yL={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return OO({a,b:s,transposeA:i,transposeB:o,backend:n})}},bL={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;da.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),da.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),da.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],jp.assertAndGetBroadcastShape(e,t),jp.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(jp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(jp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],jp.assertAndGetBroadcastShape(e,t),jp.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(jp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(jp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}},xL=["x","y","z","w","u","v"];function vL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=mo.parseSliceParams(a,s,i);if(mo.assertParamsValid(a,o,u),0===da.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=EM(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=mo.isSliceContinous(a.shape,o,u);if(l||!c){const e=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ID(this.rank),n=VM("coords",this.rank),r=VM("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ID(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return xL.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${xL[t]} = start[${t}] + coords.${xL[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=mo.computeFlatOffset(t,da.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var wL={kernelName:fr,backendName:"webgl",kernelFunc:vL},kL={kernelName:dt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;da.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=jp.getReshaped(a.shape,s,o),l=jp.getPermuted(u.length,s.length),c=jp.getReshapedPermuted(a.shape,s,o),h=jp.getSliceBeginCoords(i,s.length),d=jp.getSliceSize(c,i,s.length),p=[],f=TO({inputs:{x:a},backend:n,attrs:{shape:u}}),m=DO({inputs:{x:f},backend:n,attrs:{perm:l}}),g=TO({inputs:{x:m},backend:n,attrs:{shape:c}}),y=vL({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var IL={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=eM(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}};var SL={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=jp.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},NL=yO({opSnippet:"return float(a != b);",cpuKernelImpl:wM,dtype:"bool"}),TL={kernelName:Bn,backendName:"webgl",kernelFunc:NL};function EL(e){const{inputs:t,backend:n}=e,{input:r}=t;return iO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var CL={kernelName:Qn,backendName:"webgl",kernelFunc:EL};var _L={kernelName:gt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return iO({inputs:{x:s},backend:r});const t=zc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=uO({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=EL({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!da.hasEncodingLoss(s.dtype,i)){const e=iO({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new qM(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",da.getTypedArrayFromDType("bool",1)),t=NL({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},$L="return ceil(x);",AL=gO({opSnippet:$L,packedOpSnippet:$L,cpuKernelImpl:nM}),FL={kernelName:yt,backendName:"webgl",kernelFunc:AL};var RL={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Ve().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};function DL(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var ML={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[DL(r,a.complexTensorInfos.real),DL(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function OL(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function LL(e){const{inputs:t,backend:n}=e,{input:r}=t;return iO({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var zL={kernelName:ln,backendName:"webgl",kernelFunc:LL};function PL(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>EL({inputs:{input:e},backend:n}))),a=e.map((e=>LL({inputs:{input:e},backend:n}))),s=PL(r,t,n),i=PL(a,t,n),o=uO({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=da.sizeFromShape(e.shape.slice(t));return TO({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=jp.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=rM(s,i,r,o),l=jp.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=PL(e.slice(0,r),t,n),s=PL(e.slice(r),t,n),i=PL([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jp.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=ID(r),s=VM("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${OL(i,u,t)}),\n            vec2(${OL(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${OL(i,u,p)}),\n          vec2(${OL(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=jp.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>TO({inputs:{x:e},attrs:{shape:[-1,da.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=jp.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=TO({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function BL(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=da.parseAxisParam(a,t[0].shape)[0],i=jp.computeOutShape(t.map((e=>e.shape)),s);if(0===da.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>da.sizeFromShape(e.shape)>0));if(1===o.length)return iO({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return jp.assertParamsConsistent(u,s),PL(o,s,n)}var WL={kernelName:wt,backendName:"webgl",kernelFunc:BL},VL=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}};function UL({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(!((1===h||1===d)&&c>1e3)&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&da.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,da.assert(jR(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=TO({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=OO({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);da.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,y.shape=n.outShape,f=iO({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=TO({inputs:{x:e},backend:r,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=TO({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=OO({a:l,b:c,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=TO({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function GL({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[m,g],b=[],x=TO({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=TO({inputs:{x:t},backend:r,attrs:{shape:[1,m,da.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);const w=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=CD(this.outputShape.length);const{dataFormat:n}=t,r=iD(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[x],"float32",k),S=TO({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);const N=null!=a,T=null!=s,E="leakyrelu"===o,C=o?bO(o,!0):null,_=new xO(S.shape,v.shape,[1,g,n.outChannels],!0,!1,N,C,T,E),$=[S,v];if(a&&$.push(a),T&&$.push(s),E){const e=r.makeTensorInfo([],"float32",da.createScalarValue(i,"float32"));$.push(e),b.push(e)}const A=r.runWebGLProgram(_,$,"float32"),F=TO({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return F}var HL={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=jp.convertConv2DDataFormat(u),d=jp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Ve().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=GL({x:a,filter:s,convInfo:d,backend:n});else{const e=new VL(d);p=n.runWebGLProgram(e,[a,s],"float32")}else p=UL({x:a,filter:s,convInfo:d,backend:n});const f=TO({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};var jL={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=jp.convertConv2DDataFormat(u),d=jp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}};var qL={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=jp.convertConv2DDataFormat(l),d=jp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,h),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}};var KL={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=jp.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}};var XL={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=jp.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}};var YL={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=jp.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},ZL=gO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),JL={kernelName:Ct,backendName:"webgl",kernelFunc:ZL},QL=gO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ez={kernelName:_t,backendName:"webgl",kernelFunc:QL},tz={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},nz=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${rz(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ID(r)} coords = getOutputCoords();\n        int end = ${az(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${az(r,"coords")} = idx;\n          val += getX(${rz(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function rz(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function az(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var sz={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=jp.getAxesPermutation([s],u);let c=a;null!=l&&(c=DO({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=jp.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=iO({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new nz(c.shape,!1,o),r=[[e]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new nz(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=DO({inputs:{x:p},backend:n,attrs:{perm:jp.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}};var iz={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=eM(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=tM(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var oz={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},uz=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CD(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}},lz=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CD(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?da.nearestLargerEven(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var cz={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),da.assert(jp.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=jp.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let d;d=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new lz(h):new uz(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",p)}};var hz={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=jp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}};var dz={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=jp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}};var pz={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=da.sizeFromShape(r.shape),i=TO({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=TO({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};var fz={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=jp.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(h,[a,s],"float32");const d=TO({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}};var mz={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=jp.decodeEinsumEquation(a,s.length);jp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=jp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=jp.getEinsumPermutation(p,u[t]);let a;jp.isIdentityPermutation(e)?a=s[t]:(a=DO({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);da.arraysEqual(a.shape,i)||(a=TO({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=SO({inputs:{a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=FO({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},gz=gO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),yz={kernelName:Ut,backendName:"webgl",kernelFunc:gz},bz={kernelName:Gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new sO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new aO("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},xz=yO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:aM}),vz={kernelName:jt,backendName:"webgl",kernelFunc:xz},wz=gO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${jp.ERF_P};\n  float a1 = ${jp.ERF_A1};\n  float a2 = ${jp.ERF_A2};\n  float a3 = ${jp.ERF_A3};\n  float a4 = ${jp.ERF_A4};\n  float a5 = ${jp.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),kz={kernelName:Ht,backendName:"webgl",kernelFunc:wz},Iz=gO({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:sM,dtype:"float32"}),Sz={kernelName:qt,backendName:"webgl",kernelFunc:Iz};function Nz(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(da.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),TO({inputs:{x:s},backend:r,attrs:{shape:o}})}var Tz={kernelName:Kt,backendName:"webgl",kernelFunc:Nz},Ez="return exp(x) - 1.0;",Cz=gO({opSnippet:Ez,packedOpSnippet:Ez,cpuKernelImpl:iM}),_z={kernelName:Xt,backendName:"webgl",kernelFunc:Cz},$z=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function Az(e,t,n){const r=n.texData.get(e.dataId),a=da.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=TO({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new $z("real",o,t),l=new $z("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=uO({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=TO({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}var Fz={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Az(r,!1,n)}};function Rz(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||da.inferDtype(a),"string"===s){const e=da.getArrayFromDType(s,da.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var Dz,Mz={kernelName:Zt,backendName:"webgl",kernelFunc:Rz},Oz={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Lz="return floor(x);",zz=gO({opSnippet:Lz,packedOpSnippet:Lz,cpuKernelImpl:oM}),Pz={kernelName:Qt,backendName:"webgl",kernelFunc:zz},Bz=yO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Wz={kernelName:en,backendName:"webgl",kernelFunc:Bz},Vz={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==Dz&&(Dz=document.createElement("canvas").getContext("2d")),Dz.canvas.width=u,Dz.canvas.height=l,Dz.drawImage(a,0,0,u,l),a=Dz.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=JF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=Ve().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=iD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];const t=iD(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};var Uz={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=jp.convertConv2DDataFormat(c),g=jp.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ve().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=GL({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?bO(p,!1):null,l=new VL(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",da.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=UL({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=TO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};var Gz={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),da.assert(jp.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=jp.computeConv2DInfo(a.shape,s.shape,u,m,l,h,!0),y=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?bO(d,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",da.createScalarValue(p,"float32"));x.push(e),f.push(e)}let I;I=y?new lz(g,v,b,w,k):new uz(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var Hz={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=da.sizeFromShape(r.shape),[u,l,c,h]=jp.prepareAndValidate(r,a),d=TO({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=TO({inputs:{x:r},backend:n,attrs:{shape:[da.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=uM(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=ID(t.length),a=ID(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=TO({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};function jz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=da.parseAxisParam(i,a.shape)[0];if(Ve().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];da.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=jp.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=da.sizeFromShape(s.shape),h=[],d=TO({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=TO({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=lM(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ID(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=TO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var qz={kernelName:nn,backendName:"webgl",kernelFunc:jz},Kz=yO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:cM,dtype:"bool"}),Xz={kernelName:an,backendName:"webgl",kernelFunc:Kz},Yz=yO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:hM}),Zz={kernelName:sn,backendName:"webgl",kernelFunc:Yz};var Jz={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Az(r,!0,n)}},Qz=gO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),eP={kernelName:cn,backendName:"webgl",kernelFunc:Qz},tP=gO({opSnippet:"return float(isinf(x));",dtype:"bool"}),nP={kernelName:hn,backendName:"webgl",kernelFunc:tP},rP=gO({opSnippet:"return float(isnan(x));",dtype:"bool"}),aP={kernelName:dn,backendName:"webgl",kernelFunc:rP},sP=yO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:dM,dtype:"bool"}),iP={kernelName:fn,backendName:"webgl",kernelFunc:sP},oP=yO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:pM,dtype:"bool"}),uP={kernelName:mn,backendName:"webgl",kernelFunc:oP};var lP={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=fM(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},cP=gO({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:mM}),hP={kernelName:yn,backendName:"webgl",kernelFunc:cP},dP=gO({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),pP={kernelName:bn,backendName:"webgl",kernelFunc:dP},fP=yO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),mP={kernelName:xn,backendName:"webgl",kernelFunc:fP},gP=gO({opSnippet:"return float(!(x >= 1.0));"}),yP={kernelName:vn,backendName:"webgl",kernelFunc:gP},bP=yO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),xP={kernelName:wn,backendName:"webgl",kernelFunc:bP},vP={kernelName:In,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},wP={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function kP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=da.parseAxisParam(s,a.shape);let l=u;const c=jp.getAxesPermutation(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=PM(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=AO(a,c,n);l=jp.getInnerMostAxes(l.length,o)}jp.assertAxesAreInnerMostDims("max",l,o);const[f,m]=jp.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(i&&(y=jp.expandShapeToKeepDim(f,u)),d){const e=n.texData.get(p.dataId).values,t=gM(e,da.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=da.sizeFromShape(t),s=TO({inputs:{x:e},attrs:{shape:[da.sizeFromShape(e.shape)/a,a]},backend:r}),i=$O(s,e.dtype,"max",r),o=TO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}var IP={kernelName:Nn,backendName:"webgl",kernelFunc:kP},SP=yO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:yM}),NP={kernelName:Tn,backendName:"webgl",kernelFunc:SP};var TP={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;aD(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;da.assert(jp.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=jp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&da.arraysEqual(l.inShape,l.outShape))return iO({inputs:{x:a},backend:n});const c=new hL(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};var EP={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=jp.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new dL(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var CP={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=jp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new dL(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};var _P={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;aD([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=jp.computePool2DInfo(o.shape,u,l,1,c,h),p=new hL(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var $P={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;da.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];da.assert(jp.eitherStridesOrDilationsAreOne(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=jp.computePool2DInfo(r.shape,a,s,l,i),[h,d]=function(e,t,n,r){let a=new hL(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new hL(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}};var AP={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=da.parseAxisParam(s,r.shape);let l=u;const c=jp.getAxesPermutation(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=PM(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=AO(r,c,i);p.push(f),l=jp.getInnerMostAxes(l.length,o)}jp.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=jp.computeOutAndReduceShapes(f.shape,l);let y=m;a&&(y=jp.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const a=da.sizeFromShape(t),s=TO({inputs:{x:e},attrs:{shape:[da.sizeFromShape(e.shape)/a,a]},backend:r}),i=$O(s,"float32","mean",r),o=TO({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}};var FP={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=da.parseAxisParam(s,a.shape);let l=u;const c=jp.getAxesPermutation(l,o);let h=a;null!=c&&(h=DO({inputs:{x:a},backend:n,attrs:{perm:c}}),l=jp.getInnerMostAxes(l.length,a.shape.length)),jp.assertAxesAreInnerMostDims("min",l,o);const[d,p]=jp.computeOutAndReduceShapes(h.shape,l),f=TO({inputs:{x:h},backend:n,attrs:{shape:[-1,da.sizeFromShape(p)]}}),m=$O(f,f.dtype,"min",n);let g;if(i){g=TO({inputs:{x:m},backend:n,attrs:{shape:jp.expandShapeToKeepDim(d,u)}})}else g=TO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},RP=yO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:bM}),DP={kernelName:Dn,backendName:"webgl",kernelFunc:RP},MP={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ID(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=VM("rc",r),u=VM("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ID(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},OP=yO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),LP={kernelName:On,backendName:"webgl",kernelFunc:OP},zP=yO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),PP={kernelName:Wt,backendName:"webgl",kernelFunc:zP},BP="return a - b;",WP=yO({opSnippet:BP,packedOpSnippet:BP,supportsComplex:!0,cpuKernelImpl:OM}),VP={kernelName:Or,backendName:"webgl",kernelFunc:WP};function UP(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=da.parseAxisParam([s],a.shape),o=kP({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=jp.expandShapeToKeepDim(o.shape,i),l=TO({inputs:{x:o},backend:n,attrs:{shape:u}}),c=WP({inputs:{a,b:l},backend:n}),h=Iz({inputs:{x:c},backend:n}),d=FO({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=TO({inputs:{x:d},backend:n,attrs:{shape:u}}),f=zP({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var GP={kernelName:Sr,backendName:"webgl",kernelFunc:UP};var HP={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:UP({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(l,c,s),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}};var jP={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=vM(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new YM(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new qM(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},qP=qf.nonMaxSuppressionV3Impl;var KP={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){jp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=qP(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},XP=qf.nonMaxSuppressionV4Impl;var YP={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){jp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=XP(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},ZP=qf.nonMaxSuppressionV5Impl;var JP={kernelName:Un,backendName:"webgl",kernelFunc:function(e){jp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=ZP(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},QP={kernelName:Hn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=da.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=TO({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const d=TO({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function eB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=EL({inputs:{input:r},backend:n}),t=eB({inputs:{x:e},backend:n}),a=LL({inputs:{input:r},backend:n}),s=eB({inputs:{x:a},backend:n}),i=uO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Rz({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var tB={kernelName:jr,backendName:"webgl",kernelFunc:eB};var nB={kernelName:Gn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=EL({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=LL({inputs:{input:a},backend:r}),i=eB({inputs:{x:s},backend:r}),o=uO({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Rz({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var rB={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Nz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{da.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),da.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=BL({inputs:t.map((e=>{const t=Nz({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},aB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===da.sizeFromShape(a.shape)){return Rz({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}const o=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ID(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=VM("rc",r),u=VM("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=ID(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},sB={kernelName:qn,backendName:"webgl",kernelFunc:aB},iB=yO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oB={kernelName:Xn,backendName:"webgl",kernelFunc:iB};var uB={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=da.parseAxisParam(s,a.shape);let c=l;const h=jp.getAxesPermutation(c,o);let d,p=a;if(null!=h&&(p=DO({inputs:{x:a},backend:n,attrs:{perm:h}}),c=jp.getInnerMostAxes(c.length,o),u.push(p)),jp.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=kM(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=jp.computeOutAndReduceShapes(p.shape,c),r=da.sizeFromShape(t),s=TO({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=$O(s,ss(a.dtype),"prod",n);d=TO({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=jp.expandShapeToKeepDim(d.shape,l);d=TO({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},lB=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=IM(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},cB={kernelName:Jn,backendName:"webgl",kernelFunc:lB},hB=gO({opSnippet:"return 1.0 / x;"}),dB={kernelName:er,backendName:"webgl",kernelFunc:hB},pB=gO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fB={kernelName:tr,backendName:"webgl",kernelFunc:pB},mB=gO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gB={kernelName:or,backendName:"webgl",kernelFunc:mB};var yB={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};var bB={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var xB={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};var vB={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var wB={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=da.parseAxisParam(s,a.shape);if(0===i)return iO({inputs:{x:a},backend:n});const u=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=VM("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ID(n);var o;function u(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=ID(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},kB={kernelName:Xr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,s),[l,c]=jp.getImageCenter(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},IB=gO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SB={kernelName:lr,backendName:"webgl",kernelFunc:IB},NB=gO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:SM}),TB={kernelName:cr,backendName:"webgl",kernelFunc:NB},EB=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=ID(a.length),u=ID(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var CB={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=jp.calculateShapes(s,a,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const p=TO({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=TO({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new EB(u,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=TO({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var _B={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=ID(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],as(a.dtype,s.dtype))}},$B=gO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${jp.SELU_SCALEALPHA};\n  float scale = ${jp.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),AB={kernelName:pr,backendName:"webgl",kernelFunc:$B},FB=gO({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:NM}),RB={kernelName:br,backendName:"webgl",kernelFunc:FB},DB=gO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),MB={kernelName:yr,backendName:"webgl",kernelFunc:DB},OB=gO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),LB={kernelName:mr,backendName:"webgl",kernelFunc:OB},zB=gO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),PB={kernelName:gr,backendName:"webgl",kernelFunc:zB},BB=gO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),WB={kernelName:xr,backendName:"webgl",kernelFunc:BB},VB={kernelName:kr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;da.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=aB({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=jp.getReshaped(c.shape,s,o,!1),d=jp.getPermuted(h.length,s.length,!1),p=jp.getReshapedPermuted(c.shape,s,o,!1),f=TO({inputs:{x:c},backend:n,attrs:{shape:h}}),m=DO({inputs:{x:f},backend:n,attrs:{perm:d}}),g=TO({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var UB={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=CM(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var GB={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=_M(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};var HB={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=$M(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};var jB={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=$M(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};var qB={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=jp.calculateShapes(s,a,o),d=new EB(l,u,a.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,a,i],s.dtype),f=TO({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}};var KB={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=da.parseAxisParam(i,a.shape)[0],u=jp.prepareSplitSize(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=vL({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},XB="return sqrt(x);",YB=gO({opSnippet:XB,packedOpSnippet:XB,cpuKernelImpl:AM}),ZB={kernelName:vr,backendName:"webgl",kernelFunc:YB},JB=gO({opSnippet:"return x * x;"}),QB={kernelName:Ar,backendName:"webgl",kernelFunc:JB},eW="return (a - b) * (a - b);",tW=yO({opSnippet:eW,packedOpSnippet:eW}),nW={kernelName:$r,backendName:"webgl",kernelFunc:tW};var rW={kernelName:qr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new qM(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var aW={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=mo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=TO({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){da.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=mo.computeOutShape(b,x,v),t=vL({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=TO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Ni(a.shape,a.dtype,e),r=FM(p,t,v,b);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=ID(n.length),s=ID(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,v,p);w=n.runWebGLProgram(e,[a],a.dtype)}}const k=TO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};var sW={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=RM(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var iW={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=DM(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var oW={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=MM(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},uW=gO({opSnippet:"return tan(x);"}),lW={kernelName:Lr,backendName:"webgl",kernelFunc:uW},cW=gO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),hW={kernelName:zr,backendName:"webgl",kernelFunc:cW};function dW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>da.decodeString(e))):e,r=Ni(a.shape,a.dtype,t),i=LM(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=ID(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var pW={kernelName:Pr,backendName:"webgl",kernelFunc:dW},fW=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function mW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function gW(e){let t=1;for(;t<e;)t*=2;return t}var yW={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Ve().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Ve().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=zM(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,Rz({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=da.sizeFromShape(l)/c,m=TO({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&mW(n,p);const g=gW(s),y=gW(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const a=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),mW(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new fW([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),mW(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=vL({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),mW(n,w);let k=jz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});mW(n,m);const I=l.slice(0,-1);I.push(s),w=b,b=TO({inputs:{x:b},attrs:{shape:I},backend:n}),mW(n,w);const S=k;return k=TO({inputs:{x:k},attrs:{shape:I},backend:n}),mW(n,S),[k,b]}};var bW={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,d,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}};var xW={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;aD(s,"unique");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=BM(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};var vW={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=vL({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=TO({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var wW,kW,IW,SW,NW,TW=[LO,PO,WO,UO,jO,qO,KO,XO,QO,eL,nL,aL,iL,uL,cL,pL,fL,mL,gL,yL,bL,kL,IL,SL,_L,FL,RL,lO,ML,WL,HL,jL,qL,KL,XL,YL,JL,ez,tz,sz,iz,oz,cz,hz,dz,pz,fz,mz,yz,bz,vz,kz,Sz,Tz,_z,Fz,Mz,Oz,Pz,Wz,Vz,Uz,Gz,Hz,qz,Xz,Zz,oO,Jz,zL,eP,nP,aP,dO,iP,uP,lP,hP,pP,mP,yP,xP,vP,wP,IP,NP,TP,EP,CP,_P,$P,AP,FP,DP,MP,LP,HP,NO,jP,KP,YP,JP,TL,QP,nB,rB,sB,oB,mO,uB,cB,CL,PP,dB,fB,gB,EO,yB,bB,xB,vB,wB,kB,SB,TB,CB,_B,AB,RB,MB,LB,PB,wL,GP,WB,VB,UB,GB,HB,jB,qB,KB,ZB,QB,nW,rW,aW,sW,iW,oW,VP,RO,lW,hW,pW,yW,bW,MO,xW,vW,{kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=jp.getAxesPermutation([l],o);let h=a;null!=c&&(h=DO({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=jp.getInnerMostAxes(1,o)[0]);const d=jp.segment_util.computeOutShape(h.shape,l,i),p=da.sizeFromShape([h.shape[l]]),f=TO({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ss(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=jp.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),d=n.compileAndRun(h,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=lB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=dW({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});u.push(p),u.push(f);return g(d,t,f,a,s)},y=TO({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=jp.getUndoAxesPermutation(c);b=DO({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},tB];for(const e of TW)ia(e);(kW=wW||(wW={}))[kW.float32=0]="float32",kW[kW.int32=1]="int32",kW[kW.bool=2]="bool",kW[kW.string=3]="string",kW[kW.complex64=4]="complex64",(SW=IW||(IW={}))[SW.linear=0]="linear",SW[SW.relu=1]="relu",SW[SW.relu6=2]="relu6",SW[SW.prelu=3]="prelu",SW[SW.leakyrelu=4]="leakyrelu",SW[SW.sigmoid=5]="sigmoid",SW[SW.elu=6]="elu";var EW={kernelName:Yr,backendName:"wasm",setupFunc:function(e){NW=e.wasm.cwrap(Yr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=IW[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=Yi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return NW(d,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,h||0,w),v}};function CW(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===da.sizeFromShape(i.shape)||n(s,wW[a.dtype],o),i}}}var _W=CW(qe);function $W(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=null!=n?n:s.dtype,c=jp.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(c,l);if(0===da.sizeFromShape(c))return h;const d=new Uint8Array(new Int32Array(s.shape).buffer),p=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,d,s.shape.length,u,p,i.shape.length,wW[s.dtype],f),h}}}var AW,FW=$W(Ye);var RW={kernelName:Ze,backendName:"wasm",setupFunc:function(e){AW=e.wasm.cwrap(Ze,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===da.sizeFromShape(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return AW(s,a.length,wW[r.dtype],i),r}};function DW(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var MW,OW={kernelName:on,backendName:"wasm",kernelFunc:DW};function LW(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=DW({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return MW(c,p,u.shape.length,wW[u.dtype],h,d,s.length),l}var zW,PW={kernelName:Vr,backendName:"wasm",kernelFunc:LW,setupFunc:function(e){MW=e.wasm.cwrap(Vr,null,["number","array","number","number","number","array","number"])}};function BW(e,t,n){const r=e.shape,a=e.shape.length,s=da.parseAxisParam(t,r);let i=s;const o=jp.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=jp.getInnerMostAxes(i.length,a),u=LW({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var WW,VW={kernelName:Je,backendName:"wasm",setupFunc:function(e){zW=e.wasm.cwrap(Je,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=BW(i,a,t);if(d){u=l,o=t.dataIdMap.get(l.dataId).id}const p=u.shape.length;jp.assertAxesAreInnerMostDims("all",c,p);const[f,m]=jp.computeOutAndReduceShapes(u.shape,c),g=da.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==da.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;zW(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=jp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var UW,GW={kernelName:Qe,backendName:"wasm",setupFunc:function(e){WW=e.wasm.cwrap(Qe,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=BW(i,a,t);if(d){u=l,o=t.dataIdMap.get(l.dataId).id}const p=u.shape.length;jp.assertAxesAreInnerMostDims("any",c,p);const[f,m]=jp.computeOutAndReduceShapes(u.shape,c),g=da.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==da.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;WW(o,g,e)}if(d&&t.disposeData(l.dataId),s){const e=jp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}};var HW,jW={kernelName:et,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:h}=BW(s,a,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const d=u.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=da.sizeFromShape(p.shape),g=u.shape[c[0]];return UW(o,wW[u.dtype],m,g,f),h&&t.disposeData(l.dataId),p},setupFunc:function(e){UW=e.wasm.cwrap(et,null,["number","number","number","number","number"])}};var qW={kernelName:ot,backendName:"wasm",setupFunc:function(e){HW=e.wasm.cwrap(ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=jp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const v=r.makeOutput(c.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return HW(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,w),v}};function KW(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=da.sizeFromShape(r.shape),i=da.inferFromImplicitShape(a,s);return da.assert(s===da.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var XW,YW={kernelName:nr,backendName:"wasm",kernelFunc:KW};var ZW={kernelName:ht,backendName:"wasm",setupFunc:function(e){XW=e.wasm.cwrap(ht,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=da.sizeFromShape(f),y=da.sizeFromShape(m),b=Yi.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);da.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=KW({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=KW({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(v.dataId).id,I=n.dataIdMap.get(w.dataId).id,S=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],T=Math.max(g,y),E=n.makeOutput([T,S,N],v.dtype),C=n.dataIdMap.get(E.dataId).id,_=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(w.shape).buffer);return XW(k,_,v.shape.length,I,$,w.shape.length,i,o,C),n.disposeData(v.dataId),n.disposeData(w.dataId),E.shape=b,E}};function JW(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=mo.parseSliceParams(t,n,r),o=mo.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=da.computeStrides(t.shape),h=a.dataIdMap.get(l.dataId);if(o){const e=mo.computeFlatOffset(s,c);if("string"===t.dtype)h.stringBytes=u.slice(e,e+da.sizeFromShape(i));else{a.typedArrayFromHeap(l).set(u.subarray(e,e+da.sizeFromShape(i)))}return l}if("string"===t.dtype){const e=CC(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const d=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],d,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],h=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<h;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],d=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<h;s++)for(let u=l;u<d;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=CC(u,s,i,t.shape,t.dtype);d.set(e)}return l}var QW={kernelName:fr,backendName:"wasm",kernelFunc:JW};var eV={kernelName:dt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),u=jp.getReshaped(a.shape,s,o),l=jp.getPermuted(u.length,s.length),c=jp.getReshapedPermuted(a.shape,s,o),h=jp.getSliceBeginCoords(i,s.length),d=jp.getSliceSize(c,i,s.length),p=KW({inputs:{x:a},backend:n,attrs:{shape:u}}),f=LW({inputs:{x:p},backend:n,attrs:{perm:l}}),m=JW({inputs:{x:KW({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function tV(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var nV,rV={kernelName:gt,backendName:"wasm",kernelFunc:tV},aV=CW(yt);var sV={kernelName:bt,backendName:"wasm",setupFunc:function(e){nV=e.wasm.cwrap(bt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return nV(o,s,i,l),u}};function iV(e){const{inputs:t,backend:n}=e,r=da.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=jp.computeOutShape(t.map((e=>e.shape)),r);const s=t.filter((e=>da.sizeFromShape(e.shape)>0));if(1===s.length)return DW({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===da.sizeFromShape(a))return i;const o=s.map((e=>e.shape));if(jp.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map((e=>{const t=da.sizeFromShape(e.shape.slice(r));return KW({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=jp.computeOutShape(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],l=IE(o,a,t[0].dtype,u),c=jp.computeOutShape(s.map((e=>e.shape)),r);i.shape=c;return n.dataIdMap.get(i.dataId).stringBytes=jp.fromStringArrayToUint8(l),e.forEach((e=>n.disposeData(e.dataId))),i}const u=da.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map((e=>{const t=da.sizeFromShape(e.shape.slice(r));return l+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<u;e++){let t=e*l;for(let n=0;n<h.length;n++){const r=c[n],a=e*r,s=h[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var oV,uV={kernelName:wt,backendName:"wasm",kernelFunc:iV};var lV,cV={kernelName:kt,backendName:"wasm",setupFunc:function(e){oV=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=jp.convertConv2DDataFormat(d),f=jp.computeConv2DInfo(a.shape,s.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),_=r.dataIdMap.get(C.dataId).id;return oV(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,E,w,k,I,S,N,T,_),C}};var hV,dV,pV,fV={kernelName:St,backendName:"wasm",setupFunc:function(e){lV=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=jp.convertConv2DDataFormat(u),d=jp.computeConv2DInfo(c,s.shape,i,1,o,l,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,S=f-1-d.padInfo.top,N=m-1-d.padInfo.left,T="channelsLast"===d.dataFormat,E=da.computeStrides(d.inShape),C=da.computeStrides(a.shape),[_,$,A]=da.computeStrides(s.shape),F=E[0],R=T?E[1]:E[2],D=T?E[2]:1,M=T?1:E[1],O=C[0],L=T?C[1]:C[2],z=T?C[2]:1,P=T?1:C[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return lV(V,U,p,f,m,y,b,g,v,w,x,k,I,S,N,_,$,A,F,R,D,M,O,L,z,P,W),B}},mV=CW(Ct),gV=CW(_t);(dV=hV||(hV={}))[dV.bilinear=0]="bilinear",dV[dV.nearest=1]="nearest";var yV,bV={kernelName:At,backendName:"wasm",setupFunc:function(e){pV=e.wasm.cwrap(At,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=tV({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return pV(g,y,b,c,w,h,d,hV[a],s,v),null!=f&&t.disposeData(f.dataId),x}};var xV,vV={kernelName:$t,backendName:"wasm",setupFunc:function(e){yV=e.wasm.cwrap($t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;da.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const l=jp.getAxesPermutation([s],u);let c=a;null!==l&&(c=LW({inputs:{x:a},attrs:{perm:l},backend:n}));const h=jp.getInnerMostAxes(1,u)[0];jp.assertAxesAreInnerMostDims("cumsum",[h],u);const d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;yV(f,i?1:0,o?1:0,p,m,wW[a.dtype]);let g=d;if(null!==l){g=LW({inputs:{x:d},attrs:{perm:jp.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}};var wV,kV={kernelName:Rt,backendName:"wasm",setupFunc:function(e){xV=e.wasm.cwrap(Rt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=t.makeOutput(h,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(da.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(da.computeStrides(h)).buffer),y=t.dataIdMap.get(d.dataId).id;return xV(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),d}};var IV={kernelName:Dt,backendName:"wasm",setupFunc:function(e){wV=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=null==l?[1,1]:l,p=jp.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,v=p.dilationHeight,w=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,T="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const E=r.makeOutput(p.outShape,"float32"),C=r.dataIdMap.get(E.dataId).id;return wV(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,v,w,k,I,S,N,C),E}},SV=CW(Ut),NV=$W(jt,0,"bool"),TV=CW(qt,"float32");function EV(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(da.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),KW({inputs:{x:a},backend:r,attrs:{shape:o}})}var CV={kernelName:Kt,backendName:"wasm",kernelFunc:EV};function _V(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var $V,AV={kernelName:Zt,backendName:"wasm",kernelFunc:_V};var FV,RV={kernelName:Jt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return $V(s,o,u,l,c,i),a},setupFunc:function(e){$V=e.wasm.cwrap(Jt,null,["number","number","number","number","number","number"])}},DV=CW(Qt),MV=$W(en);var OV,LV={kernelName:tn,backendName:"wasm",setupFunc:function(e){FV=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===da.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return FV(c,h,d,p,f,a,g),m}};var zV,PV={kernelName:Zr,backendName:"wasm",setupFunc:function(e){OV=e.wasm.cwrap(Zr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=jp.computeConv2DInfo(a.shape,s.shape,u,c,l,d),g=IW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,C=m.dilationWidth,_=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return OV(y,R,D,M,b,w,k,v,I,S,N,T,F,E,C,_,$,A,x,g,z,f||0,L),O}};var BV,WV={kernelName:Jr,backendName:"wasm",setupFunc:function(e){zV=e.wasm.cwrap(Jr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=jp.computeConv2DInfo(a.shape,s.shape,u,c,l,d,!0),g=IW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}const w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,C=m.dilationWidth,_=m.strideHeight,$=m.strideWidth,A=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return zV(y,R,D,M,b,w,k,v,I,S,N,T,F,E,C,_,$,A,x,g,z,f||0,L),O}};var VV,UV={kernelName:rn,backendName:"wasm",setupFunc:function(e){BV=e.wasm.cwrap(rn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=uo.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,h=c[c.length-1],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return BV(d,wW[r.dtype],p,i,h,o,f,m),l}};var GV,HV={kernelName:nn,backendName:"wasm",setupFunc:function(e){VV=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=da.parseAxisParam(i,a.shape)[0],l=t.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];da.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const h=jp.segment_util.collectGatherOpShapeInfo(a,s,u,o),d=KW({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),p=da.sizeFromShape(s.shape),f=KW({inputs:{x:s},attrs:{shape:[h.batchSize,p/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===da.sizeFromShape(a.shape))return g;const y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(da.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(da.computeStrides(m)).buffer);return VV(b,wW[a.dtype],w,y,x,h.batchSize,k,v),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},jV=$W(an,0,"bool"),qV=$W(sn,0,"bool");var KV,XV={kernelName:pn,backendName:"wasm",setupFunc:function(e){GV=e.wasm.cwrap(pn,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==da.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;GV(a,wW[t.dtype],n,e)}return s}},YV=$W(fn,0,"bool"),ZV=$W(mn,0,"bool"),JV=CW(yn),QV=$W(xn,0,"bool");var eU,tU={kernelName:Nn,backendName:"wasm",setupFunc:function(e){KV=e.wasm.cwrap(Nn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=BW(i,a,t);if(d){u=l,o=t.dataIdMap.get(l.dataId).id}const p=u.shape.length;jp.assertAxesAreInnerMostDims("max",c,p);const[f,m]=jp.computeOutAndReduceShapes(u.shape,c),g=da.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==da.sizeFromShape(u.shape)){const e=t.dataIdMap.get(y.dataId).id;KV(o,wW[i.dtype],g,e)}if(d&&t.disposeData(l.dataId),s){const e=jp.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},nU=$W(Tn);var rU,aU={kernelName:En,backendName:"wasm",setupFunc:function(e){eU=e.wasm.cwrap(En,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;da.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=jp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,v=c.strideWidth,w=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return eU(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,v,w,k,S),I}};var sU,iU={kernelName:Fn,backendName:"wasm",setupFunc:function(e){rU=e.wasm.cwrap(Fn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=BW(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=jp.getInnerMostAxes(f.length,l.shape.length))}jp.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=jp.computeOutAndReduceShapes(l.shape,f),y=da.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=tV({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==da.sizeFromShape(l.shape)){const e=t.dataIdMap.get(x.dataId).id;rU(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=jp.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}};var oU,uU,lU,cU={kernelName:Rn,backendName:"wasm",setupFunc:function(e){sU=e.wasm.cwrap(Rn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=BW(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const f=l.shape.length;jp.assertAxesAreInnerMostDims("min",h,f);const[m,g]=jp.computeOutAndReduceShapes(l.shape,h),y=da.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==da.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;sU(u,wW[i.dtype],y,e)}if(p&&t.disposeData(c.dataId),s){const e=jp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},hU=$W(Dn);(uU=oU||(oU={}))[uU.reflect=0]="reflect",uU[uU.symmetric=1]="symmetric";var dU,pU={kernelName:Mn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return lU(i,l,t.shape.length,wW[t.dtype],d,p,oU[a],u),o},setupFunc:function(e){lU=e.wasm.cwrap(Mn,null,["number","array","number","number","array","array","number","number"])}},fU=$W(zn),mU=CW(Pn);function gU(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var yU,bU={kernelName:Wn,backendName:"wasm",setupFunc:function(e){dU=e.wasm.cwrap(Wn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=dU(l,c,s,a,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=gU(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}};var xU,vU={kernelName:Vn,backendName:"wasm",setupFunc:function(e){yU=e.wasm.cwrap(Vn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=yU(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gU(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};var wU,kU={kernelName:Un,backendName:"wasm",setupFunc:function(e){xU=e.wasm.cwrap(Un,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=xU(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=gU(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},IU=$W(Bn,0,"bool");var SU={kernelName:Hn,backendName:"wasm",setupFunc:function(e){wU=e.wasm.cwrap(Hn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return wU(c,s,i,o,l),u}};var NU={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var TU,EU={kernelName:jn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return EV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{da.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),da.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=iV({inputs:t.map((e=>{const t=EV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),u}};var CU,_U={kernelName:qn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===da.sizeFromShape(t.shape))return _V({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),h=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return TU(i,l,t.shape.length,wW[t.dtype],d,p,a,u),o},setupFunc:function(e){TU=e.wasm.cwrap(qn,null,["number","array","number","number","array","array","number","number"])}},$U=$W(Xn);var AU,FU={kernelName:Yn,backendName:"wasm",setupFunc:function(e){CU=e.wasm.cwrap(Yn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=tV({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return CU(o,i,h),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};var RU,DU={kernelName:Zn,backendName:"wasm",setupFunc:function(e){AU=e.wasm.cwrap(Zn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=BW(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=jp.getInnerMostAxes(f.length,l.shape.length))}jp.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=jp.computeOutAndReduceShapes(l.shape,f),y=da.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==da.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;AU(u,y,wW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=jp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},MU={kernelName:Jn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=wC(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},OU=$W(Wt),LU=CW(tr),zU=CW(or);var PU,BU={kernelName:sr,backendName:"wasm",setupFunc:function(e){RU=e.wasm.cwrap(sr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,h,d,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=tV({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===da.sizeFromShape(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return RU(y,c,h,d,p,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}};var WU,VU={kernelName:ur,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=da.parseAxisParam(s,a.shape);if(0===a.shape.length)return DW({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);PU(u,c,i.length,h,a.shape.length,l);const d=KW({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){PU=e.wasm.cwrap(ur,null,["number","array","number","array","number","number"])}};var UU,GU={kernelName:Xr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=a.shape,[m,g]=jp.getImageCenter(o,d,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return WU(l,h,d,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){WU=e.wasm.cwrap(Xr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},HU=CW(lr),jU=CW(cr);var qU,KU={kernelName:hr,backendName:"wasm",setupFunc:function(e){UU=e.wasm.cwrap(hr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===da.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=co.calculateShapes(s,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return UU(p,f,wW[s.dtype],u,l,c,m,d,g),o}};var XU,YU={kernelName:dr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,d=a.shape.length,p=0===h||h>1||1===d?1:da.sizeFromShape(a.shape.slice(1));return qU(i,o,u,p,c),l},setupFunc:function(e){qU=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var ZU,JU={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){XU=e.wasm.cwrap(br,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===da.sizeFromShape(a.shape)||XU(r,s),a}},QU=CW(mr);var eG={kernelName:Sr,backendName:"wasm",setupFunc:function(e){ZU=e.wasm.cwrap(Sr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=da.sizeFromShape(n.shape)/o;return 0===da.sizeFromShape(s.shape)||ZU(a,i,o,u),s}};var tG,nG={kernelName:kr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=da.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=_U.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=jp.getReshaped(l.shape,s,o,!1),h=jp.getPermuted(c.length,s.length,!1),d=jp.getReshapedPermuted(l.shape,s,o,!1),p=KW({inputs:{x:l},backend:n,attrs:{shape:c}}),f=LW({inputs:{x:p},backend:n,attrs:{perm:h}}),m=KW({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}};var rG,aG={kernelName:Nr,backendName:"wasm",setupFunc:function(e){tG=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],u=r.shape[1],l=t.readSync(s.dataId)[0],c=[o+l,u],h=t.dataIdMap.get(r.dataId).id,d=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([l],"bool"),x=t.dataIdMap.get(b.dataId).id,v=t.makeOutput([o],r.dtype),w=t.dataIdMap.get(v.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,S=tG(h,d,wW[a.dtype],o,l,u,p,m,y,x,w,I),N=t.readSync(k.dataId);let T;switch(N[0]){case 1:T=jp.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:T=jp.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:T=jp.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:T=""}if(t.disposeData(k.dataId),T)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(v.dataId),new Error(T);let E=f,C=g;return S!==c[0]&&(E=JW({inputs:{x:f},attrs:{begin:0,size:[S,u]},backend:t}),C=JW({inputs:{x:g},attrs:{begin:0,size:S},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,C,b,v]}};var sG,iG={kernelName:Tr,backendName:"wasm",setupFunc:function(e){rG=e.wasm.cwrap(Tr,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=r.shape[0],c=da.sizeFromShape(s.shape),h=t.makeOutput([l,c],r.dtype),d=t.dataIdMap.get(h.dataId).id,p=t.makeOutput([c],s.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;rG(i,o,u,l,d,f,g);const y=t.readSync(m.dataId);let b;switch(y[0]){case 0:b=jp.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:b=jp.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:b=jp.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=jp.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(p.dataId));b=jp.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(h.dataId),t.disposeData(p.dataId),new Error(b);return[h,p]}};function oG(e){sG=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function uG(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],l=o>0?u+1:0;if(l<0)throw new Error(jp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=a.shape.slice();c[0]=l;const h=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(s.dataId).id,p=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;sG(h,wW[a.dtype],a.shape[0],d,p,m,y,t,0);const b=n.readSync(g.dataId);let x;switch(b[0]){case 0:x=jp.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:x=jp.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:x=jp.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=jp.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}var lG={kernelName:Er,backendName:"wasm",setupFunc:oG,kernelFunc:function(e){return uG(e,!0)}};var cG={kernelName:Cr,backendName:"wasm",setupFunc:oG,kernelFunc:function(e){return uG(e,!1)}};var hG,dG={kernelName:Ir,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=da.parseAxisParam(i,a.shape)[0],u=jp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const n=JW({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n}))}},pG=CW(vr),fG=CW(Ar),mG=$W($r);var gG,yG={kernelName:qr,backendName:"wasm",setupFunc:function(e){hG=e.wasm.cwrap(qr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return hG(i,a,wW[s.dtype],u),o}};var bG,xG={kernelName:Fr,backendName:"wasm",setupFunc:function(e){gG=e.wasm.cwrap(Fr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=mo.sliceInfo(a.shape,s,i,o,u,l,c,h,d);let w;if(m)w=KW({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){da.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=mo.computeOutShape(b,x,v),n=JW({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});w=KW({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(p,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(da.computeStrides(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(p).buffer),l=new Uint8Array(new Int32Array(da.computeStrides(p)).buffer),c=t.dataIdMap.get(e.dataId).id;gG(n,r,a.shape.length,s,i,o,u,l,p.length,c),w=KW({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return w}},vG=$W(Or);var wG,kG,IG={kernelName:wr,backendName:"wasm",setupFunc:function(e){bG=e.wasm.cwrap(wr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=BW(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=jp.getInnerMostAxes(f.length,l.shape.length))}jp.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=jp.computeOutAndReduceShapes(l.shape,f),y=da.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==da.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;bG(u,y,wW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=jp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},SG=CW(Lr),NG=CW(zr);var TG;var EG=[EW,_W,FW,RW,VW,GW,jW,qW,ZW,eV,rV,aV,sV,uV,cV,fV,mV,gV,bV,vV,kV,IV,SV,NV,TV,CV,AV,RV,DV,MV,LV,PV,WV,UV,HV,jV,qV,OW,XV,YV,ZV,JV,QV,tU,nU,aU,iU,cU,hU,pU,fU,mU,bU,vU,kU,IU,SU,NU,EU,_U,$U,FU,DU,MU,OU,LU,zU,YW,BU,VU,GU,HU,jU,KU,YU,JU,QU,QW,eG,nG,aG,iG,lG,cG,dG,pG,fG,mG,yG,xG,vG,IG,SG,NG,{kernelName:Pr,backendName:"wasm",setupFunc:function(e){wG=e.wasm.cwrap(Pr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(c.dataId).id;return wG(s,u,a.shape.length,l,o.length,wW[c.dtype],h),c}},{kernelName:Br,backendName:"wasm",setupFunc:function(e){kG=e.wasm.cwrap(Br,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),d=t.dataIdMap.get(h.dataId).id;return kG(i,o,r.shape.length,wW[r.dtype],a,s,c,d),[l,h]}},{kernelName:Wr,backendName:"wasm",setupFunc:function(e){TG=e.wasm.cwrap(Wr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new Uint8Array(new Int32Array(da.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,v=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return TG(v,w,s.shape[0]>1,c,f,m,p,d,h,y,a.shape.length-1,k,I,u,x),b}},PW,{kernelName:Gr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<c.length;e++)h[s]=e,c[e]=JW({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},{kernelName:jr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of EG)ia(e);var CG=Ve();CG.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),CG.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(CG.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var _G=p(B()),$G=p(W()),AG=class extends U{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(VG),UG=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new V(this,tu())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=da.now();e();return{kernelMs:da.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=da.sizeFromShape(n),o=i*da.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||da.sizeFromShape(s);const o=da.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=da.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=da.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function FG(e,t,n){if(null!=MG)return MG;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=LG&&null!=LG[r]?LG[r]:n+r}async function RG(){const[e,t]=await Promise.all([Ve().getAsync("WASM_HAS_SIMD_SUPPORT"),Ve().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?FG(e,t,null!=OG?OG:r):r+n},PG&&(a.instantiateWasm=(s=FG(e,t,null!=OG?OG:""),(e,t)=>(da.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{if(o)return;if(zG)return;zG=!0;r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==MG?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+_G.default.toString()],{type:"text/javascript"}),i=(0,_G.default)(a)):i=(0,$G.default)(a),i.then((e=>{o=!0,zG=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var DG=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],MG=null,OG=null,LG={},zG=!1,PG=!1;function BG(e,t=!1){if(Qo(),zG)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");MG=e,PG=t}function WG(e,t=!1){if(zG)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)OG=e;else{LG=e;const t=DG.filter((e=>null==LG[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}PG=t}var VG=-1,UG=-1;function GG(e){VG=e}function HG(){if(-1===UG)throw new Error("WASM backend not initialized.");return UG}var jG="3.13.0";fu("wasm",(async()=>{const{wasm:e}=await RG();return new AG(e)}),2);var qG={tfjs:"3.13.0","tfjs-core":"3.13.0","tfjs-data":"3.13.0","tfjs-layers":"3.13.0","tfjs-converter":"3.13.0","tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-backend-wasm":"3.13.0"},KG={};function XG(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{const s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}r(KG,{AnchorPosition:()=>LH,DrawBox:()=>WH,DrawBoxOptions:()=>BH,DrawFaceLandmarks:()=>$j,DrawFaceLandmarksOptions:()=>_j,DrawTextField:()=>PH,DrawTextFieldOptions:()=>zH,drawContour:()=>XG,drawDetections:()=>VH,drawFaceExpressions:()=>Tj,drawFaceLandmarks:()=>Aj});r({},{computeReshapedDimensions:()=>iH,getCenterPoint:()=>oH,isDimensions:()=>sH,isEven:()=>rH,isFloat:()=>nH,isTensor:()=>ZG,isTensor1D:()=>JG,isTensor2D:()=>QG,isTensor3D:()=>eH,isTensor4D:()=>tH,isValidNumber:()=>lH,isValidProbablitiy:()=>cH,range:()=>uH,round:()=>aH});var YG=class{constructor(e,t){if(!lH(e)||!lH(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new YG(1/this.width,1/this.height)}};function ZG(e,t){return e instanceof Ua&&e.shape.length===t}function JG(e){return ZG(e,1)}function QG(e){return ZG(e,2)}function eH(e){return ZG(e,3)}function tH(e){return ZG(e,4)}function nH(e){return e%1!=0}function rH(e){return e%2==0}function aH(e,t=2){const n=10**t;return Math.floor(e*n)/n}function sH(e){return e&&e.width&&e.height}function iH({width:e,height:t},n){const r=n/Math.max(t,e);return new YG(Math.round(e*r),Math.round(t*r))}function oH(e){return e.reduce(((e,t)=>e.add(t)),new hH(0,0)).div(new hH(e.length,e.length))}function uH(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function lH(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function cH(e){return lH(e)&&e>=0&&e<=1}var hH=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new hH(this.x+e.x,this.y+e.y)}sub(e){return new hH(this.x-e.x,this.y-e.y)}mul(e){return new hH(this.x*e.x,this.y*e.y)}div(e){return new hH(this.x/e.x,this.y/e.y)}abs(){return new hH(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new hH(Math.floor(this.x),Math.floor(this.y))}},dH=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(lH)}static assertIsValidBox(e,t,n=!1){if(!dH.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(lH),a=[n.x,n.y,n.width,n.height].every(lH);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];dH.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new hH(this.left,this.top)}get topRight(){return new hH(this.right,this.top)}get bottomLeft(){return new hH(this.left,this.bottom)}get bottomRight(){return new hH(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new dH({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new dH({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new dH({x:e,y:t,width:n,height:r})}rescale(e){const t=sH(e)?e.width:e,n=sH(e)?e.height:e;return new dH({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new dH({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,l=s-o,c=Math.min(u,e-i),h=Math.min(l,t-o);return new dH({x:i,y:o,width:c,height:h}).floor()}shift(e,t){const{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new dH({x:a,y:s,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new dH({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},pH=class extends dH{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},fH=class{constructor(e,t,n,r,a){this._imageDims=new YG(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new dH(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new dH(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new fH(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},mH=class extends fH{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new mH(n,r,a)}};function gH(e,t,n=!0){const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function yH(e,t){return au((()=>{const[n,r,a]=t,s=Gl([...e.shape.slice(0,3),1],n,"float32"),i=Gl([...e.shape.slice(0,3),1],r,"float32"),o=Gl([...e.shape.slice(0,3),1],a,"float32"),u=Zu([s,i,o],3);return yc(e,u)}))}function bH(e){return 1/(1+Math.exp(-e))}var xH,vH=class extends dH{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},wH=class{constructor(e,t,n=new hH(0,0)){const{width:r,height:a}=t;this._imgDims=new YG(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new hH(r,a)).add(n)))}get shift(){return new hH(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new hH(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new hH(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){const n=e instanceof mH?e.box.floor():new dH(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=oH(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new vH(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new pH(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},kH=class extends wH{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(oH)}},IH=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${aH(this.distance)})`:""}`}},SH=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){const t=e.descriptors.map((e=>new Float32Array(e)));return new SH(e.label,t)}};function NH(e){return e.detection instanceof mH}function TH(e,t){return{...e,...{detection:t}}}function EH(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function CH(){return"object"==typeof a.g&&"undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node}function _H(e){let t="";if(!e&&CH())try{e=n("fs")}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function $H(){const e=a.g.Canvas||a.g.HTMLCanvasElement,t=a.g.Image||a.g.HTMLImageElement,n=a.g.Video||a.g.HTMLVideoElement,r=a.g.fetch,s=_H();return{Canvas:e||class{},CanvasRenderingContext2D:a.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:a.g.ImageData||class{},Video:a.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...s}}function AH(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function FH(e){xH=e}function RH(){return AH()?FH(EH()):CH()?FH($H()):null}var DH={getEnv:function(){if(!xH)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return xH},setEnv:FH,initialize:RH,createBrowserEnv:EH,createFileSystem:_H,createNodejsEnv:$H,monkeyPatch:function(e){if(xH||RH(),!xH)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=xH.Canvas,Image:n=xH.Image}=e;xH.Canvas=t,xH.Image=n,xH.createCanvasElement=e.createCanvasElement||(()=>new t),xH.createImageElement=e.createImageElement||(()=>new n),xH.ImageData=e.ImageData||xH.ImageData,xH.Video=e.Video||xH.Video,xH.fetch=e.fetch||xH.fetch,xH.readFile=e.readFile||xH.readFile},isBrowser:AH,isNodejs:CH};function MH(e){return DH.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function OH(e){const{Canvas:t,CanvasRenderingContext2D:n}=DH.getEnv();if(e instanceof n)return e;const r=MH(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}RH();var LH=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(LH||{}),zH=class{constructor(e={}){const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},PH=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof PH?e.text:e,this.anchor=t,this.options=new zH(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r="BOTTOM_RIGHT"===n||"TOP_RIGHT"===n,a="BOTTOM_LEFT"===n||"BOTTOM_RIGHT"===n,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=MH(e),n=OH(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach(((e,t)=>{const r=o+c.x,a=o+c.y+(t+1)*s;n.fillText(e,r,a)}))}},BH=class{constructor(e={}){const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;const s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new zH({...s,...a})}},WH=class{constructor(e,t={}){this.box=new dH(e),this.options=new BH(t)}draw(e){const t=OH(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new PH([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function VH(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof mH?t.score:NH(t)?t.detection.score:void 0,r=t instanceof mH?t.box:NH(t)?t.detection.box:new dH(t),a=n?`${aH(n)}`:void 0;new WH(r,{label:a}).draw(e)}))}function UH(e){const{Image:t,Video:n}=DH.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function GH(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));const r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));const e=DH.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function HH(e){const{Image:t,Video:n}=DH.getEnv();return e instanceof t?new YG(e.naturalWidth,e.naturalHeight):e instanceof n?new YG(e.videoWidth,e.videoHeight):new YG(e.width,e.height)}function jH({width:e,height:t}){const{createCanvasElement:n}=DH.getEnv(),r=n();return r.width=e,r.height=t,r}function qH(e,t){const{ImageData:n}=DH.getEnv();if(!(e instanceof n||UH(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||HH(e),s=jH({width:r,height:a});return e instanceof n?OH(s).putImageData(e,0,0):OH(s).drawImage(e,0,0,r,a),s}function KH(e){const{Image:t,Canvas:n,Video:r}=DH.getEnv();return e instanceof t||e instanceof n||e instanceof r}var XH=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if(eH(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(tH(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof DH.getEnv().Canvas?e:qH(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return uH(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return iH({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,au((()=>{const n=uH(this.batchSize,0,1).map((n=>{const r=this.getInput(n);if(r instanceof Ua){let n=tH(r)?r:Bl(r);return n=function(e,t=!1){return au((()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,Gl(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter((e=>!!e)).map((e=>Ti(e,"float32")));return Zu(c,i)}))}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=_p.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof DH.getEnv().Canvas)return to.fromPixels(function(e,t,n=!1){const{Image:r,Canvas:a}=DH.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return jH({width:1,height:1});const s=HH(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=jH({width:t,height:t}),c=e instanceof a?e:qH(e),h=Math.abs(o-u)/2,d=n&&o<u?h:0,p=n&&u<o?h:0;return c.width>0&&c.height>0&&OH(l).drawImage(c,d,p,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return jh(n.map((e=>Ti(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function YH(e){if(e instanceof XH)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(MH);return r.forEach(((e,r)=>{if(!KH(e)&&!eH(e)&&!tH(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(tH(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>{return KH(e)&&(t=e,new Promise(((e,n)=>{function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}(t instanceof DH.getEnv().Canvas||UH(t))&&e(null),t.addEventListener("load",a),t.addEventListener("error",r)})));var t}))),new XH(r,Array.isArray(e))}async function ZH(e,t){const{Canvas:n}=DH.getEnv();let r=e;if(!(e instanceof n)){const t=await YH(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=t||DH.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(tH(e)?1:0),i=au((()=>e.as3D(r,a,s).toInt()));return await to.toPixels(i,n),i.dispose(),n}(a)}const a=OH(r);return t.map((e=>e instanceof mH?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{const s=jH({width:n,height:r});return n>0&&r>0&&OH(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function JH(e,t){if(!eH(e)&&!tH(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(tH(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return au((()=>{const[n,r,a]=e.shape.slice(tH(e)?1:0);return t.map((e=>e instanceof mH?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((({x:t,y:s,width:i,height:o})=>Mh(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function QH(e,t){const{fetch:n}=DH.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function ej(e,t){const n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function tj(e,t){const{manifestUri:n,modelBaseUri:r}=ej(e,t),a=await async function(e){return(await QH(e)).json()}(n);return _i.loadWeights(a,r)}function nj(e,t,n=!1){const{width:r,height:a}=n?HH(t):t;return e.width=r,e.height=a,{width:r,height:a}}var rj=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof Ha))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof Ha)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{const n=Fs(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);const t=await tj(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);const{readFile:t}=DH.getEnv(),{manifestUri:n,modelBaseUri:r}=ej(e,this.getDefaultModelName()),a=_i.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof Ua))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function aj(e,t,n){return au((()=>{let r=Ch(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=yu(r,t.bias),r}))}function sj(e,t,n=!1){return au((()=>{const r=yh(n?yu(gl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):aj(e,t.conv0,[2,2])),a=aj(r,t.conv1,[1,1]),s=aj(yh(yu(r,a)),t.conv2,[1,1]);return yh(yu(r,yu(a,s)))}))}function ij(e,t,n=!1,r=!0){return au((()=>{const a=yh(n?yu(gl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):aj(e,t.conv0,r?[2,2]:[1,1])),s=aj(a,t.conv1,[1,1]),i=aj(yh(yu(a,s)),t.conv2,[1,1]),o=aj(yh(yu(a,yu(s,i))),t.conv3,[1,1]);return yh(yu(a,yu(s,yu(i,o))))}))}function oj(e,t,n="same",r=!1){return au((()=>{const a=yu(gl(e,t.filters,[1,1],n),t.bias);return r?yh(a):a}))}function uj(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function lj(e,t){return(n,r,a,s)=>{const i=Jh(e(n*r*a*a),[a,a,n,r]),o=Yh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function cj(e,t){return(n,r,a)=>{const s=Zh(e(n*r),[n,r]),i=Yh(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var hj=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function dj(e,t){return(n,r,a)=>{const s=Jh(e(9*n),[3,3,n,1]),i=Jh(e(n*r),[1,1,n,r]),o=Yh(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new hj(s,i,o)}}function pj(e){return t=>{const n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new hj(n,r,a)}}function fj(e,t){return(n,r,a)=>{const s=e[n];if(!ZG(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function mj(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function gj(e,t){const n=lj(e,t),r=dj(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:u,conv3:r(t,t,`${n}/conv3`)}}}}function yj(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function bj(e,t){const n=fj(e,t),r=yj(n),a=pj(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var xj=class extends rj{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return au((()=>{let n=ij(yH(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=ij(n,t.dense1),n=ij(n,t.dense2),n=ij(n,t.dense3),n=Xu(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await YH(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=bj(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return uj(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=mj(e),{extractDenseBlock4Params:a}=gj(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function vj(e,t){return au((()=>yu(ji(e,t.weights),t.bias)))}function wj(e){const t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var kj=class extends rj{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return au((()=>{const n=e instanceof XH?this.faceFeatureExtractor.forwardInput(e):e;return vj(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=mj(e),i=cj(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=wj(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=fj(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return uj(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},Ij=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Sj=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);Ij.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return Ij.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function Nj(e,t){return{...e,...{expressions:t}}}function Tj(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{const a=t instanceof Sj?t:t.expressions instanceof Sj?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter((e=>e.probability>n)),i=NH(t)?t.detection.box.bottomLeft:r||new hH(0,0);new PH(s.map((e=>`${e.expression} (${aH(e.probability)})`)),i).draw(e)}))}function Ej(e){return NH(e)&&e.landmarks instanceof wH&&e.unshiftedLandmarks instanceof wH&&e.alignedRect instanceof mH}function Cj(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new mH(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce(((e,t)=>e<t._y?e:t._y),1/0),s=r.reduce(((e,t)=>e>t._y?e:t._y),-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var _j=class{constructor(e={}){const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},$j=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new _j(t)}draw(e){const t=OH(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof kH&&(t.strokeStyle=s,t.lineWidth=a,XG(t,this.faceLandmarks.getJawOutline()),XG(t,this.faceLandmarks.getLeftEyeBrow()),XG(t,this.faceLandmarks.getRightEyeBrow()),XG(t,this.faceLandmarks.getNose()),XG(t,this.faceLandmarks.getLeftEye(),!0),XG(t,this.faceLandmarks.getRightEye(),!0),XG(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;const e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function Aj(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{const n=t instanceof wH?t:Ej(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new $j(n).draw(e)}))}function Fj(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=mj(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=lj(e,t),r=dj(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};uH(t,0,1).forEach((e=>{c[`main_block_${e}`]=u(128,`middle_flow/main_block_${e}`)}));const h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:h}}}function Rj(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=fj(e,t),r=yj(n),a=pj(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};uH(t,0,1).forEach((e=>{u[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return uj(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}function Dj(e,t,n){return yu(gl(e,t.filters,n,"same"),t.bias)}function Mj(e,t,n=!0){let r=n?yh(e):e;return r=aj(r,t.separable_conv0,[1,1]),r=aj(yh(r),t.separable_conv1,[1,1]),r=Rc(r,[3,3],[2,2],"same"),r=yu(r,Dj(e,t.expansion_conv,[2,2])),r}var Oj=class extends rj{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return au((()=>{const n=yH(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=yh(Dj(n,t.entry_flow.conv_in,[2,2]));return r=Mj(r,t.entry_flow.reduction_block_0,!1),r=Mj(r,t.entry_flow.reduction_block_1),uH(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=aj(yh(e),t.separable_conv0,[1,1]);return n=aj(yh(n),t.separable_conv1,[1,1]),n=aj(yh(n),t.separable_conv2,[1,1]),n=yu(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=Mj(r,t.exit_flow.reduction_block),r=yh(aj(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await YH(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Rj(e,this._numMainBlocks)}extractParams(e){return Fj(e,this._numMainBlocks)}};var Lj=class extends kj{postProcess(e,t,n){const r=n.map((({width:e,height:n})=>{const r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return au((()=>{const n=(e,t)=>jh([Gl([68],e,"float32"),Gl([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(Gl([a,136],t,"float32")).sub(jh(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(jh(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return au((()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await YH(e))}async detectLandmarks(e){const t=await YH(e),n=au((()=>sd(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter(((e,t)=>rH(t))),s=r.filter(((e,t)=>!rH(t)));return new kH(Array(68).fill(0).map(((e,t)=>new hH(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},zj=class extends Lj{constructor(e=new xj){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var Pj=class extends rj{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return au((()=>{let n=sj(yH(Ti(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=sj(n,t.dense1),n=sj(n,t.dense2),n=Xu(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await YH(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=bj(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return uj(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=mj(e),{extractDenseBlock3Params:a}=gj(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function Bj(e,t,n,r,a="same"){const{filters:s,bias:i}=t.conv;let o=gl(e,s,n,a);return o=yu(o,i),o=function(e,t){return yu(vu(e,t.weights),t.biases)}(o,t.scale),r?yh(o):o}function Wj(e,t){return Bj(e,t,[1,1],!1)}function Vj(e,t){return Bj(e,t,[2,2],!0,"valid")}function Uj(e,t){function n(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(nH(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return au((()=>Ki(Jh(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=Yh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){const o=n(r,a,s,`${i}/conv`),u=function(n,r){const a=Yh(e(n)),s=Yh(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`);return{conv:o,scale:u}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function Gj(e,t){const n=fj(e,t);function r(e){const t=n(`${e}/conv/filters`,4),r=n(`${e}/conv/bias`,1),a=function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e);return{conv:{filters:t,bias:r},scale:a}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function Hj(e,t){let n=function(e,t){return Bj(e,t,[1,1],!0)}(e,t.conv1);return n=Wj(n,t.conv2),n=yu(n,e),n=yh(n),n}function jj(e,t){let n=Vj(e,t.conv1);n=Wj(n,t.conv2);let r=Xu(e,2,2,"valid");const a=zc(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=zc(e);n=Zu([n,t],1);const r=[...n.shape];r[2]=1;const a=zc(r);n=Zu([n,a],2)}return r=s?Zu([r,a],3):r,n=yu(r,n),n=yh(n),n}var qj=class extends rj{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return au((()=>{let n=Vj(yH(Ti(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=Rc(n,3,2,"valid"),n=Hj(n,t.conv32_1),n=Hj(n,t.conv32_2),n=Hj(n,t.conv32_3),n=jj(n,t.conv64_down),n=Hj(n,t.conv64_1),n=Hj(n,t.conv64_2),n=Hj(n,t.conv64_3),n=jj(n,t.conv128_down),n=Hj(n,t.conv128_1),n=Hj(n,t.conv128_2),n=jj(n,t.conv256_down),n=Hj(n,t.conv256_1),n=Hj(n,t.conv256_2),n=jj(n,t.conv256_down_out);const r=n.mean([1,2]);return ji(r,t.fc)}))}async forward(e){return this.forwardInput(await YH(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);const n=await YH(e),r=au((()=>sd(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=Gj(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!QG(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);const v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:d,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return uj(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=mj(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=Uj(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=au((()=>Ki(Zh(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:h,conv64_2:d,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function Kj(e,t){return{...e,...{descriptor:t}}}function Xj(e,t){return{...e,...{age:t}}}function Yj(e,t,n){return{...e,...{gender:t,genderProbability:n}}}function Zj(e,t){function n(n,r,a,s,i){const o=Jh(e(n*r*a*a),[a,a,n,r]),u=Yh(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){const i=function(n,r){const a=Jh(e(9*n),[3,3,n,1]),s=Yh(e(n)),i=Yh(e(n)),o=Yh(e(n)),u=Yh(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,`${s}/depthwise_conv`);return{depthwise_conv:i,pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function Jj(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=fj(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){const t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!eH(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return uj(e,t),{params:s,paramMappings:t}}function Qj(e,t,n){return au((()=>{let r=gl(e,t.filters,n,"same");return r=yu(r,t.batch_norm_offset),hl(r,0,6)}))}function eq(e,t){return au((()=>{let n,r=Qj(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return au((()=>{let r=Cl(e,t.filters,n,"same");return r=rl(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),hl(r,0,6)}))}(r,e.depthwise_conv,s),r=Qj(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function tq(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),p=(c-u)*(h-l);if(d<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+p-b)}function nq(e,t){const{sizes:n,centers:r}=function(e){const t=sd(Ki(e,[1,0])),n=[yc(t[2],t[0]),yc(t[3],t[1])];return{sizes:n,centers:[yu(t[0],xu(n[0],2)),yu(t[1],xu(n[1],2))]}}(e),a=sd(Ki(t,[1,0])),s=xu(vu(Pl(xu(a[2],5)),n[0]),2),i=yu(vu(xu(a[0],10),n[0]),r[0]),o=xu(vu(Pl(xu(a[3],5)),n[1]),2),u=yu(vu(xu(a[1],10),n[1]),r[1]);return Ki(jh([yc(i,s),yc(u,o),yu(i,s),yu(u,o)]),[1,0])}function rq(e,t){return au((()=>{const n=e.shape[0];return{boxPredictionEncoding:Ku(oj(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Ku(oj(e,t.class_predictor),[n,-1,3])}}))}var aq=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},sq=class extends rj{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return au((()=>{const n=Ti(e.toBatchTensor(512,!1),"float32"),r=eq(yc(xu(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return au((()=>{const r=Qj(e,n.conv_0,[1,1]),a=Qj(r,n.conv_1,[2,2]),s=Qj(a,n.conv_2,[1,1]),i=Qj(s,n.conv_3,[2,2]),o=Qj(i,n.conv_4,[1,1]),u=Qj(o,n.conv_5,[2,2]),l=Qj(u,n.conv_6,[1,1]),c=Qj(l,n.conv_7,[2,2]),h=rq(t,n.box_predictor_0),d=rq(e,n.box_predictor_1),p=rq(a,n.box_predictor_2),f=rq(i,n.box_predictor_3),m=rq(u,n.box_predictor_4),g=rq(c,n.box_predictor_5);return{boxPredictions:Zu([h.boxPredictionEncoding,d.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:Zu([h.classPrediction,d.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return au((()=>{const r=e.shape[0];let a=nq(Ku(Vl(n.extra_dim,[r,1,1]),[-1,4]),Ku(e,[-1,4]));a=Ku(a,[r,a.shape[0]/r,4]);const s=Ju(Qu(t,[0,0,1],[-1,-1,-1]));let i=Qu(s,[0,0,0],[-1,-1,1]);return i=Ku(i,[r,i.shape[1]]),{boxes:sd(a),scores:sd(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await YH(e))}async locateFaces(e,t={}){const{maxResults:n,minConfidence:r}=new aq(t),a=await YH(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),u=[];return o.forEach((t=>{if(u.length>=i)return;const n=t.score;for(let n=u.length-1;n>=0;--n){const s=tq(e,t.boxIndex,u[n]);if(0!==s&&(t.score*=s<=r?1:0,t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,l,n,.5,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,p=d/h.width,f=d/h.height,m=o.arraySync(),g=c.map((e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*p));return new mH(l[e],new vH(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return Jj(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=mj(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=Zj(n,t),i=a(),o=s(),u={extra_dim:no(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}};var iq=[new hH(.738768,.874946),new hH(2.42204,2.65704),new hH(4.30971,7.04493),new hH(10.246,4.59428),new hH(12.6868,11.8741)],oq=[new hH(1.603231,2.094468),new hH(6.041143,7.080126),new hH(2.882459,3.518061),new hH(4.266906,5.178857),new hH(9.041765,10.66308)],uq=[117.001,114.697,97.404],lq=e=>"number"==typeof e;function cq(e){return au((()=>{const t=vu(e,Th(.10000000149011612));return yu(yh(yc(e,t)),t)}))}function hq(e,t){return au((()=>{let n=Jc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=gl(n,t.conv.filters,[1,1],"valid"),n=yc(n,t.bn.sub),n=vu(n,t.bn.truediv),n=yu(n,t.conv.bias),cq(n)}))}function dq(e,t){return au((()=>{let n=Jc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Ch(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=yu(n,t.bias),cq(n)}))}function pq(e,t){const n=lj(e,t);const r=dj(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){const i=n(r,a,3,`${s}/conv`),o=function(n,r){const a=Yh(e(n)),s=Yh(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`);return{conv:i,bn:o}},extractSeparableConvParams:r}}function fq(e,t){const n=fj(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){const t=r(`${e}/conv`),a=function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`);return{conv:t,bn:a}},extractSeparableConvParams:pj(n)}}var mq=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},gq=class extends rj{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!lq(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>lq(e.x)&&lq(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(lq)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=hq(e,t.conv0);return n=Rc(n,[2,2],[2,2],"same"),n=hq(n,t.conv1),n=Rc(n,[2,2],[2,2],"same"),n=hq(n,t.conv2),n=Rc(n,[2,2],[2,2],"same"),n=hq(n,t.conv3),n=Rc(n,[2,2],[2,2],"same"),n=hq(n,t.conv4),n=Rc(n,[2,2],[2,2],"same"),n=hq(n,t.conv5),n=Rc(n,[2,2],[1,1],"same"),n=hq(n,t.conv6),n=hq(n,t.conv7),oj(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?cq(oj(e,t.conv0,"valid",!1)):dq(e,t.conv0);return n=Rc(n,[2,2],[2,2],"same"),n=dq(n,t.conv1),n=Rc(n,[2,2],[2,2],"same"),n=dq(n,t.conv2),n=Rc(n,[2,2],[2,2],"same"),n=dq(n,t.conv3),n=Rc(n,[2,2],[2,2],"same"),n=dq(n,t.conv4),n=Rc(n,[2,2],[2,2],"same"),n=dq(n,t.conv5),n=Rc(n,[2,2],[1,1],"same"),n=t.conv6?dq(n,t.conv6):n,n=t.conv7?dq(n,t.conv7):n,oj(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return au((()=>{let r=Ti(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?yH(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await YH(e),t)}async detect(e,t={}){const{inputSize:n,scoreThreshold:r}=new mq(t),a=await YH(e),s=await this.forwardInput(a,n),i=au((()=>sd(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map((e=>e.box)),c=u.map((e=>e.score)),h=u.map((e=>e.classScore)),d=u.map((e=>this.config.classes[e.label])),p=function(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex));const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++){const a=i[n],s=e[t],u=e[a];o.push(gH(s,u,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(l.map((e=>e.rescale(n))),c,this.config.iouThreshold,!0);return p.map((e=>new fH(c[e],h[e],d[e],l[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=fq(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return uj(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||gq.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=mj(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=pq(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,h,d,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,h,"conv4"),conv5:l(h,d,"conv5"),conv6:p?l(d,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||d,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,h,d,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,h,"conv5"),conv6:u(h,d,"conv6"),conv7:u(d,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,h,d]=au((()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?Lh(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):Th(0)]})),p=[],f=await h.array(),m=await c.array();for(let e=0;e<u;e++)for(let t=0;t<u;t++)for(let r=0;r<l;r++){const a=bH(f[e][t][r][0]);if(!n||a>n){const n=(t+bH(m[e][t][r][0]))/u*i,s=(e+bH(m[e][t][r][1]))/u*o,l=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/u*i,c=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/u*o,h=n-l/2,f=s-c/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};p.push({box:new pH(h,f,h+l,f+c),score:a,classScore:a*y,label:b,...g})}}return c.dispose(),h.dispose(),d.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},yq=gq;yq.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var bq=class extends yq{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:oq,meanRgb:uq}:{anchors:iq,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new mH(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var xq=class extends mq{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},vq=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function wq(e,t,n,r,a=(({alignedRect:e})=>e)){const s=e.map((e=>Ej(e)?a(e):e.detection)),i=r||(t instanceof Ua?await JH(t,s):await ZH(t,s)),o=await n(i);return i.forEach((e=>e instanceof Ua&&e.dispose())),o}var kq=[new hH(1.603231,2.094468),new hH(6.041143,7.080126),new hH(2.882459,3.518061),new hH(4.266906,5.178857),new hH(9.041765,10.66308)],Iq=[117.001,114.697,97.404],Sq=class extends yq{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:kq,meanRgb:Iq,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new mH(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},Nq={ssdMobilenetv1:new sq,tinyFaceDetector:new Sq,tinyYolov2:new bq,faceLandmark68Net:new zj,faceLandmark68TinyNet:new class extends Lj{constructor(e=new Pj){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new qj,faceExpressionNet:new class extends kj{constructor(e=new xj){super("FaceExpressionNet",e)}forwardInput(e){return au((()=>Lh(this.runNet(e))))}async forward(e){return this.forwardInput(await YH(e))}async predictExpressions(e){const t=await YH(e),n=await this.forwardInput(t),r=await Promise.all(sd(n).map((async e=>{const t=e.dataSync();return e.dispose(),t})));n.dispose();const a=r.map((e=>new Sj(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends rj{constructor(e=new Oj(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return au((()=>{const n=e instanceof XH?this.faceFeatureExtractor.forwardInput(e):e,r=Xu(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:vj(r,t.fc.age).as1D(),gender:vj(r,t.fc.gender)}}))}forwardInput(e){return au((()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:Lh(n)}}))}async forward(e){return this.forwardInput(await YH(e))}async predictAgeAndGender(e){const t=await YH(e),n=await this.forwardInput(t),r=sd(n.age),a=sd(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{const n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?"male":"female",i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=mj(e),a=cj(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=wj(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=fj(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return uj(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},Tq=class extends vq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},Eq=class extends Tq{async run(){const e=await this.parentTask,t=await wq(e,this.input,(async e=>Promise.all(e.map((e=>Nq.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>Nj(e,t[n])))}withAgeAndGender(){return new $q(this,this.input)}},Cq=class extends Eq{withAgeAndGender(){return new Aq(this,this.input)}withFaceDescriptors(){return new Rq(this,this.input)}},_q=class extends vq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},$q=class extends _q{async run(){const e=await this.parentTask,t=await wq(e,this.input,(async e=>Promise.all(e.map((e=>Nq.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return Xj(Yj(e,a,s),r)}))}withFaceExpressions(){return new Eq(this,this.input)}},Aq=class extends $q{withFaceExpressions(){return new Cq(this,this.input)}withFaceDescriptors(){return new Rq(this,this.input)}},Fq=class extends vq{constructor(e,t){super(),this.parentTask=e,this.input=t}},Rq=class extends Fq{async run(){const e=await this.parentTask;return(await wq(e,this.input,(e=>Promise.all(e.map((e=>Nq.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>Kj(e[n],t)))}withFaceExpressions(){return new Cq(this,this.input)}withAgeAndGender(){return new Aq(this,this.input)}},Dq=class extends vq{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?Nq.faceLandmark68TinyNet:Nq.faceLandmark68Net}},Mq=class extends Dq{async run(){const e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof Ua?await JH(this.input,t):await ZH(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof Ua&&e.dispose())),e.map(((e,t)=>Cj(e,r[t])))}withFaceExpressions(){return new Cq(this,this.input)}withAgeAndGender(){return new Aq(this,this.input)}withFaceDescriptors(){return new Rq(this,this.input)}},Oq=class extends vq{constructor(e,t=new aq){super(),this.input=e,this.options=t}},Lq=class extends Oq{async run(){const{input:e,options:t}=this;let n;if(t instanceof xq)n=Nq.tinyFaceDetector.locateFaces(e,t);else if(t instanceof aq)n=Nq.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof mq))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=Nq.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise(((e,t)=>{this.run().then((t=>e(t.map((e=>TH({},e)))))).catch((e=>t(e)))}))}withFaceLandmarks(e=!1){return new Mq(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new Eq(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new $q(this.runAndExtendWithFaceDetections(),this.input)}};function zq(e,t=new aq){return new Lq(e,t)}var Pq=class{constructor(e,t=.6){this._distanceThreshold=t;const n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1;const a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof SH)return e;if(e instanceof Float32Array)return new SH(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new SH(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>function(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");const n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new IH(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){const t=this.matchDescriptor(e);return t.distance<this._distanceThreshold?t:new IH("unknown",t.distance)}toJSON(){return{distanceThreshold:this._distanceThreshold,labeledDescriptors:this._labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){const t=e.labeledDescriptors.map((e=>SH.fromJSON(e)));return new Pq(t,e.distanceThreshold)}};function Bq(e,t){const{width:n,height:r}=new YG(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>Bq(e,{width:n,height:r})));if(Ej(e)){const t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return Cj(TH(e,t),a)}return NH(e)?TH(e,e.detection.forSize(n,r)):e instanceof wH||e instanceof mH?e.forSize(n,r):e}function Wq(e){switch(e.toLowerCase().trim()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function Vq(e,t,n,r){const a=e.location.search,s=new URLSearchParams(a);for(const[e,t]of s)"number"==typeof n[e]?n[e]=parseInt(t,10):"boolean"==typeof n[e]?n[e]=Wq(t):n[e]=t;"serviceWorker"in navigator&&(navigator.serviceWorker.register("./sw.js",{scope:"./"}).then((function(e){t.querySelector("footer").classList.remove("hidden")})).catch((function(e){})),function(e,t,n){const r=t.getElementById("butInstall");if(!r)return;let a;r.addEventListener("click",(e=>{r.classList.add("hidden"),a.prompt(),a.userChoice.then((e=>{}))})),e.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),a=e,n&&n.showInstall&&r.classList.remove("hidden")}))}(e,t,n)),r(e,t,n)}!function(e,t,n,r){!function(e,t,n,r,a){"loading"!==n.readyState?e(t,n,r,a):n.addEventListener("DOMContentLoaded",(function(s){e(t,n,r,a)}))}(Vq,e,t,n,r)}(window,document,{modes:["yandexlavka","default"],mode:"yandexlavka",sound:!1},(function(e,t,n){const r=t.getElementById("imageUpload"),s=t.getElementById("video"),i=t.querySelector(".video_container"),o=t.querySelector(".image_container"),u=t.querySelector(".start_video"),l=t.querySelector(".main_header"),c=t.querySelector("footer"),h=t.querySelector(".processing");let d=null,p=function(){const e={unknown:"Хер с горы",petr:"Петруччо",serg:"Серж",sava:"Чемонин",lenya:"Лёня",chern:"Не лох",boys:"ЧернRк",glider:"Шурик"};return{convert:function(t,n){const r=e[t];return r?n&&"female"===n.gender&&"unknown"===t?"Незнакомка":r:t}}}();if(n.modes.includes(n.mode)&&"default"!==n.mode){let e=null;"diagnosis"===n.mode||"ira"===n.mode?e=a.e(967).then(a.bind(a,967)):"planeta"===n.mode?e=a.e(590).then(a.bind(a,590)):"max"===n.mode?e=a.e(352).then(a.bind(a,352)):"cat"===n.mode?e=a.e(833).then(a.bind(a,833)):"meshok"===n.mode?e=a.e(753).then(a.bind(a,753)):"yandexlavka"===n.mode?e=a.e(802).then(a.bind(a,802)):"membrana"===n.mode&&(e=a.e(327).then(a.bind(a,327))),e&&e.then((e=>{l.innerText=e.default.header,p=e.default.nameConvertor}))}let f="default";async function m(){i.classList.remove("hidden"),c.classList.add("hidden"),d&&clearInterval(d);const e={video:!0};try{navigator.mediaDevices.getUserMedia(e).then((function(e){s.srcObject=e})).catch((function(e){}))}catch(e){}}n.modes.includes(n.mode)&&(f=n.mode),Promise.all([async function(e){try{return(await fetch("/models/"+e+".json")).json()}catch(e){return(await fetch("/models/default.json")).json()}}(f),Nq.faceRecognitionNet.loadFromUri("/models"),Nq.faceLandmark68Net.loadFromUri("/models"),Nq.ageGenderNet.loadFromUri("/models"),Nq.ssdMobilenetv1.loadFromUri("/models")]).then((async function(e){const t=Pq.fromJSON(e[0]);let n=null,a=null,l=null;function f(e,n){e.map((e=>t.findBestMatch(e.descriptor))).forEach(((t,r)=>{if(e.length>7&&"unknown"===t.label)return;const a=e[r],s=p.convert(t.label,a);if("unknown"!==s){new KG.DrawBox(a.detection.box,{label:s}).draw(n)}}))}r.addEventListener("click",(()=>{i.classList.remove("hidden"),c.classList.add("hidden")})),r.addEventListener("change",(async()=>{h.classList.remove("hidden"),n&&n.remove(),a&&a.remove(),n=await GH(r.files[0]),o.append(n),a=qH(n),o.append(a);const e={width:n.width,height:n.height};nj(a,e);const t=Bq(await zq(n).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),e);h.classList.add("hidden"),requestAnimationFrame((()=>{f(t,a)}))})),u.addEventListener("click",m),s.addEventListener("playing",(()=>{l&&l.remove();const e=qH(s);i.append(e),l=e;const t={width:s.getBoundingClientRect().width,height:s.getBoundingClientRect().height};nj(e,t),d&&clearInterval(d),d=setInterval((async()=>{const n=Bq(await zq(s).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),t);e.getContext("2d").clearRect(0,0,e.width,e.height),f(n,e)}),300)}))}))}))})()})();