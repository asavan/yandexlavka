(()=>{var e,t,n={993:()=>{},758:()=>{}},r={};function a(e){if(r[e])return r[e].exports;var t=r[e]={exports:{}};return n[e](t,t.exports,a),t.exports}a.m=n,a.amdO={},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+"."+{352:"3a3c6869f86c6ee240a5",474:"cd25c3c3731198773e46",590:"5004a6c505a36744a40a",833:"c5be55c62d9166a638e5",967:"8dce5fcbaa5c0d665821"}[e]+".min.js",a.miniCssF=e=>{},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="nedanila:",a.l=(n,r,s,i)=>{if(e[n])e[n].push(r);else{var o,l;if(void 0!==s)for(var u=document.getElementsByTagName("script"),h=0;h<u.length;h++){var p=u[h];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==t+s){o=p;break}}o||(l=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=n),e[n]=[r];var d=(t,r)=>{o.onerror=o.onload=null,clearTimeout(c);var a=e[n];if(delete e[n],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),t)return t(r)},c=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),l&&document.head.appendChild(o)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var s=new Promise(((n,a)=>{r=e[t]=[n,a]}));n.push(r[2]=s);var i=a.p+a.u(t),o=new Error;a.l(i,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+i+")",o.name="ChunkLoadError",o.type=s,o.request=i,r[1](o)}}),"chunk-"+t,t)}};var t=(t,n)=>{for(var r,s,[i,o,l]=n,u=0,h=[];u<i.length;u++)s=i[u],a.o(e,s)&&e[s]&&h.push(e[s][0]),e[s]=0;for(r in o)a.o(o,r)&&(a.m[r]=o[r]);for(l&&l(a),t&&t(n);h.length;)h.shift()()},n=self.webpackChunknedanila=self.webpackChunknedanila||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),(()=>{"use strict";var e,t,n="/index.js",r=Object.create,s=Object.defineProperty,i=Object.getPrototypeOf,o=Object.prototype.hasOwnProperty,l=Object.getOwnPropertyNames,u=Object.getOwnPropertyDescriptor,h=e=>s(e,"__esModule",{value:!0}),p=(e,t)=>{for(var n in h(e),t)s(e,n,{get:t[n],enumerable:!0})},d=(e=(e,t)=>{function n(){return"object"==typeof a.g&&void 0!==t&&"undefined"!=typeof process&&!!process.version}p(e,{isNodejs:()=>n})},()=>(t||e((t={exports:{}}).exports,t),t.exports));p({},{Abs:()=>Ve,Acos:()=>Ue,Acosh:()=>Ge,AdadeltaOptimizer:()=>_d,AdagradOptimizer:()=>Td,AdamOptimizer:()=>Ed,AdamaxOptimizer:()=>Ad,Add:()=>He,AddN:()=>je,All:()=>qe,Any:()=>Ke,ArgMax:()=>Xe,ArgMin:()=>Ye,Asin:()=>Ze,Asinh:()=>Je,Atan:()=>Qe,Atan2:()=>tt,Atanh:()=>et,AvgPool:()=>nt,AvgPool3D:()=>at,AvgPool3DGrad:()=>st,AvgPoolGrad:()=>rt,BackendWasm:()=>cB,BatchMatMul:()=>it,BatchToSpaceND:()=>ot,Bincount:()=>lt,BroadcastTo:()=>ut,Callback:()=>wk,CallbackList:()=>my,Cast:()=>ht,Ceil:()=>pt,ClipByValue:()=>dt,Complex:()=>ct,ComplexAbs:()=>ft,Concat:()=>mt,Conv2D:()=>gt,Conv2DBackpropFilter:()=>yt,Conv2DBackpropInput:()=>bt,Conv3D:()=>xt,Conv3DBackpropFilterV2:()=>vt,Conv3DBackpropInputV2:()=>wt,Cos:()=>kt,Cosh:()=>It,CropAndResize:()=>St,Cumsum:()=>Nt,CustomCallback:()=>by,DataStorage:()=>P,DenseBincount:()=>Ct,DepthToSpace:()=>_t,DepthwiseConv2dNative:()=>Tt,DepthwiseConv2dNativeBackpropFilter:()=>Et,DepthwiseConv2dNativeBackpropInput:()=>At,Diag:()=>$t,Dilation2D:()=>Ft,Dilation2DBackpropFilter:()=>Dt,Dilation2DBackpropInput:()=>Rt,ENV:()=>Pe,EarlyStopping:()=>Nk,Elu:()=>Ot,EluGrad:()=>Lt,Environment:()=>Oe,Equal:()=>Pt,Erf:()=>zt,Exp:()=>Bt,ExpandDims:()=>Wt,Expm1:()=>Vt,FFT:()=>Ut,Fill:()=>Gt,FlipLeftRight:()=>Ht,Floor:()=>jt,FloorDiv:()=>qt,FromPixels:()=>Rr,FusedBatchNorm:()=>Kt,FusedConv2D:()=>Or,FusedDepthwiseConv2D:()=>Lr,GatherNd:()=>Yt,GatherV2:()=>Xt,GraphModel:()=>YI,Greater:()=>Zt,GreaterEqual:()=>Jt,History:()=>yy,IFFT:()=>en,Identity:()=>Qt,Imag:()=>tn,InputSpec:()=>ny,IsFinite:()=>nn,IsInf:()=>rn,IsNan:()=>an,KernelBackend:()=>B,LRN:()=>gn,LRNGrad:()=>yn,LayerVariable:()=>Qg,LayersModel:()=>_b,LeakyRelu:()=>sn,Less:()=>on,LessEqual:()=>ln,LinSpace:()=>un,Log:()=>hn,Log1p:()=>pn,LogSoftmax:()=>mn,LogicalAnd:()=>dn,LogicalNot:()=>cn,LogicalOr:()=>fn,Max:()=>bn,MaxPool:()=>vn,MaxPool3D:()=>kn,MaxPool3DGrad:()=>In,MaxPoolGrad:()=>wn,MaxPoolWithArgmax:()=>Nn,Maximum:()=>xn,Mean:()=>Sn,Min:()=>Cn,Minimum:()=>_n,MirrorPad:()=>Tn,Mod:()=>En,MomentumOptimizer:()=>Fd,Multinomial:()=>An,Multiply:()=>$n,Neg:()=>Fn,NonMaxSuppressionV3:()=>Dn,NonMaxSuppressionV4:()=>Mn,NonMaxSuppressionV5:()=>On,NotEqual:()=>Rn,OP_SCOPE_SUFFIX:()=>Ga,OneHot:()=>zn,OnesLike:()=>Ln,Optimizer:()=>Cd,Pack:()=>Pn,PadV2:()=>Bn,Pool:()=>Wn,Pow:()=>Vn,Prelu:()=>Un,Prod:()=>Gn,RMSPropOptimizer:()=>Rd,RNN:()=>Fx,Range:()=>Hn,Rank:()=>ma,Real:()=>jn,RealDiv:()=>Mt,Reciprocal:()=>qn,Reduction:()=>hd,Relu:()=>Kn,Relu6:()=>er,Reshape:()=>Xn,ResizeBilinear:()=>Jn,ResizeBilinearGrad:()=>Qn,ResizeNearestNeighbor:()=>Yn,ResizeNearestNeighborGrad:()=>Zn,Reverse:()=>tr,RotateWithOffset:()=>Dr,Round:()=>nr,Rsqrt:()=>rr,SGDOptimizer:()=>$d,ScatterNd:()=>ar,Select:()=>sr,Selu:()=>ir,Sequential:()=>$b,Sigmoid:()=>pr,Sign:()=>hr,Sin:()=>lr,Sinh:()=>ur,Slice:()=>or,Softmax:()=>yr,Softplus:()=>dr,SpaceToBatchND:()=>mr,SparseToDense:()=>wr,SplitV:()=>gr,Sqrt:()=>cr,Square:()=>xr,SquaredDifference:()=>br,Step:()=>Fr,StridedSlice:()=>kr,Sub:()=>vr,Sum:()=>fr,SymbolicTensor:()=>ry,Tan:()=>Ir,Tanh:()=>Nr,Tensor:()=>da,TensorBuffer:()=>ua,Tile:()=>Sr,TopK:()=>Cr,Transpose:()=>_r,Unique:()=>Tr,Unpack:()=>Er,UnsortedSegmentSum:()=>Ar,Variable:()=>fa,ZerosLike:()=>$r,_FusedMatMul:()=>Mr,abs:()=>Co,acos:()=>_o,acosh:()=>To,add:()=>ko,addN:()=>Eo,all:()=>Ao,any:()=>$o,argMax:()=>Fo,argMin:()=>Ro,asin:()=>Do,asinh:()=>Mo,atan:()=>Oo,atan2:()=>Lo,atanh:()=>zo,avgPool:()=>Qo,avgPool3d:()=>el,backend:()=>vo,backend_util:()=>zd,basicLSTMCell:()=>sl,batchNorm:()=>ll,batchNorm2d:()=>ul,batchNorm3d:()=>hl,batchNorm4d:()=>pl,batchToSpaceND:()=>il,bincount:()=>dl,booleanMaskAsync:()=>fp,broadcastTo:()=>cl,browser:()=>hi,buffer:()=>zs,callbacks:()=>_k,cast:()=>Ps,ceil:()=>fl,clipByValue:()=>ml,clone:()=>Bs,complex:()=>ja,concat:()=>tl,concat1d:()=>gl,concat2d:()=>yl,concat3d:()=>bl,concat4d:()=>xl,constraints:()=>Df,conv1d:()=>wl,conv2d:()=>vl,conv2dTranspose:()=>Il,conv3d:()=>Nl,conv3dTranspose:()=>Cl,copyRegisteredKernels:()=>qr,cos:()=>_l,cosh:()=>Tl,cosineWindow:()=>Ip,cumsum:()=>El,customGrad:()=>yu,data:()=>QI,denseBincount:()=>Al,deprecationWarn:()=>ro,depthToSpace:()=>$l,depthwiseConv2d:()=>Fl,deregisterOp:()=>$k,device_util:()=>Ma,diag:()=>Rl,dilation2d:()=>Dl,disableDeprecationWarnings:()=>no,dispose:()=>uo,disposeVariables:()=>ao,div:()=>No,divNoNan:()=>Wl,dot:()=>Vl,dropout:()=>wp,elu:()=>Ul,enableDebugMode:()=>to,enableProdMode:()=>eo,enclosingPowerOfTwo:()=>kp,engine:()=>so,env:()=>Le,equal:()=>zl,erf:()=>Gl,exp:()=>Hl,expandDims:()=>jl,expm1:()=>ql,eye:()=>Xl,fft:()=>Uh,fill:()=>Yl,findBackend:()=>yo,findBackendFactory:()=>bo,floor:()=>Zl,floorDiv:()=>Io,fused:()=>Sp,gather:()=>Jl,gatherND:()=>vp,gather_util:()=>fi,getBackend:()=>mo,getGradient:()=>Wr,getKernel:()=>Br,getKernelsForBackend:()=>Vr,grad:()=>du,grads:()=>cu,greater:()=>Ql,greaterEqual:()=>eu,ifft:()=>Gh,imag:()=>tu,image:()=>Id,inTopKAsync:()=>Np,initializers:()=>wm,input:()=>Mb,io:()=>Vs,irfft:()=>Hh,isFinite:()=>nu,isInf:()=>ru,isNaN:()=>au,keep:()=>ho,kernel_impls:()=>vc,layers:()=>Vg,leakyRelu:()=>su,less:()=>iu,lessEqual:()=>ou,linalg:()=>Nd,linspace:()=>lu,loadGraphModel:()=>ZI,loadLayersModel:()=>Db,localResponseNormalization:()=>uu,log:()=>hu,log1p:()=>pu,logSigmoid:()=>wu,logSoftmax:()=>Su,logSumExp:()=>Du,logicalAnd:()=>Mu,logicalNot:()=>Ou,logicalOr:()=>Lu,logicalXor:()=>zu,losses:()=>Sd,matMul:()=>si,math:()=>ai,max:()=>ku,maxPool:()=>Pu,maxPool3d:()=>Bu,maxPoolWithArgmax:()=>Wu,maximum:()=>Vu,mean:()=>Uu,memory:()=>io,metrics:()=>ek,min:()=>Gu,minimum:()=>Hu,mirrorPad:()=>ju,mod:()=>qu,model:()=>Fb,models:()=>gk,moments:()=>Xu,movingAverage:()=>yp,mul:()=>So,multiRNNCell:()=>Yu,multinomial:()=>Zu,neg:()=>xu,nextFrame:()=>Ld,norm:()=>gp,notEqual:()=>Ju,oneHot:()=>ii,ones:()=>eh,onesLike:()=>th,op:()=>Ha,outerProduct:()=>nh,pad:()=>rh,pad1d:()=>ah,pad2d:()=>sh,pad3d:()=>ih,pad4d:()=>oh,pool:()=>uh,pow:()=>hh,prelu:()=>ph,print:()=>Ws,prod:()=>dh,profile:()=>oo,rand:()=>ch,randomGamma:()=>gh,randomNormal:()=>yh,randomUniform:()=>bh,range:()=>xh,ready:()=>fo,real:()=>vh,reciprocal:()=>wh,registerBackend:()=>xo,registerCallbackConstructor:()=>Ob,registerGradient:()=>Gr,registerKernel:()=>Ur,registerOp:()=>Ek,regularizers:()=>yk,relu:()=>kh,relu6:()=>Ih,removeBackend:()=>go,reshape:()=>Jo,reverse:()=>Nh,reverse1d:()=>Sh,reverse2d:()=>Ch,reverse3d:()=>_h,reverse4d:()=>Th,rfft:()=>qh,round:()=>Eh,rsqrt:()=>Ah,scalar:()=>$h,scatterND:()=>bp,scatter_util:()=>gi,selu:()=>Fh,separableConv2d:()=>Rh,sequential:()=>Rb,serialization:()=>Li,setBackend:()=>co,setPlatform:()=>wo,setWasmPath:()=>kB,setWasmPaths:()=>IB,setdiff1dAsync:()=>Dh,sigmoid:()=>nl,sign:()=>Mh,signal:()=>kd,sin:()=>Oh,sinh:()=>Lh,slice:()=>rl,slice1d:()=>zh,slice2d:()=>Ph,slice3d:()=>Bh,slice4d:()=>Wh,slice_util:()=>vi,softmax:()=>Vh,softplus:()=>vu,spaceToBatchND:()=>lh,sparseToDense:()=>xp,spectral:()=>wd,split:()=>jh,sqrt:()=>Kh,square:()=>Ku,squaredDifference:()=>Xh,squeeze:()=>Yh,stack:()=>Zh,step:()=>Jh,stridedSlice:()=>Qh,sub:()=>Iu,sum:()=>Nu,sumOutType:()=>Ia,tan:()=>ep,tanh:()=>al,tensor:()=>Ka,tensor1d:()=>tp,tensor2d:()=>np,tensor3d:()=>pi,tensor4d:()=>rp,tensor5d:()=>ap,tensor6d:()=>sp,tensor_util:()=>va,test_util:()=>Wi,tidy:()=>lo,tile:()=>Kl,time:()=>po,topk:()=>ip,train:()=>Md,transpose:()=>oi,truncatedNormal:()=>op,unique:()=>lp,unregisterGradient:()=>jr,unregisterKernel:()=>Hr,unsortedSegmentSum:()=>up,unstack:()=>hp,upcastType:()=>ka,util:()=>Xr,valueAndGrad:()=>fu,valueAndGrads:()=>mu,variable:()=>pp,variableGrads:()=>gu,version:()=>YL,version_converter:()=>JI,version_core:()=>Qi,version_layers:()=>eb,version_wasm:()=>NB,where:()=>Pl,whereAsync:()=>cp,zeros:()=>Qu,zerosLike:()=>Bl});var c=Object.create,f=Object.defineProperty,m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,y=Object.getOwnPropertyNames,b=Object.getOwnPropertyDescriptor,x=e=>f(e,"__esModule",{value:!0}),v=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),w=(e,t)=>{for(var n in x(e),t)f(e,n,{get:t[n],enumerable:!0})},k=e=>e&&e.__esModule?e:((e,t,n)=>{if(x(e),t&&"object"==typeof t||"function"==typeof t)for(let r of y(t))!g.call(e,r)&&"default"!==r&&f(e,r,{get:()=>t[r],enumerable:!(n=b(t,r))||n.enumerable});return e})(f(null!=e?c(m(e)):{},"default",{value:e,enumerable:!0}),e),I=v((()=>{})),N=v(((e,t)=>{!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),S=v(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),C=v(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),_=v(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),T=v(((e,t)=>{!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),E=v(((e,t)=>{!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),A=v((()=>{})),$=v(((e,t)=>{!function(e,n){var r,s=this,i=256,o="random",l=n.pow(i,6),u=n.pow(2,52),h=2*u,p=255;function d(t,a,p){var d=[],b=g(m((a=1==a?{entropy:!0}:a||{}).entropy?[t,y(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),y(t)}catch(t){var n=s.navigator,a=n&&n.plugins;return[+new Date,s,a,s.screen,y(e)]}}():t,3),d),x=new c(d),v=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=x.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,g(y(x.S),e),(a.pass||p||function(e,t,r,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),r?(n[o]=e,t):e})(v,b,"global"in a?a.global:this==n,a.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*i+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(n["seed"+o]=d,g(n.random(),e),"object"==typeof t&&t.exports){t.exports=d;try{r=A()}catch(e){}}else"function"==typeof define&&a.amdO&&define((function(){return d}))}([],Math)})),F=v(((e,t)=>{var n=N(),r=S(),a=C(),s=_(),i=T(),o=E(),l=$();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),R=v((()=>{})),D=v((()=>{})),M=v((()=>{})),O=v((()=>{})),L=v(((e,t)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||n,function(e){function t(){return T.buffer!=j&&ee(T.buffer),q}function n(){return T.buffer!=j&&ee(T.buffer),K}function s(){return T.buffer!=j&&ee(T.buffer),X}function i(){return T.buffer!=j&&ee(T.buffer),Y}function o(){return T.buffer!=j&&ee(T.buffer),Z}var l,u=void 0!==(e=e||{})?e:{},h={};for(l in u)u.hasOwnProperty(l)&&(h[l]=u[l]);var p=[],d=!1,c=!1,f=!1,m=!1;d="object"==typeof window,c="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m=!d&&!f&&!c;var g=u.ENVIRONMENT_IS_PTHREAD||!1;g&&(j=u.buffer,te=u.DYNAMIC_BASE,ne=u.DYNAMICTOP_PTR);var y,b,x,v,w="";function k(e){return u.locateFile?u.locateFile(e,w):w+e}if(f){var I;w=c?D().dirname(w)+"/":"//",y=function(e,t){return x||(x=a(993)),v||(v=D()),e=v.normalize(e),x.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),R(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof fn))throw e})),process.on("unhandledRejection",Ie),u.inspect=function(){return"[Emscripten Module object]"};try{I=M()}catch(e){throw e}Worker=I.Worker}else m?("undefined"!=typeof read&&(y=function(e){return read(e)}),b=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(R("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?p=scriptArgs:void 0!==arguments&&(p=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(d||c)&&(c?w=self.location.href:document.currentScript&&(w=document.currentScript.src),void 0!==r&&r&&(w=r),w=0!==w.indexOf("blob:")?w.substr(0,w.lastIndexOf("/")+1):"",f?(y=function(e,t){return x||(x=a(993)),v||(v=D()),e=v.normalize(e),x.readFileSync(e,t?null:"utf8")},b=function(e){var t=y(e,!0);return t.buffer||(t=new Uint8Array(t)),R(t.buffer),t}):(y=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(b=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)})));f&&"undefined"==typeof performance&&(performance=O().performance);var N,S,C=u.print||void 0,_=u.printErr||void 0;for(l in h)h.hasOwnProperty(l)&&(u[l]=h[l]);h=null,u.arguments&&(p=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&u.quit,Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(N=u.wasmBinary),u.noExitRuntime&&(S=u.noExitRuntime),"object"!=typeof WebAssembly&&_("no native wasm support detected");var T,E,A=new WebAssembly.Table({initial:169,maximum:169,element:"anyfunc"}),$=0,F=!1;function R(e,t){e||Ie("Assertion failed: "+t)}function L(e){var t=u["_"+e];return R(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function z(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);U(e,t=pn(n),n)}return t},array:function(e){var t=pn(e.length);return H(e,t),t}},i=L(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=hn()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,d="string"===t?W(p):"boolean"===t?Boolean(p):p,0!==l&&dn(l),d}function P(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?L(e):function(){return z(e,t,n,arguments)}}function B(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var l=s-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function W(e,t){return e?B(n(),e,t):""}function V(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function U(e,t,r){return V(e,n(),t,r)}function G(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function H(e,n){t().set(e,n)}var j,q,K,X,Y,Z,J=65536;function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){j=e,u.HEAP8=q=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=X=new Int32Array(e),u.HEAPU8=K=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=Y=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=Z=new Float64Array(e)}var te=5256480,ne=12672,re=u.INITIAL_MEMORY||16777216;if(g)T=u.wasmMemory,j=u.buffer;else if(u.wasmMemory)T=u.wasmMemory;else if(!((T=new WebAssembly.Memory({initial:re/J,maximum:2147483648/J,shared:!0})).buffer instanceof SharedArrayBuffer))throw _("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");function ae(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?u.dynCall_v(n):u.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}T&&(j=T.buffer),re=j.byteLength,ee(j),g||(s()[ne>>2]=te);var se=[],ie=[],oe=[],le=[],ue=[];function he(){if(!g){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)fe(u.preRun.shift());ae(se)}}function pe(){ae(ie)}function de(){g||ae(oe)}function ce(){if(!g){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)me(u.postRun.shift());ae(ue)}}function fe(e){se.unshift(e)}function me(e){ue.unshift(e)}var ge=Math.ceil,ye=Math.floor,be=0,xe=null,ve=null;function we(e){R(!g,"addRunDependency cannot be used in a pthread worker"),be++,u.monitorRunDependencies&&u.monitorRunDependencies(be)}function ke(e){if(be--,u.monitorRunDependencies&&u.monitorRunDependencies(be),0==be&&(null!==xe&&(clearInterval(xe),xe=null),ve)){var t=ve;ve=null,t()}}function Ie(e){throw u.onAbort&&u.onAbort(e),C(e+=""),_(e),F=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function Ne(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}u.preloadedImages={},u.preloadedAudios={};var Se="data:application/octet-stream;base64,";function Ce(e){return Ne(e,Se)}var _e="file://";function Te(e){return Ne(e,_e)}var Ee="tfjs-backend-wasm-threaded-simd.wasm";function Ae(){try{if(N)return new Uint8Array(N);if(b)return b(Ee);throw"both async and sync fetching of the wasm failed"}catch(e){Ie(e)}}function $e(){return N||!d&&!c||"function"!=typeof fetch||Te(Ee)?new Promise((function(e,t){e(Ae())})):fetch(Ee,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ee+"'";return e.arrayBuffer()})).catch((function(){return Ae()}))}function Fe(){var e={a:Kt};function t(e,t){var n=e.exports;if(u.asm=n,E=t,!g){var r=je.unusedWorkers.length;je.unusedWorkers.forEach((function(e){je.loadWasmModuleToWorker(e,(function(){--r||ke()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return $e().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){_("failed to asynchronously prepare wasm: "+e),Ie(e)}))}if(g||we(),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return _("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(N||"function"!=typeof WebAssembly.instantiateStreaming||Ce(Ee)||Te(Ee)||"function"!=typeof fetch)return r(n);fetch(Ee,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){_("wasm streaming compile failed: "+e),_("falling back to ArrayBuffer instantiation"),r(n)}))}))}(),{}}Ce(Ee)||(Ee=k(Ee));var Re={};function De(){je.initRuntime()}g||ie.push({func:function(){Zt()}});var Me=0,Oe=0,Le=0;function ze(e,t,n){Me=e|=0,Le=t|=0,Oe=n|=0}u.__register_pthread_ptr=ze;var Pe={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},Be=13584;function We(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),Be>>2),a=0;if(r==e&&Atomics.compareExchange(s(),Be>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Ve(e){if(g)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _kill_thread!";s()[e+12>>2]=0;var t=je.pthreads[e];t.worker.terminate(),je.freeThreadData(t),je.runningWorkers.splice(je.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Ue(e){if(g)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cancel_thread!";je.pthreads[e].worker.postMessage({cmd:"cancel"})}function Ge(e){if(g)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";s()[e+12>>2]=0;var t=je.pthreads[e];if(t){var n=t.worker;je.returnWorkerToPool(n)}}u._emscripten_futex_wake=We;var He,je={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){ze(je.mainThreadBlock,!c,1),sn(je.mainThreadBlock)},initMainThreadBlock:function(){for(var e=0;e<8;++e)je.allocateUnusedWorker();for(je.mainThreadBlock=12832,e=0;e<58;++e)i()[je.mainThreadBlock/4+e]=0;s()[je.mainThreadBlock+12>>2]=je.mainThreadBlock;var t=je.mainThreadBlock+156;for(s()[t>>2]=t,e=0;e<128;++e)i()[3268+e]=0;Atomics.store(i(),je.mainThreadBlock+104>>2,13072),Atomics.store(i(),je.mainThreadBlock+40>>2,je.mainThreadBlock),Atomics.store(i(),je.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(null!==je.exitHandlers){for(;je.exitHandlers.length>0;)je.exitHandlers.pop()();je.exitHandlers=null}g&&$&&rn()},threadExit:function(e){var t=Ut();t&&(Atomics.store(i(),t+4>>2,e),Atomics.store(i(),t+0>>2,1),Atomics.store(i(),t+60>>2,1),Atomics.store(i(),t+64>>2,0),je.runExitHandlers(),We(t+0,2147483647),ze(0,0,0),$=0,g&&postMessage({cmd:"exit"}))},threadCancel:function(){je.runExitHandlers(),Atomics.store(i(),$+4>>2,-1),Atomics.store(i(),$+0>>2,1),We($+0,2147483647),$=0,ze(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in je.pthreads)(r=je.pthreads[e])&&r.worker&&je.returnWorkerToPool(r.worker);je.pthreads={};for(var t=0;t<je.unusedWorkers.length;++t)(n=je.unusedWorkers[t]).terminate();for(je.unusedWorkers=[],t=0;t<je.runningWorkers.length;++t){var n,r=(n=je.runningWorkers[t]).pthread;je.freeThreadData(r),n.terminate()}je.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+104>>2];s()[e.threadInfoStruct+104>>2]=0,Qt(t),Qt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Qt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){delete je.pthreads[e.pthread.thread],je.unusedWorkers.push(e),je.runningWorkers.splice(je.runningWorkers.indexOf(e),1),je.freeThreadData(e.pthread),e.pthread=void 0},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(je.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Ut()){var s=je.pthreads[r.targetThread];return s&&s.worker.postMessage(n.data,r.transferList),void(je.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===a?an():"spawnThread"===a?Wt(n.data):"cleanupThread"===a?Ge(r.thread):"killThread"===a?Ve(r.thread):"cancelThread"===a?Ue(r.thread):"loaded"===a?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===a?C("Thread "+r.threadId+": "+r.text):"printErr"===a?_("Thread "+r.threadId+": "+r.text):"alert"===a?alert("Thread "+r.threadId+": "+r.text):"exit"===a?e.pthread&&Atomics.load(i(),e.pthread.thread+68>>2)&&je.returnWorkerToPool(e):"cancelDone"===a?je.returnWorkerToPool(e):"objectTransfer"===a?je.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):_("worker sent an unknown command "+a),je.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){_("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},f&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:T,wasmModule:E,DYNAMIC_BASE:te,DYNAMICTOP_PTR:ne})},allocateUnusedWorker:function(){var e=k("tfjs-backend-wasm-threaded-simd.worker.js");je.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==je.unusedWorkers.length&&(je.allocateUnusedWorker(),je.loadWasmModuleToWorker(je.unusedWorkers[0])),je.unusedWorkers.length>0?je.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function qe(e,t){dn(e)}function Ke(){return S}function Xe(e,t,n,r){Ie("Assertion failed: "+W(e)+", at: "+[t?W(t):"unknown filename",n,r?W(r):"unknown function"])}function Ye(e,t){_main(e,t)}function Ze(e){return s()[en()>>2]=e,e}function Je(e,t){if(g)return ot(1,1,e,t);le.unshift({func:e,arg:t})}function Qe(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(g)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=je.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function et(){Ie()}function tt(e,t){}function nt(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(c){var a=Atomics.wait(s(),e>>2,n,r);if("timed-out"===a)return-73;if("not-equal"===a)return-6;if("ok"===a)return 0;throw"Atomics.wait returned an unexpected value "+a}if(n!=Atomics.load(s(),e>>2))return-6;var i=performance.now(),o=i+r;Atomics.store(s(),Be>>2,e);for(var l=e;e==l;){if((i=performance.now())>o)return-73;an(),e=Atomics.load(s(),Be>>2)}return 0}function rt(){return 0|Le}function at(){return 0|Oe}function st(e,t,r){n().copyWithin(e,t,t+r)}function it(){return navigator.hardwareConcurrency}function ot(e,t){for(var n=arguments.length-2,r=hn(),a=pn(8*n),s=a>>3,i=0;i<n;i++)o()[s+i]=arguments[2+i];var l=ln(e,n,a,t);return dn(r),l}u.establishStackSpace=qe,u.getNoExitRuntime=Ke,He=f?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:g?function(){return performance.now()-u.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var lt=[];function ut(e,t){ut.array||(ut.array=[]);var r,a=ut.array;for(a.length=0;r=n()[e++];)100===r||102===r?(t=t+7&-8,a.push(o()[t>>3]),t+=8):(t=t+3&-4,a.push(s()[t>>2]),t+=4);return a}function ht(e,t,n){lt.length=t;for(var r=n>>3,a=0;a<t;a++)lt[a]=o()[r+a];var s=e<0,i=s?Re[-e-1]:qt[e];if(s){var l=ut(lt[1],lt[2]);return i.apply(null,l)}return i.apply(null,lt)}function pt(){return n().length}function dt(e){try{return T.grow(e-j.byteLength+65535>>>16),ee(T.buffer),1}catch(e){}}function ct(e){e>>>=0;var t=pt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),dt(Math.min(n,Q(Math.max(16777216,e,a),65536))))return!0}return!1}var ft={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var e=ft.eventHandlers.length-1;e>=0;--e)ft._removeHandler(e);ft.eventHandlers=[],ft.deferredCalls=[]},registerRemoveEventListeners:function(){ft.removeEventListenersRegistered||(le.push(ft.removeAllEventListeners),ft.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ft.deferredCalls){var s=ft.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ft.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ft.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ft.deferredCalls.length;++t)ft.deferredCalls[t].targetFunction==e&&(ft.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ft.inEventHandler&&ft.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ft.canPerformEventHandlerRequests())for(var e=0;e<ft.deferredCalls.length;++e){var t=ft.deferredCalls[e];ft.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ft.eventHandlers.length;++n)ft.eventHandlers[n].target==e&&(!t||t==ft.eventHandlers[n].eventTypeString)&&ft._removeHandler(n--)},_removeHandler:function(e){var t=ft.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ft.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ft.inEventHandler,ft.currentEventHandler=e,ft.runDeferredCalls(),e.handlerFunc(t),ft.runDeferredCalls(),--ft.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ft.eventHandlers.push(e),ft.registerRemoveEventListeners();else for(var n=0;n<ft.eventHandlers.length;++n)ft.eventHandlers[n].target==e.target&&ft.eventHandlers[n].eventTypeString==e.eventTypeString&&ft._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=hn(),o=pn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,un(e,637534208,t,r,o),dn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return je.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function mt(e){var t=G(e)+1,n=Jt(t);return U(e,n,t),n}function gt(e,t,n,r){var a=hn(),i=pn(12),o=0;t&&(o=mt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,un(e,657457152,0,o,i),dn(a)}function yt(e,t,n,r){gt(e,t=t?W(t):"",n,r)}function bt(e){return e>2?W(e):e}var xt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function vt(e){return e=bt(e),xt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function wt(e){return vt(e)}function kt(e,t,n){var r=wt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(yt(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function It(e,t,n){return g?ot(2,1,e,t,n):kt(e,t,n)}function Nt(e,t,n){return wt(e)?kt(e,t,n):It(e,t,n)}function St(e){}function Ct(e,t){}function _t(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function Tt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function Et(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}var At={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var e=new Float32Array(At.MINI_TEMP_BUFFER_SIZE),t=0;t<At.MINI_TEMP_BUFFER_SIZE;t++)At.miniTempBufferFloatViews[t]=e.subarray(0,t+1);var n=new Int32Array(At.MINI_TEMP_BUFFER_SIZE);for(t=0;t<At.MINI_TEMP_BUFFER_SIZE;t++)At.miniTempBufferIntViews[t]=n.subarray(0,t+1)},recordError:function(e){At.lastError||(At.lastError=e)},getNewId:function(e){for(var t=At.counter++,n=e.length;n<t;n++)e[n]=null;return t},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=W(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?At.registerContext(n,t):0},registerContext:function(e,t){var n=Jt(8);s()[n+4>>2]=Ut();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),At.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&At.initExtensions(r),n},makeContextCurrent:function(e){return At.currentContext=At.contexts[e],u.ctx=Dt=At.currentContext&&At.currentContext.GLctx,!(e&&!Dt)},getContext:function(e){return At.contexts[e]},deleteContext:function(e){At.currentContext===At.contexts[e]&&(At.currentContext=null),"object"==typeof ft&&ft.removeAllHandlersOnTarget(At.contexts[e].GLctx.canvas),At.contexts[e]&&At.contexts[e].GLctx.canvas&&(At.contexts[e].GLctx.canvas.GLctxObject=void 0),Qt(At.contexts[e].handle),At.contexts[e]=null},initExtensions:function(e){if(e||(e=At.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;_t(t),Tt(t),Et(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query");var n=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"];(t.getSupportedExtensions()||[]).forEach((function(e){-1!=n.indexOf(e)&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=At.programs[e],n=At.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Dt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Dt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=Dt.getUniformLocation(t,o);if(l){var u=At.getNewId(At.uniforms);r[o]=[i.size,u],At.uniforms[u]=l;for(var h=1;h<i.size;++h){var p=o+"["+h+"]";l=Dt.getUniformLocation(t,p),u=At.getNewId(At.uniforms),At.uniforms[u]=l}}}}},$t=["default","low-power","high-performance"];function Ft(e,t){var n={},r=t>>2;n.alpha=!!s()[r+0],n.depth=!!s()[r+1],n.stencil=!!s()[r+2],n.antialias=!!s()[r+3],n.premultipliedAlpha=!!s()[r+4],n.preserveDrawingBuffer=!!s()[r+5];var a=s()[r+6];n.powerPreference=$t[a],n.failIfMajorPerformanceCaveat=!!s()[r+7],n.majorVersion=s()[r+8],n.minorVersion=s()[r+9],n.enableExtensionsByDefault=s()[r+10],n.explicitSwapControl=s()[r+11],n.proxyContextToMainThread=s()[r+12],n.renderViaOffscreenBackBuffer=s()[r+13];var i=wt(e);return i?n.explicitSwapControl?-1:At.createContext(i,n):-4}function Rt(e,t){return Ft(e,t)}var Dt,Mt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Mt.buffers[e];0===t||10===t?((1===e?C:_)(B(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Mt.varargs+=4,s()[Mt.varargs-4>>2]},getStr:function(e){return W(e)},get64:function(e,t){return e}};function Ot(e){return g?ot(3,1,e):0}function Lt(e,t,n,r,a){if(g)return ot(4,1,e,t,n,r,a)}function zt(e,t,r,a){if(g)return ot(5,1,e,t,r,a);for(var i=0,o=0;o<r;o++){for(var l=s()[t+8*o>>2],u=s()[t+(8*o+4)>>2],h=0;h<u;h++)Mt.printChar(e,n()[l+h]);i+=u}return s()[a>>2]=i,0}function Pt(e){var t=je.exitHandlers.pop();e&&t()}function Bt(e,t){null===je.exitHandlers&&(je.exitHandlers=[]),je.exitHandlers.push((function(){cn(e,t)}))}function Wt(e){if(g)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var t=je.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";je.runningWorkers.push(t);for(var n=Jt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=je.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,thread:e.pthread_ptr,threadInfoStruct:e.pthread_ptr},l=o.threadInfoStruct>>2;Atomics.store(i(),l+0,0),Atomics.store(i(),l+1,0),Atomics.store(i(),l+2,0),Atomics.store(i(),l+17,e.detached),Atomics.store(i(),l+26,n),Atomics.store(i(),l+12,0),Atomics.store(i(),l+10,o.threadInfoStruct),Atomics.store(i(),l+11,42),Atomics.store(i(),l+27,e.stackSize),Atomics.store(i(),l+21,e.stackSize),Atomics.store(i(),l+20,a),Atomics.store(i(),l+29,a),Atomics.store(i(),l+30,e.detached),Atomics.store(i(),l+32,e.schedPolicy),Atomics.store(i(),l+33,e.schedPrio);var u=tn()+40;Atomics.store(i(),l+44,u),t.pthread=o;var h={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,selfThreadId:e.pthread_ptr,parentThreadId:e.parent_pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){h.time=performance.now(),t.postMessage(h,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Vt(e,t,n){if(!t&&!n)return Pe.EINVAL;if(!e)return _("pthread_getschedparam called with a null thread pointer!"),Pe.ESRCH;if(s()[e+12>>2]!==e)return _("pthread_getschedparam attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Pe.ESRCH;var r=Atomics.load(i(),e+108+20>>2),a=Atomics.load(i(),e+108+24>>2);return t&&(s()[t>>2]=r),n&&(s()[n>>2]=a),0}function Ut(){return 0|Me}function Gt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return _("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return _("pthread_create called with a null thread pointer!"),28;var a=[];if(g&&0===a.length)return on(687865856,e,t,n,r);var o=0,l=0,u=0,h=0,p=0;if(t)if(o=s()[t>>2],o+=81920,l=s()[t+8>>2],u=0!==s()[t+12>>2],0===s()[t+16>>2]){var d=s()[t+20>>2],c=s()[t+24>>2];Vt(je.currentProxiedOperationCallerThread?je.currentProxiedOperationCallerThread:Ut(),t+20,t+24),h=s()[t+20>>2],p=s()[t+24>>2],s()[t+20>>2]=d,s()[t+24>>2]=c}else h=s()[t+20>>2],p=s()[t+24>>2];else o=2097152;var f=0==l;f?l=nn(16,o):R((l-=o)>0);for(var m=Jt(232),y=0;y<58;++y)i()[(m>>2)+y]=0;s()[e>>2]=m,s()[m+12>>2]=m;var b=m+156;s()[b>>2]=b;var x={stackBase:l,stackSize:o,allocatedOwnStack:f,schedPolicy:h,schedPrio:p,detached:u,startRoutine:n,pthread_ptr:m,parent_pthread_ptr:Ut(),arg:r,transferList:a};return g?(x.cmd="spawnThread",postMessage(x,a)):Wt(x),0}function Ht(e){return(e=+e)>=0?+ye(e+.5):+ge(e-.5)}function jt(e){if(g)return ot(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ze(28),-1}u._pthread_self=Ut,g?je.initWorker():je.initMainThreadBlock(),At.init();var qt=[null,Je,It,Ot,Lt,zt,jt],Kt={e:Xe,r:Ye,w:Qe,a:et,l:tt,d:nt,c:We,h:He,g:rt,x:at,q:st,B:it,t:ht,A:ct,u:Nt,k:St,s:Ct,v:Rt,m:Ot,o:Lt,i:zt,p:De,memory:T||u.wasmMemory,y:Pt,z:Bt,j:Gt,b:Ut,f:Ht,n:jt,table:A},Xt=Fe();u.asm=Xt;var Yt,Zt=u.___wasm_call_ctors=function(){return(Zt=u.___wasm_call_ctors=u.asm.C).apply(null,arguments)},Jt=(u._init=function(){return(u._init=u.asm.D).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.E).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.F).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.G).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.H).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.I).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.J).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.K).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.L).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.M).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.N).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.O).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.P).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Q).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.R).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.S).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.T).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.U).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.V).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.W).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.X).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Y).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.Z).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm._).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.$).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.aa).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.ba).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.ca).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.da).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.ea).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.fa).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.ga).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.ha).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.ia).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.ja).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.ka).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.la).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.ma).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.na).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.oa).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.pa).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.qa).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.ra).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.sa).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.ta).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.ua).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.va).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.wa).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.xa).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.ya).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.za).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Aa).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.Ba).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Ca).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Da).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.Ea).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Fa).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.Ga).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Ha).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Ia).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.Ja).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.Ka).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.La).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Ma).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Na).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Oa).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Pa).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.Qa).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Ra).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.Sa).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Ta).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Ua).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Va).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Wa).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.Xa).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Ya).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm.Za).apply(null,arguments)},u._malloc=function(){return(Jt=u._malloc=u.asm._a).apply(null,arguments)}),Qt=u._free=function(){return(Qt=u._free=u.asm.$a).apply(null,arguments)},en=(u.___em_js__initPthreadsJS=function(){return(u.___em_js__initPthreadsJS=u.asm.ab).apply(null,arguments)},u.___errno_location=function(){return(en=u.___errno_location=u.asm.bb).apply(null,arguments)}),tn=u._emscripten_get_global_libc=function(){return(tn=u._emscripten_get_global_libc=u.asm.cb).apply(null,arguments)},nn=u._memalign=function(){return(nn=u._memalign=u.asm.db).apply(null,arguments)},rn=u.___pthread_tsd_run_dtors=function(){return(rn=u.___pthread_tsd_run_dtors=u.asm.eb).apply(null,arguments)},an=u._emscripten_main_thread_process_queued_calls=function(){return(an=u._emscripten_main_thread_process_queued_calls=u.asm.fb).apply(null,arguments)},sn=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.gb).apply(null,arguments)},u._emscripten_register_main_browser_thread_id=function(){return(sn=u._emscripten_register_main_browser_thread_id=u.asm.hb).apply(null,arguments)}),on=(u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.ib).apply(null,arguments)},u._emscripten_async_run_in_main_thread=function(){return(u._emscripten_async_run_in_main_thread=u.asm.jb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread=function(){return(u._emscripten_sync_run_in_main_thread=u.asm.kb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_0=function(){return(u._emscripten_sync_run_in_main_thread_0=u.asm.lb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_1=function(){return(u._emscripten_sync_run_in_main_thread_1=u.asm.mb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.nb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(u._emscripten_sync_run_in_main_thread_xprintf_varargs=u.asm.ob).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_3=function(){return(u._emscripten_sync_run_in_main_thread_3=u.asm.pb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(on=u._emscripten_sync_run_in_main_thread_4=u.asm.qb).apply(null,arguments)}),ln=(u._emscripten_sync_run_in_main_thread_5=function(){return(u._emscripten_sync_run_in_main_thread_5=u.asm.rb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_6=function(){return(u._emscripten_sync_run_in_main_thread_6=u.asm.sb).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_7=function(){return(u._emscripten_sync_run_in_main_thread_7=u.asm.tb).apply(null,arguments)},u._emscripten_run_in_main_runtime_thread_js=function(){return(ln=u._emscripten_run_in_main_runtime_thread_js=u.asm.ub).apply(null,arguments)}),un=u._emscripten_async_queue_on_thread_=function(){return(un=u._emscripten_async_queue_on_thread_=u.asm.vb).apply(null,arguments)},hn=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.wb).apply(null,arguments)},u.stackSave=function(){return(hn=u.stackSave=u.asm.xb).apply(null,arguments)}),pn=u.stackAlloc=function(){return(pn=u.stackAlloc=u.asm.yb).apply(null,arguments)},dn=u.stackRestore=function(){return(dn=u.stackRestore=u.asm.zb).apply(null,arguments)},cn=u.dynCall_vi=function(){return(cn=u.dynCall_vi=u.asm.Ab).apply(null,arguments)};function fn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function mn(e){function t(){Yt||(Yt=!0,u.calledRun=!0,!F&&(pe(),de(),u.onRuntimeInitialized&&u.onRuntimeInitialized(),ce()))}e=e||p,be>0||(he(),be>0)||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}if(u.dynCall_v=function(){return(u.dynCall_v=u.asm.Bb).apply(null,arguments)},u.dynCall_ii=function(){return(u.dynCall_ii=u.asm.Cb).apply(null,arguments)},u.asm=Xt,u.cwrap=P,u.PThread=je,u.PThread=je,u._pthread_self=Ut,u.wasmMemory=T,u.ExitStatus=fn,u.then=function(e){if(Yt)e(u);else{var t=u.onRuntimeInitialized;u.onRuntimeInitialized=function(){t&&t(),e(u)}}return u},ve=function e(){Yt||mn(),Yt||(ve=e)},u.run=mn,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return g||(S=!0),g||mn(),e});"object"==typeof e&&"object"==typeof t?t.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=s)})),z=v(((e,t)=>{var r,s=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||n,function(e){var t,n=void 0!==(e=e||{})?e:{},s={};for(t in n)n.hasOwnProperty(t)&&(s[t]=n[t]);var i=[],o=function(e,t){throw t},l=!1,u=!1,h=!1,p=!1;l="object"==typeof window,u="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!l&&!h&&!u;var d,c,f,m,g="";function y(e){return n.locateFile?n.locateFile(e,g):g+e}h?(g=u?D().dirname(g)+"/":"//",d=function(e,t){return f||(f=a(993)),m||(m=D()),e=m.normalize(e),f.readFileSync(e,t?null:"utf8")},c=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),i=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Te))throw e})),process.on("unhandledRejection",ae),o=function(e){process.exit(e)},n.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(d=function(e){return read(e)}),c=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?i=scriptArgs:void 0!==arguments&&(i=arguments),"function"==typeof quit&&(o=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||u)&&(u?g=self.location.href:document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},u&&(c=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var b,x,v=n.print||void 0,w=n.printErr||void 0;for(t in s)s.hasOwnProperty(t)&&(n[t]=s[t]);s=null,n.arguments&&(i=n.arguments),n.thisProgram&&n.thisProgram,n.quit&&(o=n.quit),n.wasmBinary&&(b=n.wasmBinary),n.noExitRuntime&&(x=n.noExitRuntime),"object"!=typeof WebAssembly&&w("no native wasm support detected"),new WebAssembly.Table({initial:151,maximum:151,element:"anyfunc"});var k,I=!1;function N(e,t){e||ae("Assertion failed: "+t)}function S(e){var t=n["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);O(e,t=Ce(n),n)}return t},array:function(e){var t=Ce(e.length);return L(e,t),t}},i=S(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var h=s[n[u]];h?(0===l&&(l=Se()),o[u]=h(r[u])):o[u]=r[u]}var p,d=i.apply(null,o);return p=d,d="string"===t?R(p):"boolean"===t?Boolean(p):p,0!==l&&_e(l),d}function _(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?S(e):function(){return C(e,t,n,arguments)}}var T,E,A,$="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function F(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&$)return $.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?F(E,e,t):""}function M(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function O(e,t,n){return M(e,E,t,n)}function L(e,t){T.set(e,t)}function z(e){n.HEAP8=T=new Int8Array(e),n.HEAP16=new Int16Array(e),n.HEAP32=A=new Int32Array(e),n.HEAPU8=E=new Uint8Array(e),n.HEAPU16=new Uint16Array(e),n.HEAPU32=new Uint32Array(e),n.HEAPF32=new Float32Array(e),n.HEAPF64=new Float64Array(e)}function P(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var r=t.func;"number"==typeof r?void 0===t.arg?n.dynCall_v(r):n.dynCall_vi(r,t.arg):r(void 0===t.arg?null:t.arg)}else t(n)}}n.INITIAL_MEMORY;var B=[],W=[],V=[],U=[];function G(){if(n.preRun)for("function"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)X(n.preRun.shift());P(B)}function H(){P(W)}function j(){P(V)}function q(){}function K(){if(n.postRun)for("function"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;)Y(n.postRun.shift());P(U)}function X(e){B.unshift(e)}function Y(e){U.unshift(e)}var Z=Math.ceil,J=Math.floor,Q=0,ee=null,te=null;function ne(e){Q++,n.monitorRunDependencies&&n.monitorRunDependencies(Q)}function re(e){if(Q--,n.monitorRunDependencies&&n.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){throw n.onAbort&&n.onAbort(e),v(e+=""),w(e),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(e)}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}n.preloadedImages={},n.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var le="file://";function ue(e){return se(e,le)}var he="tfjs-backend-wasm.wasm";function pe(){try{if(b)return new Uint8Array(b);if(c)return c(he);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function de(){return b||!l&&!u||"function"!=typeof fetch||ue(he)?new Promise((function(e,t){e(pe())})):fetch(he,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()})).catch((function(){return pe()}))}function ce(){var e={env:ke,wasi_snapshot_preview1:ke};function t(e,t){var r=e.exports;n.asm=r,z((k=r.memory).buffer),re()}function r(e){t(e.instance)}function a(t){return de().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){w("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),n.instantiateWasm)try{return n.instantiateWasm(e,t)}catch(e){return w("Module.instantiateWasm callback failed with error: "+e),!1}return function(){if(b||"function"!=typeof WebAssembly.instantiateStreaming||oe(he)||ue(he)||"function"!=typeof fetch)return a(r);fetch(he,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){w("wasm streaming compile failed: "+e),w("falling back to ArrayBuffer instantiation"),a(r)}))}))}(),{}}function fe(e){z(k.buffer)}oe(he)||(he=y(he)),W.push();var me={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=me.buffers[e];0===t||10===t?((1===e?v:w)(F(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return me.varargs+=4,A[me.varargs-4>>2]},getStr:function(e){return R(e)},get64:function(e,t){return e}};function ge(e){return 0}function ye(e,t,n,r,a){}function be(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=A[t+8*s>>2],o=A[t+(8*s+4)>>2],l=0;l<o;l++)me.printChar(e,E[i+l]);a+=o}return A[r>>2]=a,0}function xe(e){$e(e)}function ve(e){xe(e)}function we(e){return(e=+e)>=0?+J(e+.5):+Z(e-.5)}var ke={emscripten_notify_memory_growth:fe,fd_close:ge,fd_seek:ye,fd_write:be,proc_exit:ve,roundf:we},Ie=ce();n.asm=Ie,n._init=function(){return(n._init=n.asm.init).apply(null,arguments)},n._register_tensor=function(){return(n._register_tensor=n.asm.register_tensor).apply(null,arguments)},n._dispose_data=function(){return(n._dispose_data=n.asm.dispose_data).apply(null,arguments)},n._dispose=function(){return(n._dispose=n.asm.dispose).apply(null,arguments)},n._Abs=function(){return(n._Abs=n.asm.Abs).apply(null,arguments)},n._Add=function(){return(n._Add=n.asm.Add).apply(null,arguments)},n._AddN=function(){return(n._AddN=n.asm.AddN).apply(null,arguments)},n._ArgMax=function(){return(n._ArgMax=n.asm.ArgMax).apply(null,arguments)},n._AvgPool=function(){return(n._AvgPool=n.asm.AvgPool).apply(null,arguments)},n._BatchMatMul=function(){return(n._BatchMatMul=n.asm.BatchMatMul).apply(null,arguments)},n._ClipByValue=function(){return(n._ClipByValue=n.asm.ClipByValue).apply(null,arguments)},n._Conv2D=function(){return(n._Conv2D=n.asm.Conv2D).apply(null,arguments)},n._Conv2DBackpropInput=function(){return(n._Conv2DBackpropInput=n.asm.Conv2DBackpropInput).apply(null,arguments)},n._Cos=function(){return(n._Cos=n.asm.Cos).apply(null,arguments)},n._CropAndResize=function(){return(n._CropAndResize=n.asm.CropAndResize).apply(null,arguments)},n._Cumsum=function(){return(n._Cumsum=n.asm.Cumsum).apply(null,arguments)},n._DepthToSpace=function(){return(n._DepthToSpace=n.asm.DepthToSpace).apply(null,arguments)},n._DepthwiseConv2dNative=function(){return(n._DepthwiseConv2dNative=n.asm.DepthwiseConv2dNative).apply(null,arguments)},n._Equal=function(){return(n._Equal=n.asm.Equal).apply(null,arguments)},n._Exp=function(){return(n._Exp=n.asm.Exp).apply(null,arguments)},n._FlipLeftRight=function(){return(n._FlipLeftRight=n.asm.FlipLeftRight).apply(null,arguments)},n._Floor=function(){return(n._Floor=n.asm.Floor).apply(null,arguments)},n._FloorDiv=function(){return(n._FloorDiv=n.asm.FloorDiv).apply(null,arguments)},n._FusedBatchNorm=function(){return(n._FusedBatchNorm=n.asm.FusedBatchNorm).apply(null,arguments)},n._FusedConv2D=function(){return(n._FusedConv2D=n.asm.FusedConv2D).apply(null,arguments)},n._FusedDepthwiseConv2D=function(){return(n._FusedDepthwiseConv2D=n.asm.FusedDepthwiseConv2D).apply(null,arguments)},n._Gather=function(){return(n._Gather=n.asm.Gather).apply(null,arguments)},n._GatherNd=function(){return(n._GatherNd=n.asm.GatherNd).apply(null,arguments)},n._Greater=function(){return(n._Greater=n.asm.Greater).apply(null,arguments)},n._GreaterEqual=function(){return(n._GreaterEqual=n.asm.GreaterEqual).apply(null,arguments)},n._LeakyRelu=function(){return(n._LeakyRelu=n.asm.LeakyRelu).apply(null,arguments)},n._Less=function(){return(n._Less=n.asm.Less).apply(null,arguments)},n._LessEqual=function(){return(n._LessEqual=n.asm.LessEqual).apply(null,arguments)},n._Log=function(){return(n._Log=n.asm.Log).apply(null,arguments)},n._LogicalAnd=function(){return(n._LogicalAnd=n.asm.LogicalAnd).apply(null,arguments)},n._Max=function(){return(n._Max=n.asm.Max).apply(null,arguments)},n._MaxPool=function(){return(n._MaxPool=n.asm.MaxPool).apply(null,arguments)},n._Maximum=function(){return(n._Maximum=n.asm.Maximum).apply(null,arguments)},n._Mean=function(){return(n._Mean=n.asm.Mean).apply(null,arguments)},n._Min=function(){return(n._Min=n.asm.Min).apply(null,arguments)},n._Minimum=function(){return(n._Minimum=n.asm.Minimum).apply(null,arguments)},n._Multiply=function(){return(n._Multiply=n.asm.Multiply).apply(null,arguments)},n._Neg=function(){return(n._Neg=n.asm.Neg).apply(null,arguments)},n._NonMaxSuppressionV3=function(){return(n._NonMaxSuppressionV3=n.asm.NonMaxSuppressionV3).apply(null,arguments)},n._NonMaxSuppressionV4=function(){return(n._NonMaxSuppressionV4=n.asm.NonMaxSuppressionV4).apply(null,arguments)},n._NonMaxSuppressionV5=function(){return(n._NonMaxSuppressionV5=n.asm.NonMaxSuppressionV5).apply(null,arguments)},n._NotEqual=function(){return(n._NotEqual=n.asm.NotEqual).apply(null,arguments)},n._OneHot=function(){return(n._OneHot=n.asm.OneHot).apply(null,arguments)},n._PadV2=function(){return(n._PadV2=n.asm.PadV2).apply(null,arguments)},n._Pow=function(){return(n._Pow=n.asm.Pow).apply(null,arguments)},n._Prelu=function(){return(n._Prelu=n.asm.Prelu).apply(null,arguments)},n._Prod=function(){return(n._Prod=n.asm.Prod).apply(null,arguments)},n._RealDiv=function(){return(n._RealDiv=n.asm.RealDiv).apply(null,arguments)},n._Relu=function(){return(n._Relu=n.asm.Relu).apply(null,arguments)},n._Relu6=function(){return(n._Relu6=n.asm.Relu6).apply(null,arguments)},n._ResizeBilinear=function(){return(n._ResizeBilinear=n.asm.ResizeBilinear).apply(null,arguments)},n._Reverse=function(){return(n._Reverse=n.asm.Reverse).apply(null,arguments)},n._RotateWithOffset=function(){return(n._RotateWithOffset=n.asm.RotateWithOffset).apply(null,arguments)},n._Round=function(){return(n._Round=n.asm.Round).apply(null,arguments)},n._Rsqrt=function(){return(n._Rsqrt=n.asm.Rsqrt).apply(null,arguments)},n._ScatterNd=function(){return(n._ScatterNd=n.asm.ScatterNd).apply(null,arguments)},n._SelectV2=function(){return(n._SelectV2=n.asm.SelectV2).apply(null,arguments)},n._Sigmoid=function(){return(n._Sigmoid=n.asm.Sigmoid).apply(null,arguments)},n._Sin=function(){return(n._Sin=n.asm.Sin).apply(null,arguments)},n._Softmax=function(){return(n._Softmax=n.asm.Softmax).apply(null,arguments)},n._Sqrt=function(){return(n._Sqrt=n.asm.Sqrt).apply(null,arguments)},n._Square=function(){return(n._Square=n.asm.Square).apply(null,arguments)},n._SquaredDifference=function(){return(n._SquaredDifference=n.asm.SquaredDifference).apply(null,arguments)},n._Step=function(){return(n._Step=n.asm.Step).apply(null,arguments)},n._StridedSlice=function(){return(n._StridedSlice=n.asm.StridedSlice).apply(null,arguments)},n._Sub=function(){return(n._Sub=n.asm.Sub).apply(null,arguments)},n._Sum=function(){return(n._Sum=n.asm.Sum).apply(null,arguments)},n._Tanh=function(){return(n._Tanh=n.asm.Tanh).apply(null,arguments)},n._Tile=function(){return(n._Tile=n.asm.Tile).apply(null,arguments)},n._TopK=function(){return(n._TopK=n.asm.TopK).apply(null,arguments)},n._Transpose=function(){return(n._Transpose=n.asm.Transpose).apply(null,arguments)},n.__FusedMatMul=function(){return(n.__FusedMatMul=n.asm._FusedMatMul).apply(null,arguments)},n._malloc=function(){return(n._malloc=n.asm.malloc).apply(null,arguments)},n._free=function(){return(n._free=n.asm.free).apply(null,arguments)},n.__start=function(){return(n.__start=n.asm._start).apply(null,arguments)};var Ne,Se=n.stackSave=function(){return(Se=n.stackSave=n.asm.stackSave).apply(null,arguments)},Ce=n.stackAlloc=function(){return(Ce=n.stackAlloc=n.asm.stackAlloc).apply(null,arguments)},_e=n.stackRestore=function(){return(_e=n.stackRestore=n.asm.stackRestore).apply(null,arguments)};function Te(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ee(e){var t=n.__start;try{t(),$e(0,!0)}catch(e){if(e instanceof Te)return;if("unwind"==e)return void(x=!0);var r=e;e&&"object"==typeof e&&e.stack&&(r=[e,e.stack]),w("exception thrown: "+r),o(1,e)}}function Ae(e){function t(){Ne||(Ne=!0,n.calledRun=!0,!I&&(H(),j(),n.onRuntimeInitialized&&n.onRuntimeInitialized(),Fe&&Ee(),K()))}e=e||i,Q>0||(G(),Q>0)||(n.setStatus?(n.setStatus("Running..."),setTimeout((function(){setTimeout((function(){n.setStatus("")}),1),t()}),1)):t())}function $e(e,t){t&&x&&0===e||(x||(I=!0,q(),n.onExit&&n.onExit(e)),o(e,new Te(e)))}if(n.asm=Ie,n.cwrap=_,n.then=function(e){if(Ne)e(n);else{var t=n.onRuntimeInitialized;n.onRuntimeInitialized=function(){t&&t(),e(n)}}return n},te=function e(){Ne||Ae(),Ne||(te=e)},n.run=Ae,n.preInit)for("function"==typeof n.preInit&&(n.preInit=[n.preInit]);n.preInit.length>0;)n.preInit.pop()();var Fe=!0;return n.noInitialRun&&(Fe=!1),x=!0,Ae(),e});"object"==typeof e&&"object"==typeof t?t.exports=s:"function"==typeof define&&a.amdO?define([],(function(){return s})):"object"==typeof e&&(e.WasmBackendModule=s)})),P=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},B=class{decComplexRef(e){}time(e){return W("time")}read(e){return W("read")}readSync(e){return W("readSync")}numDataIds(){return W("numDataIds")}disposeData(e){return W("disposeData")}write(e,t,n){return W("write")}move(e,t,n,r){return W("move")}memory(){return W("memory")}floatPrecision(){return W("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return W("dispose")}};function W(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function U(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function G(e,t,n){return Math.max(e,Math.min(t,n))}function H(e){return e%2==0?e:e+1}function j(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function q(e,t){let n=Math.random();return t*n+(1-n)*e}function K(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function X(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Y(e,t,n=""){X(te(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Z(e){X(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function J(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||ge(e)&&!n)for(let r=0;r<e.length;++r)J(e[r],t,n);else t.push(e);return t}function Q(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ee(e){return 0===e.length}function te(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ne(e){return e%1==0}function re(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ae(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function se(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return V(t),t}function ie(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function oe(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function le(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function ue(e,t){let n=t.length;return X((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),X(e.every((e=>ne(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function he(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ue(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function pe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function de(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ce(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function fe(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function me(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ge(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function ye(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function be(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function xe(e){return"string"==typeof e||e instanceof String}function ve(e){return"boolean"==typeof e}function we(e){return"number"==typeof e}function ke(e){return Array.isArray(e)?ke(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":we(e)?"float32":xe(e)?"string":ve(e)?"bool":"float32"}function Ie(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ne(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Se(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ce(e,t,n){let r=new Array;if(1===t.length){let a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{let a=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=Ce(e+t*i,s,n)}return r}function _e(e,t){if(0===e.length)return t[0];let n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return Ce(0,e,t)}function Te(e,t){let n=Ee(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Ee(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ae(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return _e(e,new Float32Array(n));if("int32"===t)return _e(e,new Int32Array(n));if("bool"===t)return _e(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function $e(e){e.forEach((t=>{X(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Fe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Re(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function De(e){return e&&e.then&&"function"==typeof e.then}var Me="tfjsflags",Oe=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform,this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(De(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=function(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);Me in e&&e[Me].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Le(){return Pe}var ze,Pe=null;function Be(){if(null==ze){let e;if("undefined"!=typeof window)e=window;else if(void 0!==a.g)e=a.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ze=e}return ze}function We(e,t){let n=function(){let e=Be();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Ve="Abs",Ue="Acos",Ge="Acosh",He="Add",je="AddN",qe="All",Ke="Any",Xe="ArgMax",Ye="ArgMin",Ze="Asin",Je="Asinh",Qe="Atan",et="Atanh",tt="Atan2",nt="AvgPool",rt="AvgPoolGrad",at="AvgPool3D",st="AvgPool3DGrad",it="BatchMatMul",ot="BatchToSpaceND",lt="Bincount",ut="BroadcastTo",ht="Cast",pt="Ceil",dt="ClipByValue",ct="Complex",ft="ComplexAbs",mt="Concat",gt="Conv2D",yt="Conv2DBackpropFilter",bt="Conv2DBackpropInput",xt="Conv3D",vt="Conv3DBackpropFilterV2",wt="Conv3DBackpropInputV2",kt="Cos",It="Cosh",Nt="Cumsum",St="CropAndResize",Ct="DenseBincount",_t="DepthToSpace",Tt="DepthwiseConv2dNative",Et="DepthwiseConv2dNativeBackpropFilter",At="DepthwiseConv2dNativeBackpropInput",$t="Diag",Ft="Dilation2D",Rt="Dilation2DBackpropInput",Dt="Dilation2DBackpropFilter",Mt="RealDiv",Ot="Elu",Lt="EluGrad",zt="Erf",Pt="Equal",Bt="Exp",Wt="ExpandDims",Vt="Expm1",Ut="FFT",Gt="Fill",Ht="FlipLeftRight",jt="Floor",qt="FloorDiv",Kt="FusedBatchNorm",Xt="GatherV2",Yt="GatherNd",Zt="Greater",Jt="GreaterEqual",Qt="Identity",en="IFFT",tn="Imag",nn="IsFinite",rn="IsInf",an="IsNan",sn="LeakyRelu",on="Less",ln="LessEqual",un="LinSpace",hn="Log",pn="Log1p",dn="LogicalAnd",cn="LogicalNot",fn="LogicalOr",mn="LogSoftmax",gn="LRN",yn="LRNGrad",bn="Max",xn="Maximum",vn="MaxPool",wn="MaxPoolGrad",kn="MaxPool3D",In="MaxPool3DGrad",Nn="MaxPoolWithArgmax",Sn="Mean",Cn="Min",_n="Minimum",Tn="MirrorPad",En="Mod",An="Multinomial",$n="Multiply",Fn="Neg",Rn="NotEqual",Dn="NonMaxSuppressionV3",Mn="NonMaxSuppressionV4",On="NonMaxSuppressionV5",Ln="OnesLike",zn="OneHot",Pn="Pack",Bn="PadV2",Wn="Pool",Vn="Pow",Un="Prelu",Gn="Prod",Hn="Range",jn="Real",qn="Reciprocal",Kn="Relu",Xn="Reshape",Yn="ResizeNearestNeighbor",Zn="ResizeNearestNeighborGrad",Jn="ResizeBilinear",Qn="ResizeBilinearGrad",er="Relu6",tr="Reverse",nr="Round",rr="Rsqrt",ar="ScatterNd",sr="Select",ir="Selu",or="Slice",lr="Sin",ur="Sinh",hr="Sign",pr="Sigmoid",dr="Softplus",cr="Sqrt",fr="Sum",mr="SpaceToBatchND",gr="SplitV",yr="Softmax",br="SquaredDifference",xr="Square",vr="Sub",wr="SparseToDense",kr="StridedSlice",Ir="Tan",Nr="Tanh",Sr="Tile",Cr="TopK",_r="Transpose",Tr="Unique",Er="Unpack",Ar="UnsortedSegmentSum",$r="ZerosLike",Fr="Step",Rr="FromPixels",Dr="RotateWithOffset",Mr="_FusedMatMul",Or="FusedConv2D",Lr="FusedDepthwiseConv2D",zr=We("kernelRegistry",(()=>new Map)),Pr=We("gradRegistry",(()=>new Map));function Br(e,t){let n=Kr(e,t);return zr.get(n)}function Wr(e){return Pr.get(e)}function Vr(e){let t=zr.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Ur(e){let{kernelName:t,backendName:n}=e,r=Kr(t,n);zr.has(r),zr.set(r,e)}function Gr(e){let{kernelName:t}=e;Pr.has(t)&&Le().getBool("DEBUG"),Pr.set(t,e)}function Hr(e,t){let n=Kr(e,t);if(!zr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);zr.delete(n)}function jr(e){if(!Pr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Pr.delete(e)}function qr(e,t){Vr(e).forEach((e=>{Ur(Object.assign({},e,{backendName:t}))}))}function Kr(e,t){return`${t}_${e}`}var Xr={};function Yr(e,t){return"string"===t?ea(e):Zr([e],t)}function Zr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=J(e)),Le().getBool("DEBUG")&&ce(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Jr(){return Le().platform.now()}function Qr(e,t){return Le().platform.fetch(e,t)}function ea(e,t="utf-8"){return t=t||"utf-8",Le().platform.encode(e,t)}function ta(e,t="utf-8"){return t=t||"utf-8",Le().platform.decode(e,t)}w(Xr,{arraysEqual:()=>te,assert:()=>X,assertNonNegativeIntegerDimensions:()=>$e,assertNonNull:()=>Z,assertShapesMatch:()=>Y,bytesFromStringArray:()=>be,bytesPerElement:()=>ye,checkConversionForErrors:()=>ce,clamp:()=>G,computeStrides:()=>Se,createScalarValue:()=>Yr,createShuffledIndices:()=>se,decodeString:()=>ta,distSquared:()=>K,encodeString:()=>ea,fetch:()=>Qr,flatten:()=>J,getArrayFromDType:()=>de,getTypedArrayFromDType:()=>pe,hasEncodingLoss:()=>me,indexToLoc:()=>Re,inferDtype:()=>ke,inferFromImplicitShape:()=>le,isBoolean:()=>ve,isFunction:()=>Ie,isInt:()=>ne,isNumber:()=>we,isPromise:()=>De,isScalarShape:()=>ee,isString:()=>xe,isTypedArray:()=>ge,isValidDtype:()=>fe,locToIndex:()=>Fe,makeOnesTypedArray:()=>Te,makeZerosNestedTypedArray:()=>Ae,makeZerosTypedArray:()=>Ee,nearestDivisor:()=>Ne,nearestLargerEven:()=>H,now:()=>Jr,parseAxisParam:()=>ue,randUniform:()=>q,repeatedTry:()=>oe,rightPad:()=>ie,shuffle:()=>V,shuffleCombo:()=>U,sizeFromShape:()=>Q,sizeToSquarishShape:()=>ae,squeezeShape:()=>he,sum:()=>j,tanh:()=>re,toNestedArray:()=>_e,toTypedArray:()=>Zr});function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return!0}return!1}var ra=class{logKernelProfile(e,t,n,r,a,s){"number"==typeof r?ie(`${r}ms`,9):r.error,ie(e,25),t.rank,t.size,ie(t.shape.toString(),14);let i="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;i+=`${e}: ${a}D ${a>0?r:""} `}}}};function aa(e,t,n,r){let a=Se(t),s=function(e,t,n,r){let a=Q(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?la(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],sa(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=oa(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function sa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:xe(e)?`'${e}'`:"bool"===n?ia(e):parseFloat(e.toFixed(7)).toString(),ie(r,t)}function ia(e){return 0===e?"false":"true"}function oa(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[sa(la(e)[0],0,n)]}return"bool"===n?[ia(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=la(r),s=la(s)),["["+r.map(((e,t)=>sa(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>sa(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?la(e):Array.from(e)).map(((e,t)=>sa(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),h=r.slice(1),p=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){let r=t*p,s=r+p;d.push(...oa(e.slice(r,s),u,n,h,a,!1))}d.push("...");for(let t=o-3;t<o;t++){let r=t*p,s=r+p;d.push(...oa(e.slice(r,s),u,n,h,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*p,s=r+p;d.push(...oa(e.slice(r,s),u,n,h,a,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function la(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ua=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Q(e),null!=n){let e=n.length;X(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||de(t,this.size),this.strides=Se(e)}set(e,...t){0===t.length&&(t=[0]),X(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ha().makeTensor(this.values,this.shape,this.dtype)}},ha=null,pa=null;var da=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Q(e),this.strides=Se(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return pa.buffer(this.shape,this.dtype,e)}bufferSync(){return pa.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return _e(this.shape,e)}arraySync(){return _e(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=ha().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>ta(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=ha().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ta(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ha().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ha().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return pa.print(this,e)}clone(){return this.throwIfDisposed(),pa.clone(this)}toString(e=!1){return aa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),pa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ha().makeVariable(this,e,t,n)}};function ca(){return We("Tensor",(()=>da))}Object.defineProperty(da,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ca();var fa=class extends da{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!te(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ha().disposeTensor(this),this.dataId=e.dataId,ha().incRef(this,null)}dispose(){ha().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(fa,Symbol.hasInstance,{value:e=>e instanceof da&&null!=e.assign&&e.assign instanceof Function});var ma,ga,ya,ba,xa,va={};w(va,{assertTypesMatch:()=>Sa,getTensorsInContainer:()=>_a,isTensorInList:()=>Ca,makeTypesMatch:()=>Na}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ma||(ma={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ga||(ga={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ya||(ya={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ba||(ba={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(xa||(xa={}));var wa={float32:ba,int32:ga,bool:ya,complex64:xa};function ka(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return wa[e][t]}function Ia(e){return ka(e,"int32")}function Na(e,t){if(e.dtype===t.dtype)return[e,t];let n=ka(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Sa(e,t){X(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Ca(e,t){return t.some((t=>t.id===e.id))}function _a(e){let t=[];return Ta(e,t,new Set),t}function Ta(e,t,n){if(null==e)return;if(e instanceof da)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),Ta(a,t,n))}}function Ea(e){return null!=e.kernelName}var Aa=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},$a=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Aa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return!(e in this.registryFactory)&&(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r,a=this.backendTimer.time((()=>{r=n()}));if(Le().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){let t=r[e];t.data().then((e=>{na(e,t.dtype)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){Vr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Vr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof B||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((e=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return $a.nextTensorId++}nextVariableId(){return $a.nextVariableId++}clone(e){let t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e},n={dtype:"float32"};return Ra.runKernel(ht,t,n)}})),[],{}),t}runKernel(e,t,n){if(null==Br(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Ea(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ea(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=Br(t,this.backendName);X(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:h,attrs:p}=e,d=Ea(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,h,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,h,t,d,r,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=Wr(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(X(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&xe(e[0])&&(a=e.map((e=>ea(e))));let s=r.write(a,t,n),i=new da(t,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=be(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new da(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new fa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){let n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ye(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof fa||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;let t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Wr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Ee(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=_a(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(X(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));X(a instanceof da,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Te(Q(e),"float32");return Ra.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!te(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Da);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return X(Ie(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{X(t.every((e=>e instanceof da)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),X(n.value instanceof da,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),X(Ie(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];X(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),X(s.every((e=>e instanceof da)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Jr(),n=await this.backend.time(e);return n.wallMs=Jr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Aa;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Fa(){let e=Be();if(null==e._tfengine){let t=new Oe(e);e._tfengine=new $a(t)}return function(e){Pe=e}(e._tfengine.ENV),function(e){ha=e}((()=>e._tfengine)),e._tfengine}$a.nextTensorId=0,$a.nextVariableId=0;var Ra=Fa();function Da(e,t){let n={a:e,b:t};return Ra.runKernel(He,n)}var Ma={};function Oa(){if("undefined"!=typeof navigator&&null!=navigator){let e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function La(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}w(Ma,{isBrowser:()=>La,isMobile:()=>Oa});var za=Le();function Pa(e,t){let n=e;if(ge(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||ge(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ba(e,r,[]),r}function Ba(e,t,n){if(n=n||[],!Array.isArray(e)&&!ge(e))return void X(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));X(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),X(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)Ba(e[t],r,n.concat(t))}function Wa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Va(e,t,n,r="numeric"){if(e instanceof da)return Wa(r,e.dtype,t,n),e;let a=ke(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Wa(r,a,t,n),null==e||!ge(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=Pa(e,a);!ge(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Zr(e,a):J(e,[],!0);return Ra.makeTensor(i,s,a)}function Ua(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Va(e,`${t}[${a}]`,n,r)))}za.registerFlag("DEBUG",(()=>!1),(e=>{})),za.registerFlag("IS_BROWSER",(()=>La())),za.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),za.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),za.registerFlag("PROD",(()=>!1)),za.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>za.getBool("DEBUG"))),za.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),za.registerFlag("IS_TEST",(()=>!1)),za.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));var Ga="__op";function Ha(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ga;let a=(...e)=>{Ra.startScope(n);try{let t=r(...e);return De(t),Ra.endScope(t),t}catch(e){throw Ra.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var ja=Ha({complex_:function(e,t){let n=Va(e,"real","complex"),r=Va(t,"imag","complex");Y(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Ra.runKernel(ct,a)}});function qa(e,t,n,r){if(null==r&&(r=ke(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!ge(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){$e(t);let e=Q(t),r=Q(n);X(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Q(t.slice(e));X(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!ge(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Zr(e,r):J(e,[],!0),Ra.makeTensor(e,t,r)}function Ka(e,t,n){return qa(e,t,Pa(e,n),n)}var Xa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ya(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ja(await Promise.all(r)),specs:n}}function Za(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=Q(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Xa[r.dtype],h=e.slice(a,a+u*l),p="uint8"===r.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=as()),t=n(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(p.length);for(let e=0;e<p.length;e++){let n=p[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=Q(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=Xa[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Ka(e,l,"float32"),o=Ka(n,l,"float32");r[i]=ja(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Ka(t,l,o))}return r}function Ja(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Qa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function es(e){return Qa?Buffer.byteLength(e):new Blob([e]).size}function ts(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function ns(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function rs(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:es(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:es(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function as(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var ss=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ss.instance&&(ss.instance=new ss),ss.instance}static registerSaveRouter(e){ss.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ss.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ss.getHandlers(e,"save")}static getLoadHandlers(e,t){return ss.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?ss.getInstance().loadRouters:ss.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},is=e=>ss.registerSaveRouter(e),os=e=>ss.registerLoadRouter(e),ls=e=>ss.getSaveHandlers(e),us=(e,t)=>ss.getLoadHandlers(e,t),hs="tensorflowjs",ps="models_store",ds="model_info_store";function cs(){if(!Le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fs(e){let t=e.result;t.createObjectStore(ps,{keyPath:"modelPath"}),t.createObjectStore(ds,{keyPath:"modelPath"})}var ms=class{constructor(e){if(this.indexedDB=cs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(hs,1);r.onupgradeneeded=()=>fs(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(ps,"readonly"),r=t.objectStore(ps).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=rs(t),i=a.transaction(ds,"readwrite"),o=i.objectStore(ds),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(ps,"readwrite");let l=r.objectStore(ps).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(ds);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};ms.URL_SCHEME="indexeddb://";var gs=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ms.URL_SCHEME)?function(e){return new ms(e)}(e.slice(ms.URL_SCHEME.length)):null;ss.registerSaveRouter(gs),ss.registerLoadRouter(gs);var ys="/",bs="tensorflowjs_models",xs="info",vs="model_topology",ws="weight_specs",ks="weight_data",Is="model_metadata";function Ns(e){return{info:[bs,e,xs].join(ys),topology:[bs,e,vs].join(ys),weightSpecs:[bs,e,ws].join(ys),weightData:[bs,e,ks].join(ys),modelMetadata:[bs,e,Is].join(ys)}}function Ss(e){let t=e.split(ys);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ys)}var Cs=class{constructor(e){if(!Le().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ns(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=rs(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Qa)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Qa){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};Cs.URL_SCHEME="localstorage://";var _s=e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Cs.URL_SCHEME)?function(e){return new Cs(e)}(e.slice(Cs.URL_SCHEME.length)):null;ss.registerSaveRouter(_s),ss.registerLoadRouter(_s);var Ts="://",Es=class{constructor(){this.managers={}}static getInstance(){return null==Es.instance&&(Es.instance=new Es),Es.instance}static registerManager(e,t){X(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ts)&&(e=e.slice(0,e.indexOf(Ts))),X(e.length>0,(()=>"scheme must not be an empty string."));let n=Es.getInstance();X(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function As(e){if(-1===e.indexOf(Ts))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Es.getSchemes().join(",")}`);return{scheme:e.split(Ts)[0],path:e.split(Ts)[1]}}async function $s(e,t,n=!1){X(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=ss.getLoadHandlers(e);X(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),X(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=ss.getSaveHandlers(t);X(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),X(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=As(e).scheme,l=As(e).path,u=o===As(e).scheme,h=await a.load();n&&u&&await Es.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await Es.getManager(o).removeModel(l),p.modelArtifactsInfo}async function Fs(){let e=Es.getSchemes(),t={};for(let n of e){let e=await Es.getManager(n).listModels();for(let r in e){t[n+Ts+r]=e[r]}}return t}async function Rs(e){let t=As(e);return Es.getManager(t.scheme).removeModel(t.path)}async function Ds(e,t){return $s(e,t,!1)}async function Ms(e,t){return $s(e,t,!0)}if(Le().get("IS_BROWSER")){Le().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{Es.registerManager(Cs.URL_SCHEME,new class{constructor(){X(Le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),X("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=bs+ys,n=ys+xs;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Ss(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=Ns(e=function(e){return e.startsWith(Cs.URL_SCHEME)?e.slice(Cs.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}})}catch(e){}try{Es.registerManager(ms.URL_SCHEME,new class{constructor(){this.indexedDB=cs()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(hs,1);n.onupgradeneeded=()=>fs(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(ds,"readonly"),s=a.objectStore(ds).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(ms.URL_SCHEME)?e.slice(ms.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(hs,1);r.onupgradeneeded=()=>fs(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(ds,"readwrite"),o=i.objectStore(ds),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(ps,"readwrite");let r=a.objectStore(ps).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(e){}}var Os,Ls=()=>I();function zs(e,t="float32",n){return t=t||"float32",$e(e),new ua(e,t,n)}Le().get("IS_NODE")&&Le().setPlatform("node",new class{constructor(){this.util=a(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Le().global.fetch?Le().global.fetch(e,t):(null==Os&&(Os=Ls()),Os(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Ps=Ha({cast_:function(e,t){let n=Va(e,"x","cast");if(!fe(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Ra.runKernel(ht,r,a)}});var Bs=Ha({clone_:function(e){let t={x:Va(e,"x","clone","string_or_numeric")};return Ra.runKernel(Qt,t)}});function Ws(e,t=!1){}Fa(),function(e){pa=e}({buffer:zs,cast:Ps,clone:Bs,print:Ws});var Vs={};w(Vs,{browserFiles:()=>Hs,browserHTTPRequest:()=>ei,concatenateArrayBuffers:()=>ts,copyModel:()=>Ds,decodeWeights:()=>Za,encodeWeights:()=>Ya,fromMemory:()=>ni,getLoadHandlers:()=>us,getModelArtifactsInfoForJSON:()=>rs,getSaveHandlers:()=>ls,http:()=>Qs,isHTTPScheme:()=>Zs,listModels:()=>Fs,loadWeights:()=>Ks,moveModel:()=>Ms,registerLoadRouter:()=>os,registerSaveRouter:()=>is,removeModel:()=>Rs,weightsLoaderFactory:()=>Xs,withSaveHandler:()=>ri});function Us(e){return new Promise((e=>setTimeout(e))).then(e)}var Gs=class{constructor(e){if(!Le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Gs.URL_SCHEME)&&(e=e.slice(Gs.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);let a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Us((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Us((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:rs(e)}}}};Gs.URL_SCHEME="downloads://";function Hs(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{let a=new FileReader;a.onload=a=>{let s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});let o,l=s.weightsManifest;if(null==l)return void r(new Error(`weightManifest field is missing from file ${e.name}`));try{o=this.checkManifestAndWeightFiles(l,t)}catch(e){return void r(e)}let u=[],h=[],p=[];l.forEach((e=>{e.paths.forEach((e=>{h.push(e),p.push(null)})),u.push(...e.weights)})),l.forEach((e=>{e.paths.forEach((e=>{let t=new FileReader;t.onload=t=>{let r=t.target.result,a=h.indexOf(e);if(p[a]=r,-1===p.indexOf(null)){let e={modelTopology:i,weightSpecs:u,weightData:ts(p),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(o[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){let n=[],r=t.map((e=>ns(e.name))),a={};for(let s of e)s.paths.forEach((e=>{let s=ns(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}(e)}function js(e,t,n,r){var a;X(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){X(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),X(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),X(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function qs(e,t){null==t&&(t={});let n=null==t.fetchFunc?Le().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await js(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await js(a,t.onProgress,.5,1)}async function Ks(e,t="",n,r){return Xs((e=>qs(e,{requestInit:r})))(e,t,n)}function Xs(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Xa[l]*Q(e.shape),h=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(h(),i[n]=!0)})):h(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let h=await e(u),p={},d=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=h[d+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(h[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Za(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]})),d+=n})),p}}ss.registerSaveRouter((e=>Le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gs.URL_SCHEME)?function(e="model"){return new Gs(e)}(e.slice(Gs.URL_SCHEME.length)):null));var Ys=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(X("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Le().platform.fetch,X(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&X(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:rs(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n,r,a=e.modelTopology,s=e.weightsManifest,i=e.generatedBy,o=e.convertedBy,l=e.format,u=e.signature,h=e.userDefinedMetadata;if(null==a&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);null!=s&&([n,r]=await this.loadWeights(s));let p={modelTopology:a,weightSpecs:n,weightData:r,generatedBy:i,convertedBy:o,format:l};null!=u&&(p.signature=u),null!=h&&(p.userDefinedMetadata=h);let d=e.modelInitializer;return d&&(p.modelInitializer=d),p}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,ts(await qs(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Zs(e){return null!=e.match(Ys.URL_SCHEME_REGEX)}Ys.URL_SCHEME_REGEX=/^https?:\/\//;var Js=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Zs(e))):Zs(e),n)return Qs(e,t)}return null};function Qs(e,t){return new Ys(e,t)}function ei(e,t){return Qs(e,t)}ss.registerSaveRouter(Js),ss.registerLoadRouter(Js);var ti=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function ni(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ti(e):new ti({modelTopology:e}):new ti({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function ri(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var ai={};w(ai,{confusionMatrix:()=>ui});var si=Ha({matMul_:function(e,t,n=!1,r=!1){let a=Va(e,"a","matMul"),s=Va(t,"b","matMul");[a,s]=Na(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return Ra.runKernel(it,i,o)}});var ii=Ha({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Va(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Ra.runKernel(zn,a,s)}});var oi=Ha({transpose_:function(e,t){let n=Va(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),X(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{X(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return Ra.runKernel(_r,r,a)}});var li,ui=Ha({confusionMatrix_:function(e,t,n){let r=Va(e,"labels","confusionMatrix"),a=Va(t,"predictions","confusionMatrix");X(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),X(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),X(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),X(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),X(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=ii(Ps(r,"int32"),n),i=ii(Ps(a,"int32"),n),o=oi(s),l=si(o,i);return Ps(l,"int32")}}),hi={};function pi(e,t,n){if(Z(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=Pa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return qa(e,t,r,n)}async function di(e,t){let n=Va(e,"img","toPixels");if(!(e instanceof da)){let e=n;n=Ps(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}w(hi,{fromPixels:()=>ci,toPixels:()=>di});var ci=Ha({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){let t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Br(Rr,Ra.backendName)){let n={pixels:e},r={numChannels:t};return Ra.runKernel(Rr,n,r)}let l,u,[h,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i?l=e.getContext("2d").getImageData(0,0,h,p).data:r||n?l=e.data:(s||a||o)&&(null==li&&(li=document.createElement("canvas").getContext("2d")),li.canvas.width=h,li.canvas.height=p,li.drawImage(e,0,0,h,p),l=li.getImageData(0,0,h,p).data),4===t)u=new Int32Array(l);else{let e=h*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return pi(u,[p,h,t],"int32")}}),fi={};function mi(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Q(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...Se(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,h]}w(fi,{prepareAndValidate:()=>mi});var gi={};function yi(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function bi(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}yi(n,t,e)}function xi(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:Q(t.shape)/o,sliceSize:i,strides:[...Se(n.slice(0,a)),1],outputSize:Q(n)}}w(gi,{calculateShapes:()=>xi,validateInput:()=>bi,validateUpdateShape:()=>yi});var vi={};function wi(e,t,n){let r=e.shape.length;X(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),X(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)X(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ki(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ii(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ni(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Si(e,t,n){return n<=e?n:n-(t-1)}function Ci(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function _i(e,t,n,r,a,s,i,o,l){let u=e.length,h=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=Ti(i,l,u,r,e),p=Ei(o,l,u,a,e),d=Ni(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=$i(i,r,s,e,t,l),p[t]=Fi(o,a,s,e,t,l),d[t]=Ai(s,t,l);return{begin:h,end:p,strides:d}}function Ti(e,t,n,r,a){let s=[...a],i=Ci(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Si(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Ei(e,t,n,r,a){let s=[...a],i=Ci(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Si(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=G(0,s[e],a[e])}return s}function Ai(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function $i(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=G(0,i,l-1),i}function Fi(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?G(0,i,l):G(-1,i,l-1),i}function Ri(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Di(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Mi(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{X(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(X(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Oi(e,t,n,r,a,s,i,o,l){let u=t.slice(),h=n.slice(),p=r;null==r&&(p=new Array(u.length));let d=ki(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let c=e.length-u.length,f=ki(o),m=e.slice();f.forEach((e=>{u[e]=0,h[e]=1,m.splice(e,0,1)}));let{begin:g,end:y,strides:b}=_i(m,d,c,u,h,p,a,s,i);u=g,h=y,p=b;let x=ki(l);x.forEach((e=>{h[e]=u[e]+1,p[e]=1}));let v=Ii(u,h,p),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:p.every((e=>1===e)),$begin:u,$end:h,$strides:p,size:v,newShape:m,outShape:w}}w(vi,{assertParamsValid:()=>wi,computeFlatOffset:()=>Di,computeOutShape:()=>Ii,getNormalizedAxes:()=>_i,isSliceContinous:()=>Ri,maskToAxes:()=>ki,parseSliceParams:()=>Mi,sliceInfo:()=>Oi,startForAxis:()=>$i,startIndicesWithElidedDims:()=>Ti,stopForAxis:()=>Fi,stopIndicesWithElidedDims:()=>Ei,stridesForAxis:()=>Ai,stridesWithElidedDims:()=>Ni});var Li={};w(Li,{Serializable:()=>zi,SerializationMap:()=>Pi,registerClass:()=>Bi});var zi=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Pi=class{constructor(){this.classNameMap={}}static getMap(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static register(e){Pi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Bi(e){X(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),X("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),X(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Pi.register(e)}var Wi={};w(Wi,{TEST_EPSILON_FLOAT16:()=>Vi,encodeStrings:()=>Ji,expectArrayBuffersEqual:()=>Zi,expectArraysClose:()=>Ui,expectArraysEqual:()=>qi,expectNumbersClose:()=>Ki,expectPromiseToFail:()=>ji,expectValuesInRange:()=>Yi,testEpsilon:()=>Gi});var Vi=.1;function Ui(e,t,n){return null==n&&(n=Gi()),Hi(e,t,((e,t)=>Xi(e,t,n)))}function Gi(){return 32===Ra.backend.floatPrecision()?.001:Vi}function Hi(e,t,n){let r=!0;if((ge(e)||ge(t))&&(r=!1),ge(e)&&ge(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Pa(e),r=Pa(t);if(!te(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=ge(e)?e:J(e),s=ge(t)?t:J(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ji(e,t){e().then((()=>t.fail()),(()=>t()))}function qi(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return xe(e)||xe(e[0])||xe(t)||xe(t[0])?Hi(e,n,((e,t)=>e==t)):Hi(e,t,((e,t)=>Xi(e,t,0)))}function Ki(e,t,n){if(null==n&&(n=Gi()),!Xi(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Xi(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Yi(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Zi(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Ji(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Ji(n):e[t]=ea(n)}return e}var Qi="3.0.0";function eo(){Le().set("PROD",!0)}function to(){Le().set("DEBUG",!0)}function no(){Le().set("DEPRECATION_WARNINGS_ENABLED",!1)}function ro(e){Le().getBool("DEPRECATION_WARNINGS_ENABLED")}function ao(){Ra.disposeVariables()}function so(){return Ra}function io(){return Ra.memory()}function oo(e){return Ra.profile(e)}function lo(e,t){return Ra.tidy(e,t)}function uo(e){_a(e).forEach((e=>e.dispose()))}function ho(e){return Ra.keep(e)}function po(e){return Ra.time(e)}function co(e){return Ra.setBackend(e)}function fo(){return Ra.ready()}function mo(){return Ra.backendName}function go(e){Ra.removeBackend(e)}function yo(e){return Ra.findBackend(e)}function bo(e){return Ra.findBackendFactory(e)}function xo(e,t,n=1){return Ra.registerBackend(e,t,n)}function vo(){return Ra.backend}function wo(e,t){Le().setPlatform(e,t)}!function(e){e}(ro);var ko=Ha({add_:function(e,t){let n=Va(e,"a","add"),r=Va(t,"b","add");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(He,a)}});var Io=Ha({floorDiv_:function(e,t){let n=Va(e,"a","floorDiv"),r=Va(t,"b","floorDiv");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(qt,a)}});var No=Ha({div_:function(e,t){let n=Va(e,"a","div"),r=Va(t,"b","div");if([n,r]=Na(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Io(n,r);let a={a:n,b:r};return Ra.runKernel(Mt,a,{})}});var So=Ha({mul_:function(e,t){let n=Va(e,"a","mul"),r=Va(t,"b","mul");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel($n,a)}});var Co=Ha({abs_:function(e){let t=Va(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ra.runKernel(ft,e)}{let e={x:t};return Ra.runKernel(Ve,e)}}});var _o=Ha({acos_:function(e){let t={x:Va(e,"x","acos")};return Ra.runKernel(Ue,t)}});var To=Ha({acosh_:function(e){let t={x:Va(e,"x","acosh")};return Ra.runKernel(Ge,t)}});var Eo=Ha({addN_:function(e){X(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),X(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Va(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!te(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Ra.runKernel(je,r)}});var Ao=Ha({all_:function(e,t=null,n=!1){let r={x:Va(e,"x","all","bool")},a={axis:t,keepDims:n};return Ra.runKernel(qe,r,a)}});var $o=Ha({any_:function(e,t=null,n=!1){let r={x:Va(e,"x","any","bool")},a={axis:t,keepDims:n};return Ra.runKernel(Ke,r,a)}});var Fo=Ha({argMax_:function(e,t=0){let n={x:Va(e,"x","argMax")},r={axis:t};return Ra.runKernel(Xe,n,r)}});var Ro=Ha({argMin_:function(e,t=0){let n={x:Va(e,"x","argMin")},r={axis:t};return Ra.runKernel(Ye,n,r)}});var Do=Ha({asin_:function(e){let t={x:Va(e,"x","asin")};return Ra.runKernel(Ze,t)}});var Mo=Ha({asinh_:function(e){let t={x:Va(e,"x","asinh")};return Ra.runKernel(Je,t)}});var Oo=Ha({atan_:function(e){let t={x:Va(e,"x","atan")};return Ra.runKernel(Qe,t)}});var Lo=Ha({atan2_:function(e,t){let n=Va(e,"a","atan2"),r=Va(t,"b","atan2");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(tt,a)}});var zo=Ha({atanh_:function(e){let t={x:Va(e,"x","atanh")};return Ra.runKernel(et,t)}});function Po(e,t,n,r,a="NHWC",s){return Vo(e,[...t,e[3]],n,s,r,null,null,Zo(a))}function Bo(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Ho(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Vo(e,o,n,r,a,s,!1,i)}function Wo(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=jo(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,h,p,e[1],e[1]]}return Uo(e,o,n,r,a,!1,l,s)}function Vo(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,h]=e}let d,[c,f,,m]=t,[g,y]=Ho(n),[b,x]=Ho(r),v=qo(c,b),w=qo(f,x),{padInfo:k,outHeight:I,outWidth:N}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Go(e,t,n));let s=e[0],i=e[1],o=Ko((s-t+2*r)/n+1,a),l=Ko((i-t+2*r)/n+1,a);return[o,l]}([t,n],s,r,e,o);h=a[0],p=a[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/a);let e=Math.max(0,(h-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=Ko((t-s+d+c)/r+1,o),p=Ko((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:h,outWidth:p}}(a,u,h,g,y,v,w,s,o),S=i?m*p:m;return"channelsFirst"===o?d=[l,S,I,N]:"channelsLast"===o&&(d=[l,I,N,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:p,outHeight:I,outWidth:N,outChannels:S,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function Uo(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,p,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,h,p]=e}let c,[f,m,g,,y]=t,[b,x,v]=jo(n),[w,k,I]=jo(r),N=qo(f,w),S=qo(m,k),C=qo(g,I),{padInfo:_,outDepth:T,outHeight:E,outWidth:A}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Go(e,t,r));let i=e[0],o=e[1],l=e[2],u=Ko((i-t+2*a)/r+1,s),h=Ko((o-t+2*a)/r+1,s),p=Ko((l-t+2*a)/r+1,s);return[u,h,p,n]}([t,n,r,1],o,1,a,e,h);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(d-1)*a+o-t,h=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(h/2),x=h-b,v=Math.floor(m/2);p={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,u,h,p,b,x,v,N,S,C,o),$=s?y*d:y;return"channelsFirst"===i?c=[l,$,T,E,A]:"channelsLast"===i&&(c=[l,T,E,A,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:p,inChannels:d,outDepth:T,outHeight:E,outWidth:A,outChannels:$,padInfo:_,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function Go(e,t,n,r=1){let a=qo(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ho(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function jo(e){return"number"==typeof e?[e,e,e]:e}function qo(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ko(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Xo(e){let[t,n,r]=Ho(e);return 1===t&&1===n&&1===r}function Yo(e,t){return Xo(e)||Xo(t)}function Zo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}var Jo=Ha({reshape_:function(e,t){let n={x:Va(e,"x","reshape","string_or_numeric")},r={shape:t};return Ra.runKernel(Xn,n,r)}});var Qo=Ha({avgPool_:function(e,t,n,r,a){let s=Va(e,"x","avgPool","float32");X(Yo(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),X(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&X(ne(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Ra.runKernel(nt,l,u);return h=Ps(h,s.dtype),o?Jo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var el=Ha({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=Va(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),X(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),X("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&X(ne(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Ra.runKernel(at,u,h);return p=Ps(p,o.dtype),l?Jo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var tl=Ha({concat_:function(e,t=0){X(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Ua(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Bs(n[0]);let r=n,a={axis:t};return Ra.runKernel(mt,r,a)}});var nl=Ha({sigmoid_:function(e){let t={x:Va(e,"x","sigmoid")};return Ra.runKernel(pr,t)}});var rl=Ha({slice_:function(e,t,n){let r=Va(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Ra.runKernel(or,a,s)}});var al=Ha({tanh_:function(e){let t={x:Va(e,"x","tanh")};return Ra.runKernel(Nr,t)}});var sl=Ha({basicLSTMCell_:function(e,t,n,r,a,s){let i=Va(e,"forgetBias","basicLSTMCell"),o=Va(t,"lstmKernel","basicLSTMCell"),l=Va(n,"lstmBias","basicLSTMCell"),u=Va(r,"data","basicLSTMCell"),h=Va(a,"c","basicLSTMCell"),p=Va(s,"h","basicLSTMCell"),d=tl([u,p],1),c=si(d,o),f=ko(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=rl(f,[0,0],y),x=rl(f,[0,g],y),v=rl(f,[0,2*g],y),w=rl(f,[0,3*g],y),k=ko(So(nl(b),al(x)),So(h,nl(ko(i,v))));return[k,So(al(k),nl(w))]}});var il=Ha({batchToSpaceND_:function(e,t,n){let r=Va(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));X(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),X(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),X(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Ra.runKernel(ot,s,i)}});function ol(e){let t;return t=0===e.rank||1===e.rank?Jo(e,[1,1,1,e.size]):2===e.rank?Jo(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var ll=Ha({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Va(e,"x","batchNorm"),u=Va(t,"mean","batchNorm"),h=Va(n,"variance","batchNorm");null!=a&&(i=Va(a,"scale","batchNorm")),null!=r&&(o=Va(r,"offset","batchNorm")),X(u.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),X(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),X(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let p={x:ol(l),scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s},c=Ra.runKernel(Kt,p,d);return Jo(c,l.shape)}});var ul=Ha({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Va(e,"x","batchNorm"),u=Va(t,"mean","batchNorm"),h=Va(n,"variance","batchNorm");return null!=a&&(i=Va(a,"scale","batchNorm")),null!=r&&(o=Va(r,"offset","batchNorm")),X(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),X(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),X(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=i&&X(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&X(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),ll(l,u,h,o,i,s)}});var hl=Ha({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Va(e,"x","batchNorm"),u=Va(t,"mean","batchNorm"),h=Va(n,"variance","batchNorm");return null!=a&&(i=Va(a,"scale","batchNorm")),null!=r&&(o=Va(r,"offset","batchNorm")),X(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),X(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),X(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=i&&X(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&X(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),ll(l,u,h,o,i,s)}});var pl=Ha({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Va(e,"x","batchNorm"),u=Va(t,"mean","batchNorm"),h=Va(n,"variance","batchNorm");return null!=a&&(i=Va(a,"scale","batchNorm")),null!=r&&(o=Va(r,"offset","batchNorm")),X(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),X(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),X(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=i&&X(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&X(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),ll(l,u,h,o,i,s)}});var dl=Ha({bincount_:function(e,t,n){let r=Va(e,"x","bincount"),a=Va(t,"weights","bincount");X("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),X(n>=0,(()=>`size must be non-negative, but got ${n}.`)),X(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Ra.runKernel(lt,s,i)}});var cl=Ha({broadcastTo_:function(e,t){let n=Va(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Jo(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Bs(n);let i={x:n},o={reps:s};return Ra.runKernel(Sr,i,o)}});var fl=Ha({ceil_:function(e){let t={x:Va(e,"x","ceil")};return Ra.runKernel(pt,t)}});var ml=Ha({clipByValue_:function(e,t,n){let r=Va(e,"x","clipByValue");X(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return Ra.runKernel(dt,a,s)}});var gl=Ha({concat1d_:function(e){return tl(e,0)}});var yl=Ha({concat2d_:function(e,t){return tl(e,t)}});var bl=Ha({concat3d_:function(e,t){return tl(e,t)}});var xl=Ha({concat4d_:function(e,t){return tl(e,t)}});var vl=Ha({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Va(e,"x","conv2d"),l=Va(t,"filter","conv2d"),u=o,h=!1;3===o.rank&&(h=!0,u=Jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),X(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),X(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&X(ne(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));let p="NHWC"===a?u.shape[3]:u.shape[1];X(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),X(Yo(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ra.runKernel(gt,d,c);return h?Jo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var wl=Ha({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=Va(e,"x","conv1d"),l=Va(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=Jo(o,[1,o.shape[0],o.shape[1]])),X(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),X(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&X(ne(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),X(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),X(Yo(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),X("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let p=Jo(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Jo(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=vl(d,p,[1,n],r,"NHWC",[1,s],i);return Jo(c,h?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var kl=Ha({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){X(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),X(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),X(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),X(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];X(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),X(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&X(ne(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ra.runKernel(bt,d,c);return u?Jo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Il=Ha({conv2dTranspose_:function(e,t,n,r,a,s){let i=Va(e,"x","conv2dTranspose"),o=Va(t,"filter","conv2dTranspose");return kl(n,i,o,r,a,"NHWC",s)}});var Nl=Ha({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=Va(e,"x","conv3d"),o=Va(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),X(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),X(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),X(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),X(Yo(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),X("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let h={x:l,filter:o},p={strides:n,pad:r,dataFormat:a,dilations:s},d=Ra.runKernel(xt,h,p);return u?Jo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Sl=Ha({conv3DBackpropInput_:function(e,t,n,r,a){X(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];X(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),X(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),X(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),X(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),X(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=Ra.runKernel(wt,h,p);return o?Jo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Cl=Ha({conv3dTranspose_:function(e,t,n,r,a){let s=Va(e,"x","conv3dTranspose"),i=Va(t,"filter","conv3dTranspose");return Sl(n,s,i,r,a)}});var _l=Ha({cos_:function(e){let t={x:Va(e,"x","cos")};return Ra.runKernel(kt,t)}});var Tl=Ha({cosh_:function(e){let t={x:Va(e,"x","cosh")};return Ra.runKernel(It,t)}});var El=Ha({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:Va(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Ra.runKernel(Nt,a,s)}});var Al=Ha({denseBincount_:function(e,t,n,r=!1){let a=Va(e,"x","denseBincount"),s=Va(t,"weights","denseBincount");X("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),X(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),X(n>=0,(()=>`size must be non-negative, but got ${n}.`)),X(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Ra.runKernel(Ct,i,o)}});var $l=Ha({depthToSpace_:function(e,t,n="NHWC"){let r=Va(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];X(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),X(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),X(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Ra.runKernel(_t,o,l)}});var Fl=Ha({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=Va(e,"x","depthwiseConv2d"),l=Va(t,"filter","depthwiseConv2d"),u=o,h=!1;3===o.rank&&(h=!0,u=Jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),X(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),X(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),X(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&X(ne(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));let p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=Ra.runKernel(Tt,p,d);return h?Jo(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Rl=Ha({diag_:function(e){let t={x:Va(e,"x","diag")};return Ra.runKernel($t,t)}});var Dl=Ha({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=Va(e,"x","dilation2d"),o=Va(t,"filter","dilation2d");X(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),X(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),X("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let h={x:l,filter:o},p={strides:n,pad:r,dilations:a},d=Ra.runKernel(Ft,h,p);return u?Jo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function Ml(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Ol(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Ll(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}var zl=Ha({equal_:function(e,t){let n=Va(e,"a","equal"),r=Va(t,"b","equal");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(Pt,a)}});var Pl=Ha({where_:function(e,t,n){let r=Va(t,"a","where"),a=Va(n,"b","where"),s=Va(e,"condition","where","bool"),i=Ll(r.shape,a.shape),o=cl(r,i),l=cl(a,i);1===s.rank&&X(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&Y(s.shape,l.shape,"Error in where: ");let u={condition:s,t:o,e:l};return Ra.runKernel(sr,u)}});var Bl=Ha({zerosLike_:function(e){let t={x:Va(e,"x","zerosLike")};return Ra.runKernel($r,t)}});var Wl=Ha({divNoNan_:function(e,t){let n=Va(e,"a","div"),r=Va(t,"b","div");[n,r]=Na(n,r);let a=No(n,r),s=Bl(a),i=zl(r,s);return Pl(i,s,a)}});var Vl=Ha({dot_:function(e,t){let n=Va(e,"t1","dot"),r=Va(t,"t2","dot");X(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(X(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Jo(n,[1,-1]),t=Jo(r,[-1,1]),a=si(e,t);return Jo(a,[])}if(1===n.rank&&2===r.rank){let e=Jo(n,[1,-1]),t=Jo(r,[r.shape[0],r.shape[1]]),a=si(e,t);return Jo(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Jo(r,[-1,1]),t=si(n,e);return Jo(t,[t.size])}{let e=Jo(r,[r.shape[0],r.shape[1]]);return si(n,e)}}});var Ul=Ha({elu_:function(e){let t={x:Va(e,"x","elu")};return Ra.runKernel(Ot,t)}});var Gl=Ha({erf_:function(e){let t=Va(e,"x","erf");X("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ps(t,"float32"));let n={x:t};return Ra.runKernel(zt,n)}});var Hl=Ha({exp_:function(e){let t={x:Va(e,"x","exp")};return Ra.runKernel(Bt,t)}});var jl=Ha({expandDims_:function(e,t=0){let n=Va(e,"x","expandDims","string_or_numeric");X(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Ra.runKernel(Wt,r,a)}});var ql=Ha({expm1_:function(e){let t={x:Va(e,"x","expm1")};return Ra.runKernel(Vt,t)}});var Kl=Ha({tile_:function(e,t){let n=Va(e,"x","tile","string_or_numeric");X(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Ra.runKernel(Sr,r,a)}});var Xl=Ha({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=zs([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=Jo(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Kl(jl(i,0),[n[0],1,1]);if(2===n.length)return Kl(jl(jl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Kl(jl(jl(jl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Yl(e,t,n){let r={shape:e,value:t,dtype:n};return Ra.runKernel(Gt,{},r)}var Zl=Ha({floor_:function(e){let t={x:Va(e,"x","floor")};return Ra.runKernel(jt,t)}});var Jl=Ha({gather_:function(e,t,n=0,r=0){let a={x:Va(e,"x","gather"),indices:Va(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Ra.runKernel(Xt,a,s)}});var Ql=Ha({greater_:function(e,t){let n=Va(e,"a","greater"),r=Va(t,"b","greater");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(Zt,a)}});var eu=Ha({greaterEqual_:function(e,t){let n=Va(e,"a","greaterEqual"),r=Va(t,"b","greaterEqual");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(Jt,a)}});var tu=Ha({imag_:function(e){let t={input:Va(e,"input","imag")};return Ra.runKernel(tn,t)}});var nu=Ha({isFinite_:function(e){let t={x:Va(e,"x","isFinite")};return Ra.runKernel(nn,t)}});var ru=Ha({isInf_:function(e){let t={x:Va(e,"x","isInf")};return Ra.runKernel(rn,t)}});var au=Ha({isNaN_:function(e){let t={x:Va(e,"x","isNaN")};return Ra.runKernel(an,t)}});var su=Ha({leakyRelu_:function(e,t=.2){let n={x:Va(e,"x","leakyRelu")},r={alpha:t};return Ra.runKernel(sn,n,r)}});var iu=Ha({less_:function(e,t){let n=Va(e,"a","less"),r=Va(t,"b","less");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(on,a)}});var ou=Ha({lessEqual_:function(e,t){let n=Va(e,"a","lessEqual"),r=Va(t,"b","lessEqual");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(ln,a)}});function lu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Ra.runKernel(un,{},r)}var uu=Ha({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=Va(e,"x","localResponseNormalization");X(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),X(ne(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Jo(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},h=Ra.runKernel(gn,l,u);return o?Jo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var hu=Ha({log_:function(e){let t={x:Va(e,"x","log")};return Ra.runKernel(hn,t)}});var pu=Ha({log1p_:function(e){let t={x:Va(e,"x","log1p")};return Ra.runKernel(pn,t)}});function du(e){return X(Ie(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Va(t,"x","tf.grad","string_or_numeric"),a=null!=n?Va(n,"dy","tf.grad"):null;return Ra.tidy((()=>{let{value:t,grads:n}=Ra.gradients((()=>e(r)),[r],a);return null!=a&&Y(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),bu(n),n[0]}))}}function cu(e){return X(Ie(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{X(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=Ua(t,"args","tf.grads","string_or_numeric"),a=null!=n?Va(n,"dy","tf.grads"):null;return Ra.tidy((()=>{let{value:t,grads:n}=Ra.gradients((()=>e(...r)),r,a);return null!=a&&Y(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bu(n),n}))}}function fu(e){return X(Ie(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{X(t instanceof da,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),X(null==n||n instanceof da,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Ra.gradients((()=>e(t)),[t],n);return bu(r),{grad:r[0],value:a}}}function mu(e){return X(Ie(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{X(Array.isArray(t)&&t.every((e=>e instanceof da)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),X(null==n||n instanceof da,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Ra.gradients((()=>e(...t)),t,n);return null!=n&&Y(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bu(r.grads),r}}function gu(e,t){X(Ie(e),(()=>"The f passed in variableGrads(f) must be a function")),X(null==t||Array.isArray(t)&&t.every((e=>e instanceof fa)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Ra.registeredVariables)t.push(Ra.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;X((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=Ra.gradients(e,t,null,!0);X(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),X(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function yu(e){return Ra.customGrad(e)}function bu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var xu=Ha({neg_:function(e){let t={x:Va(e,"x","neg")};return Ra.runKernel(Fn,t)}});var vu=Ha({softplus_:function(e){let t={x:Va(e,"x","softplus")};return Ra.runKernel(dr,t)}});var wu=Ha({logSigmoid_:function(e){let t=Va(e,"x","logSigmoid");return yu((e=>({value:xu(vu(xu(e))),gradFunc:t=>So(t,nl(xu(e)))})))(t)}});var ku=Ha({max_:function(e,t=null,n=!1){let r={x:Va(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ra.runKernel(bn,r,a)}});var Iu=Ha({sub_:function(e,t){let n=Va(e,"a","sub"),r=Va(t,"b","sub");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(vr,a)}});var Nu=Ha({sum_:function(e,t=null,n=!1){let r=Va(e,"x","sum");"bool"===r.dtype&&(r=Ps(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ra.runKernel(fr,a,s)}});var Su=Ha({logSoftmax_:function(e,t=-1){let n=Va(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return yu(((e,n)=>{let r=ku(e,t,!0),a=Iu(e,r),s=Iu(Ps(a,"float32"),hu(Nu(Hl(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=Hl(r);return Iu(e,So(Nu(e,t,!0),a))}}}))(n)}});function Cu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _u(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Tu(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Eu(e,t){return _u(e,t.map((e=>1)),t)}function Au(e,t,n){X(Cu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function $u(e,t){if(Cu(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Fu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ru(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Du=Ha({logSumExp_:function(e,t=null,n=!1){let r=Va(e,"x","logSumExp"),a=ue(t,r.shape),s=ku(r,a,!0),i=Iu(r,s),o=Hl(i),l=Nu(o,a),u=hu(l),h=ko(Jo(s,u.shape),u);if(n){let e=Eu(h.shape,a);return Jo(h,e)}return h}});var Mu=Ha({logicalAnd_:function(e,t){let n=Va(e,"a","logicalAnd","bool"),r=Va(t,"b","logicalAnd","bool");Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(dn,a)}});var Ou=Ha({logicalNot_:function(e){let t={x:Va(e,"x","logicalNot","bool")};return Ra.runKernel(cn,t)}});var Lu=Ha({logicalOr_:function(e,t){let n=Va(e,"a","logicalOr","bool"),r=Va(t,"b","logicalOr","bool");Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(fn,a)}});var zu=Ha({logicalXor_:function(e,t){let n=Va(e,"a","logicalXor","bool"),r=Va(t,"b","logicalXor","bool");return Ll(n.shape,r.shape),Mu(Lu(e,t),Ou(Mu(e,t)))}});var Pu=Ha({maxPool_:function(e,t,n,r,a){let s=Va(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=Jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),X(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),X(Yo(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&X(ne(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},h=Ra.runKernel(vn,l,u);return o?Jo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Bu=Ha({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=Va(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),X(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),X("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&X(ne(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));let u={x:o},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Ra.runKernel(kn,u,h);return l?Jo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Wu=Ha({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:Va(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Ra.runKernel(Nn,s,i);return{result:o[0],indexes:o[1]}}});var Vu=Ha({maximum_:function(e,t){let n=Va(e,"a","maximum"),r=Va(t,"b","maximum");[n,r]=Na(n,r),"bool"===n.dtype&&(n=Ps(n,"int32"),r=Ps(r,"int32")),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(xn,a)}});var Uu=Ha({mean_:function(e,t=null,n=!1){let r={x:Va(e,"x","mean")},a={axis:t,keepDims:n};return Ra.runKernel(Sn,r,a)}});var Gu=Ha({min_:function(e,t=null,n=!1){let r={x:Va(e,"x","min")},a={axis:t,keepDims:n};return Ra.runKernel(Cn,r,a)}});var Hu=Ha({minimum_:function(e,t){let n=Va(e,"a","minimum"),r=Va(t,"b","minimum");[n,r]=Na(n,r),"bool"===n.dtype&&(n=Ps(n,"int32"),r=Ps(r,"int32")),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(_n,a)}});var ju=Ha({mirrorPad_:function(e,t,n){X("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Va(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");X(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)X(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),X(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Ra.runKernel(Tn,i,s)}});var qu=Ha({mod_:function(e,t){let n=Va(e,"a","mod"),r=Va(t,"b","mod");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(En,a)}});var Ku=Ha({square_:function(e){let t=Va(e,"x","square");return Ra.runKernel("Square",{x:t},{})}});var Xu=Ha({moments_:function(e,t=null,n=!1){let r=ue(t,(e=Va(e,"x","moments")).shape),a=Uu(e,r,n),s=a.shape;n||(s=Eu(a.shape,r));let i=Ku(Iu(Ps(e,"float32"),Jo(a,s)));return{mean:a,variance:Uu(i,r,n)}}});var Yu=Ha({multiRNNCell_:function(e,t,n,r){let a=Va(t,"data","multiRNNCell"),s=Ua(n,"c","multiRNNCell"),i=Ua(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}});var Zu=Ha({multinomial_:function(e,t,n,r=!1){let a=Va(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Jo(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Ra.runKernel(An,o,l);return 1===i?Jo(u,[u.size]):u}});var Ju=Ha({notEqual_:function(e,t){let n=Va(e,"a","notEqual"),r=Va(t,"b","notEqual");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(Rn,a)}});function Qu(e,t="float32"){if("complex64"===t){let t=Qu(e,"float32"),n=Qu(e,"float32");return ja(t,n)}let n=Ee(Q(e),t);return Ra.makeTensor(n,e,t)}function eh(e,t="float32"){if("complex64"===t){let t=eh(e,"float32"),n=Qu(e,"float32");return ja(t,n)}let n=Te(Q(e),t);return Ra.makeTensor(n,e,t)}var th=Ha({onesLike_:function(e){let t={x:Va(e,"x","onesLike")};return Ra.runKernel(Ln,t)}});var nh=Ha({outerProduct_:function(e,t){let n=Va(e,"v1","outerProduct"),r=Va(t,"v2","outerProduct");X(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Jo(n,[-1,1]),s=Jo(r,[1,-1]);return si(a,s)}});var rh=Ha({pad_:function(e,t,n=0){let r=Va(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Ra.runKernel(Bn,s,a)}});var ah=Ha({pad1d_:function(e,t,n=0){return X(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),rh(e,[t],n)}});var sh=Ha({pad2d_:function(e,t,n=0){return X(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}});var ih=Ha({pad3d_:function(e,t,n=0){return X(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}});var oh=Ha({pad4d_:function(e,t,n=0){return X(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rh(e,t,n)}});var lh=Ha({spaceToBatchND_:function(e,t,n){let r=Va(e,"x","spaceToBatchND");X(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),X(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),X(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Ra.runKernel(mr,a,s)}});var uh=Ha({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let i=Va(e,"x","maxPool"),o=i,l=!1;3===i.rank&&(l=!0,o=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),X(Yo(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let u,h=Bo(o.shape,t,s,a,r),p=[h.dilationHeight,h.dilationWidth];u="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let d=1===p[0]&&1===p[1],[c,f]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,u),m=d?r:"valid",g=d?o:lh(o,p,c),y=("avg"===n?()=>Qo(g,t,s,m):()=>Pu(g,t,s,m))(),b=d?y:il(y,p,f);return l?Jo(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});var hh=Ha({pow_:function(e,t){let n=Va(e,"base","pow"),r=Va(t,"exp","pow");[n,r]=Na(n,r);let a={a:n,b:r};return Ra.runKernel(Vn,a)}});var ph=Ha({prelu_:function(e,t){let n={x:Va(e,"x","prelu"),alpha:Va(t,"alpha","prelu")};return Ra.runKernel(Un,n)}});var dh=Ha({prod_:function(e,t=null,n=!1){let r=Va(e,"x","prod");"bool"===r.dtype&&(r=Ps(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Ra.runKernel(Gn,a,s)}});var ch=Ha({rand_:function(e,t,n){let r=Q(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Ra.makeTensor(a,e,n)}}),fh=k(F()),mh=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=fh.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var gh=Ha({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=fh.alea(a.toString()),this.randn=new mh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=zs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var yh=Ha({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new mh(t,n,r,!1,a),i=zs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var bh=Ha({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=zs(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=fh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function xh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Ra.runKernel(Hn,{},a)}var vh=Ha({real_:function(e){let t={input:Va(e,"input","real")};return Ra.runKernel(jn,t)}});var wh=Ha({reciprocal_:function(e){let t={x:Va(e,"x","reciprocal")};return Ra.runKernel(qn,t)}});var kh=Ha({relu_:function(e){let t={x:Va(e,"x","relu")};return Ra.runKernel(Kn,t)}});var Ih=Ha({relu6_:function(e){let t={x:Va(e,"x","relu6")};return Ra.runKernel(er,t)}});var Nh=Ha({reverse_:function(e,t){let n={x:Va(e,"x","reverse")},r={dims:t};return Ra.runKernel(tr,n,r)}});var Sh=Ha({reverse1d_:function(e){let t=Va(e,"x","reverse");return X(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Nh(t,0)}});var Ch=Ha({reverse2d_:function(e,t){let n=Va(e,"x","reverse");return X(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Nh(n,t)}});var _h=Ha({reverse3d_:function(e,t){let n=Va(e,"x","reverse");return X(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Nh(n,t)}});var Th=Ha({reverse4d_:function(e,t){let n=Va(e,"x","reverse");return X(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Nh(n,t)}});var Eh=Ha({round_:function(e){let t={x:Va(e,"x","round")};return Ra.runKernel(nr,t)}});var Ah=Ha({rsqrt_:function(e){let t={x:Va(e,"x","rsqrt")};return Ra.runKernel(rr,t)}});function $h(e,t){if((ge(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ge(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qa(e,[],[],t)}var Fh=Ha({selu_:function(e){let t={x:Va(e,"x","selu")};return Ra.runKernel(ir,t)}});var Rh=Ha({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=Va(e,"x","separableConv2d"),l=Va(t,"depthwiseFilter","separableConv2d"),u=Va(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=Jo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");X(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),X(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),X(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),X(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),X(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];X(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Fl(h,l,r,a,i,s),m=vl(f,u,1,"valid",i);return p?Jo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Dh=async function(e,t){let n=Va(e,"x","setdiff1d"),r=Va(t,"y","setdiff1d");X(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),X(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),X(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new ua([o],n.dtype),u=new ua([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};var Mh=Ha({sign_:function(e){let t={x:Va(e,"x","sign")};return Ra.runKernel(hr,t)}});var Oh=Ha({sin_:function(e){let t={x:Va(e,"x","sin")};return Ra.runKernel(lr,t)}});var Lh=Ha({sinh_:function(e){let t={x:Va(e,"x","sinh")};return Ra.runKernel(ur,t)}});var zh=Ha({slice1d_:function(e,t,n){let r=Va(e,"x","slice1d");return X(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),rl(r,[t],[n])}});var Ph=Ha({slice2d_:function(e,t,n){let r=Va(e,"x","slice2d");return X(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}});var Bh=Ha({slice3d_:function(e,t,n){let r=Va(e,"x","slice3d");return X(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}});var Wh=Ha({slice4d_:function(e,t,n){let r=Va(e,"x","slice4d");return X(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),rl(r,t,n)}});var Vh=Ha({softmax_:function(e,t=-1){let n=Va(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Ra.runKernel(yr,r,a)}});var Uh=Ha({fft_:function(e){X("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ra.runKernel(Ut,t)}});var Gh=Ha({ifft_:function(e){X("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Ra.runKernel(en,t)}});var Hh=Ha({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Jo(e,[r,n]);t=Gh(a)}else{let a=[r,2*(n-1)],s=Jo(vh(e),[r,n]),i=Jo(tu(e),[r,n]),o=Nh(rl(s,[0,1],[r,n-2]),1),l=So(Nh(rl(i,[0,1],[r,n-2]),1),$h(-1)),u=tl([s,o],1),h=tl([i,l],1),p=Jo(ja(u,h),[a[0],a[1]]);t=Gh(p)}if(t=vh(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Jo(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}});var jh=Ha({split_:function(e,t,n=0){let r={x:Va(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ra.runKernel(gr,r,a)}});var qh=Ha({rfft_:function(e,t){X("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=rl(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=tl([e,Qu(a)],e.shape.length-1),r=t}else n=e;let s=Bl(n),i=Jo(ja(n,s),[a,r]),o=Uh(i),l=Math.floor(r/2)+1,u=vh(o),h=tu(o),p=jh(u,[l,r-l],u.shape.length-1),d=jh(h,[l,r-l],h.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Jo(ja(p[0],d[0]),c)}});var Kh=Ha({sqrt_:function(e){let t={x:Va(e,"x","sqrt")};return Ra.runKernel(cr,t)}});var Xh=Ha({squaredDifference_:function(e,t){let n=Va(e,"a","squaredDifference"),r=Va(t,"b","squaredDifference");[n,r]=Na(n,r),Ll(n.shape,r.shape);let a={a:n,b:r};return Ra.runKernel(br,a,{})}});var Yh=Ha({squeeze_:function(e,t){let n=Va(e,"x","squeeze");return Jo(n,he(n.shape,t).newShape)}});var Zh=Ha({stack_:function(e,t=0){let n=Ua(e,"tensors","stack","string_or_numeric");X(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&X(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Ra.runKernel(Pn,r,a)}});var Jh=Ha({step_:function(e,t=0){let n={x:Va(e,"x","step")},r={alpha:t};return Ra.runKernel(Fr,n,r)}});var Qh=Ha({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:Va(e,"x","stridedSlice")},h={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ra.runKernel(kr,u,h)}});var ep=Ha({tan_:function(e){let t={x:Va(e,"x","tan")};return Ra.runKernel(Ir,t)}});function tp(e,t){Z(e);let n=Pa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qa(e,null,n,t)}function np(e,t,n){if(Z(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=Pa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qa(e,t,r,n)}function rp(e,t,n){if(Z(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=Pa(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return qa(e,t,r,n)}function ap(e,t,n){if(Z(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=Pa(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return qa(e,t,r,n)}function sp(e,t,n){if(Z(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=Pa(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return qa(e,t=t||r,r,n)}var ip=Ha({topk_:function(e,t=1,n=!0){let r=Va(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Ra.runKernel(Cr,s,i);return{values:o,indices:l}}});var op=Ha({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new mh(t,n,r,!0,a),i=zs(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var lp=Ha({unique_:function(e,t=0){let n=Va(e,"x","unique","string_or_numeric");X(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Ra.runKernel(Tr,r,a);return{values:s,indices:i}}});var up=Ha({unsortedSegmentSum_:function(e,t,n){let r=Va(e,"x","unsortedSegmentSum"),a=Va(t,"segmentIds","unsortedSegmentSum","int32");X(ne(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Ra.runKernel(Ar,s,i)}});var hp=Ha({unstack_:function(e,t=0){let n=Va(e,"x","unstack","string_or_numeric");X(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Ra.runKernel(Er,r,a)}});function pp(e,t=!0,n,r){return Ra.makeVariable(e,t,n,r)}function dp(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=zs(e,"int32"),a=zs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var cp=async function(e){let t=Va(e,"condition","whereAsync","bool"),n=await t.data(),r=dp(t.shape,n);return e!==t&&t.dispose(),r};var fp=async function(e,t,n){let r=Va(e,"tensor","boolMask"),a=Va(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;X(i>0,(()=>"mask cannot be scalar")),Y(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),h=Jo(r,u),p=Jo(a,[-1]),d=await cp(p),c=Yh(d,[1]),f=Jl(h,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),h.dispose(),p.dispose(),d.dispose(),f};function mp(e,t,n=null){if(0===e.rank)return Co(e);if(1!==e.rank&&null===n)return mp(Jo(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Nu(Co(e),n);if(t===1/0)return ku(Co(e),n);if(t===-1/0)return Gu(Co(e),n);if("euclidean"===t||2===t)return Kh(Nu(hh(Co(e),$h(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ku(Nu(Co(e),n[0]),n[1]-1);if(t===1/0)return ku(Nu(Co(e),n[1]),n[0]);if(t===-1/0)return Gu(Nu(Co(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Kh(Nu(Ku(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var gp=Ha({norm_:function(e,t="euclidean",n=null,r=!1){let a=mp(e=Va(e,"x","norm"),t,n),s=a.shape;if(r){let t=ue(n,e.shape);s=Eu(a.shape,t)}return Jo(a,s)}});var yp=Ha({movingAverage_:function(e,t,n,r,a=!0){let s=Va(e,"v","movingAverage"),i=Va(t,"x","movingAverage"),o=Va(n,"decay","movingAverage");Sa(s,i),X(te(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=$h(1),u=Iu(l,o),h=So(Iu(i,s),u);if(a){X(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Va(r,"step","movingAverage");h=No(h,Iu(l,hh(o,e)))}return ko(s,h)}});var bp=Ha({scatterND_:function(e,t,n){let r=Va(e,"indices","scatterND","int32"),a=Va(t,"updates","scatterND");bi(a,r,n);let s={indices:r,updates:a},i={shape:n};return Ra.runKernel(ar,s,i)}});var xp=Ha({sparseToDense_:function(e,t,n,r=0){let a=Va(e,"sparseIndices","sparseToDense","int32"),s=Va(t,"sparseValues","sparseToDense"),i=Va(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Ra.runKernel(wr,o,l)}});var vp=Ha({gatherND_:function(e,t){let n=Va(t,"indices","gatherND","int32"),r={params:Va(e,"x","gatherND"),indices:n};return Ra.runKernel(Yt,r)}});var wp=Ha({dropout_:function(e,t,n,r){let a=Va(e,"x","dropout");if(X("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),X(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof da?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(te(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=No(Zl(ko(bh(s,0,1,"float32",r),i)),i);return So(a,o)}});function kp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ip(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return tp(a,"float32")}var Np=async function(e,t,n=1){let r=Va(e,"predictions","inTopK"),a=Va(t,"targets","inTopK");X(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),X(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Y(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];X(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=pe("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Ka(h,a.shape,"bool")},Sp={};w(Sp,{conv2d:()=>$p,depthwiseConv2d:()=>Dp,matMul:()=>Mp});var Cp=Ha({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2]])),X(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),X(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),X(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];X(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),X(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=i&&X(ne(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));let p={x:o,dy:l},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ra.runKernel(yt,p,d)}});function _p(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return So(e,Jh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Tp(e,t){let n=t,r=Ol(e.shape,t.shape);return r.length>0&&(n=Nu(n,r)),Jo(n,e.shape)}function Ep(e,t,n,r){if("linear"===t)return e;if("relu"===t)return kh(e);if("elu"===t)return Ul(e);if("relu6"===t)return Ih(e);if("prelu"===t)return ph(e,n);if("leakyrelu"===t)return su(e,r);throw new Error(`Unknown fused activation ${t}.`)}var Ap=(e,t)=>!(e>0)||"linear"===t;var $p=Ha({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Ap(Ra.state.gradientDepth,l)){let p=vl(e,t,n,r,a,s,i);return null!=o&&(p=ko(p,o)),Ep(p,l,u,h)}let p=Va(e,"x","conv2d"),d=Va(t,"filter","conv2d"),c=p,f=!1;3===p.rank&&(f=!0,c=Jo(p,[1,p.shape[0],p.shape[1],p.shape[2]])),X(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),X(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&X(ne(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),X(c.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${c.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),X(Yo(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),X("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));let m,g,y=Vo(c.shape,d.shape,n,s,r,i);null!=o&&(m=Va(o,"bias","fused conv2d"),[m]=Na(m,p),Ll(y.outShape,m.shape)),null!=u&&(g=Va(u,"prelu weights","fused conv2d"));let b=(e,t)=>{let[a,i,o,u]=t,h=_p(e,o,l);X(Xo(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let p=[kl(i.shape,h,a,n,r),Cp(i,h,a.shape,n,r)];if(null!=u){let e=Tp(u,h);p.push(e)}return p},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?yu(((e,t,n)=>{let r=Ra.runKernel(Or,x,v);return n([t,e,r]),f&&(r=Jo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):yu(((e,t,n,r)=>{let a=Ra.runKernel(Or,x,v);return r([t,e,a,n]),f&&(a=Jo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Fp=Ha({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Jo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Ra.runKernel(Et,u,h)}});var Rp=Ha({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},p=Ra.runKernel(At,u,h);return l?Jo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Dp=Ha({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Ap(Ra.state.gradientDepth,l)){let p=Fl(e,t,n,r,a,s,i);return null!=o&&(p=ko(p,o)),Ep(p,l,u,h)}let p=Va(e,"x","depthwiseConv2d"),d=Va(t,"filter","depthwiseConv2d"),c=p,f=!1;3===p.rank&&(f=!0,c=Jo(p,[1,p.shape[0],p.shape[1],p.shape[2]])),X(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),X(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),X(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),X(Yo(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&X(ne(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));let m,g,y=Vo(c.shape,d.shape,n,s,r,i,!0);null!=o&&(m=Va(o,"bias","fused conv2d"),[m]=Na(m,p),Ll(y.outShape,m.shape)),null!=u&&(g=Va(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{X(Xo(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,h]=t,p=_p(e,u,l),d=Rp(o.shape,p,a,n,r,s,i),c=Fp(o,p,a.shape,n,r,s,i);if(null!=h){return[d,c,Tp(m,p)]}return[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?yu(((e,t,n)=>{let r=Ra.runKernel(Lr,x,v);return n([t,e,r]),f&&(r=Jo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d):yu(((e,t,n,r)=>{let a=Ra.runKernel(Lr,x,v);return r([t,e,a,n]),f&&(a=Jo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d,m)}});var Mp=Ha({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Ap(Ra.state.gradientDepth,s)){let l=si(e,t,n,r);return null!=a&&(l=ko(l,a)),Ep(l,s,i,o)}let l=Va(e,"a","fused matMul"),u=Va(t,"b","fused matMul");[l,u]=Na(l,u);let h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Q(f),y=Q(m);X(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),X(te(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),X(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let b,x,v=l.shape.slice(0,-2).concat([d,c]),w=Jo(l,n?[g,h,d]:[g,d,h]),k=Jo(u,r?[y,c,p]:[y,p,c]);null!=a&&(b=Va(a,"bias","fused matMul"),[b]=Na(b,l),Ll(v,b.shape)),null!=i&&(x=Va(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=_p(Jo(e,h.shape),h,s);if(n||r?!n&&r?(i=si(d,u,!1,!1),o=si(d,l,!0,!1)):n&&!r?(i=si(u,d,!1,!0),o=si(l,d,!1,!1)):(i=si(u,d,!0,!0),o=si(d,l,!0,!0)):(i=si(d,u,!1,!0),o=si(l,d,!0,!1)),null!=a){return[i,o,Tp(p,d)]}return[i,o]},N={a:w,b:k,bias:b,preluActivationWeights:x},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?yu(((e,t,n)=>{let r=Ra.runKernel(Mr,N,S);return n([e,t,r]),{value:Jo(r,v),gradFunc:I}}))(w,k):yu(((e,t,n,r)=>{let a=Ra.runKernel(Mr,N,S);return r([e,t,a,n]),{value:Jo(a,v),gradFunc:I}}))(w,k,b)}});var Op=Ha({hammingWindow_:function(e){return Ip(e,.54,.46)}});var Lp=Ha({hannWindow_:function(e){return Ip(e,.5,.5)}});var zp=Ha({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(rl(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=tl([rl(e,s,t-r),Yl([r],a)]);i.push(o),s+=n}return 0===i.length?np([],[0,t]):Jo(tl(i),[i.length,t])}});var Pp=Ha({stft_:function(e,t,n,r,a=Lp){null==r&&(r=kp(t));let s=zp(e,t,n),i=So(s,a(t)),o=[];for(let e=0;e<s.shape[0];e++)o.push(qh(rl(i,[e,0],[1,t]),r));return tl(o)}});var Bp=Ha({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=Va(e,"image","cropAndResize"),o=Va(t,"boxes","cropAndResize","float32"),l=Va(n,"boxInd","cropAndResize","int32"),u=o.shape[0];X(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),X(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),X(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),X(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),X(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),X("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let h={image:i,boxes:o,boxInd:l},p={method:a,extrapolationValue:s,cropSize:r};return Ra.runKernel(St,h,p)}});var Wp=Ha({flipLeftRight_:function(e){let t=Va(e,"image","flipLeftRight","float32");X(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Ra.runKernel(Ht,n,{})}});var Vp=Ha({rotateWithOffset_:function(e,t,n=0,r=.5){let a=Va(e,"image","rotateWithOffset","float32");X(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Ra.runKernel(Dr,s,i)}});function Up(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),X(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),X(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),X(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),X(1===t.rank,(()=>"scores must be a 1D tensor")),X(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),X(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Gp=Ha({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Va(e,"boxes","nonMaxSuppression"),i=Va(t,"scores","nonMaxSuppression"),o=Up(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Ra.runKernel(Dn,{boxes:s,scores:i},l)}});function Hp(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||jp)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function jp(e,t){return e>t?1:e<t?-1:0}function qp(e,t,n,r,a){return Yp(e,t,n,r,a,0)}function Kp(e,t,n,r,a,s){return Yp(e,t,n,r,a,0,!1,s,!0)}function Xp(e,t,n,r,a,s){return Yp(e,t,n,r,a,s,!0)}function Yp(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Qp);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=Zp(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*Jp(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Hp(u,t,Qp))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function Zp(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,h),y=Math.min(o,p),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function Jp(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Qp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var ed=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=Va(e,"boxes","nonMaxSuppressionAsync"),i=Va(t,"scores","nonMaxSuppressionAsync"),o=Up(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:p}=qp(u,h,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),tp(p,"int32")};var td=Ha({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Va(e,"boxes","nonMaxSuppression"),o=Va(t,"scores","nonMaxSuppression"),l=Up(i,o,n,r,a,s),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},p=Ra.runKernel(On,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}});var nd=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=Va(e,"boxes","nonMaxSuppressionAsync"),o=Va(t,"scores","nonMaxSuppressionAsync"),l=Up(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),h=u[0],p=u[1],{selectedIndices:d,selectedScores:c}=Xp(h,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tp(d,"int32"),selectedScores:tp(c)}};var rd=Ha({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Va(e,"boxes","nonMaxSuppression"),o=Va(t,"scores","nonMaxSuppression"),l=Up(i,o,n,r,a,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},p=Ra.runKernel(Mn,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var ad=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=Va(e,"boxes","nonMaxSuppressionAsync"),o=Va(t,"scores","nonMaxSuppressionAsync"),l=Up(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Kp(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tp(f,"int32"),validOutputs:$h(m,"int32")}};var sd=Ha({resizeBilinear_:function(e,t,n=!1,r=!1){let a=Va(e,"images","resizeBilinear");X(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),X(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),X(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Jo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ra.runKernel(Jn,o,l);return i?Jo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var id=Ha({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=Va(e,"images","resizeNearestNeighbor");X(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),X(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),X("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),X(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Jo(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ra.runKernel(Yn,o,l);return i?Jo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var od=Ha({bandPart_:function(e,t,n){X(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),X(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=Va(e,"a","bandPart");X(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Jo(xh(0,s,1,"int32"),[-1,1]),l=xh(0,i,1,"int32"),u=Iu(o,l),h=Mu(ou(u,$h(+t,"int32")),eu(u,$h(-n,"int32"))),p=Qu([s,i],r.dtype);return Jo(Zh(hp(Jo(r,[-1,s,i])).map((e=>Pl(h,e,p)))),a)}});var ld=Ha({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,X(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)X(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=jh(e,e.shape[0],0).map((e=>Yh(e,[0])));X(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ra.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=So(Nu(So(n[r],e)),n[r]);e=Iu(e,t)}return No(e,gp(e,"euclidean"))})));return t?Zh(n,0):n}});function ud(e,t=!1){return Ra.tidy((()=>{X(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=Xl(n),s=Bs(e),i=np([[1]],[1,1]),o=Bs(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Ra.tidy((()=>{let t=rl(s,[e,e],[n-e,1]),l=gp(t),u=rl(s,[e,e],[1,1]),h=Pl(Ql(u,0),np([[-1]]),np([[1]])),p=Iu(u,So(h,l)),d=No(t,p);o=1===d.shape[0]?Bs(i):tl([i,rl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=xu(No(si(h,p),l)),f=rl(s,[e,0],[n-e,r]),m=So(c,o),g=oi(o);if(0===e)s=Iu(f,si(m,si(g,f)));else{let t=Iu(f,si(m,si(g,f)));s=tl([rl(s,[0,0],[e,r]),t],0)}let y=oi(m),b=rl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Iu(b,si(si(b,o),y));else{let t=Iu(b,si(si(b,o),y));a=tl([rl(a,[0,0],[n,e]),t],1)}return[o,s,a]})),uo([t,l,u])}return!t&&n>r&&(a=rl(a,[0,0],[n,r]),s=rl(s,[0,0],[r,r])),[a,s]}))}var hd,pd=Ha({qr_:function(e,t=!1){if(X(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ud(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=hp(Jo(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=ud(e,t);a.push(n),s.push(r)})),[Jo(Zh(a,0),e.shape),Jo(Zh(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(hd||(hd={}));var dd=Ha({computeWeightedLoss_:function(e,t,n=hd.SUM_BY_NONZERO_WEIGHTS){let r=Va(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Va(t,"weights","computeWeightedLoss"));let s=null==a?r:So(r,a);if(n===hd.NONE)return s;if(n===hd.SUM)return Nu(s);if(n===hd.MEAN){if(null==a)return Uu(s);{let e=r.size/a.size,t=No(Nu(s),Nu(a));return e>1?No(t,$h(e)):t}}if(n===hd.SUM_BY_NONZERO_WEIGHTS){if(null==a)return No(Nu(s),$h(r.size));{let e=So(a,eh(r.shape)),t=Ps(Nu(Ju(e,$h(0))),"float32");return No(Nu(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var cd=Ha({absoluteDifference_:function(e,t,n,r=hd.SUM_BY_NONZERO_WEIGHTS){let a=Va(e,"labels","absoluteDifference"),s=Va(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Va(n,"weights","absoluteDifference")),Y(a.shape,s.shape,"Error in absoluteDifference: ");let o=Co(Iu(a,s));return dd(o,i,r)}});var fd=Ha({cosineDistance_:function(e,t,n,r,a=hd.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"labels","cosineDistance"),i=Va(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Va(r,"weights","cosineDistance")),Y(s.shape,i.shape,"Error in cosineDistance: ");let l=$h(1),u=Iu(l,Nu(So(s,i),n,!0));return dd(u,o,a)}});var md=Ha({hingeLoss_:function(e,t,n,r=hd.SUM_BY_NONZERO_WEIGHTS){let a=Va(e,"labels","hingeLoss"),s=Va(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Va(n,"weights","hingeLoss")),Y(a.shape,s.shape,"Error in hingeLoss: ");let o=$h(1);a=Iu(So($h(2),a),o);let l=kh(Iu(o,So(a,s)));return dd(l,i,r)}});var gd=Ha({huberLoss_:function(e,t,n,r=1,a=hd.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"labels","huberLoss"),i=Va(t,"predictions","huberLoss"),o=null;null!=n&&(o=Va(n,"weights","huberLoss")),Y(s.shape,i.shape,"Error in huberLoss: ");let l=$h(r),u=Co(Iu(i,s)),h=Hu(u,l),p=Iu(u,h),d=ko(So($h(.5),Ku(h)),So(l,p));return dd(d,o,a)}});var yd=Ha({logLoss_:function(e,t,n,r=1e-7,a=hd.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"labels","logLoss"),i=Va(t,"predictions","logLoss"),o=null;null!=n&&(o=Va(n,"weights","logLoss")),Y(s.shape,i.shape,"Error in logLoss: ");let l=$h(1),u=$h(r),h=xu(So(s,hu(ko(i,u)))),p=So(Iu(l,s),hu(ko(Iu(l,i),u))),d=Iu(h,p);return dd(d,o,a)}});var bd=Ha({meanSquaredError_:function(e,t,n,r=hd.SUM_BY_NONZERO_WEIGHTS){let a=Va(e,"labels","meanSquaredError"),s=Va(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Va(n,"weights","meanSquaredError")),Y(a.shape,s.shape,"Error in meanSquaredError: ");let o=Xh(a,s);return dd(o,i,r)}});var xd=Ha({sigmoidCrossEntropy_:function(e,t,n,r=0,a=hd.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"multiClassLabels","sigmoidCrossEntropy"),i=Va(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Va(n,"weights","sigmoidCrossEntropy")),Y(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=$h(r),t=$h(1),n=$h(.5);s=ko(So(s,Iu(t,e)),So(n,e))}let l=function(e,t){let n=Va(e,"labels","sigmoidCrossEntropyWithLogits"),r=Va(t,"logits","sigmoidCrossEntropyWithLogits");Y(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=kh(r),s=So(r,n),i=pu(Hl(xu(Co(r))));return ko(Iu(a,s),i)}(s,i);return dd(l,o,a)}});var vd=Ha({softmaxCrossEntropy_:function(e,t,n,r=0,a=hd.SUM_BY_NONZERO_WEIGHTS){let s=Va(e,"onehotLabels","softmaxCrossEntropy"),i=Va(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Va(n,"weights","softmaxCrossEntropy")),Y(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=$h(r),t=$h(1),n=$h(s.shape[1]);s=ko(So(s,Iu(t,e)),No(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return yu(((e,t,r)=>{let a=Du(t,[n],!0),s=Iu(Ps(t,"float32"),a);r([e,s]);let i=xu(So(s,e));return{value:Nu(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Eu(e.shape,[n]);return[So(Jo(e,s),Iu(Ps(r,"float32"),Hl(a))),So(Jo(e,s),Iu(Hl(a),Ps(r,"float32")))]}}}))(e,t)}(s,i);return dd(l,o,a)}}),wd={fft:Uh,ifft:Gh,rfft:qh,irfft:Hh},kd={hammingWindow:Op,hannWindow:Lp,frame:zp,stft:Pp},Id={flipLeftRight:Wp,resizeNearestNeighbor:id,resizeBilinear:sd,rotateWithOffset:Vp,cropAndResize:Bp,nonMaxSuppression:Gp,nonMaxSuppressionAsync:ed,nonMaxSuppressionWithScore:td,nonMaxSuppressionWithScoreAsync:nd,nonMaxSuppressionPadded:rd,nonMaxSuppressionPaddedAsync:ad},Nd={bandPart:od,gramSchmidt:ld,qr:pd},Sd={absoluteDifference:cd,computeWeightedLoss:dd,cosineDistance:fd,hingeLoss:md,huberLoss:gd,logLoss:yd,meanSquaredError:bd,sigmoidCrossEntropy:xd,softmaxCrossEntropy:vd},Cd=class extends zi{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return uo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return gu(e,t)}dispose(){null!=this.iterations_&&uo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:$h(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Cd,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var _d=class extends Cd{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ra.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:lo((()=>Bl(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:lo((()=>Bl(r).variable(false)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;lo((()=>{let e=ko(So(s,this.rho),So(Ku(a),1-this.rho)),t=So(No(Kh(ko(i,this.epsilon)),Kh(ko(s,this.epsilon))),a),n=ko(So(i,this.rho),So(Ku(t),1-this.rho));s.assign(e),i.assign(n);let o=ko(So(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(uo(this.accumulatedGrads.map((e=>e.variable))),uo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};_d.className="Adadelta",Bi(_d);var Td=class extends Cd{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ra.registeredVariables[t];if(null==this.accumulatedGrads[n]){let e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:lo((()=>Yl(r.shape,this.initialAccumulatorValue).variable(e)))}}let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;lo((()=>{let e=ko(s,Ku(a));s.assign(e);let t=ko(So(No(a,Kh(ko(e,Ra.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&uo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Td.className="Adagrad",Bi(Td);var Ed=class extends Cd{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],lo((()=>{this.accBeta1=$h(t).variable(),this.accBeta2=$h(n).variable()})),null==r&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);lo((()=>{let n=Iu(1,this.accBeta1),r=Iu(1,this.accBeta2);t.forEach(((t,a)=>{let s=Ra.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:lo((()=>Bl(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:lo((()=>Bl(s).variable(false)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=ko(So(o,this.beta1),So(i,1-this.beta1)),h=ko(So(l,this.beta2),So(Ku(i),1-this.beta2)),p=No(u,n),d=No(h,r);o.assign(u),l.assign(h);let c=ko(So(No(p,ko(Kh(d),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(So(this.accBeta1,this.beta1)),this.accBeta2.assign(So(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&uo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&uo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),lo((()=>{this.accBeta1.assign(hh(this.beta1,this.iterations_+1)),this.accBeta2.assign(hh(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Ed.className="Adam",Bi(Ed);var Ad=class extends Cd{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],lo((()=>{this.iteration=$h(0).variable(),this.accBeta1=$h(t).variable()})),null==r&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);lo((()=>{let n=Iu(1,this.accBeta1),r=No(-this.learningRate,ko(So(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Ra.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Bl(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Bl(s).variable(false)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=ko(So(o,this.beta1),So(i,1-this.beta1)),h=So(l,this.beta2),p=Co(i),d=Vu(h,p);o.assign(u),l.assign(d);let c=ko(So(No(r,n),No(u,ko(d,this.epsilon))),s);s.assign(c)})),this.iteration.assign(ko(this.iteration,1)),this.accBeta1.assign(So(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&uo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&uo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Ad.className="Adamax",Bi(Ad);var $d=class extends Cd{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Ra.registeredVariables[t];lo((()=>{let e=ko(So(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ho($h(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};$d.className="SGD",Bi($d);var Fd=class extends $d{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=$h(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ra.registeredVariables[t];if(null==this.accumulations[n]){let e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:lo((()=>Bl(r).variable(e)))}}let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&lo((()=>{let e,t=ko(So(this.m,a),s);e=this.useNesterov?ko(So(this.c,ko(s,So(t,this.m))),r):ko(So(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&uo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Fd.className="Momentum",Bi(Fd);var Rd=class extends Cd{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ra.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Ra.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:lo((()=>Bl(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:lo((()=>Bl(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:lo((()=>Bl(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;lo((()=>{let e=ko(So(i,this.decay),So(Ku(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=ko(So(t,this.decay),So(s,1-this.decay)),l=No(So(s,this.learningRate),Kh(Iu(e,ko(Ku(a),this.epsilon)))),u=ko(So(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let h=Iu(r,u);r.assign(h)}else{let e=ko(So(i,this.decay),So(Ku(s),1-this.decay)),t=ko(So(o,this.momentum),No(So(s,this.learningRate),Kh(ko(e,this.epsilon))));i.assign(e),o.assign(t);let n=Iu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&uo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&uo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&uo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Rd.className="RMSProp",Bi(Rd);var Dd=class{static sgd(e){return new $d(e)}static momentum(e,t,n=!1){return new Fd(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Rd(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ed(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _d(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ad(e,t,n,r,a)}static adagrad(e,t=.1){return new Td(e,t)}},Md={sgd:Dd.sgd,momentum:Dd.momentum,adadelta:Dd.adadelta,adagrad:Dd.adagrad,rmsprop:Dd.rmsprop,adamax:Dd.adamax,adam:Dd.adam},Od="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ld(){return new Promise((e=>Od((()=>e()))))}var zd={};function Pd(e,t){let n=e[0].length;e.forEach(((e,t)=>{X(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),X(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)X(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Bd(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}w(zd,{ERF_A1:()=>Jd,ERF_A2:()=>Qd,ERF_A3:()=>ec,ERF_A4:()=>tc,ERF_A5:()=>nc,ERF_P:()=>Zd,PARALLELIZE_THRESHOLD:()=>Wd,SELU_SCALE:()=>Yd,SELU_SCALEALPHA:()=>Xd,applyActivation:()=>Ep,assertAndGetBroadcastShape:()=>Ll,assertAxesAreInnerMostDims:()=>Au,assertParamsConsistent:()=>Pd,assignToTypedArray:()=>hc,axesAreInnerMostDims:()=>Cu,calculateShapes:()=>xi,combineLocations:()=>_u,complexWithEvenIndex:()=>oc,complexWithOddIndex:()=>lc,computeConv2DInfo:()=>Vo,computeConv3DInfo:()=>Uo,computeDefaultPad:()=>Go,computeDilation2DInfo:()=>Po,computeOptimalWindowSize:()=>Vd,computeOutAndReduceShapes:()=>Tu,computeOutShape:()=>Bd,computePool2DInfo:()=>Bo,computePool3DInfo:()=>Wo,convertConv2DDataFormat:()=>Zo,eitherStridesOrDilationsAreOne:()=>Yo,expandShapeToKeepDim:()=>Eu,exponent:()=>dc,exponents:()=>pc,fromStringArrayToUint8:()=>xc,fromUint8ToStringArray:()=>bc,getAxesPermutation:()=>$u,getBroadcastDims:()=>Ml,getComplexWithIndex:()=>uc,getFusedBiasGradient:()=>Tp,getFusedDyActivation:()=>_p,getImageCenter:()=>Ud,getInnerMostAxes:()=>Ru,getPermuted:()=>Hd,getReductionAxes:()=>Ol,getReshaped:()=>Gd,getReshapedPermuted:()=>jd,getSliceBeginCoords:()=>qd,getSliceSize:()=>Kd,getUndoAxesPermutation:()=>Fu,log:()=>ac,mergeRealAndImagArrays:()=>sc,prepareAndValidate:()=>mi,prepareSplitSize:()=>cc,segment_util:()=>fc,shouldFuse:()=>Ap,slice_util:()=>vi,splitRealAndImagArrays:()=>ic,tupleValuesAreOne:()=>Xo,upcastType:()=>ka,validateInput:()=>bi,validateUpdateShape:()=>yi,warn:()=>rc});var Wd=30;function Vd(e){return e<=Wd?e:Ne(e,Math.floor(Math.sqrt(e)))}function Ud(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Gd(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Hd(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function jd(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function qd(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Kd(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Xd=1.7580993408473768,Yd=1.0507009873554805,Zd=.3275911,Jd=.254829592,Qd=-.284496736,ec=1.421413741,tc=-1.453152027,nc=1.061405429;function rc(...e){Le().getBool("IS_TEST")}function ac(...e){Le().getBool("IS_TEST")}function sc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ic(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function oc(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function lc(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function uc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function hc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function pc(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function dc(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function cc(e,t,n=0){let r=[];if("number"==typeof t)X(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{X(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}X(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}var fc={};function mc(e,t){let n,r=!1;for(e<=Wd?(n=e,r=!0):n=Ne(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ne(e,n+1);return n}function gc(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function yc(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function bc(e){try{return e.map((e=>ta(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function xc(e){return e.map((e=>ea(e)))}w(fc,{collectGatherOpShapeInfo:()=>yc,computeOutShape:()=>gc,segOpComputeOptimalWindowSize:()=>mc});var vc={};w(vc,{nonMaxSuppressionV3Impl:()=>qp,nonMaxSuppressionV4Impl:()=>Kp,nonMaxSuppressionV5Impl:()=>Xp,whereImpl:()=>dp});var wc={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,Jh(Ps(n,"float32"),-1))}}},kc={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Ku(Ps(n,"float32")),r=Kh(Iu($h(1),t));return xu(No(e,r))}}}},Ic={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Kh(Iu(Ku(Ps(n,"float32")),1));return No(e,t)}}}},Nc={kernelName:He,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=e,r=Ol(n.shape,a);return r.length>0&&(t=Nu(t,r)),Jo(t,n.shape)},b:()=>{let t=e,n=Ol(r.shape,a);return n.length>0&&(t=Nu(t,n)),Jo(t,r.shape)}}}},Sc={kernelName:je,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Cc={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Bl(n)}}},_c={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Bl(n)}}},Tc={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,Kh(Iu($h(1),Ku(Ps(n,"float32")))))}}},Ec={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Kh(ko($h(1),Ku(Ps(n,"float32"))));return No(e,t)}}}},Ac={kernelName:tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=ko(Ku(n),Ku(r)),s=So(e,No(r,t)),i=Ol(n.shape,a);return i.length>0&&(s=Nu(s,i)),Jo(s,n.shape)},b:()=>{let t=ko(Ku(n),Ku(r)),s=xu(So(e,No(n,t))),i=Ol(r.shape,a);return i.length>0&&(s=Nu(s,i)),Jo(s,r.shape)}}}},$c={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,ko(Ku(Ps(n,"float32")),1))}}},Fc={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,Iu($h(1),Ku(Ps(n,"float32"))))}}};var Rc=Ha({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Va(e,"dy","avgPool3dGrad"),o=Va(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Jo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),X(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),X(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=s&&X(ne(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));let p={dy:l,input:u},d={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=Ra.runKernel(st,p,d);return h?Jo(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Dc={kernelName:at,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Rc(e,r,a,s,i,o)}}};var Mc=Ha({avgPoolGrad_:function(e,t,n,r,a){let s=Va(e,"dy","avgPoolGrad"),i=Va(t,"input","avgPoolGrad");X(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Jo(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Jo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),X(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),X(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let h={dy:l,input:o},p={filterSize:n,strides:r,pad:a},d=Ra.runKernel(rt,h,p);return u?Jo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Oc={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Mc(e,r,a,s,i)}}},Lc={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>si(e,a,!1,!1),b:()=>si(e,r,!0,!1)}:s&&!i?{a:()=>si(a,e,!1,!0),b:()=>si(r,e,!1,!1)}:{a:()=>si(a,e,!0,!0),b:()=>si(e,r,!0,!0)}:{a:()=>si(e,a,!1,!0),b:()=>si(r,e,!0,!1)}}},zc={kernelName:ot,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>lh(e,r,a)}}},Pc={kernelName:ut,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Nu(e,o,!0)}}},Bc={kernelName:ht,gradFunc:e=>({x:()=>e.clone()})},Wc={kernelName:pt,gradFunc:e=>({x:()=>Bl(e)})},Vc={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Pl(Mu(eu(r,a),ou(r,s)),e,Bl(e))}}},Uc={kernelName:ft,inputsToSave:["x"],gradFunc:wc.gradFunc},Gc={kernelName:mt,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=ue(a,t[0].shape)[0],i=r.map((e=>e[s]));return jh(e,i,s).map((e=>()=>e))}},Hc={kernelName:gt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return X(Xo(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>kl(r.shape,e,a,i,o,l),filter:()=>Cp(r,e,a.shape,i,o,l)}}},jc={kernelName:bt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>vl(e,a,s,i,o,1,l),filter:()=>Cp(e,r,a.shape,s,i,o,l)}}};var qc=Ha({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Jo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Jo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),X(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),X(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),X(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),X(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),X(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Ra.runKernel(vt,o,l)}}),Kc={kernelName:xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;X(Xo(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>Sl(i.shape,e,o,a,s),filter:()=>qc(i,e,o.shape,a,s)}}},Xc={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(xu(Oh(Ps(n,"float32"))),e)}}},Yc={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(Lh(Ps(n,"float32")),e)}}},Zc={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=$u([a],r.rank),n=El(e,a,s,!i);return null!=t&&(n=oi(n,t)),n}}}},Jc={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;X(Xo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return X(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),X(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),X(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),X(Yo(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&X(ne(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Rp(l.shape,e,u,a,s,r,i),filter:()=>Fp(l,e,u.shape,a,s,r,i)}}},Qc={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Ra.runKernel(Rt,s,n),filter:()=>Ra.runKernel(Dt,i,n)}}},ef={kernelName:Ot,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Ra.runKernel(Lt,r)}}},tf={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=So(Hl(xu(Ku(n))),2/Math.sqrt(Math.PI));return{x:()=>So(e,r)}}},nf={kernelName:Bt,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,n)}}},rf={kernelName:Wt,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Jo(e,n.shape)}}},af={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,Hl(n))}}},sf={kernelName:jt,gradFunc:e=>({x:()=>Bl(e)})},of={kernelName:qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=No(e,Ps(r,"float32")),s=Ol(n.shape,a);return s.length>0?Jo(Nu(t,s),n.shape):t},b:()=>{let t=So(e,Ps(n,"float32")),s=Ol(r.shape,a);s.length>0&&(t=Jo(Nu(t,s),r.shape));let i=Ku(r);return xu(No(t,Ps(i,"float32")))}}}},lf={kernelName:Kt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?$h(1):o,u=Ol(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=Iu(a,s),d=So(e,l),c=Ah(ko(i,$h(r))),f=So(So(So(c,c),c),$h(-.5));return{x:()=>1===s.rank?Jo(So(So(e,Kl(Jo(c,[1,1,1,s.shape[0]]),h)),l),a.shape):Jo(So(So(e,c),l),a.shape),mean:()=>{let e=So(So(c,$h(-1)),d);return 1===s.rank&&(e=Nu(e,u)),Jo(e,s.shape)},variance:()=>{let e=So(So(f,p),d);return 1===s.rank&&(e=Nu(e,u)),Jo(e,s.shape)},scale:()=>{let t=So(p,c),n=So(e,t);return 1===s.rank&&(n=Nu(n,u)),Jo(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Nu(t,u)),Jo(t,s.shape)}}}},uf={kernelName:Xt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=ue(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),h=u.length,p=hf(0,l),d=hf(l+1,l+1+h),c=pf([o,[n],u]),f=Jo(e,c),m=Jo(a,[n]),g=pf([[l],p,d]),y=oi(f,g),b=up(y,m,r.shape[i]),x=Fu(g);return b=oi(b,x),b},indices:()=>a}}};function hf(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function pf(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var df={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Bl(n),b:()=>Bl(r)}}},cf={kernelName:Qt,gradFunc:e=>({x:()=>Ps(e,"float32")})},ff={kernelName:nn,gradFunc:e=>({x:()=>Bl(e)})},mf={kernelName:rn,gradFunc:e=>({x:()=>Bl(e)})},gf={kernelName:an,gradFunc:e=>({x:()=>Bl(e)})},yf={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=Ql(r,0);return{x:()=>Pl(s,e,So(e,a))}}},bf={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,ko(n,1))}}},xf={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,Ps(n,"float32"))}}},vf={kernelName:mn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=Hl(r);return Iu(e,So(Nu(e,a,!0),t))}}}};var wf=Ha({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Ra.runKernel(yn,o,l)}}),kf={kernelName:gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>wf(r,a,e,s,i,o,l)}}};function If(e,t,n,r){return t.rank<n.rank&&(t=Jo(t,Eu(t.shape,r))),e.rank<n.rank&&(e=Jo(e,Eu(e.shape,r))),{x:()=>So(e,Ps(zl(n,t),e.dtype))}}var Nf={kernelName:bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=If(e,t[1],s,ue(a,s.shape));return{x:()=>i.x()}}},Sf={kernelName:xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>So(e,Ps(eu(n,r),"float32")),b:()=>So(e,Ps(iu(n,r),"float32"))}}};var Cf=Ha({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Va(e,"dy","maxPool3dGrad"),l=Va(t,"input","maxPool3dGrad"),u=Va(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=Jo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=Jo(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Jo(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),X(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),X(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),X(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&X(ne(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));let f={dy:h,input:p,output:d},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Ra.runKernel(In,f,m);return c?Jo(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),_f={kernelName:kn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Cf(e,r,a,s,i,o,l)}}};var Tf=Ha({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Va(e,"dy","maxPoolGrad"),l=Va(t,"input","maxPoolGrad"),u=Va(n,"output","maxPoolGrad");X(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),X(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),X(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&X(ne(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));let h={dy:o,input:l,output:u},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Ra.runKernel(wn,h,p)}}),Ef={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>rl(e,s,r.shape)}}},Af={kernelName:mr,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>il(e,r,a)}}},$f={kernelName:gr,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>tl(e,r)}}};var Ff=[wc,kc,Ic,Nc,Sc,Cc,_c,Tc,Ec,Ac,$c,Fc,Dc,Oc,Lc,zc,Pc,Bc,Wc,Vc,Uc,Gc,jc,Hc,Kc,Xc,Yc,Zc,Jc,Qc,{kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=No(e,Ps(r,"float32")),s=Ol(n.shape,a);return s.length>0?Jo(Nu(t,s),n.shape):t},b:()=>{let t=So(e,Ps(n,"float32")),s=Ol(r.shape,a);s.length>0&&(t=Jo(Nu(t,s),r.shape));let i=Ku(r);return xu(No(t,Ps(i,"float32")))}}}},ef,tf,nf,rf,af,of,sf,lf,uf,df,cf,ff,mf,gf,yf,bf,xf,vf,kf,Nf,Nf,Sf,_f,{kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Tf(e,r,a,s,i,o)}}},{kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=ue(a,r.shape),i=Q(Tu(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Jo(e,t);return No(So(n,eh(r.shape,"float32")),i)}}}},{kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=If(e,i,s,ue(a,s.shape));return{x:()=>o.x()}}},{kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>So(e,Ps(ou(n,r),"float32")),b:()=>So(e,Ps(Ql(n,r),"float32"))}}},{kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>rl(e,s,r.shape)}}},{kernelName:En,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=Ol(n.shape,a);return t.length>0?Jo(Nu(e,t),n.shape):e},b:()=>{let t=So(e,xu(Zl(No(n,r)))),s=Ol(r.shape,a);return s.length>0?Jo(Nu(t,s),r.shape):t}}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=So(e,Ps(r,"float32")),s=Ol(n.shape,a);return s.length>0?Jo(Nu(t,s),n.shape):t},b:()=>{let t=So(e,Ps(n,"float32")),s=Ol(r.shape,a);return s.length>0?Jo(Nu(t,s),r.shape):t}}}},{kernelName:Fn,gradFunc:e=>({x:()=>xu(e)})},{kernelName:zn,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Qu(n.shape,"float32")}}},{kernelName:Ln,gradFunc:e=>({x:()=>Bl(e)})},{kernelName:Pn,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return hp(e,r).map((e=>()=>e))}},Ef,Ef,{kernelName:Vn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Ll(s.shape,i.shape);return{a:()=>{let t=Ps(i,"float32"),n=So(e,So(t,hh(s,Iu(t,$h(1))))),r=Ol(s.shape,o);return r.length>0&&(n=Nu(n,r)),Jo(n,s.shape)},b:()=>{let t=Ql(s,0),n=Pl(t,hu(s),Bl(s)),r=So(e,So(a,n)),l=Ol(i.shape,o);return l.length>0&&(r=Nu(r,l)),Jo(r,i.shape)}}}},{kernelName:Un,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=Ql(n,0);return{x:()=>Pl(a,e,So(e,r)),alpha:()=>{let t=Pl(a,Bl(e),So(e,n)),s=Ol(r.shape,e.shape);return s.length>0&&(t=Nu(t,s)),Jo(t,r.shape)}}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,xu(Ku(n)))}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=So(ou(n,6),Jh(n));return{x:()=>So(e,Ps(r,"float32"))}}},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,Ps(Jh(n),"float32"))}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Jo(e,n.shape)}}},{kernelName:Jn,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ra.runKernel(Qn,a,n)}}},{kernelName:Yn,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Ra.runKernel(Zn,a,n)}}},{kernelName:tr,gradFunc:(e,t,n)=>{let{dims:r}=n,a=ue(r,e.shape);return{x:()=>Nh(e,a)}}},{kernelName:nr,gradFunc:e=>({x:()=>Bl(e)})},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xu(No(e,So(hh(n,1.5),2)))}}},{kernelName:sr,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Ps(Bl(n),"float32"),t:()=>So(e,Ps(n,e.dtype)),e:()=>So(e,Ps(Ou(n),e.dtype))}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Ql(n,$h(0)),r=$h(Xd),a=$h(Yd),s=So(e,a),i=So(So(e,r),Hl(Ps(n,"float32")));return Pl(t,s,i)}}}},{kernelName:pr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,So(n,Iu($h(1),n)))}}},{kernelName:hr,gradFunc:e=>({x:()=>Bl(e)})},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(_l(Ps(n,"float32")),e)}}},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(Tl(Ps(n,"float32")),e)}}},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Mi(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>rh(e,u)}}},{kernelName:yr,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=So(e,r);return{logits:()=>Iu(s,So(Nu(s,[a],true),r))}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,nl(n))}}},Af,Af,$f,$f,{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,So(Kh(Ps(n,"float32")),2))}}},{kernelName:br,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=$h(2);return{a:()=>So(e,So(a,Iu(n,r))),b:()=>So(e,So(a,Iu(r,n)))}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(e,So(Ps(n,"float32"),2))}}},{kernelName:Fr,gradFunc:e=>({x:()=>Bl(e)})},{kernelName:vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Ll(n.shape,r.shape);return{a:()=>{let t=e,r=Ol(n.shape,a);return r.length>0&&(t=Nu(t,r)),Jo(t,n.shape)},b:()=>{let t=e,n=Ol(r.shape,a);return n.length>0&&(t=Nu(t,n)),Jo(xu(t),r.shape)}}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;ue(s,r.shape).forEach((e=>{a[e]=1}));let i=Jo(e,a),o=So(i,eh(r.shape,"float32"));return{x:()=>o}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>No(e,Ku(_l(n)))}}},{kernelName:Nr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>So(Iu($h(1),Ku(n)),e)}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=Bl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=ko(t,rl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=ko(t,rl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=ko(t,rl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=ko(t,rl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:_r,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Fu(a);return{x:()=>oi(e,s)}}},{kernelName:Er,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Zh(e,a)}}},{kernelName:Ar,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Vu(t,Bl(t)),r=Jl(e,n),a=eu(t,$h(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=jl(a,e+1);a=Mu(a,eh(r.shape,"bool"));let i=Bl(r);return Pl(a,r,i)}(e,n)}}},{kernelName:$r,gradFunc:e=>({x:()=>Bl(e)})}];for(let e of Ff)Gr(e);ca().prototype.abs=function(){return this.throwIfDisposed(),Co(this)},ca().prototype.acos=function(){return this.throwIfDisposed(),_o(this)},ca().prototype.acosh=function(){return this.throwIfDisposed(),To(this)},ca().prototype.add=function(e){return this.throwIfDisposed(),ko(this,e)},ca().prototype.all=function(e,t){return this.throwIfDisposed(),Ao(this,e,t)},ca().prototype.any=function(e,t){return this.throwIfDisposed(),$o(this,e,t)},ca().prototype.argMax=function(e){return this.throwIfDisposed(),Fo(this,e)},ca().prototype.argMin=function(e){return this.throwIfDisposed(),Ro(this,e)},ca().prototype.asScalar=function(){return this.throwIfDisposed(),X(1===this.size,(()=>"The array must have only 1 element.")),Jo(this,[])},ca().prototype.asType=function(e){return this.throwIfDisposed(),Ps(this,e)},ca().prototype.as1D=function(){return this.throwIfDisposed(),Jo(this,[this.size])},ca().prototype.as2D=function(e,t){return this.throwIfDisposed(),Jo(this,[e,t])},ca().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Jo(this,[e,t,n])},ca().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Jo(this,[e,t,n,r])},ca().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Jo(this,[e,t,n,r,a])},ca().prototype.asin=function(){return this.throwIfDisposed(),Do(this)},ca().prototype.asinh=function(){return this.throwIfDisposed(),Mo(this)},ca().prototype.atan=function(){return this.throwIfDisposed(),Oo(this)},ca().prototype.atan2=function(e){return this.throwIfDisposed(),Lo(this,e)},ca().prototype.atanh=function(){return this.throwIfDisposed(),zo(this)},ca().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Qo(this,e,t,n,r)},ca().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),il(this,e,t)},ca().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),ll(this,e,t,n,r,a)},ca().prototype.broadcastTo=function(e){return this.throwIfDisposed(),cl(this,e)},ca().prototype.cast=function(e){return this.throwIfDisposed(),Ps(this,e)},ca().prototype.ceil=function(){return this.throwIfDisposed(),fl(this)},ca().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},ca().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof da&&(e=[e]),tl([this,...e],t)},ca().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wl(this,e,t,n,r,a,s)},ca().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Il(this,e,t,n,r,a)},ca().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),vl(this,e,t,n,r,a,s)},ca().prototype.cos=function(){return this.throwIfDisposed(),_l(this)},ca().prototype.cosh=function(){return this.throwIfDisposed(),Tl(this)},ca().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),El(this,e,t,n)},ca().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},ca().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fl(this,e,t,n,r,a,s)},ca().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Dl(this,e,t,n,r,a)},ca().prototype.divNoNan=function(e){return this.throwIfDisposed(),Wl(this,e)},ca().prototype.div=function(e){return this.throwIfDisposed(),No(this,e)},ca().prototype.dot=function(e){return this.throwIfDisposed(),Vl(this,e)},ca().prototype.elu=function(){return this.throwIfDisposed(),Ul(this)},ca().prototype.equal=function(e){return this.throwIfDisposed(),zl(this,e)},ca().prototype.erf=function(){return this.throwIfDisposed(),Gl(this)},ca().prototype.exp=function(){return this.throwIfDisposed(),Hl(this)},ca().prototype.expandDims=function(e){return this.throwIfDisposed(),jl(this,e)},ca().prototype.expm1=function(){return this.throwIfDisposed(),ql(this)},ca().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)},ca().prototype.flatten=function(){return this.throwIfDisposed(),Jo(this,[this.size])},ca().prototype.floor=function(){return this.throwIfDisposed(),Zl(this)},ca().prototype.floorDiv=function(e){return this.throwIfDisposed(),Io(this,e)},ca().prototype.gather=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},ca().prototype.greaterEqual=function(e){return this.throwIfDisposed(),eu(this,e)},ca().prototype.greater=function(e){return this.throwIfDisposed(),Ql(this,e)},ca().prototype.ifft=function(){return this.throwIfDisposed(),Gh(this)},ca().prototype.irfft=function(){return this.throwIfDisposed(),Hh(this)},ca().prototype.isFinite=function(){return this.throwIfDisposed(),nu(this)},ca().prototype.isInf=function(){return this.throwIfDisposed(),ru(this)},ca().prototype.isNaN=function(){return this.throwIfDisposed(),au(this)},ca().prototype.leakyRelu=function(e){return this.throwIfDisposed(),su(this,e)},ca().prototype.lessEqual=function(e){return this.throwIfDisposed(),ou(this,e)},ca().prototype.less=function(e){return this.throwIfDisposed(),iu(this,e)},ca().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),uu(this,e,t,n,r)},ca().prototype.logSigmoid=function(){return this.throwIfDisposed(),wu(this)},ca().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Su(this,e)},ca().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Du(this,e,t)},ca().prototype.log=function(){return this.throwIfDisposed(),hu(this)},ca().prototype.log1p=function(){return this.throwIfDisposed(),pu(this)},ca().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Mu(this,e)},ca().prototype.logicalNot=function(){return this.throwIfDisposed(),Ou(this)},ca().prototype.logicalOr=function(e){return this.throwIfDisposed(),Lu(this,e)},ca().prototype.logicalXor=function(e){return this.throwIfDisposed(),zu(this,e)},ca().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),si(this,e,t,n)},ca().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Pu(this,e,t,n,r)},ca().prototype.max=function(e,t){return this.throwIfDisposed(),ku(this,e,t)},ca().prototype.maximum=function(e){return this.throwIfDisposed(),Vu(this,e)},ca().prototype.mean=function(e,t){return this.throwIfDisposed(),Uu(this,e,t)},ca().prototype.min=function(e,t){return this.throwIfDisposed(),Gu(this,e,t)},ca().prototype.minimum=function(e){return this.throwIfDisposed(),Hu(this,e)},ca().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},ca().prototype.mod=function(e){return this.throwIfDisposed(),qu(this,e)},ca().prototype.mul=function(e){return this.throwIfDisposed(),So(this,e)},ca().prototype.neg=function(){return this.throwIfDisposed(),xu(this)},ca().prototype.norm=function(e,t,n){return this.throwIfDisposed(),gp(this,e,t,n)},ca().prototype.notEqual=function(e){return this.throwIfDisposed(),Ju(this,e)},ca().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ii(this,e,t,n)},ca().prototype.onesLike=function(){return this.throwIfDisposed(),th(this)},ca().prototype.pad=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},ca().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),uh(this,e,t,n,r,a)},ca().prototype.pow=function(e){return this.throwIfDisposed(),hh(this,e)},ca().prototype.prelu=function(e){return this.throwIfDisposed(),ph(this,e)},ca().prototype.prod=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},ca().prototype.reciprocal=function(){return this.throwIfDisposed(),wh(this)},ca().prototype.relu=function(){return this.throwIfDisposed(),kh(this)},ca().prototype.relu6=function(){return this.throwIfDisposed(),Ih(this)},ca().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Jo(this,e.shape)},ca().prototype.reshape=function(e){return this.throwIfDisposed(),Jo(this,e)},ca().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),sd(this,e,t,n)},ca().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),id(this,e,t,n)},ca().prototype.reverse=function(e){return this.throwIfDisposed(),Nh(this,e)},ca().prototype.rfft=function(){return this.throwIfDisposed(),qh(this)},ca().prototype.round=function(){return this.throwIfDisposed(),Eh(this)},ca().prototype.rsqrt=function(){return this.throwIfDisposed(),Ah(this)},ca().prototype.selu=function(){return this.throwIfDisposed(),Fh(this)},ca().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Rh(this,e,t,n,r,a,s)},ca().prototype.sigmoid=function(){return this.throwIfDisposed(),nl(this)},ca().prototype.sign=function(){return this.throwIfDisposed(),Mh(this)},ca().prototype.sin=function(){return this.throwIfDisposed(),Oh(this)},ca().prototype.sinh=function(){return this.throwIfDisposed(),Lh(this)},ca().prototype.slice=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},ca().prototype.softmax=function(e){return this.throwIfDisposed(),Vh(this,e)},ca().prototype.softplus=function(){return this.throwIfDisposed(),vu(this)},ca().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},ca().prototype.split=function(e,t){return this.throwIfDisposed(),jh(this,e,t)},ca().prototype.sqrt=function(){return this.throwIfDisposed(),Kh(this)},ca().prototype.square=function(){return this.throwIfDisposed(),Ku(this)},ca().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Xh(this,e)},ca().prototype.squeeze=function(e){return this.throwIfDisposed(),Yh(this,e)},ca().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof da?[this,e]:[this,...e];return Zh(n,t)},ca().prototype.step=function(e){return this.throwIfDisposed(),Jh(this,e)},ca().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Qh(this,e,t,n,r,a,s,i,o)},ca().prototype.sub=function(e){return this.throwIfDisposed(),Iu(this,e)},ca().prototype.sum=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},ca().prototype.tan=function(){return this.throwIfDisposed(),ep(this)},ca().prototype.tanh=function(){return this.throwIfDisposed(),al(this)},ca().prototype.tile=function(e){return this.throwIfDisposed(),Kl(this,e)},ca().prototype.toBool=function(){return this.throwIfDisposed(),Ps(this,"bool")},ca().prototype.toFloat=function(){return this.throwIfDisposed(),Ps(this,"float32")},ca().prototype.toInt=function(){return this.throwIfDisposed(),Ps(this,"int32")},ca().prototype.topk=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},ca().prototype.transpose=function(e){return this.throwIfDisposed(),oi(this,e)},ca().prototype.unique=function(e){return this.throwIfDisposed(),lp(this,e)},ca().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),up(this,e,t)},ca().prototype.unstack=function(e){return this.throwIfDisposed(),hp(this,e)},ca().prototype.where=function(e,t){return this.throwIfDisposed(),Pl(e,this,t)},ca().prototype.zerosLike=function(){return this.throwIfDisposed(),Bl(this)};var Rf,Df={};function Mf(){return null==Rf&&(Rf=vo().epsilon()),Rf}w(Df,{maxNorm:()=>ym,minMaxNorm:()=>vm,nonNeg:()=>xm,unitNorm:()=>bm});var Of=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Of.prototype)}},Lf=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lf.prototype)}},zf=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zf.prototype)}},Pf=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pf.prototype)}},Bf=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bf.prototype)}},Wf=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wf.prototype)}};function Vf(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function Uf(e,t){if(!e)throw new Bf(t)}function Gf(e,t){let n=0;for(let r of e)r===t&&n++;return n}function Hf(e){return 1===e.length?e[0]:e}function jf(e){return Array.isArray(e)?e:[e]}function qf(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Xf={};function Yf(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Zf(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Zf(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Zf(t):e[n]=t.value)}}}function Jf(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in Xf)a=Xf[s];else if(a=t[s],null==a)throw new zf(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new zf(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in Xf?[i,o]=Xf.className:l in t&&([i,o]=t[l]),null==i)throw new zf(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(Xf))e[t]=Xf[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},Xf);for(let e of Object.keys(n))Xf[e]=n[e];Zf(s.config);let r=o(i,s.config,n,a);return Xf=Object.assign({},t),r}{let e=Object.assign({},Xf);for(let e of Object.keys(n))Xf[e]=n[e];let t=new i(s.config);return Xf=Object.assign({},e),t}}}function Qf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function em(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function tm(e){if(null==e)throw new zf(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function nm(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new zf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function rm(e,t,n=0,r=1/0){return Uf(n>=0),Uf(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function am(e,t){Array.isArray(e)?(Xr.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>am(e,`element ${n+1} of ${t}`)))):Xr.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${sm(e)}.`))}function sm(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>sm(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function im(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function om(e,t){return lo((()=>Kh(Nu(So(e,e),t,!0))))}var lm=class extends Li.Serializable{getConfig(){return{}}},um=class extends lm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>{let t=om(e,this.axis),n=ml(t,0,this.maxValue);return So(e,No(n,ko(Mf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};um.className="MaxNorm",Li.registerClass(um);var hm=class extends lm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>No(e,ko(Mf(),om(e,this.axis)))))}getConfig(){return{axis:this.axis}}};hm.className="UnitNorm",Li.registerClass(hm);var pm=class extends lm{apply(e){return kh(e)}};pm.className="NonNeg",Li.registerClass(pm);var dm=class extends lm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>{let t=om(e,this.axis),n=ko(So(this.rate,ml(t,this.minValue,this.maxValue)),So(1-this.rate,t));return So(e,No(n,ko(Mf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};dm.className="MinMaxNorm",Li.registerClass(dm);var cm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fm(e){return Yf(e)}function mm(e,t={}){return Jf(e,Li.SerializationMap.getMap().classNameMap,t,"constraint")}function gm(e){if(null==e)return null;if("string"==typeof e){return mm({className:e in cm?cm[e]:e,config:{}})}return e instanceof lm?e:mm(e)}function ym(e){return new um(e)}function bm(e){return new hm(e)}function xm(){return new pm}function vm(e){return new dm(e)}var wm={};w(wm,{constant:()=>Eg,glorotNormal:()=>Og,glorotUniform:()=>Mg,heNormal:()=>Lg,heUniform:()=>zg,identity:()=>Rg,leCunNormal:()=>Pg,leCunUniform:()=>Bg,ones:()=>Tg,orthogonal:()=>Wg,randomNormal:()=>$g,randomUniform:()=>Ag,truncatedNormal:()=>Fg,varianceScaling:()=>Dg,zeros:()=>_g});var km=["channelsFirst","channelsLast"],Im=["nearest","bilinear"],Nm=["valid","same","causal"],Sm=["max","avg"],Cm=["sum","mul","concat","ave"],_m=new Map;function Tm(e){nm(km,"DataFormat",e)}function Em(e){nm(Nm,"PaddingMode",e)}function Am(e){nm(Sm,"PoolMode",e)}var $m=[];function Fm(e,t){$m.push(e);try{let e=t();return $m.pop(),e}catch(e){throw $m.pop(),e}}function Rm(e){if(!Om(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===$m.length?"":$m.join("/")+"/")+e}function Dm(e){if(!Om(e))throw new Error("Not a valid tensor name: '"+e+"'");_m.has(e)||_m.set(e,0);let t=_m.get(e);if(_m.set(e,_m.get(e)+1),t>0){let n=`${e}_${t}`;return _m.set(n,1),n}return e}var Mm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Om(e){return!!e.match(Mm)}function Lm(e){return e===parseInt(e.toString(),10)}function zm(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Pm(e){return tp(e=Array.isArray(e)?new Float32Array(e):e)}function Bm(e){return Gu(Pm(e)).dataSync()[0]}function Wm(e){return ku(Pm(e)).dataSync()[0]}function Vm(e,t){if(t<e)throw new zf(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Um(e,t){return e.asType(t)}function Gm(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Hm(e,t,n){return lo((()=>{switch(e.rank){case 1:return zh(e,t,n);case 2:return Ph(e,[t,0],[n,e.shape[1]]);case 3:return Bh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Wh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return rl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return rl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new zf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function jm(e,t,n){return lo((()=>{switch(e.rank){case 1:return zh(e,t,n);case 2:return Ph(e,[0,t],[e.shape[0],n]);case 3:return Bh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Wh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new zf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qm(e,t,n,r){return lo((()=>{switch(e.rank){case 1:return zh(e,t,n);case 2:switch(r){case 1:return Hm(e,t,n);case 2:return jm(e,t,n);default:throw new zf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Hm(e,t,n);case 2:return Bh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return jm(e,t,n);default:throw new zf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Hm(e,t,n);case 2:return Wh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Wh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return jm(e,t,n);default:throw new zf(`The axis is not within the rank of the tensor ${r}`)}default:throw new zf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Km(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),tl(e,t)}function Xm(e,t){switch(e.rank){case 1:return gl([e,t]);case 2:return yl([e,t],0);case 3:return bl([e,t],0);case 4:return xl([e,t],0);default:throw new zf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ym(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new zf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Kl(e,t)}function Zm(e,t=0,n=1,r,a){return yh(e,t,n,r,a)}function Jm(e,t,n,r){if(e.rank<2||t.rank<2)throw new Pf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Pf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){let a=!1,s=!1;return Sp.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?tg(e.rank,r,"channelsLast"):null,activation:n})}{let a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(h).reshape([l,-1]);let p=[...a,...u],d=!1,c=!1;return Sp.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:r?tg(e.rank,r,"channelsLast"):null,activation:n}).reshape(p)}}function Qm(e,t,n){return lo((()=>(t=Array.isArray(t)?tp(t,"int32"):t.toInt(),Jl(e,t,n))))}function eg(e){return So(e,e)}function tg(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new zf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new zf(`Unsupported input rank by biasAdd: ${t.rank}`)}function ng(e,t,n){return lo((()=>(null==n&&(n="channelsLast"),Tm(n),e.add(tg(e.rank,t,n)))))}function rg(e,t,n,r){return lo((()=>wp(e,t,n,r)))}function ag(e,t,n=!1){return n?e():t()}var sg=["fanIn","fanOut","fanAvg"],ig=["normal","uniform","truncatedNormal"];var og=class extends Li.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},lg=class extends og{apply(e,t){return Qu(e,t)}};lg.className="Zeros",Li.registerClass(lg);var ug=class extends og{apply(e,t){return eh(e,t)}};ug.className="Ones",Li.registerClass(ug);var hg=class extends og{constructor(e){if(super(),"object"!=typeof e)throw new zf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new zf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return lo((()=>So($h(this.value),eh(e,t))))}getConfig(){return{value:this.value}}};hg.className="Constant",Li.registerClass(hg);var pg=class extends og{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return bh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};pg.className="RandomUniform",Li.registerClass(pg);var dg=class extends og{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pf(`randomNormal does not support dType ${t}.`);return Zm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};dg.className="RandomNormal",Li.registerClass(dg);var cg=class extends og{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pf(`truncatedNormal does not support dType ${t}.`);return op(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};cg.className="TruncatedNormal",Li.registerClass(cg);var fg=class extends og{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return lo((()=>{if(2!==e.length||e[0]!==e[1])throw new zf("Identity matrix initializer can only be used for 2D square matrices.");return So(this.gain,Xl(e[0]))}))}getConfig(){return{gain:this.gain}}};fg.className="Identity",Li.registerClass(fg);var mg=class extends og{constructor(e){if(super(),e.scale<0)throw new zf(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){nm(sg,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){nm(ig,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(Tm(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=zm(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=zm(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=zm(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pf(`${this.getClassName()} does not support dType ${t}.`);return op(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return bh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};mg.className="VarianceScaling",Li.registerClass(mg);var gg=class extends mg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mg.className}};gg.className="GlorotUniform",Li.registerClass(gg);var yg=class extends mg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mg.className}};yg.className="GlorotNormal",Li.registerClass(yg);var bg=class extends mg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mg.className}};bg.className="HeNormal",Li.registerClass(bg);var xg=class extends mg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mg.className}};xg.className="HeUniform",Li.registerClass(xg);var vg=class extends mg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return mg.className}};vg.className="LeCunNormal",Li.registerClass(vg);var wg=class extends mg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return mg.className}};wg.className="LeCunNormal",Li.registerClass(wg);var kg=class extends og{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Pf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return lo((()=>{if(e.length<2)throw new Pf("Shape must be at least 2D.");e[0],e[1];let t=Zm(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Nd.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),So(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};kg.className="Orthogonal",Li.registerClass(kg);var Ig={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ng(e,t={}){return Jf(e,Li.SerializationMap.getMap().classNameMap,t,"initializer")}function Sg(e){return Yf(e)}function Cg(e){if("string"==typeof e){let t=e in Ig?Ig[e]:e;if("GlorotNormal"===t)return new yg;if("GlorotUniform"===t)return new gg;if("HeNormal"===t)return new bg;if("HeUniform"===t)return new xg;if("LeCunNormal"===t)return new vg;if("LeCunUniform"===t)return new wg;{let e={};return e.className=t,e.config={},Ng(e)}}return e instanceof og?e:Ng(e)}function _g(){return new lg}function Tg(){return new ug}function Eg(e){return new hg(e)}function Ag(e){return new pg(e)}function $g(e){return new dg(e)}function Fg(e){return new cg(e)}function Rg(e){return new fg(e)}function Dg(e){return new mg(e)}function Mg(e){return new gg(e)}function Og(e){return new yg(e)}function Lg(e){return new bg(e)}function zg(e){return new xg(e)}function Pg(e){return new vg(e)}function Bg(e){return new wg(e)}function Wg(e){return new kg(e)}var Vg={};w(Vg,{Layer:()=>oy,RNN:()=>Fx,RNNCell:()=>Rx,activation:()=>Qv,add:()=>lw,alphaDropout:()=>Jw,average:()=>uw,averagePooling1d:()=>bw,averagePooling2d:()=>ww,averagePooling3d:()=>Nw,avgPool1d:()=>xw,avgPool2d:()=>kw,avgPool3d:()=>Sw,avgPooling1d:()=>vw,avgPooling2d:()=>Iw,avgPooling3d:()=>Cw,batchNormalization:()=>mw,bidirectional:()=>Gw,concatenate:()=>hw,conv1d:()=>Hv,conv2d:()=>jv,conv2dTranspose:()=>qv,conv3d:()=>Kv,convLstm2d:()=>Bw,convLstm2dCell:()=>Ww,cropping2D:()=>Yv,dense:()=>ew,depthwiseConv2d:()=>Jv,dot:()=>fw,dropout:()=>tw,elu:()=>Pv,embedding:()=>ow,flatten:()=>rw,gaussianDropout:()=>Zw,gaussianNoise:()=>Yw,globalAveragePooling1d:()=>_w,globalAveragePooling2d:()=>Tw,globalMaxPool1d:()=>jw,globalMaxPool2d:()=>qw,globalMaxPooling1d:()=>Ew,globalMaxPooling2d:()=>Aw,gru:()=>Dw,gruCell:()=>Mw,input:()=>Mb,inputLayer:()=>zv,layerNormalization:()=>gw,leakyReLU:()=>Wv,lstm:()=>Ow,lstmCell:()=>Lw,masking:()=>Qw,maxPool1d:()=>Kw,maxPool2d:()=>Xw,maxPooling1d:()=>$w,maxPooling2d:()=>Fw,maxPooling3d:()=>Rw,maximum:()=>pw,minimum:()=>dw,multiply:()=>cw,permute:()=>iw,prelu:()=>Vv,reLU:()=>Bv,repeatVector:()=>aw,reshape:()=>sw,rnn:()=>Vw,separableConv2d:()=>Xv,simpleRNN:()=>zw,simpleRNNCell:()=>Pw,softmax:()=>Uv,spatialDropout1d:()=>nw,stackedRNNCells:()=>Uw,thresholdedReLU:()=>Gv,timeDistributed:()=>Hw,upSampling2d:()=>Zv,zeroPadding2d:()=>yw});var Ug=0;function Gg(){return Ug++}var Hg={};function jg(e=""){return e in Hg||(Hg[e]=0),Hg[e]+=1,e+Hg[e].toString()}function qg(e){return Array.isArray(e)&&Array.isArray(e[0])}function Kg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new zf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Yg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new zf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Zg(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var Jg="Variable",Qg=class{constructor(e,t="float32",n=Jg,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Gg(),n=null==n?Jg:n,this.originalName=Rm(n),this.name=Dm(this.originalName),this.trainable_=r,this.constraint=a,this.val=pp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function ey(e){return e.map((e=>e.read()))}function ty(e){e.forEach((e=>{e[0].write(e[1])}))}var ny=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},ry=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Gg(),null!=s&&(this.originalName=Rm(s),this.name=Dm(this.originalName)),this.rank=t.length}},ay=0,sy=class{constructor(e,t){this.callArgs=t,this.id=ay++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},iy=0,oy=class extends Li.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=iy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=qf(e)+"_"+jg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Lf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new zf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Of(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Of(`Layer ${this.name} is not connected, no input to return.`);return Hf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Of(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Of(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=jf(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=jf(this.inputSpec);if(e.length!==t.length)throw new zf(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new zf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new zf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new zf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new zf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new zf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new zf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=jf(e),r=!0;for(let e of n)if(!(e instanceof ry)){r=!1;break}let a=!0;for(let e of n)if(e instanceof ry){a=!1;break}if(r===a)throw new zf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of jf(e))t.push(n.shape);this.build(Hf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=jf(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Hf(s),null!=this.activityRegularizer)throw new Pf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=jf(e);let t=[];for(let n of e)t.push(n.shape);return Hf(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new ry(s,n,this,jf(e),t,this.name,r))):new ry(s,a,this,jf(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new Pf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Of(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Of(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Lf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Zg(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ey(e?this.trainableWeights:this.weights)}setWeights(e){lo((()=>{let t=this.weights;if(t.length!==e.length)throw new zf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=ey(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!Xr.arraysEqual(s.shape,o.shape))throw new zf(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ty(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new zf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Cg("zeros"));let o=r.apply(t,n),l=new Qg(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=jf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=jf(e);t=jf(t),n=jf(n),r=jf(r),a=Kg(a),s=Kg(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new sy({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function ly(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=ly(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var uy,hy=class extends oy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:jg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new zf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new zf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new zf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new ry(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new zf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function py(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new zf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new hy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function dy(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];uo(r)}}function cy(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}hy.className="InputLayer",Li.registerClass(hy),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(uy||(uy={}));var fy=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},my=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},gy=class extends fy{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=lo((()=>ko(this.totals[e],So(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:lo((()=>{let n=So(No(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ho(t[e])})))}},yy=class extends fy{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},by=class extends fy{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Xr.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Xr.now();return(...a)=>{let s=Xr.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await dy(n),r.push(this.yield(e,t,n))),r.push(Ld()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await dy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await dy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Ld()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await dy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await dy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Ld()):Xr.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await dy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await dy(e),await this.trainEnd(e))}};function xy(e,t){return null==e&&(e={}),e instanceof fy?[e]:Array.isArray(e)&&e[0]instanceof fy?e:jf(e).map((e=>new by(e,t)))}var vy=class{constructor(){}static registerCallbackConstructor(e,t){Xr.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),vy.checkForDuplicate(t),null==vy.constructors[e]&&(vy.constructors[e]=[]),vy.constructors[e].push(t)}static checkForDuplicate(e){for(let t in vy.constructors)vy.constructors[+t].forEach((t=>{if(t===e)throw new zf("Duplicate callback constructor.")}))}static clear(){vy.constructors={}}static createCallbacks(e){let t=[];for(let n in vy.constructors){let r=+n;e>=r&&t.push(...vy.constructors[r])}return t.map((e=>new e))}};function wy(e,t,n,r,a,s,i,o,l){let u=new yy,h=[new gy,...vy.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new my(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function ky(e,t={},n=!1){return Jf(e,Li.SerializationMap.getMap().classNameMap,t,"layer",n)}function Iy(e,t){return lo((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));let n=Nu(eg(e),t,!0),r=Yl(n.shape,Mf()),a=Kh(Vu(n,r));return No(e,a)}))}function Ny(e,t){return lo((()=>Uu(eg(Iu(t,e)),-1)))}function Sy(e,t){return lo((()=>Uu(Co(Iu(t,e)),-1)))}function Cy(e,t){return lo((()=>{let n=Iu(e,t),r=ml(Co(e),Mf(),Number.MAX_VALUE),a=Co(No(n,r));return So(100,Uu(a,-1))}))}function _y(e,t,n=!1){return lo((()=>{if(n)t=Vh(t);else{let e=Nu(t,t.shape.length-1,!0);t=No(t,e)}return t=ml(t,Mf(),1-Mf()),xu(Nu(So(e.toFloat(),hu(t)),t.shape.length-1))}))}function Ty(e,t,n=!1){return lo((()=>{let r=Zl(function(e){let t=[zm(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=ml(t,Mf(),1-Mf())).shape;return _y(ii(r,a[a.length-1]).reshape(a),t,n)}))}function Ey(e,t){return lo((()=>{let n;return n=ml(t,Mf(),1-Mf()),n=hu(No(n,Iu(1,n))),Uu(function(e,t){if(!Xr.arraysEqual(e.shape,t.shape))throw new zf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return lo((()=>{let n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Ay(e,t){return lo((()=>{let n=Iy(e,-1),r=Iy(t,-1),a=So(n,r);return xu(Nu(a,-1))}))}vy.constructors={};var $y={meanSquaredError:Ny,meanAbsoluteError:Sy,meanAbsolutePercentageError:Cy,meanSquaredLogarithmicError:function(e,t){return lo((()=>{let n=ml(t,Mf(),Number.MAX_VALUE),r=hu(ko(1,n)),a=ml(e,Mf(),Number.MAX_VALUE),s=hu(ko(1,a));return Uu(eg(Iu(r,s)),-1)}))},squaredHinge:function(e,t){return lo((()=>{let n=Vu(0,Iu(1,So(e,t)));return Uu(eg(n),-1)}))},hinge:function(e,t){return lo((()=>{let n=Vu(0,Iu(1,So(e,t)));return Uu(n,-1)}))},categoricalHinge:function(e,t){return lo((()=>{let n=Nu(So(e,t),-1),r=ku(So(Iu(1,e),t),-1);return Vu(0,ko(1,Iu(r,n)))}))},logcosh:function(e,t){return lo((()=>{let n=Math.log(2),r=Iu(t,e),a=Iu(ko(r,vu(So(-2,r))),n);return Uu(a,-1)}))},categoricalCrossentropy:_y,sparseCategoricalCrossentropy:Ty,binaryCrossentropy:Ey,kullbackLeiblerDivergence:function(e,t){return lo((()=>{let n=ml(e,Mf(),1),r=ml(t,Mf(),1);return Nu(So(e,hu(No(n,r))),-1)}))},poisson:function(e,t){return lo((()=>{let n=hu(ko(Mf(),t));return Uu(Iu(t,So(e,n)),-1)}))},cosineProximity:Ay};function Fy(e){if("string"==typeof e){if(e in $y)return $y[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new zf(t)}return e}function Ry(e,t){return lo((()=>{let n=So(.5,th(t)),r=Um(Ql(t,n),e.dtype);return Uu(zl(e,r),-1)}))}function Dy(e,t){return lo((()=>Um(zl(Fo(e,-1),Fo(t,-1)),"float32")))}function My(e,t){return lo((()=>Mu(e.equal(1),t.equal(1)).sum().cast("float32")))}function Oy(e,t){return lo((()=>{let n=My(e,t),r=function(e,t){return lo((()=>Mu(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return Pl(Ql(a,0),n.div(a),0).cast("float32")}))}function Ly(e,t){return lo((()=>{let n=My(e,t),r=function(e,t){return lo((()=>Mu(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),a=n.add(r);return Pl(Ql(a,0),n.div(a),0).cast("float32")}))}function zy(e,t){return Ey(e,t)}function Py(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),zl(e,t).asType("float32")}var By=_y,Wy=Ty,Vy={binaryAccuracy:Ry,categoricalAccuracy:Dy,precision:Oy,categoricalCrossentropy:By,sparseCategoricalCrossentropy:Wy,mse:Ny,MSE:Ny,mae:Sy,MAE:Sy,mape:Cy,MAPE:Cy,cosine:Ay};function Uy(e){if("string"==typeof e&&e in Vy)return Vy[e];if("string"!=typeof e&&null!=e)return e;throw new zf(`Unknown metric ${e}`)}function Gy(e){if(Uf(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys($y))if($y[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Vy))if(Vy[n]===e){t=n;break}return void 0!==t?t:e.name}}function Hy(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!jy(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){JSON.stringify(e).length}}function jy(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!jy(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!jy(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function qy(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Output shape","Param #"];if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ky(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?Xy(o[e],n,r):Yy(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?Zg(e.collectedTrainableWeights):Zg(e.trainableWeights),t}(e),u=Zg(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function Ky(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Xy(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ky([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Yy(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let s=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}let i=e.name,o=e.getClassName(),l=0===s.length?"":s[0];Ky([`${i} (${o})`,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)Ky(["","","",s[e]],t,r)}function Zy(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Jy(e,t){if(null===e)return null;if("string"==typeof e)return Kf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Zy(t,a,r)?n.push(r):n.push(Jy(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=Kf(n);t[e]=Jy(r,e)}}return t}}function Qy(e,t){if(null==e)return null;if("string"==typeof e)return qf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];Zy(t,a,r)?n.push(r):n.push(Qy(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n],a=qf(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Qy(r,n):r}return t}}var eb="3.0.0";var tb=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof tb)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new zf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ps(t,e.dtype)}catch(n){throw new zf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ry){if(null==this.id2Value[e.id])throw new zf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new zf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ry){if(null==this.id2Value[e.id])throw new zf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new zf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&uo(this.id2Mask)}},nb={},rb={};function ab(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let h,p,d=o.join(",")+"|"+t.names().join(",");if(null==nb[d]){let e=function(e,t){Xr.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=ib(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=ib(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:sb(r)}}(i,t);h=e.sorted,p=e.recipientCounts,nb[d]=h,rb[d]=p}h=nb[d],p={},a||Object.assign(p,rb[d]);let c=new tb(t);for(let e=0;e<h.length;++e){if(null!=r){let e=io().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=h[e],i=s.sourceLayer;if(i instanceof hy)continue;let u=[],d=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),d.push(r),null!=r&&(m=!0),a||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=d[0]);let g=jf(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,d));let b=ob(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||uo(f)}return c.disposeMasks(),s?l:l[0]}function sb(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ib(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function ob(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var lb=class extends oy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=jg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],em(this.inputs).length!==this.inputs.length)throw new zf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);em(this.outputs).length,this.outputs.length,this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Uf(0===n,"input layer has >1 nodes"),Uf(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof hy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new Lf(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(lb.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let h=i.slice().reverse();for(let e of h){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let p={};for(let e in t){let r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}let d={};for(let e in r){let t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(Qf);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof lb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(p).map((e=>parseInt(e,10))).sort(Qf);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of p[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new Lf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new Lf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new zf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new zf(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new zf(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new zf(`${e.length} of ${r} weights are not set: ${e}`)}ty(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${eb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Qy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return lo((()=>{e=jf(e);let n=new tb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ab(this.outputs,n,t)}))}computeMask(e,t){return lo((()=>{let n;return e=jf(e),n=null==t?Vf(null,e.length):jf(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Kg(e);if(t.length!==this.inputLayers.length)throw new zf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qf);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=Kg(t.computeOutputShape(Hf(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];Uf(t in n),a.push(n[t])}return Hf(a)}runInternalGraph(e,t){null==t&&(t=Vf(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qf);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=jf(t.call(e,u)),l=jf(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=jf(t.call(r,u)),l=jf(t.computeMask(r,i));if(t.activityRegularizer)throw new Pf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){Uf(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof lb?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=lb.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new zf(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new zf("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new zf(`No such layer: ${e}`)}calculateLosses(){return lo((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=lb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=lb.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[lb.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=lb.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=lb.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(Hf(r),n)}function l(e){let n=e.name,s=ky(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new zf(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,h=t.layers;for(let e of h)l(e);for(;!tm(s);)for(let e of h){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let p=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],r=e[2];Uf(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];Uf(t in a);let s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new zf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){lo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function ub(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function hb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=lo((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){let t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());uo(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),tp(a,"float32")}return null}function pb(e,t){return So(e,t)}function db(e,t){let n,r,a=t;n=a.xs,r=a.ys,Xr.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=cb("input",e.inputNames,n),i=cb("output",e.outputNames,r),o=s[0].shape[0];Xr.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Xr.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)Xr.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Xr.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function cb(e,t,n){if(n instanceof da)return[n];if(Array.isArray(n))return Xr.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new zf(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function fb(e,t,n){let r=null!=n.batchesPerEpoch;if(Xr.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Xr.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Xr.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Xr.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Xr.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(mb(n.validationData))Xr.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new Pf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let h=xy(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=wy(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let h=0,p=0;for(r||(m=await t.iterator());!r||h<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done)break;if(null!=t.value){let{xs:r,ys:a}=db(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await d.onBatchBegin(p,s);let i=[];if(null!=n.classWeight){let t=ub(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await hb(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);uo(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,ho(n)}await d.onBatchEnd(p,s),cy(s),p++,h++}if(r?h>=n.batchesPerEpoch:t.done){if(i){let t;t=mb(n.validationData)?jf(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):jf(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function mb(e){return"function"==typeof e.iterator}function gb(e){Xr.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function yb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Hm(e,t,n-t))):Hm(e,t,n-t)}function bb(e,t){return lo((()=>null==e?null:Array.isArray(e)?e.map((e=>bb(e,t))):Qm(e,"int32"===t.dtype?t:t.toInt())))}function xb(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function vb(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,h;e.isTraining=!0;try{let p=null==r.batchSize?32:r.batchSize;gb(p);let d=!1,c=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,p);a=c[0],s=c[1],h=c[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Pf("validationData including sample weights is not supported yet."):new zf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];let t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];l=yb(a,e,t),a=yb(a,0,e),u=yb(s,e,t),s=yb(s,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);let g=a.concat(s).concat(h);e.checkTrainableWeightsConsistency();let y,b,x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();m?(e.makeTestFunction(),y=e.testFunction,b=v.slice().concat(v.map((e=>"val_"+e)))):(y=null,f=[],b=v.slice());let w=xy(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,h,p,d,c,f){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new zf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=Vm(0,y)),null==i&&(i=1);let{callbackList:b,history:x}=wy(o,i,s,d,y,c,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);let s={};if(null!=c)throw new Pf("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Pf("batch shuffling is not implemneted yet");h&&Xr.shuffle(g);let i=tp(g),o=xb(y,a);for(let h=0;h<o.length;++h){let p={};if(await b.onBatchBegin(h,p),lo((()=>{let d=o[h][0],c=o[h][1],f=Hm(i,d,c-d);p.batch=h,p.size=c-d;let g=bb(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];p[t]=n,ho(n)}if(h===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];ho(a),s["val_"+n]=a}}})),await b.onBatchEnd(h,p),cy(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,g,v,p,r.epochs,r.verbose,w,y,f,r.shuffle,b,r.initialEpoch,null,null)}finally{e.isTraining=!1,kb(a,t),kb(s,n),kb(l,i),kb(u,o),null!=h&&uo(h)}}function wb(e){let t=[];e instanceof da&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(Gm(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function kb(e,t){if(null==e)return;let n=[];if(t instanceof da)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof da)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ib(e){return Array.isArray(e)}function Nb(e){return!function(e){return e instanceof da}(e)&&!Ib(e)}function Sb(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ib(e)&&e.length>0)t=!0;else if(Nb(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new zf(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Nb(e)){e=e,s=[];for(let n of t){if(null==e[n])throw new zf(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Ib(e)){if((e=e).length!==t.length)throw new zf(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new zf(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=wb(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new zf(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l>=0&&o!==l)throw new zf(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Cb(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new zf(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new zf(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new zf(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new zf(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var _b=class extends lb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new zf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");qy(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Md.adagrad(.01),Adadelta:()=>Md.adadelta(1,.95,Mf()),Adam:()=>Md.adam(.001,.9,.999,Mf()),Adamax:()=>Md.adamax(.002,.9,.999,Mf(),0),RMSProp:()=>Md.rmsprop(.001,.9,0,Mf()),SGD:()=>Md.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new zf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Cd))throw new zf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new zf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>Fy(e)))}else{let n=Fy(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new zf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)e.loss[n],t.push(Fy(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fm("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Fm("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===Ey?-1!==["accuracy","acc"].indexOf(i)?r=Ry:-1!==["crossentropy","ce"].indexOf(i)&&(r=zy):this.lossFunctions[e]===Ty?-1!==["accuracy","acc"].indexOf(i)?r=Py:-1!==["crossentropy","ce"].indexOf(i)&&(r=Wy):-1!==["accuracy","acc"].indexOf(i)?r=Dy:-1!==["crossentropy","ce"].indexOf(i)&&(r=By),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=Uy(i),n=""+Gy(i);let t;Fm(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&(this.trainableWeights.length,this.collectedTrainableWeights.length)}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;gb(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction;return Hf(this.testLoop(i,s,r,n.verbose,n.steps))}finally{kb(a[0],e),kb(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new Pf("Verbose mode is not implemented yet.");Xr.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=lo((()=>{if(t.value){let{xs:n,ys:r}=db(e,t.value),i=n.concat(r),u=lo((()=>a(i)));if(uo(i),0===l)for(let e=0;e<u.length;++e)s.push($h(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=lo((()=>ko(s[e],So(h,t)))),l>0&&uo(n)}uo(u),o+=h,++l}return s})),t.done)break}for(let e=0;e<s.length;++e){let t=s[e];s[e]=No(s[e],o),uo(t)}return Hf(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new zf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new zf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new zf("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new tb;if(e instanceof da&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new zf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new zf(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=ab(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Vf(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new zf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return lo((()=>{let r=this.checkNumSamples(e);if(n)throw new Pf("Verbose predictLoop() is not implemented yet.");let a=xb(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)lo((()=>{let n=a[t][0],r=a[t][1],s=yb(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new tb(i);return ab(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Hf(s.map((e=>tl(e,0))))}))}predict(e,t={}){let n=wb(e);Cb(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return gb(r),this.predictLoop(n,r)}finally{kb(n,e)}}predictOnBatch(e){Cb(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Lf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===Ty?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){let r=em(e.map((e=>e.shape[0])));r.sort();let a=em(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new zf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new zf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!Xr.arraysEqual(r,a))throw new zf(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Sb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sb(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[Ny,Ey,_y];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===_y&&1===s.shape[s.shape.length-1])throw new zf(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new zf(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new zf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=ub(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await hb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return lo((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Pf("Verbose mode is not implemented yet.");if(null!=a)throw new Pf("steps mode in testLoop() is not implemented yet");{let r=xb(s,n),a=tp(Vm(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=Hm(a,s,o-s),u=bb(t,l),h=e(u);if(0===n)for(let e=0;e<h.length;++e)i.push($h(0));for(let e=0;e<h.length;++e){let t=h[e];i[e]=ko(i[e],So(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=No(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;Gf(e,r)>1&&(a+=`_${Gf(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new tb(e),l=ab(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=pb(n,a[e]));let s=Uu(n);t.push(s),i=0===e?n:ko(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Uu(t(r[a],l[a]))}ho(n),s.push(n)}return i=Uu(i),this.calculateLosses().forEach((e=>{i=ko(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>lo((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new tb(s),o=ab(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Uu(r(a[e],o[e]));t=0===e?s:ko(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Uu(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return vb(this,e,t,n)}async fitDataset(e,t){return fb(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return uo(s),Hf(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=io().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-io().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=qf(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>qf(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=qf(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[qf(Gy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>qf(Gy(e))));{let e={};for(let t in this.metrics)e[t]=qf(Gy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=ky(Jy(e.optimizer_config));if("string"==typeof e.loss)t=Kf(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>Kf(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=Kf(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>Kf(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=Kf(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Vs.getSaveHandlers(e);if(0===t.length)throw new zf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new zf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new zf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Vs.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${eb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Vs.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Vs.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){let e=!0;Hy(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Hy(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};_b.className="Model",Li.registerClass(_b);var Tb=class extends _b{};async function Eb(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);let r=ky(Jy(n),t);if(null!=e.weightsManifest){let t=await Vs.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),uo(t)}return r}async function Ab(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Vs.getLoadHandlers(e,t);if(0===n.length)n.push(Vs.browserHTTPRequest(e,t));else if(n.length>1)throw new zf(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new zf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=ky(Jy(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new zf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Vs.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),uo(e),uo(t.map((e=>e.tensor)))}return o}(e,void 0,t)}Tb.className="Functional",Li.registerClass(Tb);var $b=class extends _b{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:jg("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new zf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof $b||e instanceof _b;if(n){if(t=e,1!==t.outputs.length)throw new zf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new zf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new zf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=py({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new zf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new zf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ly(this.outputs[0])}this.inboundNodes=[],new sy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Vf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new _b({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Lf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Lf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Lf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Lf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new zf("Legacy serialization format not supported yet.");a=t}else Xr.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof $b))throw new Pf(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=ky(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new zf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new zf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function Fb(e){return new _b(e)}function Rb(e){return new $b(e)}function Db(e,t){return null==t&&(t={}),Ab(e,t)}function Mb(e){return py(e)}function Ob(e,t){vy.registerCallbackConstructor(e,t)}$b.className="Sequential",Li.registerClass($b);var Lb=class extends Li.Serializable{getConfig(){return{}}},zb=class extends Lb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Pf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ul(e)}(e,t)}};zb.className="elu",Li.registerClass(zb);var Pb=class extends Lb{apply(e){return Fh(e)}};Pb.className="selu",Li.registerClass(Pb);var Bb=class extends Lb{apply(e){return kh(e)}};Bb.className="relu",Li.registerClass(Bb);var Wb=class extends Lb{apply(e){return lo((()=>Hu(6,kh(e))))}};Wb.className="relu6",Li.registerClass(Wb);var Vb=class extends Lb{apply(e){return e}};Vb.className="linear",Li.registerClass(Vb);var Ub=class extends Lb{apply(e){return nl(e)}};Ub.className="sigmoid",Li.registerClass(Ub);var Gb=class extends Lb{apply(e){return function(e){return lo((()=>{let t=ko(.5,So(.2,e));return ml(t,0,1)}))}(e)}};Gb.className="hardSigmoid",Li.registerClass(Gb);var Hb=class extends Lb{apply(e){return vu(e)}};Hb.className="softplus",Li.registerClass(Hb);var jb=class extends Lb{apply(e){return function(e){return lo((()=>No(e,Co(e).add(1))))}(e)}};jb.className="softsign",Li.registerClass(jb);var qb=class extends Lb{apply(e){return al(e)}};qb.className="tanh",Li.registerClass(qb);var Kb=class extends Lb{apply(e,t=-1){return Vh(e,t)}};Kb.className="softmax",Li.registerClass(Kb);var Xb=class extends Lb{apply(e,t=-1){return Su(e,t)}};Xb.className="logSoftmax",Li.registerClass(Xb);var Yb=class extends Lb{apply(e,t=1){return lo((()=>nl(e.mul(t)).mul(e)))}};function Zb(e){return e.getClassName()}function Jb(e,t={}){return Jf(e,Li.SerializationMap.getMap().classNameMap,t,"activation")}function Qb(e){if(null==e){let e={className:"linear",config:{}};return Jb(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},Jb(t)}return e instanceof Lb?e:Jb(e)}function ex(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Yb.className="swish",Li.registerClass(Yb);var tx=class extends Li.Serializable{},nx=class extends tx{constructor(e){super(),ex(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return lo((()=>{let t=Qu([1]);return this.hasL1&&(t=ko(t,Nu(So(this.l1,Co(e))))),this.hasL2&&(t=ko(t,Nu(So(this.l2,eg(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};nx.className="L1L2",Li.registerClass(nx);var rx={l1l2:"L1L2"};function ax(e){return Yf(e)}function sx(e,t={}){return Jf(e,Li.SerializationMap.getMap().classNameMap,t,"regularizer")}function ix(e){if(null==e)return null;if("string"==typeof e){return sx({className:e in rx?rx[e]:e,config:{}})}return e instanceof tx?e:sx(e)}var ox=class extends oy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xg(e);let n=kh(e);return null!=this.maxValue&&(n=ml(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ox.className="ReLU",Li.registerClass(ox);var lx=class extends oy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xg(e);return su(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};lx.className="LeakyReLU",Li.registerClass(lx);var ux=class extends oy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ix(e.alphaRegularizer),this.alphaConstraint=gm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new zf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=Yg(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ny({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xg(e),ph(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Sg(this.alphaInitializer),alphaRegularizer:ax(this.alphaRegularizer),alphaConstraint:fm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};ux.className="PReLU",Li.registerClass(ux);var hx=class extends oy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Pf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Xg(e);return Ul(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};hx.className="ELU",Li.registerClass(hx);var px=class extends oy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=Xg(e);return n.mul(Um(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};px.className="ThresholdedReLU",Li.registerClass(px);var dx=class extends oy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Kb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Xg(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function cx(e,t,n){if("number"==typeof e)return Vf(e,t);if(e.length!==t)throw new zf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!Lm(a))throw new zf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function fx(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function mx(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Wm([n-t,0]);else{if("same"!==r)throw new zf(`Unsupport padding mode: ${r}.`);e*=t}return e}function gx(e,t){return lo((()=>(Tm(t),"channelsFirst"===t?oi(e,[0,2,3,1]):e)))}function yx(e,t){return lo((()=>(Tm(t),"channelsFirst"===t?oi(e,[0,2,3,4,1]):e)))}function bx(e,t,n,r=[1,1],a="valid",s,i,o=null){return lo((()=>{if(null==s&&(s="channelsLast"),Tm(s),3!==e.rank&&4!==e.rank)throw new zf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new zf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=gx(e,s);if("causal"===a)throw new Pf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sp.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=oi(l,[0,3,1,2])),l}))}dx.className="Softmax",Li.registerClass(dx);var xx=class extends oy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xx.verifyArgs(t),this.rank=e,am(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cx(t.kernelSize,e,"kernelSize"),this.strides=cx(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Em(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Tm(this.dataFormat),this.activation=Qb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gm(t.biasConstraint),this.biasRegularizer=ix(t.biasRegularizer),this.activityRegularizer=ix(t.activityRegularizer),this.dilationRate=cx(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new zf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new zf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new zf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Uf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!rm(e.kernelSize,"number",1,3))throw new zf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Zb(this.activation),useBias:this.useBias,biasInitializer:Sg(this.biasInitializer),biasRegularizer:ax(this.biasRegularizer),activityRegularizer:ax(this.activityRegularizer),biasConstraint:fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},vx=class extends xx{constructor(e,t){super(e,t),this.kernel=null,vx.verifyArgs(t),this.filters=t.filters,am(this.filters,"filters"),this.kernelInitializer=Cg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gm(t.kernelConstraint),this.kernelRegularizer=ix(t.kernelRegularizer)}build(e){e=Yg(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zf(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return lo((()=>{e=Xg(e);let t,n=null==this.bias?null:this.bias.read(),r=im(this.activation.getClassName());if(null!=r&&2===this.rank)t=bx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return lo((()=>{if(null==s&&(s="channelsLast"),Tm(s),3!==e.shape.length)throw new zf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new zf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new zf(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=oi(e,[0,2,1])),"causal"===a)throw new Pf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=wl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=ng(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=bx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return lo((()=>{if(null==s&&(s="channelsLast"),Tm(s),4!==e.rank&&5!==e.rank)throw new zf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new zf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=yx(e,s);if("causal"===a)throw new Pf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Nl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=ng(o,n)),"channelsFirst"===s&&(o=oi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yg(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=fx(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Sg(this.kernelInitializer),kernelRegularizer:ax(this.kernelRegularizer),kernelConstraint:fm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new zf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},wx=class extends vx{constructor(e){super(2,e),wx.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rm(e.kernelSize,"number",1,2))throw new zf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};wx.className="Conv2D",Li.registerClass(wx);var kx=class extends vx{constructor(e){super(3,e),kx.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new zf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};kx.className="Conv3D",Li.registerClass(kx);var Ix=class extends wx{constructor(e){if(super(e),this.inputSpec=[new ny({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new zf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Yg(e)).length)throw new zf("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zf("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ny({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return lo((()=>{let t=Xg(e);if(4!==t.shape.length)throw new zf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,mx(i,h,l,this.padding),mx(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=oi(t,[0,2,3,1]));let c=Il(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=oi(c,[0,3,1,2])),null!=this.bias&&(c=ng(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=Yg(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=mx(a[n],o,s,this.padding),a[r]=mx(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ix.className="Conv2DTranspose",Li.registerClass(Ix);var Nx=class extends vx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new zf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new zf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new zf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ix(t.depthwiseRegularizer),this.depthwiseConstraint=gm(t.depthwiseConstraint),this.pointwiseInitializer=Cg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ix(t.pointwiseRegularizer),this.pointwiseConstraint=gm(t.pointwiseConstraint)}build(e){if((e=Yg(e)).length<this.rank+2)throw new zf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new zf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new ny({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return lo((()=>{let t;if(e=Xg(e),1===this.rank)throw new Pf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=oi(e,[0,2,3,1])),t=Rh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ng(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=oi(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Sg(this.depthwiseInitializer),e.pointwiseInitializer=Sg(this.pointwiseInitializer),e.depthwiseRegularizer=ax(this.depthwiseRegularizer),e.pointwiseRegularizer=ax(this.pointwiseRegularizer),e.depthwiseConstraint=fm(this.depthwiseConstraint),e.pointwiseConstraint=fm(this.pointwiseConstraint),e}};Nx.className="SeparableConv";var Sx=class extends Nx{constructor(e){super(2,e)}};Sx.className="SeparableConv2D",Li.registerClass(Sx);var Cx=class extends vx{constructor(e){super(1,e),Cx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rm(e.kernelSize,"number",1,1))throw new zf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Cx.className="Conv1D",Li.registerClass(Cx);var _x=class extends oy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return lo((()=>{if(e=Xg(e),"channelsLast"===this.dataFormat){let t=qm(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qm(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=qm(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qm(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};_x.className="Cropping2D",Li.registerClass(_x);var Tx=class extends oy{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Tm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){nm(Im,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return lo((()=>{let t=Xg(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=oi(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return oi(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Tx.className="UpSampling2D",Li.registerClass(Tx);var Ex=class extends xx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gm(e.depthwiseConstraint),this.depthwiseRegularizer=ix(e.depthwiseRegularizer)}build(e){if((e=Yg(e)).length<4)throw new zf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new zf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return lo((()=>{null==a&&(a="channelsLast"),Tm(a);let i=gx(e,a);if(4!==e.rank)throw new zf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new zf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Fl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=oi(i,[0,3,1,2])),i}))}(e=Xg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ng(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=fx(t,this.kernelSize[0],this.padding,this.strides[0]),s=fx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Sg(this.depthwiseInitializer),e.depthwiseRegularizer=ax(this.depthwiseRegularizer),e.depthwiseConstraint=fm(this.depthwiseRegularizer),e}};function Ax(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new zf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function $x(e,t,n,r=!1,a,s,i=!1,o=!1){return lo((()=>{let i=t.shape.length;if(i<3)throw new zf(`Input should be at least 3D, but is ${i}D.`);let l=[1,0].concat(Vm(2,i));if(t=oi(t,l),null!=s)throw new Pf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");null!=a&&((a=a.asType("bool").asType("float32")).rank===i-1&&(a=jl(a,-1)),a=oi(a,l)),r&&(t=Nh(t,0),null!=a&&(a=Nh(a,0)));let u,h,p,d=[],c=n,f=t.shape[0],m=hp(t);null!=a&&(h=hp(a));for(let t=0;t<f;++t){let n=m[t],r=lo((()=>e(n,c)));if(null==a)u=r[0],c=r[1];else{let e=lo((()=>{let e=h[t],n=th(e).sub(e);return{output:r[0].mul(e).add(c[0].mul(n)),newStates:c.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));u=e.output,c=e.newStates}o&&d.push(u)}return o&&(p=Zh(d,1)),[u,p,c]}))}Ex.className="DepthwiseConv2D",Li.registerClass(Ex);var Fx=class extends oy{constructor(e){let t;if(super(e),null==e.cell)throw new zf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Bx({cells:e.cell}):e.cell,null==t.stateSize)throw new zf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ny({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Vm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){qg(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return lo((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Pf("Constants support is not implemented in RNN yet.");qg(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ny({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Xr.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new zf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new ny({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){lo((()=>{if(!this.stateful)throw new Of("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new zf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qu([n,e]))):this.states_=[Qu([n,this.cell.stateSize])];else if(null==e)uo(this.states_),null!=this.keptStates&&(uo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Qu([n,e]))):this.states_[0]=Qu([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):uo(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Xr.arraysEqual(r.shape,s))throw new zf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ho(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=Ax(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new ny({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof ry){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return lo((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=Xg(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new zf(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll;let i={training:r},o=$x(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return lo((()=>{let t=Qu(e.shape);return t=Nu(t,[1,2]),t=Gm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ym(t,[1,e]):t)):this.cell.stateSize>1?[Ym(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Fx.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let r=ky(t.cell,n);return new e(Object.assign(t,{cell:r}))}};Fx.className="RNN",Li.registerClass(Fx);var Rx=class extends oy{},Dx=class extends Rx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,am(this.units,"units"),this.activation=Qb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ix(e.kernelRegularizer),this.recurrentRegularizer=ix(e.recurrentRegularizer),this.biasRegularizer=ix(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Bm([1,Wm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bm([1,Wm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{if(2!==(e=e).length)throw new zf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Wx({ones:()=>th(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Wx({ones:()=>th(n),rate:this.recurrentDropout,training:r}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=Jm(null!=s?So(e,s):e,this.kernel.read()),null!=this.bias&&(a=ng(a,this.bias.read())),null!=i&&(n=So(n,i));let o=ko(a,Jm(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Zb(this.activation),useBias:this.useBias,kernelInitializer:Sg(this.kernelInitializer),recurrentInitializer:Sg(this.recurrentInitializer),biasInitializer:Sg(this.biasInitializer),kernelRegularizer:ax(this.kernelRegularizer),recurrentRegularizer:ax(this.recurrentRegularizer),biasRegularizer:ax(this.biasRegularizer),activityRegularizer:ax(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Dx.className="SimpleRNNCell",Li.registerClass(Dx);var Mx=class extends Fx{constructor(e){e.cell=new Dx(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};Mx.className="SimpleRNN",Li.registerClass(Mx);var Ox=class extends Rx{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new zf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,am(this.units,"units"),this.activation=Qb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Qb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ix(e.kernelRegularizer),this.recurrentRegularizer=ix(e.recurrentRegularizer),this.biasRegularizer=ix(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Bm([1,Wm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bm([1,Wm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=Yg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{if(2!==(e=e).length)throw new zf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Wx({ones:()=>th(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Wx({ones:()=>th(r),rate:this.recurrentDropout,training:n,count:3}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=So(e,o[0]));let u=Jm(e,this.kernel.read());this.useBias&&(u=ng(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=So(r,l[0]));let h=this.recurrentKernel.read(),[p,d]=jh(h,[2*this.units,this.units],h.rank-1),c=Jm(r,p),[f,m,g]=jh(u,3,u.rank-1),[y,b]=jh(c,2,c.rank-1);a=this.recurrentActivation.apply(ko(f,y)),s=this.recurrentActivation.apply(ko(m,b));let x=Jm(So(s,r),d);i=this.activation.apply(ko(g,x));let v=ko(So(a,r),So(ko(1,xu(a)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Zb(this.activation),recurrentActivation:Zb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sg(this.kernelInitializer),recurrentInitializer:Sg(this.recurrentInitializer),biasInitializer:Sg(this.biasInitializer),kernelRegularizer:ax(this.kernelRegularizer),recurrentRegularizer:ax(this.recurrentRegularizer),biasRegularizer:ax(this.biasRegularizer),activityRegularizer:ax(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Ox.className="GRUCell",Li.registerClass(Ox);var Lx=class extends Fx{constructor(e){e.implementation,e.cell=new Ox(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Lx.className="GRU",Li.registerClass(Lx);var zx=class extends Rx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,am(this.units,"units"),this.activation=Qb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Qb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ix(e.kernelRegularizer),this.recurrentRegularizer=ix(e.recurrentRegularizer),this.biasRegularizer=ix(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Bm([1,Wm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bm([1,Wm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=Yg(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends og{apply(t,n){let a=e.apply([r]),s=(new ug).apply([r]),i=e.apply([2*r]);return Xm(Xm(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return lo((()=>{let n=null!=t.training&&t.training;if(3!==(e=e).length)throw new zf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Wx({ones:()=>th(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Wx({ones:()=>th(r),rate:this.recurrentDropout,training:n,count:4}));let s,i,o,l,u=this.dropoutMask,h=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=So(e,u[0]));let p=Jm(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=So(r,h[0])),p=ko(p,Jm(r,this.recurrentKernel.read())),this.useBias&&(p=ng(p,this.bias.read()));let[d,c,f,m]=jh(p,4,p.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=ko(So(i,a),So(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=So(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Zb(this.activation),recurrentActivation:Zb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sg(this.kernelInitializer),recurrentInitializer:Sg(this.recurrentInitializer),biasInitializer:Sg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ax(this.kernelRegularizer),recurrentRegularizer:ax(this.recurrentRegularizer),biasRegularizer:ax(this.biasRegularizer),activityRegularizer:ax(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),recurrentConstraint:fm(this.recurrentConstraint),biasConstraint:fm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};zx.className="LSTMCell",Li.registerClass(zx);var Px=class extends Fx{constructor(e){e.implementation,e.cell=new zx(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Px.className="LSTM",Li.registerClass(Px);var Bx=class extends Rx{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return lo((()=>{let n=(e=e).slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;qg(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Fm(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(ky(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ey(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ty(t)}};function Wx(e){let{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>rg(t(),n),i=()=>ag(s,t,r);return!a||a<=1?ho(i().clone()):Array(a).fill(void 0).map(i).map((e=>ho(e.clone())))}Bx.className="StackedRNNCells",Li.registerClass(Bx);var Vx=class extends Fx{constructor(e){if(e.unroll)throw new Pf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ny({ndim:5})]}call(e,t){return lo((()=>{if(null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new zf("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return lo((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Qu([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){lo((()=>{if(!this.stateful)throw new Of("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new zf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qu(a))):this.states_=[Qu(a)];else if(null==e)uo(this.states_),null!=this.keptStates&&(uo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Qu(a))):this.states_[0]=Qu(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):uo(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!Xr.arraysEqual(n.shape,r))throw new zf(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ho(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=fx(l,r[0],a,s[0],i[0]),p=fx(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}};Vx.className="ConvRNN2D";var Ux=class extends zx{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,am(this.filters,"filters"),this.kernelSize=cx(n,2,"kernelSize"),this.kernelSize.forEach((e=>am(e,"kernelSize"))),this.strides=cx(r||1,2,"strides"),this.strides.forEach((e=>am(e,"strides"))),this.padding=a||"valid",Em(this.padding),this.dataFormat=s||"channelsLast",Tm(this.dataFormat),this.dilationRate=cx(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>am(e,"dilationRate")))}build(e){var t;e=Yg(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new zf(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends og{apply(e,t){return Km([n.apply([r]),eh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return lo((()=>{if(3!==e.length)throw new zf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Wx({ones:()=>th(r),rate:this.dropout,training:n,count:4}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?So(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Wx({ones:()=>th(a),rate:this.recurrentDropout,training:n,count:4}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,v]=jh(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?jh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,v,N,this.padding);let[S,C,_,T]=jh(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,_),g=this.recurrentConv(g,T);let E=this.recurrentActivation.apply(ko(l,c)),A=this.recurrentActivation.apply(ko(u,f)),$=ko(So(A,s),So(E,this.activation.apply(ko(h,m)))),F=So(this.recurrentActivation.apply(ko(p,g)),this.activation.apply($));return[F,F,$]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){let a=vl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ng(a,n,this.dataFormat):a}recurrentConv(e,t){return vl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Ux.className="ConvLSTM2DCell",Li.registerClass(Ux);var Gx=class extends Vx{constructor(e){let t=new Ux(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Gx.className="ConvLSTM2D",Li.registerClass(Gx);var Hx=class extends oy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ag((()=>rg(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Hx.className="Dropout",Li.registerClass(Hx);var jx=class extends Hx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};jx.className="SpatialDropout1D",Li.registerClass(jx);var qx=class extends oy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,am(this.units,"units"),this.activation=Qb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gm(e.kernelConstraint),this.biasConstraint=gm(e.biasConstraint),this.kernelRegularizer=ix(e.kernelRegularizer),this.biasRegularizer=ix(e.biasRegularizer),this.activityRegularizer=ix(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=Yg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=Yg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n,r=Xg(e),a=im(this.activation.getClassName());return null!=a?n=Jm(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=Jm(r,this.kernel.read()),null!=this.bias&&(n=ng(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:Zb(this.activation),useBias:this.useBias,kernelInitializer:Sg(this.kernelInitializer),biasInitializer:Sg(this.biasInitializer),kernelRegularizer:ax(this.kernelRegularizer),biasRegularizer:ax(this.biasRegularizer),activityRegularizer:ax(this.activityRegularizer),kernelConstraint:fm(this.kernelConstraint),biasConstraint:fm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};qx.className="Dense",Li.registerClass(qx);var Kx=class extends oy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yg(e);for(let t of e.slice(1))if(null==t)throw new zf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],zm(e,1)]}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new zf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],zm(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Kx.className="Flatten",Li.registerClass(Kx);var Xx=class extends oy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Qb(e.activation)}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);return this.activation.apply(n)}))}getConfig(){let e={activation:Zb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Xx.className="Activation",Li.registerClass(Xx);var Yx=class extends oy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return lo((()=>function(e,t){return lo((()=>{if(2!==e.shape.length)throw new zf(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ym(Gm(e,1),[1,t,1])}))}(e=Xg(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Yx.className="RepeatVector",Li.registerClass(Yx);var Zx=class extends oy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new zf("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=zm(e);if(null!==s){if(0===a||i%a!=0)throw new zf(n);r[s]=i/a}else if(i!==a)throw new zf(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Zx.className="Reshape",Li.registerClass(Zx);var Jx=class extends oy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Vm(1,e.dims.length+1);if(!Xr.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ny({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=Yg(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return oi(Xg(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Jx.className="Permute",Li.registerClass(Jx);var Qx=class extends oy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Xg(e);return $o(Ju(n,this.maskValue),-1)}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e),r=$o(Ju(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}};Qx.className="Masking",Li.registerClass(Qx);var ev=class extends oy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(jf(e.inputLength))}this.inputDim=e.inputDim,am(this.inputDim,"inputDim"),this.outputDim=e.outputDim,am(this.outputDim,"outputDim"),this.embeddingsInitializer=Cg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ix(e.embeddingsRegularizer),this.activityRegularizer=ix(e.activityRegularizer),this.embeddingsConstraint=gm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return lo((()=>this.maskZero?(e=Xg(e),Ju(e,Bl(e))):null))}computeOutputShape(e){if(e=Yg(e),null==this.inputLength)return[...e,this.outputDim];let t=jf(this.inputLength);if(t.length!==e.length-1)throw new zf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new zf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);return"int32"!==n.dtype&&(n=Um(n,"int32")),Qm(this.embeddings.read(),n.as1D()).reshape(Yg(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Sg(this.embeddingsInitializer),embeddingsRegularizer:ax(this.embeddingsRegularizer),activityRegularizer:ax(this.activityRegularizer),embeddingsConstraint:fm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};ev.className="Embedding",Li.registerClass(ev);var tv=class extends oy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new zf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yg(e)]),(e=e).length<2)throw new zf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=em(t),t.length>1)throw new zf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===em(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return lo((()=>{if(e=e,this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=Wm(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=Gm(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=r.reshape([a].concat(zm(e.slice(1))));i=oi(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){let a=Vm(1,e).concat([0]);t.push(oi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=oi(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){let e=[a-1].concat(Vm(0,a-1));r=oi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=em(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return lo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new zf("`mask` should be an Array");if(!Array.isArray(e))throw new zf("`inputs` should be an Array");if(t.length!==e.length)throw new zf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:jl(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Mu(n,t[e]);return n}))}},nv=class extends tv{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ko(t,e[n]);return t}))}};nv.className="Add",Li.registerClass(nv);var rv=class extends tv{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=So(t,e[n]);return t}))}};rv.className="Multiply",Li.registerClass(rv);var av=class extends tv{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ko(t,e[n]);return So(1/e.length,t)}))}};av.className="Average",Li.registerClass(av);var sv=class extends tv{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vu(t,e[n]);return t}))}};sv.className="Maximum",Li.registerClass(sv);var iv=class extends tv{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hu(t,e[n]);return t}))}};iv.className="Minimum",Li.registerClass(iv);var ov=class extends tv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new zf("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(Xr.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new zf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return lo((()=>Km(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new zf("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new zf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new zf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new zf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return lo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(th(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(jl(t[n],-1)):r.push(t[n]);let a=tl(r,this.axis);return Ao(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function lv(e,t){for(;e<0;)e+=t;return e}ov.className="Concatenate",Li.registerClass(ov);var uv=class extends tv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Xr.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pf("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new zf(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new zf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>lv(t,e[n].shape.length))):[lv(this.axes,n.shape.length),lv(this.axes,r.shape.length)],this.normalize&&(n=Iy(n,t[0]),r=Iy(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pf("batchDot is not implemented for tensors of 4D or higher rank yet");if(Xr.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Xr.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Pf("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return lo((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[lv(this.axes,e.length),lv(this.axes,t.length)],n}computeOutputShape(e){Xr.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pf("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};uv.className="Dot",Li.registerClass(uv);var hv=class extends oy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);return ag((()=>Zm(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}};hv.className="GaussianNoise",Li.registerClass(hv);var pv=class extends oy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Xg(e);return this.rate>0&&this.rate<1?ag((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Zm(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};pv.className="GaussianDropout",Li.registerClass(pv);var dv=class extends oy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xg(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return lo((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ag((()=>{let t=Xg(e),r=-1.7580993408473766,a=eu(bh(n),this.rate);a=Um(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>Xg(e)),t.training||!1)}return e}))}};function cv(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=ul(e,t,n,r,a,s);else if(3===e.rank)i=hl(e,t,n,r,a,s);else{if(4!==e.rank)throw new Pf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=pl(e,t,n,r,a,s)}return i}function fv(e,t,n,r,a=.001){return Xr.arraysEqual(r.slice().sort(),Vm(0,e.rank-1))?function(e,t,n,r,a=.001){return lo((()=>{let s=Xu(e,r),i=s.mean,o=s.variance;return[cv(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return lo((()=>{let s=Xu(e,r),i=s.mean,o=s.variance,l=[];for(let t of Vm(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=i.reshape(l),h=o.reshape(l),p=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[cv(e,u,h,d,p,a),i,o]}))}(e,t,n,r,a)}dv.className="AlphaDropout",Li.registerClass(dv);var mv=class extends oy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cg(e.betaInitializer||"zeros"),this.gammaInitializer=Cg(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cg(e.movingVarianceInitializer||"ones"),this.betaConstraint=gm(e.betaConstraint),this.gammaConstraint=gm(e.gammaConstraint),this.betaRegularizer=ix(e.betaRegularizer),this.gammaRegularizer=ix(e.gammaRegularizer)}build(e){e=Yg(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new zf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ny({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return lo((()=>{let n=null!=t.training&&t.training,r=Xg(e),a=r.shape,s=a.length,i=Vm(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=Vf(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!Xr.arraysEqual(u,Vm(0,s).slice(0,s-1));if(!n)return(()=>{if(h){let e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,a=this.scale?this.gamma.read().reshape(l):null;return cv(r,e,t,n,a,this.epsilon)}return cv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[p,d,c]=fv(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{lo((()=>{let r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum)})(),p}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sg(this.betaInitializer),gammaInitializer:Sg(this.gammaInitializer),movingMeanInitializer:Sg(this.movingMeanInitializer),movingVarianceInitializer:Sg(this.movingVarianceInitializer),betaRegularizer:ax(this.betaRegularizer),gammaRegularizer:ax(this.gammaRegularizer),betaConstraint:fm(this.betaConstraint),gammaConstraint:fm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mv.className="BatchNormalization",Li.registerClass(mv);var gv=class extends oy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cg(e.betaInitializer||"zeros"),this.gammaInitializer=Cg(e.gammaInitializer||"ones"),this.betaRegularizer=ix(e.betaRegularizer),this.gammaRegularizer=ix(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=Yg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==em(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){let n=Xg(e),r=n.shape,a=r.length;return lo((()=>{let{mean:e,variance:t}=Xu(n,this.axis,!0),s=Vf(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(h),l=l.tile(h),cv(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sg(this.betaInitializer),gammaInitializer:Sg(this.gammaInitializer),betaRegularizer:ax(this.betaRegularizer),gammaRegularizer:ax(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gv.className="LayerNormalization",Li.registerClass(gv);var yv=class extends oy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new zf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new zf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new zf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){let t,n;return e=Yg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return lo((()=>function(e,t,n){return lo((()=>{if(4!==e.rank)throw new zf(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new zf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new zf(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],rh(e,r)}))}(Xg(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function bv(e,t,n,r,a,s){return lo((()=>{Tm(a),Am(s),Em(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=gx(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Pu(e,t,n,o):Qo(e,t,n,o),"channelsFirst"===a&&(i=oi(i,[0,3,1,2])),i}))}function xv(e,t,n,r,a,s){return lo((()=>{Tm(a),Am(s),Em(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=yx(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Bu(e,t,n,o):el(e,t,n,o),"channelsFirst"===a&&(i=oi(i,[0,4,1,2,3])),i}))}yv.className="ZeroPadding2D",Li.registerClass(yv);var vv=class extends oy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new zf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(am(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new zf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}am(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Em(this.padding),this.inputSpec=[new ny({ndim:3})]}computeOutputShape(e){let t=fx((e=Yg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return lo((()=>{this.invokeCallHook(e,t),e=Gm(Xg(e),2);let n=this.poolingFunction(Xg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yh(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},wv=class extends vv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),bv(e,t,n,r,a,"max")}};wv.className="MaxPooling1D",Li.registerClass(wv);var kv=class extends vv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),bv(e,t,n,r,a,"avg")}};kv.className="AveragePooling1D",Li.registerClass(kv);var Iv=class extends oy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new zf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];am(this.poolSize,"poolSize"),am(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Tm(this.dataFormat),Em(this.padding),this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){e=Yg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=fx(t,this.poolSize[0],this.padding,this.strides[0]),n=fx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return lo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Nv=class extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),bv(e,t,n,r,a,"max")}};Nv.className="MaxPooling2D",Li.registerClass(Nv);var Sv=class extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),bv(e,t,n,r,a,"avg")}};Sv.className="AveragePooling2D",Li.registerClass(Sv);var Cv=class extends oy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new zf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];am(this.poolSize,"poolSize"),am(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Tm(this.dataFormat),Em(this.padding),this.inputSpec=[new ny({ndim:5})]}computeOutputShape(e){e=Yg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=fx(t,this.poolSize[0],this.padding,this.strides[0]),n=fx(n,this.poolSize[1],this.padding,this.strides[1]),r=fx(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return lo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},_v=class extends Cv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),xv(e,t,n,r,a,"max")}};_v.className="MaxPooling3D",Li.registerClass(_v);var Tv=class extends Cv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tm(a),Em(r),xv(e,t,n,r,a,"avg")}};Tv.className="AveragePooling3D",Li.registerClass(Tv);var Ev=class extends oy{constructor(e){super(e),this.inputSpec=[new ny({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pf}},Av=class extends Ev{constructor(e){super(e||{})}call(e,t){return lo((()=>{let t=Xg(e);return Uu(t,1)}))}};Av.className="GlobalAveragePooling1D",Li.registerClass(Av);var $v=class extends Ev{constructor(e){super(e||{})}call(e,t){return lo((()=>{let t=Xg(e);return ku(t,1)}))}};$v.className="GlobalMaxPooling1D",Li.registerClass($v);var Fv=class extends oy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Tm(this.dataFormat),this.inputSpec=[new ny({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pf}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Rv=class extends Fv{call(e,t){return lo((()=>{let t=Xg(e);return"channelsLast"===this.dataFormat?Uu(t,[1,2]):Uu(t,[2,3])}))}};Rv.className="GlobalAveragePooling2D",Li.registerClass(Rv);var Dv=class extends Fv{call(e,t){return lo((()=>{let t=Xg(e);return"channelsLast"===this.dataFormat?ku(t,[1,2]):ku(t,[2,3])}))}};Dv.className="GlobalMaxPooling2D",Li.registerClass(Dv);var Mv=class extends oy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=ky(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},Ov=class extends Mv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yg(e)).length<3)throw new zf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=Yg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return lo((()=>$x(((e,n)=>[Xg(this.layer.call(e,t)),[]]),e=Xg(e),[],!1,null,null,!1,!0)[1]))}};Ov.className="TimeDistributed",Li.registerClass(Ov);var Lv=class extends Mv{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ky(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ky(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){nm(Cm,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new Pf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState&&(r=a.slice(1)),t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Hf(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=Ax(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new zf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new ny({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Pf("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof ry;for(let e of s)if(e instanceof ry!==o)throw new zf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return lo((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=Nh(r,1)),"concat"===this.mergeMode?s=Km([n,r]):"sum"===this.mergeMode?s=ko(n,r):"ave"===this.mergeMode?s=So(.5,ko(n,r)):"mul"===this.mergeMode?s=So(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Fm(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Fm(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=ky(t.layer);if(delete t.layer,null!=t.numConstants)throw new Pf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function zv(e){return new hy(e)}function Pv(e){return new hx(e)}function Bv(e){return new ox(e)}function Wv(e){return new lx(e)}function Vv(e){return new ux(e)}function Uv(e){return new dx(e)}function Gv(e){return new px(e)}function Hv(e){return new Cx(e)}function jv(e){return new wx(e)}function qv(e){return new Ix(e)}function Kv(e){return new kx(e)}function Xv(e){return new Sx(e)}function Yv(e){return new _x(e)}function Zv(e){return new Tx(e)}function Jv(e){return new Ex(e)}function Qv(e){return new Xx(e)}function ew(e){return new qx(e)}function tw(e){return new Hx(e)}function nw(e){return new jx(e)}function rw(e){return new Kx(e)}function aw(e){return new Yx(e)}function sw(e){return new Zx(e)}function iw(e){return new Jx(e)}function ow(e){return new ev(e)}function lw(e){return new nv(e)}function uw(e){return new av(e)}function hw(e){return new ov(e)}function pw(e){return new sv(e)}function dw(e){return new iv(e)}function cw(e){return new rv(e)}function fw(e){return new uv(e)}function mw(e){return new mv(e)}function gw(e){return new gv(e)}function yw(e){return new yv(e)}function bw(e){return new kv(e)}function xw(e){return bw(e)}function vw(e){return bw(e)}function ww(e){return new Sv(e)}function kw(e){return ww(e)}function Iw(e){return ww(e)}function Nw(e){return new Tv(e)}function Sw(e){return Nw(e)}function Cw(e){return Nw(e)}function _w(e){return new Av(e)}function Tw(e){return new Rv(e)}function Ew(e){return new $v(e)}function Aw(e){return new Dv(e)}function $w(e){return new wv(e)}function Fw(e){return new Nv(e)}function Rw(e){return new _v(e)}function Dw(e){return new Lx(e)}function Mw(e){return new Ox(e)}function Ow(e){return new Px(e)}function Lw(e){return new zx(e)}function zw(e){return new Mx(e)}function Pw(e){return new Dx(e)}function Bw(e){return new Gx(e)}function Ww(e){return new Ux(e)}function Vw(e){return new Fx(e)}function Uw(e){return new Bx(e)}function Gw(e){return new Lv(e)}function Hw(e){return new Ov(e)}Lv.className="Bidirectional",Li.registerClass(Lv);var jw=Ew,qw=Aw,Kw=$w,Xw=Fw;function Yw(e){return new hv(e)}function Zw(e){return new pv(e)}function Jw(e){return new dv(e)}function Qw(e){return new Qx(e)}var ek={};function tk(e,t){return Ry(e,t)}function nk(e,t){return zy(e,t)}function rk(e,t){return Py(e,t)}function ak(e,t){return Dy(e,t)}function sk(e,t){return By(e,t)}function ik(e,t){return Oy(e,t)}function ok(e,t){return Ly(e,t)}function lk(e,t){return Ay(e,t)}function uk(e,t){return Sy(e,t)}function hk(e,t){return Cy(e,t)}function pk(e,t){return Cy(e,t)}function dk(e,t){return Cy(e,t)}function ck(e,t){return Ny(e,t)}function fk(e,t){return Ny(e,t)}function mk(e,t){return Ny(e,t)}w(ek,{MAPE:()=>pk,MSE:()=>fk,binaryAccuracy:()=>tk,binaryCrossentropy:()=>nk,categoricalAccuracy:()=>ak,categoricalCrossentropy:()=>sk,cosineProximity:()=>lk,mape:()=>dk,meanAbsoluteError:()=>uk,meanAbsolutePercentageError:()=>hk,meanSquaredError:()=>ck,mse:()=>mk,precision:()=>ik,recall:()=>ok,sparseCategoricalAccuracy:()=>rk});var gk={};w(gk,{modelFromJSON:()=>Eb});var yk={};function bk(e){return new nx(e)}function xk(e){return function(e){return ex(e),new nx({l1:null!=e?e.l1:null,l2:0})}(e)}function vk(e){return function(e){return ex(e),new nx({l2:null!=e?e.l2:null,l1:0})}(e)}w(yk,{l1:()=>xk,l1l2:()=>bk,l2:()=>vk});var wk=class extends fy{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof _b))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function kk(e,t){return e<t}function Ik(e,t){return e>t}var Nk=class extends wk{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Pf("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(this.mode="auto"),"min"===this.mode?this.monitorFunc=kk:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Ik:this.monitorFunc=kk,this.monitorFunc===kk&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===kk?1/0:-1/0}async onEpochEnd(e,t){await dy(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return t}};var Sk,Ck,_k={earlyStopping:function(e){return new Nk(e)}};!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Sk||(Sk={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(Ck||(Ck={}));var Tk={};function Ek(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Tk[e]=n}function Ak(e){return Tk[e]}function $k(e){delete Tk[e]}function Fk(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return Rk(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>Rk(e,n,r,a)));let o=Rk(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:Xr.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function Rk(e,t,n,r){let[a,s]=Ok(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[Mk(a,e)]));return void 0!==i?t[Mk(a,i)][s]:void 0}function Dk(e,t){let[n,r]=Ok(e);return[Mk(n,t&&t.currentContextId),r]}function Mk(e,t){return t?`${e}-${t}`:e}function Ok(e){let t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function Lk(e,t,n){let r=Fk("pad",e,t,n);if("explicit"===r){r=Fk("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function zk(e){return e.kept?e:Bs(e)}var Pk={};w(Pk,{json:()=>Bk});var Bk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Wk={};w(Wk,{json:()=>Vk});var Vk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Uk={};w(Uk,{json:()=>Gk});var Gk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Hk={};w(Hk,{json:()=>jk});var jk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],qk={};w(qk,{json:()=>Kk});var Kk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Xk={};w(Xk,{json:()=>Yk});var Yk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Zk={};w(Zk,{json:()=>Jk});var Jk=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Qk={};w(Qk,{json:()=>eI});var eI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],tI={};w(tI,{json:()=>nI});var nI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],rI={};w(rI,{json:()=>aI});var aI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],sI={};w(sI,{json:()=>iI});var iI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],oI={};w(oI,{json:()=>lI});var lI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uI={};w(uI,{json:()=>hI});var hI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],pI={};w(pI,{json:()=>dI});var dI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],cI={};w(cI,{json:()=>fI});var fI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],mI={};w(mI,{json:()=>gI});var gI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],yI={};w(yI,{json:()=>bI});var bI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],xI=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[Pk,Wk,Uk,Hk,qk,Xk,Zk,sI,rI,Qk,oI,uI,pI,cI,mI,yI,tI].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach((e=>{let t=i[e];t.inputNames.forEach((e=>{let[n]=Dk(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(h).length?p.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(h).forEach((e=>{let[t]=Dk(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=Dk(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=Ak(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=wI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=$I(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=$I(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=II(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=II(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=AI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=AI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=kI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=RI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=RI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=EI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=EI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=FI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=FI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=CI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=CI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=_I(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_I(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=SI(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=SI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=Dk(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:NI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach((e=>{let[n]=Dk(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=Dk(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function vI(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Le().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function wI(e,t,n,r=!1){let a=e[t];return null!=a?vI(a.s,r):n}function kI(e,t,n){let r=e[t];return r?r.b:n}function II(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function NI(e){switch("string"==typeof e&&(e=Sk[e]),e){case Sk.DT_FLOAT:return"float32";case Sk.DT_INT32:case Sk.DT_INT64:case Sk.DT_INT8:case Sk.DT_UINT8:return"int32";case Sk.DT_BOOL:return"bool";case Sk.DT_DOUBLE:return"float32";case Sk.DT_STRING:return"string";default:return null}}function SI(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function CI(e,t,n){let r=e[t];return r&&r.type?NI(r.type):n}function _I(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>NI(e))):n}function TI(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function EI(e,t,n){let r=e[t];return r&&r.shape?TI(r.shape):n}function AI(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function $I(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>vI(e,r))):n}function FI(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>TI(e))):n}function RI(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function DI(e,t,n=""){Xr.assert(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}var MI=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);DI(t,e.shape,"TensorList shape mismatch: "),ho(e)})),this.idTensor=$h(0),this.maxNumElements=r,ho(this.idTensor)}get id(){return this.idTensor.id}copy(){return new MI([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return DI(e,this.elementShape,"TensorList shape mismatch: "),lo((()=>{let t=this.tensors.map((t=>Jo(t,e)));return Zh(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=this.tensors.pop();return DI(n.shape,e,"TensorList shape mismatch: "),Jo(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(DI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ho(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return DI(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);DI(this.elementShape,t.shape,"TensorList shape mismatch: "),ho(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return DI(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?Ka([],[0].concat(this.elementShape)):lo((()=>{let t=e.map((e=>Jo(this.tensors[e],n)));return Zh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return DI(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?Ka([],[0].concat(this.elementShape)):lo((()=>{let e=this.tensors.map((e=>Jo(e,t)));return tl(e,0)}))}};var OI=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=Fk("thenBranch",e,t,n),a=Fk("elseBranch",e,t,n),s=Fk("cond",e,t,n),i=Fk("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=Fk("body",e,t,n),a=Fk("cond",e,t,n),s=Fk("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[zk(Fk("pred",e,t,n))];case"Switch":{let r=Fk("pred",e,t,n),a=Fk("data",e,t,n);return a.kept||(a=zk(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==Rk(e,t,n)));if(r){return[zk(Rk(r,t,n))]}return}case"Enter":{let r=Fk("frameName",e,t,n),a=Fk("tensor",e,t,n);return n.enterFrame(r),[zk(a)]}case"Exit":{let r=Fk("tensor",e,t,n);return n.exitFrame(),[zk(r)]}case"NextIteration":{let r=Fk("tensor",e,t,n);return n.nextIteration(),[zk(r)]}case"TensorArrayV3":{let r=Fk("size",e,t,n),a=Fk("dtype",e,t,n),s=Fk("elementShape",e,t,n),i=Fk("dynamicSize",e,t,n),o=Fk("clearAfterRead",e,t,n),l=Fk("identicalElementShapes",e,t,n),u=Fk("name",e,t,n),h=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=$h(0),ho(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),DI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ho(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ka([],[0].concat(this.elementShape));let n=this.readMany(e);return DI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Zh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ka([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return DI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),tl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,hp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];lo((()=>{t=Jo(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Jo(rl(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(h),[h.idTensor,$h(1)]}case"TensorArrayWriteV3":{let r=Fk("tensorArrayId",e,t,n),a=Fk("index",e,t,n),s=Fk("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=Fk("tensorArrayId",e,t,n),a=Fk("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=Fk("tensorArrayId",e,t,n),a=Fk("indices",e,t,n),s=Fk("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=Fk("tensorArrayId",e,t,n),a=Fk("indices",e,t,n),s=Fk("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=Fk("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Fk("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=Fk("tensorArrayId",e,t,n),a=Fk("tensor",e,t,n),s=Fk("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=Fk("tensorArrayId",e,t,n);return[$h(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=Fk("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=Fk("tensorListId",e,t,n),a=Fk("index",e,t,n),s=Fk("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=Fk("tensorListId",e,t,n),a=Fk("index",e,t,n),s=Fk("elementShape",e,t,n),i=Fk("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=Fk("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new MI([],n,e.dtype,r),i=hp(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(Fk("tensor",e,t,n),r,Fk("elementShape",e,t,n),Fk("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=Fk("elementShape",e,t,n),s=Fk("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new MI([],e,t,n)}(a,s,Fk(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=Fk("tensorListId",e,t,n),a=Fk("indices",e,t,n),s=Fk("elementShape",e,t,n),i=Fk("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=Fk("tensorListId",e,t,n),a=Fk("elementShape",e,t,n),s=Fk("elementDType",e,t,n),i=Fk("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);DI(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=hp(e);return new MI(a,t,r)}(Fk("tensor",e,t,n),Fk("elementShape",e,t,n),Fk("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=Fk("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Fk("dtype",e,t,n),i=Fk("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=Fk("tensorListId",e,t,n),a=Fk("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=Fk("tensorListId",e,t,n),a=Fk("elementShape",e,t,n),s=Fk("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=Fk("tensor",e,t,n),a=Fk("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=0===r?0:e.size/r,i=lo((()=>{let i=[];e=Jo(e,[1,r,s]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],s];i[r]=Jo(rl(e,o,l),n)}return e.dispose(),i})),o=new MI([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(r,Fk("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function LI(e,t,n){let[r,a]=Fk("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,l=Fk("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=Fk("strides",e,t,n),h=Lk(e,t,n),p=Fk("dataFormat",e,t,n).toUpperCase(),d=Fk("dilations",e,t,n),[c,f]=Fk("args",e,t,n);return{stride:u,pad:h,dataFormat:p,dilations:d,biasArg:c,preluArg:f,activationFunc:a,leakyreluAlpha:Fk("leakyreluAlpha",e,t,n)}}function zI(e,t,n){return{boxes:Fk("boxes",e,t,n),scores:Fk("scores",e,t,n),maxOutputSize:Fk("maxOutputSize",e,t,n),iouThreshold:Fk("iouThreshold",e,t,n),scoreThreshold:Fk("scoreThreshold",e,t,n),softNmsSigma:Fk("softNmsSigma",e,t,n)}}var PI=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=Fk("keyDType",e,t,n),s=Fk("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=$h(0),this.tensorMap=new Map,ho(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),lo((()=>{let e=hp(t),r=n.length,a=e.length;Xr.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];ho(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return lo((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Zh(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=Fk("tableHandle",e,t,n,r),s=Fk("keys",e,t,n),i=Fk("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=Fk("tableHandle",e,t,n,r),s=Fk("keys",e,t,n),i=Fk("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function BI(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return lo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ko(Fk("a",e,t,n),Fk("b",e,t,n))];case"AddN":return[Eo(Fk("tensors",e,t,n))];case"FloorMod":case"Mod":return[qu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Mul":return[So(Fk("a",e,t,n),Fk("b",e,t,n))];case"RealDiv":case"Div":return[No(Fk("a",e,t,n),Fk("b",e,t,n))];case"DivNoNan":return[Wl(Fk("a",e,t,n),Fk("b",e,t,n))];case"FloorDiv":return[Io(Fk("a",e,t,n),Fk("b",e,t,n))];case"Sub":return[Iu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Minimum":return[Hu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Maximum":return[Vu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Pow":return[hh(Fk("a",e,t,n),Fk("b",e,t,n))];case"SquaredDifference":return[Xh(Fk("a",e,t,n),Fk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return lo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Co(Fk("x",e,t,n))];case"Acos":return[_o(Fk("x",e,t,n))];case"Acosh":return[To(Fk("x",e,t,n))];case"Asin":return[Do(Fk("x",e,t,n))];case"Asinh":return[Mo(Fk("x",e,t,n))];case"Atan":return[Oo(Fk("x",e,t,n))];case"Atan2":return[Lo(Fk("x",e,t,n),Fk("y",e,t,n))];case"Atanh":return[zo(Fk("x",e,t,n))];case"Ceil":return[fl(Fk("x",e,t,n))];case"Complex":return[ja(Fk("real",e,t,n),Fk("imag",e,t,n))];case"Cos":return[_l(Fk("x",e,t,n))];case"Cosh":return[Tl(Fk("x",e,t,n))];case"Elu":return[Ul(Fk("x",e,t,n))];case"Erf":return[Gl(Fk("x",e,t,n))];case"Exp":return[Hl(Fk("x",e,t,n))];case"Expm1":return[ql(Fk("x",e,t,n))];case"Floor":return[Zl(Fk("x",e,t,n))];case"Log":return[hu(Fk("x",e,t,n))];case"Log1p":return[pu(Fk("x",e,t,n))];case"Imag":return[tu(Fk("x",e,t,n))];case"Neg":return[xu(Fk("x",e,t,n))];case"Reciprocal":return[wh(Fk("x",e,t,n))];case"Real":return[vh(Fk("x",e,t,n))];case"Relu":return[kh(Fk("x",e,t,n))];case"Round":return[Eh(Fk("x",e,t,n))];case"Selu":return[Fh(Fk("x",e,t,n))];case"Sigmoid":return[nl(Fk("x",e,t,n))];case"Sin":return[Oh(Fk("x",e,t,n))];case"Sign":return[Mh(Fk("x",e,t,n))];case"Sinh":return[Lh(Fk("x",e,t,n))];case"Softplus":return[vu(Fk("x",e,t,n))];case"Sqrt":return[Kh(Fk("x",e,t,n))];case"Square":return[Ku(Fk("x",e,t,n))];case"Tanh":return[al(Fk("x",e,t,n))];case"Tan":return[ep(Fk("x",e,t,n))];case"ClipByValue":return[ml(Fk("x",e,t,n),Fk("clipValueMin",e,t,n),Fk("clipValueMax",e,t,n))];case"Relu6":return[Ih(Fk("x",e,t,n))];case"Rsqrt":return[Ah(Rk(e.inputNames[0],t,n))];case"Prod":return[dh(Fk("x",e,t,n),Fk("axes",e,t,n))];case"LeakyRelu":return[su(Fk("x",e,t,n),Fk("alpha",e,t,n))];case"Prelu":return[ph(Fk("x",e,t,n),Fk("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return OI(e,t,n);case"convolution":return lo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=Fk("stride",e,t,n),a=Fk("pad",e,t,n),s=Fk("dataFormat",e,t,n).toUpperCase(),i=Fk("dilation",e,t,n);return[wl(Fk("x",e,t,n),Fk("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=Fk("strides",e,t,n),a=Lk(e,t,n),s=Fk("dataFormat",e,t,n).toUpperCase(),i=Fk("dilations",e,t,n);return[vl(Fk("x",e,t,n),Fk("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=LI(e,t,n);return[Sp.conv2d({x:Fk("x",e,t,n),filter:Fk("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:h}=LI(e,t,n);return[Sp.depthwiseConv2d({x:Fk("x",e,t,n),filter:Fk("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=Fk("outputShape",e,t,n),a=Fk("strides",e,t,n),s=Lk(e,t,n);return[Il(Fk("x",e,t,n),Fk("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=Fk("strides",e,t,n),a=Lk(e,t,n),s=Fk("dilations",e,t,n),i=Fk("dataFormat",e,t,n).toUpperCase();return[Fl(Fk("input",e,t,n),Fk("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("dataFormat",e,t,n).toUpperCase(),i=Fk("dilations",e,t,n);return[Nl(Fk("x",e,t,n),Fk("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("kernelSize",e,t,n);return[Qo(Fk("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("kernelSize",e,t,n);return[Pu(Fk("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("kernelSize",e,t,n),i=Fk("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Wu(Fk("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("kernelSize",e,t,n);return[el(Fk("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("kernelSize",e,t,n);return[Bu(Fk("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=Fk("strides",e,t,n),a=Fk("pad",e,t,n),s=Fk("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[Dl(Fk("x",e,t,n),Fk("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return lo((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=Fk("shape",e,t,n),a=Fk("dtype",e,t,n);return[Yl(r,Fk("value",e,t,n),a)]}case"LinSpace":return[lu(Fk("start",e,t,n),Fk("stop",e,t,n),Fk("num",e,t,n))];case"Multinomial":{let r=Fk("logits",e,t,n),a=Fk("numSamples",e,t,n),s=Fk("seed",e,t,n);return[Zu(r,a,s)]}case"OneHot":{let r=Fk("indices",e,t,n),a=Fk("depth",e,t,n),s=Fk("onValue",e,t,n),i=Fk("offValue",e,t,n);return[ii(r,a,s,i)]}case"Ones":return[eh(Fk("shape",e,t,n),Fk("dtype",e,t,n))];case"OnesLike":return[th(Fk("x",e,t,n))];case"RandomUniform":return[bh(Fk("shape",e,t,n),Fk("minval",e,t,n),Fk("maxval",e,t,n),Fk("dtype",e,t,n))];case"Range":return[xh(Fk("start",e,t,n),Fk("stop",e,t,n),Fk("step",e,t,n),Fk("dtype",e,t,n))];case"TruncatedNormal":{let r=Fk("shape",e,t,n),a=Fk("mean",e,t,n),s=Fk("stdDev",e,t,n),i=Fk("seed",e,t,n);return[op(r,a,s,Fk("dtype",e,t,n),i)]}case"Zeros":return[Qu(Fk("shape",e,t,n),Fk("dtype",e,t,n))];case"ZerosLike":return[Bl(Fk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=zI(e,t,n),u=await Id.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=zI(e,t,n),l=Fk("padToMaxOutputSize",e,t,n),u=await Id.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=zI(e,t,n);return[await Id.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=Ps(Fk("condition",e,t,n),"bool"),a=[await cp(r)];return r.dispose(),a}case"ListDiff":return Dh(Fk("x",e,t,n),Fk("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return lo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=Fk("x",e,t,n),a=Fk("k",e,t,n),s=Fk("sorted",e,t,n),i=ip(r,a,s);return[i.values,i.indices]}case"Unique":{let r=Fk("x",e,t,n),a=lp(r);return[a.values,a.indices]}case"UniqueV2":{let r=Fk("x",e,t,n),a=Fk("axis",e,t,n),s=lp(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return lo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=Fk("images",e,t,n),a=Fk("size",e,t,n),s=Fk("alignCorners",e,t,n),i=Fk("halfPixelCenters",e,t,n);return[Id.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=Fk("images",e,t,n),a=Fk("size",e,t,n),s=Fk("alignCorners",e,t,n),i=Fk("halfPixelCenters",e,t,n);return[Id.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=Fk("image",e,t,n),a=Fk("boxes",e,t,n),s=Fk("boxInd",e,t,n),i=Fk("cropSize",e,t,n),o=Fk("method",e,t,n),l=Fk("extrapolationValue",e,t,n);return[Id.cropAndResize(r,a,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return lo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=Fk("default",e,t,n);return[Rk(e.name,t,n)||r];case"Placeholder":return[Rk(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[zk(Fk("x",e,t,n))];case"IdentityN":return Fk("x",e,t,n).map((e=>zk(e)));case"Snapshot":return[zk(Fk("x",e,t,n))];case"Shape":return[tp(Fk("x",e,t,n).shape,"int32")];case"ShapeN":return Fk("x",e,t,n).map((e=>tp(e.shape)));case"Size":return[$h(Fk("x",e,t,n).size,"int32")];case"Rank":return[$h(Fk("x",e,t,n).rank,"int32")];case"NoOp":return[$h(1)];case"Print":let a=Fk("x",e,t,n),s=Fk("data",e,t,n);Fk("message",e,t,n),Fk("summarize",e,t,n);for(let e=0;e<s.length;e++);return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return lo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[zl(Fk("a",e,t,n),Fk("b",e,t,n))];case"NotEqual":return[Ju(Fk("a",e,t,n),Fk("b",e,t,n))];case"Greater":return[Ql(Fk("a",e,t,n),Fk("b",e,t,n))];case"GreaterEqual":return[eu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Less":return[iu(Fk("a",e,t,n),Fk("b",e,t,n))];case"LessEqual":return[ou(Fk("a",e,t,n),Fk("b",e,t,n))];case"LogicalAnd":return[Mu(Fk("a",e,t,n),Fk("b",e,t,n))];case"LogicalNot":return[Ou(Fk("a",e,t,n))];case"LogicalOr":return[Lu(Fk("a",e,t,n),Fk("b",e,t,n))];case"Select":case"SelectV2":return[Pl(Fk("condition",e,t,n),Fk("a",e,t,n),Fk("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return lo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[si(Fk("a",e,t,n),Fk("b",e,t,n),Fk("transposeA",e,t,n),Fk("transposeB",e,t,n))];case"Transpose":return[oi(Fk("x",e,t,n),Fk("perm",e,t,n))];case"_FusedMatMul":let[r,a]=Fk("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=Fk("numArgs",e,t,n),l=Fk("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=Fk("args",e,t,n);return[Sp.matMul({a:Fk("a",e,t,n),b:Fk("b",e,t,n),transposeA:Fk("transposeA",e,t,n),transposeB:Fk("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return lo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ll(Fk("x",e,t,n),Fk("mean",e,t,n),Fk("variance",e,t,n),Fk("offset",e,t,n),Fk("scale",e,t,n),Fk("epsilon",e,t,n))];case"LRN":return[uu(Fk("x",e,t,n),Fk("radius",e,t,n),Fk("bias",e,t,n),Fk("alpha",e,t,n),Fk("beta",e,t,n))];case"Softmax":return[Vh(Fk("x",e,t,n))];case"LogSoftmax":return[Su(Fk("x",e,t,n))];case"SparseToDense":return[xp(Fk("sparseIndices",e,t,n),Fk("outputShape",e,t,n),Fk("sparseValues",e,t,n),Fk("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return lo((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[ku(Fk("x",e,t,n),r,a)]}case"Mean":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[Uu(Fk("x",e,t,n),r,a)]}case"Min":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[Gu(Fk("x",e,t,n),r,a)]}case"Sum":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[Nu(Fk("x",e,t,n),r,a)]}case"All":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[Ao(Fk("x",e,t,n),r,a)]}case"Any":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[$o(Fk("x",e,t,n),r,a)]}case"ArgMax":{let r=Fk("axis",e,t,n);return[Fo(Fk("x",e,t,n),r)]}case"ArgMin":{let r=Fk("axis",e,t,n);return[Ro(Fk("x",e,t,n),r)]}case"Prod":{let r=Fk("axis",e,t,n),a=Fk("keepDims",e,t,n);return[dh(Fk("x",e,t,n),r,a)]}case"Cumsum":{let r=Fk("axis",e,t,n),a=Fk("exclusive",e,t,n),s=Fk("reverse",e,t,n);return[El(Fk("x",e,t,n),r,a,s)]}case"Bincount":let r=Fk("x",e,t,n),a=Fk("weights",e,t,n),s=Fk("size",e,t,n);return[dl(r,a,s)];case"DenseBincount":{let r=Fk("x",e,t,n),a=Fk("weights",e,t,n),s=Fk("size",e,t,n),i=Fk("binaryOutput",e,t,n);return[Al(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return lo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=Fk("n",e,t,n),a=Fk("axis",e,t,n),s=Fk("tensors",e,t,n);return s=s.slice(0,r),[tl(s,a)]}case"Gather":{let r=Fk("x",e,t,n),a=Fk("indices",e,t,n);return[Jl(r,Ps(a,"int32"),0)]}case"GatherV2":{let r=Fk("axis",e,t,n),a=Fk("batchDims",e,t,n),s=Fk("x",e,t,n),i=Fk("indices",e,t,n);return[Jl(s,Ps(i,"int32"),r,a)]}case"Reverse":{let r=Fk("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=Fk("x",e,t,n);return[Nh(s,a)]}case"ReverseV2":{let r=Fk("axis",e,t,n),a=Fk("x",e,t,n);return[Nh(a,r)]}case"Slice":{let r=Fk("begin",e,t,n),a=Fk("size",e,t,n);return[rl(Fk("x",e,t,n),r,a)]}case"StridedSlice":{let r=Fk("begin",e,t,n),a=Fk("end",e,t,n),s=Fk("strides",e,t,n),i=Fk("beginMask",e,t,n),o=Fk("endMask",e,t,n),l=Fk("ellipsisMask",e,t,n),u=Fk("newAxisMask",e,t,n),h=Fk("shrinkAxisMask",e,t,n),p=Fk("x",e,t,n);return[Qh(p,r,a,s,i,o,l,u,h)]}case"Pack":return lo((()=>{let r=Fk("axis",e,t,n),a=Fk("tensors",e,t,n),s=a[0].shape,i=Yh(a[0]).shape,o=a.map((e=>{let t=Xr.arraysEqual(e.shape,s);if(!t&&!Xr.arraysEqual(Yh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Jo(e,s)}));return[Zh(o,r)]}));case"Unpack":{let r=Fk("axis",e,t,n),a=Fk("tensor",e,t,n);return hp(a,r)}case"Tile":{let r=Fk("reps",e,t,n);return[Kl(Fk("x",e,t,n),r)]}case"Split":case"SplitV":{let r=Fk("axis",e,t,n),a=Fk("numOrSizeSplits",e,t,n),s=Fk("x",e,t,n);return jh(s,a,r)}case"ScatterNd":{let r=Fk("indices",e,t,n),a=Fk("values",e,t,n),s=Fk("shape",e,t,n);return[bp(r,a,s)]}case"GatherNd":{let r=Fk("x",e,t,n),a=Fk("indices",e,t,n);return[vp(r,a)]}case"SparseToDense":{let r=Fk("sparseIndices",e,t,n),a=Fk("outputShape",e,t,n),s=Fk("sparseValues",e,t,n),i=Fk("defaultValue",e,t,n);return[xp(r,s,a,s.dtype===i.dtype?i:Ps(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return lo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Uh(Fk("x",e,t,n))];case"IFFT":return[Gh(Fk("x",e,t,n))];case"RFFT":return[qh(Fk("x",e,t,n))];case"IRFFT":return[Hh(Fk("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return lo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ps(Fk("x",e,t,n),Fk("dtype",e,t,n))];case"ExpandDims":{let r=Fk("axis",e,t,n);return[jl(Fk("x",e,t,n),r)]}case"Squeeze":{let r=Fk("axis",e,t,n);return[Yh(Fk("x",e,t,n),r)]}case"Reshape":return[Jo(Fk("x",e,t,n),Fk("shape",e,t,n))];case"MirrorPad":return[ju(Fk("x",e,t,n),Fk("padding",e,t,n),Fk("mode",e,t,n))];case"PadV2":case"Pad":return[rh(Fk("x",e,t,n),Fk("padding",e,t,n),Fk("constantValue",e,t,n))];case"SpaceToBatchND":{let r=Fk("blockShape",e,t,n),a=Fk("paddings",e,t,n);return[lh(Fk("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=Fk("blockShape",e,t,n),a=Fk("crops",e,t,n);return[il(Fk("x",e,t,n),r,a)]}case"DepthToSpace":{let r=Fk("blockSize",e,t,n),a=Fk("dataFormat",e,t,n).toUpperCase();return[$l(Fk("x",e,t,n),r,a)]}case"BroadcastTo":return[cl(Fk("x",e,t,n),Fk("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return PI(e,t,n,r);case"custom":let a=Ak(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Rk(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return Rk(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return II(this.node.rawAttrs,e,t);if(null!=n.s)return wI(this.node.rawAttrs,e,t);if(null!=n.b)return kI(this.node.rawAttrs,e,t);if(null!=n.shape)return EI(this.node.rawAttrs,e,t);if(null!=n.type)return CI(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return AI(this.node.rawAttrs,e,t);if(null!=n.list.s)return $I(this.node.rawAttrs,e,t);if(null!=n.list.shape)return FI(this.node.rawAttrs,e,t);if(null!=n.list.b)return RI(this.node.rawAttrs,e,t);if(null!=n.list.type)return _I(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Xr.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var WI=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function VI(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>Ok(e)[0])),h=[];null!=r&&(h=r.map((e=>Ok(e.name)[0])));let p=[...t];for(;p.length>0;){let e=p.pop();if((jI(e)||qI(e)||KI(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===h.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),p.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var UI=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],GI=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],HI=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function jI(e){return UI.indexOf(e.op)>=0}function qI(e){return GI.indexOf(e.op)>=0}function KI(e){return HI.indexOf(e.op)>=0}var XI=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new XI(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=VI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>Ok(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[Ok(e)[0]])),a=t.map((e=>Ok(e)[0])),s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return lo((()=>{let n=new WI(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=Ok(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=BI(t,r,n,this._resourceManager);if(Xr.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>Rk(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let t=function(e,t,n){return t[Mk(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let s=new WI(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>Rk(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),h=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{e&&!e.isDisposed&&!h.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(h),o}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[Ok(e)[0]])),i=n.map((e=>Ok(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:p}=VI(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,r]=Ok(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}let y=o.filter((e=>!jI(e)&&!Rk(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&Fk("isConstant",e.node,r,n)&&([h]=Dk(e.node.name,n)),null==r[e.node.name]){let p=BI(e.node,r,n,this._resourceManager);h||([h]=Dk(e.node.name,n));let d=n.currentContext;Xr.isPromise(p)?u.push(p.then((u=>(r[h]=u,n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[h]=p,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=Dk(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!Rk(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Rk(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=Ok(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));Xr.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&Xr.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=Ok(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=Ok(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},YI=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Vs.browserHTTPRequest(e,this.loadOptions);else{let t=Vs.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Vs.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=Vs.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new XI(xI.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=xI.Instance.transformGraph(e.modelInitializer);this.initializer=new XI(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=Vs.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof da||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function ZI(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);let n=new YI(e,t);return await n.load(),n}var JI="3.0.0",QI={};w(QI,{CSVDataset:()=>HN,Dataset:()=>FN,FileDataSource:()=>aS,TextLineDataset:()=>zN,URLDataSource:()=>sS,array:()=>DN,csv:()=>iS,func:()=>oS,generator:()=>lS,microphone:()=>hS,version_data:()=>pS,webcam:()=>uS,zip:()=>MN});var eN=k(F()),tN=k(F());function nN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(oN(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=nN(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function rN(e,t=sN){return aN(e,t)}function aN(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(oN(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=aN(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function sN(e){return null===e?null:oN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function iN(e,t){let n=new Map;nN(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(Xr.isPromise(t)){let r=await t;n.set(e,r)}}return nN(e,t,n)}function oN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof da))}function lN(e){return function(e,t){return nN(e,t)}(e,uN)}function uN(e){return e instanceof da?{value:e.clone(),recurse:!1}:oN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var hN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},pN=class extends hN{constructor(){super(pN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function dN(e){return new gN(e)}function cN(e){return new yN(e)}pN.INITIAL_CAPACITY=32;var fN,mN=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new NN(this,e)}filter(e){return new kN(this,e)}map(e){return new IN(this,e)}mapAsync(e){return new SN(this,e)}serialMapAsync(e){return new SN(this,e).serial()}flatmap(e){return new _N(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new wN(this,e,t)}columnMajorBatch(e,t=!0,n=sN){return this.rowMajorBatch(e,t).map((e=>rN(e,n)))}concatenate(e,t){return new TN(dN([this,e]),t)}take(e){return e<0||null==e?this:new vN(this,e)}skip(e){return e<0||null==e?this:new xN(this,e)}prefetch(e){return new AN(this,e)}shuffle(e,t){return new $N(this,e,t)}serial(){return new bN(this)}},gN=class extends mN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:lN(e),done:!1}}},yN=class extends mN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},bN=class extends mN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},xN=class extends mN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;uo(e.value)}return this.upstream.next()}},vN=class extends mN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},wN=class extends mN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},kN=class extends mN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;uo(e.value)}}},IN=class extends mN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=va.getTensorsInContainer(e.value),n=this.transform(e.value),r=va.getTensorsInContainer(n);for(let e of t)va.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},NN=class extends mN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},SN=class extends mN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=va.getTensorsInContainer(e.value),n=await this.transform(e.value),r=va.getTensorsInContainer(n);for(let e of t)va.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},CN=class extends mN{constructor(){super(),this.outputQueue=new pN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},_N=class extends CN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=va.getTensorsInContainer(e.value),n=this.transform(e.value),r=va.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)va.isTensorInList(e,r)||e.dispose();return!0}},TN=class extends mN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(fN||(fN={}));var EN=class extends mN{constructor(e,t=fN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;let r=await iN(this.iterators,(function(e){return e instanceof mN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case fN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case fN.SHORTEST:return{value:null,done:!0};case fN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},AN=class extends mN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new hN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},$N=class extends AN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=tN.alea(n||Xr.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},FN=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return Xr.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),RN((async()=>(await r.iterator()).columnMajorBatch(e,t,ON)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,RN((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,RN((async()=>(await n.iterator()).filter((t=>lo((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return RN((async()=>(await t.iterator()).map((t=>lo((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return RN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return RN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,RN((async()=>function(e,t){return new TN(e,t)}(cN((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,RN((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=eN.alea(t||Xr.now().toString());return RN((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,RN((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function RN(e,t=null){return new class extends FN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function DN(e){return RN((async()=>dN(e)),e.length)}function MN(e){if(!oN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return RN((async()=>function(e,t=fN.FAIL){return new EN(e,t)}(await iN(e,(e=>{if(e instanceof FN)return{value:e.iterator(),recurse:!1};if(oN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),fN.SHORTEST)),t)}function ON(e){if(null===e)return null;return function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof da||Xr.isTypedArray(e)}(e[0])?{value:LN(e),recurse:!1}:{value:null,recurse:!0}}function LN(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof da?Zh(e):Ka(e)}FN.MAX_BUFFER_SIZE=1e4;var zN=class extends FN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},PN='"',BN=Symbol("out"),WN=Symbol("field"),VN=Symbol("quote"),UN=Symbol("quoteafterquote"),GN=Symbol("quoteinquote"),HN=class extends FN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new zN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Xr.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Xr.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Xr.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=BN;for(let t=0;t<a;t++)switch(s){case BN:switch(e.charAt(t)){case PN:r=t+1,s=VN;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=BN;break;default:s=WN,r=t}break;case WN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=BN,r=t+1}break;case VN:switch(e.charAt(t)){case PN:s=UN}break;case UN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=BN,r=t+1;break;case PN:s=VN;break;default:s=GN}break;case GN:switch(e.charAt(t)){case PN:s=VN}}if(s===UN?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},jN=class extends mN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Le().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new jN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(Xr.sizeFromShape(t));return n.set(e,n.length-e.length),Ka(n,t)}},qN=class extends mN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tp([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=np([r,n,s,a],[1,4])}else this.cropBox=np([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Le().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new qN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Xr.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=hi.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return lo((()=>{let t,n=jl(Ps(e,"float32"),0);t=Id.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Jo(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},KN=class{},XN=class extends mN{split(e){return new YN(this,e)}},YN=class extends XN{constructor(e,t){super(),this.upstream=e,this.impl=new ZN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},ZN=class extends CN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},JN=class extends mN{decodeUTF8(){return new QN(this)}},QN=class extends XN{constructor(e){super(),this.upstream=e,this.impl=new eS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},eS=class extends CN{constructor(e){if(super(),this.upstream=e,Le().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=R();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Le().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},tS=class extends JN{constructor(e,t={}){super(),this.file=e,this.options=t,Xr.assert(e instanceof Uint8Array||!!Le().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};var nS=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function rS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var aS=class extends KN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(rS(this.input)&&Le().get("IS_NODE")){let e=a(993);this.input=e.readFileSync(this.input.substr(7))}return new tS(this.input,this.options)}},sS=class extends KN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return rS(this.url)?new aS(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;"string"==typeof e?n=e:(n=e.url,r=nS(e));let a=await Xr.fetch(n,r);if(a.ok){let e=new Uint8Array(await a.arrayBuffer());return new tS(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}};function iS(e,t={}){return new HN(new sS(e),t)}function oS(e){let t=cN(e);return RN((async()=>t))}function lS(e){return RN((async()=>{let t=await e();return cN((()=>t.next()))}))}async function uS(e,t){return qN.create(e,t)}async function hS(e){return jN.create(e)}var pS="3.0.0";function dS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Xr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var cS=vc.whereImpl,fS=class extends B{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new P(this,so())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Le().get("IS_NODE")&&zd.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Xr.isString(n[0])){let a=n.map((e=>Xr.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return zd.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>Xr.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return zs(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return so().makeTensorFromDataId(r,t,n,this)}disposeData(e){if(this.data.has(e)){let{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.data.has(t)){let e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){let t=Xr.now();return e(),{kernelMs:Xr.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){dS([e],"where");let t=this.readSync(e.dataId);return cS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},mS={};function gS(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}w(mS,{addImpl:()=>AS,bincountImpl:()=>DS,bincountReduceImpl:()=>MS,ceilImpl:()=>PS,concatImpl:()=>VS,expImpl:()=>US,expm1Impl:()=>jS,floorImpl:()=>XS,gatherV2Impl:()=>JS,greaterImpl:()=>QS,lessImpl:()=>nC,linSpaceImpl:()=>sC,logImpl:()=>iC,maxImpl:()=>uC,maximumImpl:()=>hC,minimumImpl:()=>cC,multiplyImpl:()=>gC,negImpl:()=>vC,notEqualImpl:()=>kC,prodImpl:()=>TC,rangeImpl:()=>AC,rsqrtImpl:()=>$C,simpleAbsImpl:()=>gS,sliceImpl:()=>DC,squaredDifferenceImpl:()=>LC,stridedSliceImpl:()=>BC,subImpl:()=>WC,tileImpl:()=>HC,topKImpl:()=>jC,transposeImpl:()=>SC,uniqueImpl:()=>qC});var yS={kernelName:Ve,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;dS(t,"abs");let r=new Float32Array(Xr.sizeFromShape(t.shape));return r=gS(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function bS(e){return(t,n,r,a,s)=>{let i=zd.assertAndGetBroadcastShape(t,n),o=i.length,l=Xr.computeStrides(i),u=Xr.sizeFromShape(i),h=Xr.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=Xr.computeStrides(t),f=Xr.computeStrides(n),m=zd.getBroadcastDims(t,i),g=zd.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=Xr.indexToLoc(t,o,l),s=n.slice(-p);m.forEach((e=>s[e]=0));let i=Xr.locToIndex(s,p,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let y=Xr.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function xS(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var vS={kernelName:ct,backendName:"cpu",kernelFunc:xS};function wS(e,t,n="float32"){if("complex64"===n){return xS({inputs:{real:wS(e,t,"float32"),imag:wS(e,t,"float32")},backend:e})}let r=Xr.makeZerosTypedArray(Xr.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function kS(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var IS={kernelName:Qt,backendName:"cpu",kernelFunc:kS};function NS(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var SS={kernelName:jn,backendName:"cpu",kernelFunc:NS};function CS(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return kS({inputs:{x:a},backend:n});let e=wS(n,a.shape,a.dtype),t=CS({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=xS({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=NS({inputs:{input:a},backend:n}),t=CS({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Xr.hasEncodingLoss(a.dtype,s)){let e=kS({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=Xr.toTypedArray([0],a.dtype),[r,s]=bS(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var _S={kernelName:ht,backendName:"cpu",kernelFunc:CS};function TS(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;dS([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,h=r||s.dtype,[p,d]=t(s.shape,i.shape,l,u,h);return o.makeTensorInfo(d,h,p)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=CS({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,h=CS({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),p=o.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=xS({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function ES(e){return(t,n,r,a,s,i)=>{let o=zd.assertAndGetBroadcastShape(t,n),l=Xr.sizeFromShape(o),u=o.length,h=Xr.computeStrides(o),p=Xr.getTypedArrayFromDType("float32",l),d=Xr.getTypedArrayFromDType("float32",l),c=zd.getBroadcastDims(t,o),f=zd.getBroadcastDims(n,o),m=zd.mergeRealAndImagArrays(r,a),g=zd.mergeRealAndImagArrays(s,i),y=t.length,b=Xr.computeStrides(t),x=n.length,v=Xr.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=Xr.indexToLoc(t,u,h),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=Xr.locToIndex(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));let i=Xr.locToIndex(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}var AS=bS(((e,t)=>e+t)),$S=ES(((e,t,n,r)=>({real:e+n,imag:t+r}))),FS=TS(He,AS,$S),RS={kernelName:He,backendName:"cpu",kernelFunc:FS};function DS(e,t,n,r,a){let s=Xr.sizeFromShape(r),i=Xr.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function MS(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=zs([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function OS(e){return(t,n,r)=>{let a=Xr.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function LS(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(dS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=Xr.sizeFromShape(i.shape),h=n||i.dtype,p=Xr.getArrayFromDType(h,u);for(let e=0;e<u;++e)p[e]=t(l[e],a);return o.makeTensorInfo(i.shape,h,p)}}function zS(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(dS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,h=t(l,u,a);return o.makeTensorInfo(i.shape,u,h)}}var PS=OS((e=>Math.ceil(e))),BS=zS(pt,PS),WS={kernelName:pt,backendName:"cpu",kernelFunc:BS};function VS(e,t,n,r){let a=Xr.getArrayFromDType(n,Xr.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=Xr.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?zd.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var US=OS((e=>Math.exp(e))),GS=zS(Bt,US),HS={kernelName:Bt,backendName:"cpu",kernelFunc:GS},jS=OS((e=>Math.expm1(e))),qS=zS(Vt,jS),KS={kernelName:Vt,backendName:"cpu",kernelFunc:qS},XS=OS((e=>Math.floor(e))),YS=zS(jt,XS),ZS={kernelName:jt,backendName:"cpu",kernelFunc:YS};function JS(e,t,n){let r=zs(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);r.values[n]=e.values[l]}return r}var QS=bS(((e,t)=>e>t?1:0)),eC=TS(Zt,QS,null,"bool"),tC={kernelName:Zt,backendName:"cpu",kernelFunc:eC},nC=bS(((e,t)=>e<t?1:0)),rC=TS(on,nC,null,"bool"),aC={kernelName:on,backendName:"cpu",kernelFunc:rC};function sC(e,t,n){let r=(t-e)/(n-1),a=Xr.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var iC=OS((e=>Math.log(e))),oC=zS(hn,iC),lC={kernelName:hn,backendName:"cpu",kernelFunc:oC};function uC(e,t,n,r){let a=Xr.getTypedArrayFromDType(r,Xr.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];t>s&&(s=t)}a[n]=s}return a}var hC=bS(((e,t)=>Math.max(e,t))),pC=TS(xn,hC),dC={kernelName:xn,backendName:"cpu",kernelFunc:pC},cC=bS(((e,t)=>Math.min(e,t))),fC=TS(_n,cC),mC={kernelName:_n,backendName:"cpu",kernelFunc:fC},gC=bS(((e,t)=>e*t)),yC=ES(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),bC=TS($n,gC,yC),xC={kernelName:$n,backendName:"cpu",kernelFunc:bC};function vC(e,t,n){let r=Xr.createScalarValue(-1,n);return gC([],t,r,e,n)}var wC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;dS(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=vC(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},kC=bS(((e,t)=>e!==t?1:0)),IC=TS(Rn,kC,null,"bool"),NC={kernelName:Rn,backendName:"cpu",kernelFunc:IC};function SC(e,t,n,r,a){let s=t.length,i=Xr.sizeFromShape(t),o=Xr.computeStrides(t),l=Xr.computeStrides(a),u=Xr.getTypedArrayFromDType(n,Xr.sizeFromShape(a));for(let t=0;t<i;++t){let n=Xr.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[Xr.locToIndex(a,s,l)]=e[t]}return u}function CC(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;dS(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=SC(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var _C={kernelName:_r,backendName:"cpu",kernelFunc:CC};function TC(e,t,n,r){let[a,s]=zd.computeOutAndReduceShapes(e,r),i=ka(t,"int32"),o=Xr.makeZerosTypedArray(Xr.sizeFromShape(a),i),l=Xr.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var EC={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dS(a,"prod");let o=a.shape.length,l=Xr.parseAxisParam(s,a.shape),u=zd.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(p=CC({inputs:{x:a},backend:n,attrs:{perm:u}}),d.push(p),h=zd.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=TC(p.shape,p.dtype,c,h),y=m;return i&&(y=zd.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function AC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Xr.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=Xr.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var $C=OS((e=>1/Math.sqrt(e))),FC=zS(rr,$C),RC={kernelName:rr,backendName:"cpu",kernelFunc:FC};function DC(e,t,n,r,a){let s=vi.isSliceContinous(r,t,n),i=Xr.sizeFromShape(n),o=Xr.computeStrides(r);if(s){let n=vi.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=zs(r,a,"string"===a?zd.fromUint8ToStringArray(e):e),u=zs(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?zd.fromStringArrayToUint8(u.values):u.values}function MC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;dS(a,"slice");let[o,l]=vi.parseSliceParams(a,s,i);vi.assertParamsValid(a,o,l);let u=DC(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var OC={kernelName:or,backendName:"cpu",kernelFunc:MC},LC=bS(((e,t)=>{let n=e-t;return n*n})),zC=TS(br,LC),PC={kernelName:br,backendName:"cpu",kernelFunc:zC};function BC(e,t,n,r){let a=zs(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var WC=bS(((e,t)=>e-t)),VC=ES(((e,t,n,r)=>({real:e-n,imag:t-r}))),UC=TS(vr,WC,VC),GC={kernelName:vr,backendName:"cpu",kernelFunc:UC};function HC(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=zs(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}function jC(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=Xr.getTypedArrayFromDType(n,i*r),u=Xr.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,a=e.subarray(n,n+o),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));let i=t*r,h=l.subarray(i,i+r),p=u.subarray(i,i+r);for(let e=0;e<r;e++)h[e]=s[e].value,p[e]=s[e].index}let h=t.slice();return h[h.length-1]=r,[zs(h,n,l),zs(h,"int32",u)]}function qC(e,t,n,r){let a=Xr.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new ua(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let p=s.slice();p[1]=Object.keys(i).length;let d=new ua(p,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}xo("cpu",(()=>new fS),1);var KC=LS(Ot,(e=>e>=0?e:Math.exp(e)-1)),XC={kernelName:Ot,backendName:"cpu",kernelFunc:KC};function YC(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;dS([a],"leakyRelu");let i=Xr.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=Xr.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var ZC={kernelName:sn,backendName:"cpu",kernelFunc:YC},JC=bS(((e,t)=>e<0?t*e:e));function QC(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;dS([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=JC(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}var e_={kernelName:Un,backendName:"cpu",kernelFunc:QC},t_=LS(Kn,(e=>Math.max(0,e))),n_={kernelName:Kn,backendName:"cpu",kernelFunc:t_},r_=LS(er,(e=>Math.min(Math.max(0,e),6))),a_={kernelName:er,backendName:"cpu",kernelFunc:r_};function s_(e,t,n,r,a){if("linear"===n)return kS({inputs:{x:t},backend:e});if("relu"===n)return t_({inputs:{x:t},backend:e});if("elu"===n)return KC({inputs:{x:t},backend:e});if("relu6"===n)return r_({inputs:{x:t},backend:e});if("prelu"===n)return QC({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return YC({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function i_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Xr.sizeFromShape(a.shape),o=Xr.inferFromImplicitShape(s,i),l=Xr.sizeFromShape(o);Xr.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var o_={kernelName:Xn,backendName:"cpu",kernelFunc:i_};function l_(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;dS([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Xr.sizeFromShape(f),y=Xr.sizeFromShape(m),b=g===y||1===g||1===y;Xr.assert(l>=2&&u>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));let x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,c]);Xr.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[y,c,p]:[y,p,c],w=i_({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),k=i_({inputs:{x:s},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],S=o?k.shape[1]:k.shape[2],C=Math.max(g,y),_=n.data.get(w.dataId).values,T=n.data.get(k.dataId).values,E=Xr.computeStrides(w.shape),A=Xr.computeStrides(k.shape),[$,F,R]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,M,O]=o?[1,A[1],A[0]]:[A[1],1,A[0]],L=N*S,z=zs([C,N,S],w.dtype),P=z.values,B=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=B)for(let n=0;n<S;n+=B)for(let r=0;r<I;r+=B){let a=Math.min(t+B,N),s=Math.min(n+B,S),i=Math.min(r+B,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*$,s=Math.min(e,y-1)*O;n+=_[r+o*F+a*R]*T[a*D+t*M+s]}P[e*L+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}var u_={kernelName:it,backendName:"cpu",kernelFunc:l_};var h_={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=l_({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=FS({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=s_(s,t,c,h,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},p_=LS(Ue,(e=>Math.acos(e))),d_={kernelName:Ue,backendName:"cpu",kernelFunc:p_},c_=LS(Ge,(e=>Math.acosh(e))),f_={kernelName:Ge,backendName:"cpu",kernelFunc:c_};var m_={kernelName:je,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;dS(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=zs(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var g_={kernelName:qe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dS(a,"all");let o=Xr.parseAxisParam(s,a.shape),l=o,u=zd.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=CC({inputs:{x:a},backend:n,attrs:{perm:u}}),l=zd.getInnerMostAxes(l.length,a.shape.length)),zd.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=zd.computeOutAndReduceShapes(h.shape,l),c=Xr.sizeFromShape(d),f=Xr.makeZerosTypedArray(Xr.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=i_({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var y_={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dS(a,"any");let o=Xr.parseAxisParam(s,a.shape),l=o,u=zd.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=CC({inputs:{x:a},backend:n,attrs:{perm:u}}),l=zd.getInnerMostAxes(l.length,a.shape.length)),zd.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=zd.computeOutAndReduceShapes(h.shape,l),c=Xr.sizeFromShape(d),f=Xr.makeZerosTypedArray(Xr.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=i_({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var b_={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dS(a,"argMax");let i=Xr.parseAxisParam(s,a.shape),o=zd.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=CC({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=zd.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],zd.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=zd.computeOutAndReduceShapes(l.shape,i),d=Xr.sizeFromShape(h),c=Xr.makeZerosTypedArray(d,"int32"),f=Xr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}};var x_={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;dS(a,"argMin");let i=Xr.parseAxisParam(s,a.shape),o=zd.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=CC({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=zd.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],zd.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=zd.computeOutAndReduceShapes(l.shape,i),d=Xr.sizeFromShape(h),c=Xr.makeZerosTypedArray(d,"int32"),f=Xr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",c)}},v_=LS(Ze,(e=>Math.asin(e))),w_={kernelName:Ze,backendName:"cpu",kernelFunc:v_},k_=LS(Je,(e=>Math.asinh(e))),I_={kernelName:Je,backendName:"cpu",kernelFunc:k_},N_=LS(Qe,(e=>Math.atan(e))),S_={kernelName:Qe,backendName:"cpu",kernelFunc:N_},C_=bS(((e,t)=>Math.atan2(e,t))),__=TS(tt,C_),T_={kernelName:tt,backendName:"cpu",kernelFunc:__},E_=LS(et,(e=>Math.atanh(e))),A_={kernelName:et,backendName:"cpu",kernelFunc:E_};function $_(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=zs(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(a.inHeight,h+v),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function F_(e,t,n,r,a=!1,s=!1){let i=zs(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=zs(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function R_(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=zs(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let S=w*i-m,C=S;for(;C<0;)C+=u;let _=Math.min(a.inDepth,d+S),T=n+w*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),w=T+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=w+n*N,k=b,I=0,S=0;for(let n=C;n<_;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/S:k}}}}return x}var D_={kernelName:nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dS(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Xr.assert(zd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=zd.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Xr.arraysEqual(h.inShape,h.outShape))u=kS({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Xr.computeStrides(a.shape),r=$_(e,a.shape,a.dtype,t,h,"avg");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var M_={kernelName:at,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;dS(a,"avgPool3d");let h=zd.computePool3DInfo(a.shape,s,i,1,o,l,u),p=R_(n.data.get(a.dataId).values,a.shape,a.dtype,Xr.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var O_={kernelName:st,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;dS([a,s],"avgPool3DGrad");let h=zd.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=v-1-h.padInfo.front,N=k-1-h.padInfo.left,S=w-1-h.padInfo.top,C=zs(s.shape,"float32"),_=1/(f*m*g),T=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-S,o=a-N,l=0;for(let n=0;n<v;n+=y){let r=(s+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){let a=(i+n)/d;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=T.get(e,r,a,s,t))}}}C.set(l*_,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};var L_={kernelName:rt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;dS([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=zd.computePool2DInfo(i.shape,o,l,1,u),p=h.strideHeight,d=h.strideWidth,c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.effectiveFilterHeight,b=h.effectiveFilterWidth,x=b-1-h.padInfo.left,v=y-1-h.padInfo.top,w=zs(i.shape,"float32"),k=1/(c*f),I=n.data.get(a.dataId).values,N=zs(a.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){let a=n-v,s=r-x,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){let a=(s+n)/d;a<0||a>=h.outWidth||Math.floor(a)!==a||(i+=N.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};var z_={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;Xr.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Xr.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Xr.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),dS([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,v=0,w=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[v++]+(h[e]-p[w++])*c[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var P_={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;dS([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=zd.getReshaped(a.shape,s,o),u=zd.getPermuted(l.length,s.length),h=zd.getReshapedPermuted(a.shape,s,o),p=zd.getSliceBeginCoords(i,s.length),d=zd.getSliceSize(h,i,s.length),c=i_({inputs:{x:a},backend:n,attrs:{shape:l}}),f=CC({inputs:{x:c},backend:n,attrs:{perm:u}}),m=i_({inputs:{x:f},backend:n,attrs:{shape:h}}),g=MC({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var B_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=DS(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},W_=LS(dt,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),V_={kernelName:dt,backendName:"cpu",kernelFunc:W_},U_={kernelName:ft,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(Xr.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function G_(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var H_={kernelName:tn,backendName:"cpu",kernelFunc:G_};function j_(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Xr.parseAxisParam(a,t[0].shape)[0],i=zd.computeOutShape(t.map((e=>e.shape)),s);if(0===Xr.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>Xr.sizeFromShape(e.shape)>0));if(1===o.length)return kS({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(zd.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>NS({inputs:{input:e},backend:n}))),t=o.map((e=>G_({inputs:{input:e},backend:n}))),r=j_({inputs:e,backend:n,attrs:{axis:s}}),a=j_({inputs:t,backend:n,attrs:{axis:s}}),i=xS({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=Xr.sizeFromShape(e.shape.slice(s));return i_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=zd.computeOutShape(u.map((e=>e.shape)),1);let p=1===u[0].shape[0],d=VS(h,i,t[0].dtype,p),c=zd.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var q_={kernelName:mt,backendName:"cpu",kernelFunc:j_};function K_(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;dS([a,s],"conv2d");let p=zd.convertConv2DDataFormat(l),d=zd.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new ua(d.outShape,a.dtype),w=Xr.computeStrides(a.shape),k=Xr.computeStrides(s.shape),I=w[0],N=x?w[1]:w[2],S=x?w[2]:1,C=x?1:w[1],_=v.strides[0],T=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,A=x?1:v.strides[1],$=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*_;for(let e=0;e<d.outHeight;++e){let r=n+e*T,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*N;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=i+r*S,o=s+e*k[1];for(let e=0;e<d.inChannels;++e){let n=$[a+e*C];for(let e=0;e<d.outChannels;++e)R[t+e*A]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}var X_={kernelName:gt,backendName:"cpu",kernelFunc:K_};var Y_={kernelName:yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;dS([a,s],"conv2dBackpropFilter");let p=zd.convertConv2DDataFormat(l),d=zd.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new ua(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new ua(a.shape,a.dtype,w),N=new ua(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-v;for(let e=a;e<s;++e){let n=r+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,h,e,o):I.get(u,i,t,n)*N.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var Z_={kernelName:bt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;dS([a,s],"conv2dBackpropInput");let p=Xr.computeStrides(s.shape),d=Xr.computeStrides(a.shape),c=zd.convertConv2DDataFormat(u),f=zd.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new ua(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=p,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:_,outChannels:T,outHeight:E,outWidth:A,strideHeight:$,strideWidth:F}=f;c=f.dataFormat;let R=I-1-f.padInfo.top,D=N-1-f.padInfo.left,M="channelsLast"===c,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){let r=n-R,a=Math.max(0,Math.ceil(r/$)),s=Math.min(E,(I+r)/$);for(let i=0;i<_;++i){let o=i-D,l=Math.max(0,Math.ceil(o/F)),u=Math.min(A,(N+o)/F),h=0;for(let n=a;n<s;++n){let a=n*$-r;for(let r=l;r<u;++r){let s=B*e+W*n+V*r,i=x*(I-1-a)+v*(N-1-(r*F-o))+w*t;for(let e=0;e<T;++e){h+=y[s+U*e]*b[i+e]}}}g[O*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var J_={kernelName:xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;dS([a,s],"conv3d");let u=zd.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new ua(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,N=Xr.computeStrides(a.shape),S=Xr.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*N[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){let t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*S[1],o=i+r*N[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var Q_={kernelName:vt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;dS([a,s],"conv3dBackpropFilterV2");let u=Xr.computeStrides(a.shape),h=Xr.computeStrides(s.shape),p=zd.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new ua(p.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,C,_,T]=h,E=n.data.get(a.dataId).values,[A,$,F,R]=u,D=p.padInfo.front,M=p.padInfo.left,O=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(p.outDepth,(p.inDepth+D-e)/d),r=e*v;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(p.outWidth,(p.inWidth+M-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*A,y=m*S;for(let m=t;m<n;++m){let t=(e+m*d-D)*$+p,n=m*C+y;for(let e=s;e<i;++e){let s=(a+e*c-O)*F+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*T+i;g+=E[(r+e*f-M)*R+s+o]*N[t+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var eT={kernelName:wt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;dS([a],"conv3dBackpropInputV2");let u=Xr.computeStrides(a.shape),h=Xr.computeStrides(s.shape),p=zd.computeConv3DInfo(l,s.shape,o,1,i),d=new ua(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,I=n.data.get(s.dataId).values,[N,S,C,_]=h,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=p,U=E-1-p.padInfo.front,G=A-1-p.padInfo.top,H=$-1-p.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){let r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let h=0;h<M;++h){let p=h-H,d=Math.max(0,Math.ceil(p/V)),T=Math.min(P,($+p)/V),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<T;++i){let o=x*e+v*n+w*r+k*i,l=N*(E-1-a)+S*(A-1-s)+C*($-1-(i*V-p))+_*t;for(let e=0;e<O;++e){F+=b[o+e]*I[l+e]}}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},tT=LS(kt,(e=>Math.cos(e))),nT={kernelName:kt,backendName:"cpu",kernelFunc:tT},rT=LS(It,(e=>Math.cosh(e))),aT={kernelName:It,backendName:"cpu",kernelFunc:rT};var sT={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=zs([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=Xr.computeStrides(a.shape),k=Xr.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*w[2]+n*w[1]+i*w[0],u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];let h=v[s];s=r+p*w[2]+a*w[1]+i*w[0];let d=v[s];s=r+m*w[2]+a*w[1]+i*w[0];let c=u+(h-u)*b,f=d+(v[s]-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var iT={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;dS(a,"cumsum");let l=zd.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=CC({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=zd.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=ka(u.dtype,"int32"),d=Xr.makeZerosTypedArray(Xr.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=CC({inputs:{x:g},backend:n,attrs:{perm:zd.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var oT={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=DS(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=MS(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var lT={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Xr.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),Xr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}};function uT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;dS([a,s],"depthwiseConv2DNative");let h=Xr.computeStrides(a.shape),p=Xr.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),Xr.assert(zd.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=zd.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,v=b.top,w=c.outChannels/c.inChannels,k=new ua(c.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-x;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-v;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<w;++e)S[l+e]+=t*N[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var hT={kernelName:Tt,backendName:"cpu",kernelFunc:uT};var pT={kernelName:Et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;dS([a,s],"depthwiseConv2dNativeBackpropFilter");let p=zd.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ua(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,v=n.data.get(a.dataId).values,w=new ua(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new ua(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=w.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var dT={kernelName:At,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;dS([a,s],"depthwiseConv2DNativeBackpropInput");let p=Xr.computeStrides(a.shape),d=Xr.computeStrides(s.shape),c=zd.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new ua(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=p,I=n.data.get(s.dataId).values,[N,S,C]=d,{batchSize:_,filterHeight:T,filterWidth:E,inChannels:A,inHeight:$,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=c,z=T-1-c.padInfo.top,P=E-1-c.padInfo.left,B=R/A;for(let e=0;e<_;++e)for(let t=0;t<A;++t)for(let n=0;n<$;++n){let r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,(T+r)/O);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(E+o)/L),h=0;for(let n=a;n<s;++n){let a=n*O-r;for(let r=l;r<u;++r){let s=v*e+w*n+k*r,i=N*(T-1-a)+S*(E-1-(r*L-o))+C*t;for(let e=0;e<B;++e){h+=x[s+(t*B+e)]*I[i+e]}}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var cT={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Xr.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=zs([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},fT={kernelName:Ft,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(a.dataId).values,d=a.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=zd.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=Xr.sizeFromShape(C),T=C.length,E=Xr.getArrayFromDType(r.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*v-x.top;for(let s=0;s<b;++s){let i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){let c=i+n*S;if(c>=0&&c<m){let i=Xr.locToIndex([e,s,c,o],h,Xr.computeStrides(r.shape)),f=Xr.locToIndex([t,n,o],d,Xr.computeStrides(a.shape)),m=u[i]+p[f];m>l&&(l=m)}}}E[Xr.locToIndex([e,t,s,o],T,Xr.computeStrides(C))]=l}}}return{dataId:l.write(Xr.toTypedArray(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},mT={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Xr.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Xr.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=zd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Xr.assert(s.rank===S.length,(()=>`Error in ${Dt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=Xr.toNestedArray(S,u.data.get(s.dataId).values),_=Xr.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*N;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}_[o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(Xr.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},gT={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,h=Xr.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Xr.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=zd.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Xr.assert(s.rank===S.length,(()=>`Error in ${Rt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let C=Xr.toNestedArray(S,u.data.get(s.dataId).values),_=Xr.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let r=0;r<y;++r){let a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<c)for(let n=0;n<k;++n){let u=a+n*N;if(u>=0&&u<f){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}_[e][o][l][s]+=C[e][t][r][s]}}}return{dataId:u.write(Xr.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var yT={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;dS([r,a],"eluGrad");let s=new Float32Array(Xr.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},bT=bS(((e,t)=>e===t?1:0)),xT=TS(Pt,bT,null,"bool"),vT={kernelName:Pt,backendName:"cpu",kernelFunc:xT},wT=zd.ERF_P,kT=zd.ERF_A1,IT=zd.ERF_A2,NT=zd.ERF_A3,ST=zd.ERF_A4,CT=zd.ERF_A5,_T=LS(zt,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+wT*n);return t*(1-((((CT*r+ST)*r+NT)*r+IT)*r+kT)*r*Math.exp(-n*n))})),TT={kernelName:zt,backendName:"cpu",kernelFunc:_T};function ET(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Xr.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),i_({inputs:{x:a},backend:n,attrs:{shape:o}})}var AT={kernelName:Wt,backendName:"cpu",kernelFunc:ET},$T=bS(((e,t)=>e/t)),FT=TS(Mt,$T),RT={kernelName:Mt,backendName:"cpu",kernelFunc:FT};function DT(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=Xr.sizeFromShape(u),p=Xr.getTypedArrayFromDType("float32",h),d=Xr.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=MC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=MC({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=xS({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=MT(i,t,n),c=zd.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=zd.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=xS({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function MT(e,t,n){let r=Xr.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=OT(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Xr.createScalarValue(r,"float32")),i=kS({inputs:{x:s},backend:n}),l=RT.kernelFunc({inputs:{a:e,b:s},backend:n}),u=RT.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=zd.exponent(a*r,t,n),l=zd.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),zd.assignToTypedArray(r,s,i,a)}return r}(zd.mergeRealAndImagArrays(s,i),r,t);return zd.splitRealAndImagArrays(e)}}function OT(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=zd.mergeRealAndImagArrays(e,t),i=n/2,o=zd.complexWithEvenIndex(s),l=o.real,u=o.imag,h=[l.length],p=a.makeTensorInfo(h,"float32",l),d=a.makeTensorInfo(h,"float32",u),c=xS({inputs:{real:p,imag:d},backend:a}),f=zd.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=xS({inputs:{real:b,imag:x},backend:a}),w=OT(l,u,i,r,a),k=w.real,I=w.imag,N=[k.length],S=a.makeTensorInfo(N,"float32",k),C=a.makeTensorInfo(N,"float32",I),_=xS({inputs:{real:S,imag:C},backend:a}),T=OT(m,g,i,r,a),E=T.real,A=T.imag,$=[E.length],F=a.makeTensorInfo($,"float32",E),R=a.makeTensorInfo($,"float32",A),D=xS({inputs:{real:F,imag:R},backend:a}),M=zd.exponents(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=xS({inputs:{real:L,imag:z},backend:a}),B=bC({inputs:{a:P,b:D},backend:a}),W=FS({inputs:{a:_,b:B},backend:a}),V=UC({inputs:{a:_,b:B},backend:a}),U=NS({inputs:{input:W},backend:a}),G=NS({inputs:{input:V},backend:a}),H=G_({inputs:{input:W},backend:a}),j=G_({inputs:{input:V},backend:a}),q=j_({inputs:[U,G],backend:a,attrs:{axis:0}}),K=j_({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var LT={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Xr.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=i_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=DT(i,!1,n),l=i_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function zT(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Xr.inferDtype(a),o=Xr.getArrayFromDType(i,Xr.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var PT={kernelName:Gt,backendName:"cpu",kernelFunc:zT};var BT={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=Xr.getTypedArrayFromDType(r.dtype,Xr.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,h=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let r=0;r<l;r++){let a=r*u;for(let o=0;o<u;o++){let p=[i,e,r,o][2],d=Math.round(l-p),c=t+n+a+o,f=h[c];if(d>=0&&d<l){f=h[t+n+d*u+o]}s[c]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WT=bS(((e,t)=>Math.floor(e/t))),VT=TS(qt,WT,null,"int32"),UT={kernelName:qt,backendName:"cpu",kernelFunc:VT};var GT={kernelName:Or,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=K_({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=FS({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=s_(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var HT={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=uT({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=FS({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=s_(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var jT={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Xr.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=zd.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=zs([u,h],r.dtype),c=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=[],n=0;for(let r=0;r<o;r++){let a=c[e*o+r];n+=a*p[r],t.push(a)}if(n<0||n>=s/h)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<h;t++)d.values[e*h+t]=f[n*h+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};var qT={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;dS([a,s],"gatherV2");let l=o;null==o&&(l=0);let u=Xr.sizeFromShape(s.shape),h=Xr.parseAxisParam(i,a.shape)[0],p=zd.segment_util.collectGatherOpShapeInfo(a,s,h,l),d=i_({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=i_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,u/p.batchSize]}}),f=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],m=n.bufferSync(c),g=JS(n.bufferSync(d),m,f);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p.outputShape,g.dtype,g.values)}},KT=bS(((e,t)=>e>=t?1:0)),XT=TS(Jt,KT,null,"bool"),YT={kernelName:Jt,backendName:"cpu",kernelFunc:XT};var ZT={kernelName:en,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Xr.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=i_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=DT(i,!0,n),l=i_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},JT=LS(nn,(e=>Number.isFinite(e)?1:0),"bool"),QT={kernelName:nn,backendName:"cpu",kernelFunc:JT},eE=LS(rn,(e=>Math.abs(e)===1/0?1:0),"bool"),tE={kernelName:rn,backendName:"cpu",kernelFunc:eE},nE=LS(an,(e=>Number.isNaN(e)?1:0),"bool"),rE={kernelName:an,backendName:"cpu",kernelFunc:nE},aE=bS(((e,t)=>e<=t?1:0)),sE=TS(ln,aE,null,"bool"),iE={kernelName:ln,backendName:"cpu",kernelFunc:sE};var oE={kernelName:un,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=sC(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},lE=LS(pn,(e=>Math.log1p(e))),uE={kernelName:pn,backendName:"cpu",kernelFunc:lE},hE=bS(((e,t)=>e&&t)),pE=TS(dn,hE,null,"bool"),dE={kernelName:dn,backendName:"cpu",kernelFunc:pE},cE=LS(cn,(e=>e?0:1),"bool"),fE={kernelName:cn,backendName:"cpu",kernelFunc:cE},mE=bS(((e,t)=>e||t)),gE=TS(fn,mE,null,"bool"),yE={kernelName:fn,backendName:"cpu",kernelFunc:gE};var bE={kernelName:gn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;dS(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=Xr.sizeFromShape(a.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}for(let e=0;e<d;e++){let t=f(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}};var xE={kernelName:yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;dS(i,"LRNGrad");let p=Xr.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function vE(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,h=Xr.parseAxisParam(s,l),p=h,d=zd.getAxesPermutation(p,u),c=o.data.get(a.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=SC(c,l,a.dtype,d,e),p=zd.getInnerMostAxes(p.length,u),l=e}dS(a,"max"),zd.assertAxesAreInnerMostDims("max",p,u);let[f,m]=zd.computeOutAndReduceShapes(l,p),g=uC(c,Xr.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),b=f;return i&&(b=zd.expandShapeToKeepDim(f,h)),{dataId:y,shape:b,dtype:a.dtype}}var wE={kernelName:bn,backendName:"cpu",kernelFunc:vE};var kE={kernelName:vn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dS(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Xr.assert(zd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,h=zd.computePool2DInfo(a.shape,s,i,1,o,l);if(1===h.filterWidth&&1===h.filterHeight&&Xr.arraysEqual(h.inShape,h.outShape))u=kS({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Xr.computeStrides(a.shape),r=$_(e,a.shape,a.dtype,t,h,"max");u=n.makeTensorInfo(h.outShape,a.dtype,r.values)}return u}};var IE={kernelName:kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;dS(a,"maxPool3d");let h=zd.computePool3DInfo(a.shape,s,i,1,o,l,u),p=R_(n.data.get(a.dataId).values,a.shape,a.dtype,Xr.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var NE={kernelName:In,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;dS([a,s],"maxPool3DGrad");let h=zd.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=zs(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let r=d;r<w;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*h*p+a*h+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=b-1-h.padInfo.front,k=v-1-h.padInfo.left,I=x-1-h.padInfo.top,N=zs(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-w,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-p.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==d&&(l+=S.get(e,r,s,u,t)*d)}}}N.set(l,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var SE={kernelName:wn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;dS([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=zd.computePool2DInfo(o.shape,l,u,1,h,p),c=n.data.get(o.dataId).values,f=zs(d.outShape,o.dtype,F_(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=zs(o.shape,"float32"),N=n.data.get(a.dataId).values,S=zs(a.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-k,s=r-w,i=0;for(let n=0;n<x;n+=y){let r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){let o=(s+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var CE={kernelName:Nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;dS(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,h=zd.computePool2DInfo(r.shape,a,s,[1,1],i),[p,d]=function(e,t,n,r,a){let s=$_(e,0,n,Xr.computeStrides(t),a,"max"),i=F_(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,h),c=l.write(p,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:c,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}};function _E(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;dS(s,"sum"),t="bool"===s.dtype?CS({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):kS({inputs:{x:s},backend:r});let l=t.shape.length,u=Xr.parseAxisParam(i,t.shape),h=zd.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=CC({inputs:{x:t},backend:r,attrs:{perm:h}}),p=zd.getInnerMostAxes(p.length,l)),zd.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=zd.computeOutAndReduceShapes(d.shape,p),m=wS(r,c,zd.upcastType(d.dtype,"int32")),g=Xr.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=m;m=i_({inputs:{x:m},backend:r,attrs:{shape:zd.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}var TE={kernelName:fr,backendName:"cpu",kernelFunc:_E};var EE={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Xr.parseAxisParam(s,a.shape),l=zd.computeOutAndReduceShapes(a.shape,o)[1],u=Xr.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=CS({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=FT({inputs:{a:d,b:p},backend:n});h.push(c);let f=_E({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var AE={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;dS(a,"min");let o=Xr.parseAxisParam(s,a.shape),l=o,u=zd.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=CC({inputs:{x:a},backend:n,attrs:{perm:u}}),l=zd.getInnerMostAxes(l.length,a.shape.length)),zd.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=zd.computeOutAndReduceShapes(h.shape,l),c=Xr.sizeFromShape(d),f=Xr.makeZerosTypedArray(Xr.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=i_({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var $E={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;dS(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),h="reflect"===i?0:1,p=n.data.get(a.dataId).values,d=a.shape.length,c=Xr.computeStrides(a.shape),f=Xr.sizeFromShape(o),m=o.length,g=Xr.computeStrides(o),y=Xr.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=Xr.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+h);t=t.map(((e,t)=>e-l[t]));let n=Xr.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},FE=bS(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),RE=TS(En,FE),DE={kernelName:En,backendName:"cpu",kernelFunc:RE},ME=k(F());function OE(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=Xr.parseAxisParam([o],a.shape),u=vE({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=zd.expandShapeToKeepDim(u.shape,l),p=i_({inputs:{x:u},backend:n,attrs:{shape:h}}),d=UC({inputs:{a,b:p},backend:n}),c=GS({inputs:{x:d},backend:n}),f=_E({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=i_({inputs:{x:f},backend:n,attrs:{shape:h}}),g=FT({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var LE={kernelName:yr,backendName:"cpu",kernelFunc:OE};var zE={kernelName:An,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;dS(a,"multinomial");let l=o?a:OE({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=Xr.makeZerosTypedArray(Xr.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=ME.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},PE=vc.nonMaxSuppressionV3Impl;var BE={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;dS(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p}=PE(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},WE=vc.nonMaxSuppressionV4Impl;var VE={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;dS(a,"NonMaxSuppressionPadded");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=WE(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},UE=vc.nonMaxSuppressionV5Impl;var GE={kernelName:On,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;dS(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=UE(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var HE={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;dS(a,"oneHot");let l=Xr.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(u[e*s+h[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function jE(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=NS({inputs:{input:r},backend:n}),t=jE({inputs:{x:e},backend:n}),a=G_({inputs:{input:r},backend:n}),s=jE({inputs:{x:a},backend:n}),i=xS({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return zT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var qE={kernelName:$r,backendName:"cpu",kernelFunc:jE};var KE={kernelName:Ln,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=NS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=G_({inputs:{input:a},backend:r}),i=jE({inputs:{x:s},backend:r}),o=xS({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return zT({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function XE(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return ET({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Xr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Xr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=j_({inputs:t.map((e=>{let t=ET({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var YE={kernelName:Pn,backendName:"cpu",kernelFunc:XE};var ZE={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;dS(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,h=Xr.sizeFromShape(a.shape),p=a.shape.length,d=Xr.computeStrides(a.shape),c=Xr.sizeFromShape(o),f=o.length,m=Xr.computeStrides(o),g=Xr.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=Xr.indexToLoc(e,p,d).map(((e,t)=>e+l[t]));g[Xr.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},JE=bS(((e,t)=>Math.pow(e,t))),QE=TS(Vn,JE),eA={kernelName:Vn,backendName:"cpu",kernelFunc:QE};var tA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=AC(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},nA=LS(qn,(e=>1/e)),rA={kernelName:qn,backendName:"cpu",kernelFunc:nA};var aA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dS(a,"resizeBilinear");let l=Xr.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Xr.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=t+(m[d+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}};var sA={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dS([s,a],"resizeBilinearGrad");let o=Xr.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,v=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,k=d*a,I=l*u,N=l*a;for(let e=0;e<p;e++){let t=x[v++];f[c+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}};var iA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;dS(a,"resizeNearestNeighbor");let l=Xr.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],v=y[1]/b[1],w=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?v*(e+.5):v*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}};var oA={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;dS([s,a],"resizeNearestNeighborGrad");let o=Xr.computeStrides(a.shape),l=Xr.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<p;r++){let s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-N/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let u=s+a;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*x;if(e===Math.min(h-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){let t=e+y;if(t<0||t>=f)continue;let a=d+t*l[2],s=t*v;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};var lA={kernelName:tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;dS(a,"reverse");let i=a.shape.length,o=Xr.parseAxisParam(s,a.shape);if(0===i)return kS({inputs:{x:a},backend:n});let l=new ua(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},uA={kernelName:Dr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=Xr.getTypedArrayFromDType(r.dtype,Xr.sizeFromShape(r.shape)),[u,h,p,d]=r.shape,[c,f]=zd.getImageCenter(i,h,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*p*h*d;for(let e=0;e<h;e++){let n=e*(p*d);for(let r=0;r<p;r++){let a=r*d;for(let i=0;i<d;i++){let o=[u,e,r,i],b=o[2],x=o[1],v=(b-c)*g-(x-f)*m,w=(b-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;if("number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<h){k=y[t+w*(p*d)+v*d+i]}l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hA=LS(nr,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),pA={kernelName:nr,backendName:"cpu",kernelFunc:hA};function dA(e,t,n,r,a,s,i,o,l,u){let h=[r/a,a],p=e.values,d=t.values;if(0===r)return zs(n,t.dtype);let c=zs(h,t.dtype);c.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=p[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=d[e*a+n]:c.values[l*a+n]=0===t.rank?d[0]:d[e*a+n]}return c}var cA={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=zd.calculateShapes(s,a,i),d=dA(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};var fA={kernelName:sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;dS([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=ka(a.dtype,s.dtype),p=Xr.makeZerosTypedArray(Xr.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:Xr.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},mA=zd.SELU_SCALEALPHA,gA=zd.SELU_SCALE,yA=LS(ir,(e=>e>=0?gA*e:mA*(Math.exp(e)-1))),bA={kernelName:ir,backendName:"cpu",kernelFunc:yA},xA=LS(pr,(e=>1/(1+Math.exp(-e)))),vA={kernelName:pr,backendName:"cpu",kernelFunc:xA},wA=LS(hr,(e=>e<0?-1:e>0?1:0)),kA={kernelName:hr,backendName:"cpu",kernelFunc:wA},IA=LS(lr,(e=>Math.sin(e))),NA={kernelName:lr,backendName:"cpu",kernelFunc:IA},SA=LS(ur,(e=>Math.sinh(e))),CA={kernelName:ur,backendName:"cpu",kernelFunc:SA},_A=Math.log(1.1920928955078125e-7)+2,TA=LS(dr,(e=>{let t,n=e>-_A,r=e<_A,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),EA={kernelName:dr,backendName:"cpu",kernelFunc:TA};var AA={kernelName:mr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;dS([a],"spaceToBatchND");let o=Xr.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=ZE.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=zd.getReshaped(u.shape,s,o,!1),p=zd.getPermuted(h.length,s.length,!1),d=zd.getReshapedPermuted(u.shape,s,o,!1),c=i_({inputs:{x:u},backend:n,attrs:{shape:h}}),f=CC({inputs:{x:c},backend:n,attrs:{perm:p}}),m=i_({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var $A={kernelName:wr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=zd.calculateShapes(s,a,o),c=dA(n.bufferSync(a),n.bufferSync(s),o,d,h,u,l,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,c.dtype,c.values)}};var FA={kernelName:gr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Xr.parseAxisParam(i,a.shape)[0],l=zd.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=MC({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},RA=LS(cr,(e=>Math.sqrt(e))),DA={kernelName:cr,backendName:"cpu",kernelFunc:RA},MA={kernelName:xr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;dS(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},OA=LS(Fr,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),LA={kernelName:Fr,backendName:"cpu",kernelFunc:OA};var zA={kernelName:kr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r;dS(a,"stridedSlice");let c,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=vi.sliceInfo(a.shape,s,i,o,l,u,h,p,d),v=i_({inputs:{x:a},backend:n,attrs:{shape:b}});if(f){let e=MC({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});c=i_({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))c=n.makeTensorInfo(x,a.dtype,[]);else{let e=BC(x,n.bufferSync(v),g,m);c=n.makeTensorInfo(e.shape,e.dtype,e.values)}let w=i_({inputs:{x:c},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(c),w}},PA=LS(Ir,(e=>Math.tan(e))),BA={kernelName:Ir,backendName:"cpu",kernelFunc:PA},WA=LS(Nr,(e=>Math.tanh(e)));var VA=[h_,yS,d_,f_,RS,m_,g_,y_,b_,x_,w_,I_,S_,T_,A_,D_,M_,O_,L_,u_,z_,P_,B_,_S,WS,V_,vS,U_,q_,Y_,Z_,X_,Q_,eT,J_,nT,aT,sT,iT,oT,lT,hT,pT,dT,cT,fT,gT,mT,RT,XC,yT,vT,TT,HS,AT,KS,LT,PT,BT,ZS,UT,GT,HT,jT,qT,tC,YT,IS,ZT,H_,QT,tE,rE,ZC,aC,iE,oE,lC,uE,dE,fE,yE,bE,xE,dC,kE,IE,NE,SE,CE,wE,EE,AE,mC,$E,DE,zE,xC,wC,BE,VE,GE,NC,HE,KE,YE,ZE,eA,e_,EC,tA,SS,rA,n_,a_,o_,aA,sA,iA,oA,lA,uA,pA,RC,cA,fA,bA,vA,kA,NA,CA,OC,LE,EA,AA,$A,FA,DA,MA,PC,LA,zA,GC,TE,BA,{kernelName:Nr,backendName:"cpu",kernelFunc:WA},{kernelName:Sr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;dS(a,"tile");let i=HC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Cr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;dS(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=jC(o,a.shape,a.dtype,s);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},_C,{kernelName:Tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;dS(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=qC(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Er,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=MC({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=i_({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;dS(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,h=s;for(let e=0;e<u;++e){let t=ET({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){let t=Xr.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=xT({inputs:{a:r,b:h},backend:n}),i=CS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=bC({inputs:{a:i,b:a},backend:n}),p=_E({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),l.push(r),l.push(s),l.push(i),l.push(u),l.push(p)}let p=XE({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},qE];for(let e of VA)Ur(e);var UA,GA,HA,jA={},qA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function KA(e){if(!(e in jA)){let t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete jA[e]}),!1),1===e?t.getContext("webgl",qA)||t.getContext("experimental-webgl",qA):t.getContext("webgl2",qA)}(e);if(null===t)return null;jA[e]=t}let t=jA[e];return t.isContextLost()?(delete jA[e],KA(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),jA[e])}function XA(e,t){return[t,e]}function YA(e){let t=Xr.sizeFromShape(e),n=Math.ceil(t/4);return Xr.sizeToSquarishShape(n)}function ZA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function JA(e,t){let n,r,a,s,i,o,l,u,h,p,d=e;return 2===Le().getNumber("WEBGL_VERSION")?(n=d.R32F,r=d.R16F,a=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,h=d.HALF_FLOAT,p=d.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),o=e.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function QA(e,t){let n=t();return Le().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(UA||(UA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(GA||(GA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(HA||(HA={}));function e$(e){return!!(Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function t$(e,t){return d$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function n$(e,t){let n=d$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(QA(e,(()=>e.shaderSource(n,t))),QA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){let n=s$.exec(t);if(null==n)return;let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>Xr.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);i.slice(0,r-1),i.slice(r-1,r),i.slice(r)}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var r$,a$,s$=/ERROR: [0-9]+:([0-9]+):/g;function i$(e,t){if(QA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw new Error("Shader program validation failed.")}function o$(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(QA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),QA(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),QA(e,(()=>e.enableVertexAttribArray(o))),!0)}function l$(e,t,n){(function(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}})(e,n),QA(e,(()=>e.activeTexture(e.TEXTURE0+n))),QA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function u$(e,t,n){QA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),QA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function h$(e,t){QA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),QA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function p$(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function d$(e,t,n){let r=QA(e,(()=>t()));if(null==r)throw new Error(n);return r}function c$(e,t=2){return Xr.sizeFromShape(e.slice(0,e.length-t))}function f$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function m$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[c$(e),...f$(e)]),t}function g$(e){return e%2==0}function y$(e,t){if(e=e.slice(-2),t=t.slice(-2),Xr.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||g$(n)&&g$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&g$(e[0])&&g$(t[0])}function b$(e,t){return null!=e.getExtension(t)}function x$(e){try{if(null!=KA(e))return!0}catch(e){return!1}return!1}function v$(e){if(0===e)return!1;let t=KA(e);if(1!==e){if(b$(t,"EXT_color_buffer_float"))return w$(t);let e="EXT_color_buffer_half_float";if(b$(t,e)){let n=t.getExtension(e);return function(e,t){let n=JA(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}return!(!b$(t,"OES_texture_float")||!b$(t,"WEBGL_color_buffer_float"))&&w$(t)}function w$(e){let t=JA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function k$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Xr.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var I$=Le();function N$(){let e,t,n,r,a,s,i,o,l,u;return 2===Le().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function S$(e,t,n="index"){let r=Xr.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function C$(e){let t=Xr.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}I$.registerFlag("HAS_WEBGL",(()=>I$.getNumber("WEBGL_VERSION")>0)),I$.registerFlag("WEBGL_VERSION",(()=>x$(2)?2:x$(1)?1:0)),I$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),I$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===I$.get("WEBGL_VERSION"))),I$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),I$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),I$.registerFlag("WEBGL_PACK",(()=>I$.getBool("HAS_WEBGL"))),I$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_CLIP",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),I$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_PACK_REDUCE",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_CONV_IM2COL",(()=>I$.getBool("WEBGL_PACK"))),I$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==r$){let t=KA(e);r$=t.getParameter(t.MAX_TEXTURE_SIZE)}return r$}(I$.getNumber("WEBGL_VERSION")))),I$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==a$){let t=KA(e);a$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,a$)}(I$.getNumber("WEBGL_VERSION")))),I$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=I$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t,n=KA(e);return t=b$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:b$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),I$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>I$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ma.isMobile())),I$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;let t=KA(e);if(1===e){if(!b$(t,"OES_texture_float"))return!1}else if(!b$(t,"EXT_color_buffer_float"))return!1;return w$(t)}(I$.getNumber("WEBGL_VERSION")))),I$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!I$.getBool("WEBGL_FORCE_F16_TEXTURES")&&I$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),I$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>v$(I$.getNumber("WEBGL_VERSION")))),I$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>function(e){return 2===e&&null!=KA(e).fenceSync}(I$.getNumber("WEBGL_VERSION")))),I$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>I$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),I$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));var _$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function T$(e){let t=N$();return function(e,t){let n=d$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(QA(e,(()=>e.shaderSource(n,t))),QA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function E$(e){return function(e,t){let n=d$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return QA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),QA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function A$(e){return function(e,t){let n=d$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return QA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),QA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function $$(e,t,n,r,a,s){!function(e,t){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);let i=function(e){return d$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return QA(e,(()=>e.bindTexture(o,i))),QA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),QA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),QA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),QA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),QA(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),QA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function F$(e){return e.internalFormatFloat}function R$(e){return e.internalFormatHalfFloat}function D$(e){return e.downloadTextureFormat}function M$(e){return e.internalFormatPackedFloat}function O$(e){return e.internalFormatPackedHalfFloat}function L$(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=ZA(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}var{getBroadcastDims:z$}=zd;function P$(e,t,n,r){let a=[];e.forEach((e=>{let t=Xr.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));let s,i,o=a.join("\n"),l=e.map((e=>function(e,t,n=!1){let r="";r+=n?W$(e):B$(e);let a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=z$(e.shapeInfo.logicalShape,t.logicalShape),u=X$(o),h=o-i,p=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");let c="return outputValue;",f=1===Xr.sizeFromShape(e.shapeInfo.logicalShape),m=1===Xr.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${d});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Xr.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,h=X$(l),p=z$(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${h} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),u=t.texShape,h=N$(),p=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(h),d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${V$}\n    ${U$}\n    ${G$}\n  `}(h);return t.isPacked?(s=function(e,t){switch(e.length){case 0:return j$();case 1:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Xr.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,u),i=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(h)):(s=function(e,t){switch(e.length){case 0:return j$();case 1:return function(e,t){return 1===t[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){return Xr.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){let n=S$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){let n=S$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){let n=S$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=S$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,u),i=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(h)),r&&(d+=H$),[d,p,i,o,s,l,n].join("\n")}function B$(e){let t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;let[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;let[s,i]=e.shapeInfo.texShape,o=q$(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${K$(e)}\n      }\n    `;let r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;let i=q$(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&Xr.arraysEqual(t,a)){let e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}let{newShape:s,keptDims:i}=Xr.squeezeShape(t),o=s;if(o.length<t.length){let t=["row","col"];return`\n      ${B$(Y$(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Z$(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${K$(e)}\n      }\n    `;let l=a[0],u=a[1],h=q$(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=Xr.squeezeShape(t),l=i;if(l.length<t.length){let t=["row","col","depth"];return`\n        ${B$(Y$(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Z$(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${K$(e)}\n      }\n    `;let u=e.shapeInfo.texShape,h=u[0],p=u[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===s&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;let c=q$(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${c};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:l}=Xr.squeezeShape(t);if(o.length<t.length){let t=["row","col","depth","depth2"];return`\n      ${B$(Y$(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Z$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${K$(e)}\n      }\n    `;let u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let c=q$(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${c});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=Xr.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${B$(Y$(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Z$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${K$(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],c=p[1];if(c===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=q$(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Xr.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${B$(Y$(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Z$(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,h=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${K$(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];if(f===h&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=q$(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function W$(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=N$();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=N$();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=N$();if(null!=a&&Xr.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){let n=[1,2],a=["b","row","col"];return`\n        ${W$(Y$(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Z$(a,n)});\n        }\n      `}let i=s[0],o=s[1],l=Math.ceil(t[2]/2),u=l*Math.ceil(t[1]/2),h=N$();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u}, ${l}, b, row, col);\n      return ${h.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){let t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2),h=u*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${h} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)p=`int b${e}, `+p,h*=t[n-e-1],d=`b${e} * ${h} + `+d;let c=N$();return`\n    vec4 ${a}(${p}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${c.texture2D}(${r}, uv);\n    }\n  `}(e)}}var V$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",U$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",G$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",H$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function j$(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function q$(e){return`offset${e}`}function K$(e){let t=e.name,n=Xr.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function X$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Y$(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Z$(e,t){return t.map((t=>e[t])).join(", ")}function J$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!Xr.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Xr.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}var{addImpl:Q$,bincountImpl:eF,bincountReduceImpl:tF,ceilImpl:nF,concatImpl:rF,expImpl:aF,expm1Impl:sF,floorImpl:iF,gatherV2Impl:oF,greaterImpl:lF,lessImpl:uF,linSpaceImpl:hF,logImpl:pF,maxImpl:dF,maximumImpl:cF,minimumImpl:fF,multiplyImpl:mF,negImpl:gF,prodImpl:yF,rangeImpl:bF,rsqrtImpl:xF,simpleAbsImpl:vF,sliceImpl:wF,stridedSliceImpl:kF,subImpl:IF,tileImpl:NF,topKImpl:SF,transposeImpl:CF,uniqueImpl:_F}=mS;function TF(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function EF(e,t){return 1===t?[e]:TF(e,t)}var AF=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${S$(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t)}\n      ${C$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function $F(e,t,n,r,a){let s,i=function(e,t){switch(e){case HA.PACKED_2X2_FLOAT32:return M$(t);case HA.PACKED_2X2_FLOAT16:return O$(t);case HA.UNPACKED_FLOAT32:return F$(t);case HA.UNPACKED_FLOAT16:return R$(t);case HA.PACKED_4X1_UNSIGNED_BYTE:return D$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=ZA(e[0],e[1]);s=t*n}else{let[t,n]=XA(e[0],e[1]);s=t*n}return s*function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,i)}function FF(e,t){if(e===GA.UPLOAD)return HA.PACKED_2X2_FLOAT32;if(e===GA.RENDER||null==e)return function(e){return Le().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?HA.PACKED_2X2_FLOAT32:HA.UNPACKED_FLOAT32:e?HA.PACKED_2X2_FLOAT16:HA.UNPACKED_FLOAT16}(t);if(e===GA.DOWNLOAD||e===GA.PIXELS)return HA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function RF(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var DF=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},MF="return abs(x);",OF="return x;",LF=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},zF=vc.whereImpl,PF={};var BF=class extends B{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Le().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){let e=KA(Le().getNumber("WEBGL_VERSION"));this.binaryCache=function(e){return e in PF||(PF[e]={}),PF[e]}(Le().getNumber("WEBGL_VERSION")),this.gpgpu=new class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Le().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){jA[e]=t}(t,e)):this.gl=KA(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(1===Le().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=t$(this.gl,e),b$(this.gl,t))this.textureHalfFloatExtension=t$(this.gl,t);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),b$(this.gl,r))this.colorBufferHalfFloatExtension=t$(this.gl,r);else if(Le().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",b$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!b$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=E$(this.gl),this.indexBuffer=A$(this.gl),this.framebuffer=function(e){return d$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=JA(this.gl,this.textureHalfFloatExtension)}get debug(){return Le().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program,this.outputTexture;let e=this.gl;QA(e,(()=>e.finish())),QA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),QA(e,(()=>e.deleteFramebuffer(this.framebuffer))),QA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),QA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),QA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=XA(t,n);return $$(e,a,s,F$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=XA(t,n);return $$(e,a,s,R$(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=XA(t,n);return $$(e,a,s,D$(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){QA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?QA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):QA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),QA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,l;QA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),QA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),QA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=ZA(t,n);return $$(e,a,s,O$(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){let[a,s]=ZA(t,n);return $$(e,a,s,M$(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(h$(this.gl,this.framebuffer),this.outputTexture=null),QA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){let[a,s]=XA(t,n),i=new Uint8Array(function(e,t){return 4*e}(t*n));return QA(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return L$(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=function(e,t,n,r){let a=e.createBuffer();QA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return QA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),QA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),QA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Le().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){let r=new Float32Array(t*n*4);return QA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=n$(t,e),r=T$(t),a=function(e){return d$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return QA(t,(()=>t.attachShader(a,r))),QA(t,(()=>t.attachShader(a,n))),function(e,t){if(QA(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&i$(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return QA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),o$(e,t,"clipSpacePos",n,3,20,0)&&o$(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&QA(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&i$(this.gl,this.program),QA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return d$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),QA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){QA(e,(()=>l$(e,t,r))),QA(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=ZA(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&i$(this.gl,this.program),p$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),QA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),QA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=t$(this.gl,2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Xr.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&Xr.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),u$(this.gl,e,this.framebuffer),this.debug&&p$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(u$(this.gl,this.outputTexture,this.framebuffer),this.debug&&p$(this.gl)):h$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;u$(r,e,this.framebuffer),this.debug&&p$(r),this.outputTexture=e,QA(r,(()=>r.viewport(0,0,t,n))),QA(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),QA(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=FF(t,n),a=RF(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=$F(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return r===HA.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===HA.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===HA.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===HA.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===HA.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=FF(n,r),s=RF(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=$F(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Le().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){this.logEnabled&&(this.numFreeTextures,this.numUsedTextures,this._numBytesFree,this._numBytesAllocated)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Le().global.screen?1024:Le().global.screen.height*Le().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new P(this,so())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Le().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Le().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:GA.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}decComplexRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,r){if(Le().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:GA.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new LF(i,OF):new DF(i,OF);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,h=null!=this.activeTimers;if(h&&(l=Xr.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=zd.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return h&&(this.downloadWaitMs+=Xr.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new LF(r,OF):new DF(r,OF);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Le().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==s&&Le().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...YA(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=zd.mergeRealAndImagArrays(t,n)}else if(null==h)u=this.getValuesFromTexture(e);else{let e=Xr.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=l&&this.disposeIntermediateTensorInfo(l);let p=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),p}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>Xr.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return zs(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!e$(n))throw Le().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Xr.sizeFromShape(t);if(Le().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...YA(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Le().getBool("WEBGL_PACK")&&!0===r,i=s?m$(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=GA.DOWNLOAD;let t=N$();this.outputShape=e,this.userCode=`\n      ${_$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=GA.DOWNLOAD;let t=N$();this.outputShape=e,this.userCode=`\n      ${_$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}async time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Xr.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Xr.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=Xr.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xr.now(),endMs:null}}endTimer(e){return Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xr.now(),e)}async getQueryTime(e){if(Le().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);let{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Le().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=so().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){let n=this.getCPUBackend();return!Le().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&null==n&&(this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&Xr.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){zd.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return zF(e.shape,t)}packedUnaryOp(e,t,n){let r=new LF(e.shape,t);return this.compileAndRun(r,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=vF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Le().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,MF,e.dtype);let t=new DF(e.shape,MF);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Xr.isString(n[0])){let a=n.map((e=>Xr.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return so().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=EF("rc",t),r=X$(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let n=EF("rc",t),r=X$(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";let a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){let n=e.length,r=function(e,t){let n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[c$(e.shape),...f$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[c$(t),...f$(t)],s=new AF(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){let t,n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n,i=m$(a);t=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=UA.DENSE;let t=YA(e),n=N$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${S$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=UA.DENSE;let t=YA(e),n=N$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${S$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}(i);return{dtype:s,shape:a,dataId:this.runWebGLProgram(t,[{shape:i,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){let s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===UA.DENSE){let t=YA(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===Xr.sizeFromShape(s.shape))return i.values=Xr.getTypedArrayFromDType(s.dtype,0),s;let o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Xr.sizeFromShape(t.shape)<=Le().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!y$(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);let u,h={shape:s.shape,texData:i,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((e=>{let t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,l,h),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=t.userCode,s=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=P$(s,o,a,t.packedInputs),u=e.createProgram(l),h=null,p=e.getUniformLocation(u,"NAN",!1);1===Le().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(u,"INFINITY",!1));let d={};for(let n=0;n<t.variableNames.length;n++){let r=t.variableNames[n],a=!1;d[r]=e.getUniformLocation(u,r,a),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,a)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:h,nanLoc:p}}(this.gpgpu,e,l,h))),c=null!=this.activeTimers;if(c&&(u=this.startTimer()),function(e,t,n,r,a){J$(t.inShapeInfos,n),J$([t.outShapeInfo],[r]);let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Le().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=s){if(n.isUniform){if(Xr.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,l,h,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),c&&(u=this.endTimer(u),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(u)})),!Le().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){let e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;let s=this.runWebGLProgram(e,t,n,r,a);return so().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Le().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=lo((()=>{if(!Le().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Le().getBool("DEBUG");Le().set("DEBUG",!1);let t=this.abs($h(1e-8)).dataSync()[0];if(Le().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=Xr.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=Le().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Xr.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=Xr.squeezeShape(e).newShape);let r=Xr.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=c$(e),n=2,a=2;return e.length&&([n,a]=f$(e)),r=t*(n/2)*(a/2),Xr.sizeToSquarishShape(r).map((e=>2*e))}return Xr.sizeToSquarishShape(r)}(n,o),t.texShape=h),null!=a){let e,s=m$(n),i=h[1],p=h[0],d=a instanceof Uint8Array;o?([i,p]=ZA(h[0],h[1]),e=new class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let r=N$(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){let o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${C$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}(s,[p,i],d)):e=new class{constructor(e,t,n=!1){this.variableNames=["A"];let r=N$(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${C$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}(s,[p,i],d);let c=this.makeTensorInfo([p,i],r);this.texData.get(c.dataId).usage=d?GA.PIXELS:GA.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(c.dataId),i,p,a);let f=!0,m=this.runWebGLProgram(e,[c],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(c),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=Xr.now()-l)}else{let e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Xr.bytesPerElement(t)}};Ma.isBrowser()&&xo("webgl",(()=>new BF),2);var WF=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=zd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},VF=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=zd.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length,s="";if(r)if(0===a||1===Xr.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${X$(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=EF("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function UF(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var GF={kernelName:Qt,backendName:"webgl",kernelFunc:UF};function HF(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=UF({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;let l=UF({inputs:{x:a},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:l},s}var jF={kernelName:ct,backendName:"webgl",kernelFunc:HF},qF="return (a < 0.) ? b * a : a;",KF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var XF={kernelName:sn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Xr.createScalarValue(s,"float32")),o=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VF(KF,a.shape,i.shape):new WF(qF,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),l}},YF="return (a < 0.) ? b * a : a;",ZF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var JF={kernelName:Un,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VF(ZF,r.shape,a.shape):new WF(YF,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function QF({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new LF(o.shape,t):new DF(o.shape,e),l.runWebGLProgram(i,[o],u)}}function eR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,h=o;if(r&&"complex64"===l.dtype){let t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new WF(e,l.shape,u.shape);return h.runWebGLProgram(i,[a,s],ka(n.dtype,r.dtype))})),s=HF({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,d=s||ka(l.dtype,u.dtype);if(h.shouldExecuteOnCPU([l,u])&&null!=a){let e=h.texData.get(l.dataId),t=h.texData.get(u.dataId),[n,r]=a(l.shape,u.shape,e.values,t.values,d),s=h.makeTensorInfo(r,d);return h.texData.get(s.dataId).values=n,s}return p=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new VF(t,l.shape,u.shape,n):new WF(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function tR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?ZF:YF;if("leakyrelu"===e)return t?KF:qF;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var nR=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let u=r?e[1]:e[2],h=Math.ceil(u/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},rR="return areal * breal - aimag * bimag;",aR="return areal * bimag + aimag * breal;",sR=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=zd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},iR="return a * b;";function oR(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=zd.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new sR(rR,a.shape,s.shape),i=new sR(aR,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=HF({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=mF(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VF(iR,a.shape,s.shape):new WF(iR,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var lR={kernelName:$n,backendName:"webgl",kernelFunc:oR};function uR(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Xr.sizeFromShape(a.shape),l=Xr.inferFromImplicitShape(s,o),u=Xr.sizeFromShape(l);Xr.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let h=i.texData.get(a.dataId);return!h.isPacked||y$(a.shape,l)||null!==h.texture&&y$(h.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[c$(e.shape),...f$(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[c$(t),...f$(t)],i=new AF(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,i)}var hR={kernelName:Xn,backendName:"webgl",kernelFunc:uR},pR=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Xr.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},dR=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function cR(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=zd.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new pR({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new pR({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new dR({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}function fR(e,t,n){let r=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=X$(this.rank),a=TF("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=X$(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function mR(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=Xr.parseAxisParam(a,e.shape),o=i,l=zd.getAxesPermutation(o,s),u=null!=l,h=e;u&&(h=fR(e,l,r),o=zd.getInnerMostAxes(o.length,s)),zd.assertAxesAreInnerMostDims("sum",o,s);let[p,d]=zd.computeOutAndReduceShapes(h.shape,o),c=p;n&&(c=zd.expandShapeToKeepDim(p,i));let f=Xr.sizeFromShape(d),m=uR({inputs:{x:h},attrs:{shape:[Xr.sizeFromShape(e.shape)/f,f]},backend:r}),g=cR(m,Ia(e.dtype),"sum",r),y=uR({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),y}(a,s,i,n)}var gR={kernelName:fr,backendName:"webgl",kernelFunc:mR};function yR(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=CF(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=fR(s,i,o);return t}var bR={kernelName:_r,backendName:"webgl",kernelFunc:yR};function xR({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,h=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[h-1]:t.shape[h-2],c=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Xr.sizeFromShape(m),b=Xr.sizeFromShape(g),x=y===b||1===y||1===b;Xr.assert(u>=2&&h>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));let v=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([c,f]);Xr.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let w,k=n?[y,p,c]:[y,c,p],I=r?[b,f,d]:[b,d,f],N=uR({inputs:{x:e},backend:a,attrs:{shape:k}}),S=uR({inputs:{x:t},backend:a,attrs:{shape:I}}),C=[N,S],_=Math.max(y,b),T=n?N.shape[1]:N.shape[2],E=null!=s,A=null!=i,$="leakyrelu"===l,F=null!=l?tR(l,!0):null;if((1===c||1===f)&&T>1e3&&!1===(E||A||$||null!=F)){let e=N,t=S;n&&(e=yR({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=yR({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));let s=1===f,i=e;1!==f&&(i=uR({inputs:{x:e},backend:a,attrs:{shape:[_,T,1]}}),C.push(i));let o=1===f?2:1,l=t;s&&(l=uR({inputs:{x:t},backend:a,attrs:{shape:[_,1,T]}}),C.push(l));let u=oR({inputs:{a:i,b:l},backend:a});w=mR({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(u)}else{let l=ka(e.dtype,t.dtype),u=new nR(k,I,[_,c,f],n,r,E,F,A,$),h=[N,S];if(null!=s&&h.push(s),A&&h.push(i),$){let e=a.makeTensorInfo([],"float32",Xr.createScalarValue(o,"float32"));h.push(e),C.push(e)}w=a.runWebGLProgram(u,h,l)}let R=uR({inputs:{x:w},backend:a,attrs:{shape:v}});C.push(w);for(let e of C)a.disposeIntermediateTensorInfo(e);return R}var vR={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return xR({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},wR="return abs(x);";var kR={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=vF(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LF(a.shape,wR):new DF(a.shape,wR),r.runWebGLProgram(t,[a],a.dtype)}},IR=QF({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),NR={kernelName:Ue,backendName:"webgl",kernelFunc:IR},SR=QF({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),CR={kernelName:Ge,backendName:"webgl",kernelFunc:SR},_R="return a + b;",TR=eR({opSnippet:_R,packedOpSnippet:_R,supportsComplex:!0,cpuKernelImpl:Q$}),ER={kernelName:He,backendName:"webgl",kernelFunc:TR};var AR={kernelName:je,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return UF({inputs:{x:a[0]},backend:r});if(a.length>Le().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>ka(e,t))),i=a.map((e=>e.shape)),o=Le().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};var $R={kernelName:qe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Xr.parseAxisParam(s,a.shape),u=l,h=zd.getAxesPermutation(u,o),p=a;null!=h&&(p=yR({inputs:{x:a},backend:n,attrs:{perm:h}}),u=zd.getInnerMostAxes(u.length,o)),zd.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=zd.computeOutAndReduceShapes(p.shape,u),m=uR({inputs:{x:p},backend:n,attrs:{shape:[-1,Xr.sizeFromShape(f)]}}),g=cR(m,m.dtype,"all",n);if(i){d=uR({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(c,l)}})}else d=uR({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};var FR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Xr.parseAxisParam(s,a.shape),u=l,h=zd.getAxesPermutation(u,o),p=a;null!=h&&(p=yR({inputs:{x:a},backend:n,attrs:{perm:h}}),u=zd.getInnerMostAxes(u.length,o)),zd.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=zd.computeOutAndReduceShapes(p.shape,u),m=uR({inputs:{x:p},backend:n,attrs:{shape:[-1,Xr.sizeFromShape(f)]}}),g=cR(m,m.dtype,"any",n);if(i){d=uR({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(c,l)}})}else d=uR({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}};function RR(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=zd.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),u=[t];null!=r&&u.push(r);let h=e.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=RR(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function DR(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=zd.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Xr.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,h=X$(u),p=EF("coords",u);if(1===s){o=u+1;let e=X$(o);i=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,i=`\n        ${h} sourceLocR = coords;\n        ++${p[u-1]};\n        ${h} sourceLocG = coords;\n        ++${p[u-2]};\n        ${h} sourceLocA = coords;\n        --${p[u-1]};\n        ${h} sourceLocB = coords;\n        --${p[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=EF("sourceLocR",o-1).concat("inIdx.r"),g=EF("sourceLocG",o-1).concat("inIdx.g"),y=EF("sourceLocB",o-1).concat("inIdx.b"),b=EF("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${h} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=DR(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function MR(e,t,n,r){let a=[n];if(zd.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Le().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],[s,i]=zd.computeOutAndReduceShapes(t.shape,a),o=Xr.sizeFromShape(i),l=uR({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);let u=RR(e,l,r);n.push(u);let h=uR({inputs:{x:u},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return DR(e,t,r)}var OR={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Xr.parseAxisParam(s,a.shape),o=zd.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=yR({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=zd.getInnerMostAxes(i.length,l.shape.length)),zd.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=MR(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};var LR={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Xr.parseAxisParam(s,a.shape),o=zd.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=yR({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=zd.getInnerMostAxes(i.length,l.shape.length)),zd.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=MR(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},zR=QF({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),PR={kernelName:Ze,backendName:"webgl",kernelFunc:zR},BR=QF({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),WR={kernelName:Je,backendName:"webgl",kernelFunc:BR},VR=QF({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),UR={kernelName:Qe,backendName:"webgl",kernelFunc:VR},GR=eR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),HR={kernelName:tt,backendName:"webgl",kernelFunc:GR},jR=QF({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),qR={kernelName:et,backendName:"webgl",kernelFunc:jR},KR=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},XR=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};var YR={kernelName:nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;k$(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Xr.assert(zd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=zd.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Xr.arraysEqual(u.inShape,u.outShape))return UF({inputs:{x:a},backend:n});let h=new KR(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};var ZR={kernelName:at,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=zd.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),p=new XR(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};var JR={kernelName:st,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=zd.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a],i.dtype)}};var QR={kernelName:rt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;k$([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,h=zd.computePool2DInfo(i.shape,o,l,1,u),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}};var eD={kernelName:it,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return xR({a,b:s,transposeA:i,transposeB:o,backend:n})}},tD={kernelName:Kt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;Xr.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Xr.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Xr.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=Le().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],zd.assertAndGetBroadcastShape(e,t),zd.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(zd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(zd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],zd.assertAndGetBroadcastShape(e,t),zd.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(zd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(zd.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},nD=["x","y","z","w","u","v"];function rD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=vi.parseSliceParams(a,s,i);if(vi.assertParamsValid(a,o,l),0===Xr.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=wF(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),h=vi.isSliceContinous(a.shape,o,l);if(u||!h){let e=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=X$(this.rank),n=EF("coords",this.rank),r=EF("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t,n=X$(this.rank),r=`uniform int start[${this.rank}];`,a=function(e){if(1===e)return"sourceLoc";if(e<=6)return nD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);t=`\n        ${n} sourceLoc;\n        ${n} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${nD[t]} = start[${t}] + coords.${nD[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${r}\n      void main() {\n        ${t}\n        setOutput(getSource(${a}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=vi.computeFlatOffset(t,Xr.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var aD={kernelName:or,backendName:"webgl",kernelFunc:rD},sD={kernelName:ot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Xr.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=zd.getReshaped(a.shape,s,o),u=zd.getPermuted(l.length,s.length),h=zd.getReshapedPermuted(a.shape,s,o),p=zd.getSliceBeginCoords(i,s.length),d=zd.getSliceSize(h,i,s.length),c=[],f=uR({inputs:{x:a},backend:n,attrs:{shape:l}}),m=yR({inputs:{x:f},backend:n,attrs:{perm:u}}),g=uR({inputs:{x:m},backend:n,attrs:{shape:h}}),y=rD({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var iD={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=eF(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},oD=eR({opSnippet:"return float(a != b);",dtype:"bool"}),lD={kernelName:Rn,backendName:"webgl",kernelFunc:oD};function uD(e){let{inputs:t,backend:n}=e,{input:r}=t;return UF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var hD={kernelName:jn,backendName:"webgl",kernelFunc:uD};var pD={kernelName:ht,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return UF({inputs:{x:s},backend:r});let t=Qu(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=HF({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=uD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Xr.hasEncodingLoss(s.dtype,i)){let e=UF({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new DF(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",Xr.getTypedArrayFromDType("bool",1)),t=oD({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},dD="return ceil(x);",cD=QF({opSnippet:dD,packedOpSnippet:dD,cpuKernelImpl:nF}),fD={kernelName:pt,backendName:"webgl",kernelFunc:cD};var mD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Le().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(s.shape);let l=t.getCustomSetupFunc(i,o);return r.runWebGLProgram(t,[s],s.dtype,l)}};function gD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var yD={kernelName:ft,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[gD(r,a.complexTensorInfos.real),gD(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function bD(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function xD(e){let{inputs:t,backend:n}=e,{input:r}=t;return UF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var vD={kernelName:tn,backendName:"webgl",kernelFunc:xD};function wD(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>uD({inputs:{input:e},backend:n}))),a=e.map((e=>xD({inputs:{input:e},backend:n}))),s=wD(r,t,n),i=wD(a,t,n),o=HF({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if("string"===r){let{tensors2D:a,outShape:s}=kD(e,t,n),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===a[0].shape[0],l=rF(i,s,r,o),u=zd.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>Le().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=wD(e.slice(0,r),t,n),s=wD(e.slice(r),t,n),i=wD([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zd.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=X$(r),s=EF("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${bD(i,l,t)}),\n            vec2(${bD(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${d}(${bD(i,l,c)}),\n          vec2(${bD(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:a,outShape:s}=kD(e,t,n),i=new class{constructor(e){this.outputShape=[],this.outputShape=zd.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(a.map((e=>e.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));let l=uR({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),l}function kD(e,t,n){let r=zd.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>uR({inputs:{x:e},attrs:{shape:[-1,Xr.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}function ID(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Xr.parseAxisParam(a,t[0].shape)[0],i=zd.computeOutShape(t.map((e=>e.shape)),s);if(0===Xr.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>Xr.sizeFromShape(e.shape)>0));if(1===o.length)return UF({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return zd.assertParamsConsistent(l,s),wD(o,s,n)}var ND={kernelName:mt,backendName:"webgl",kernelFunc:ID},SD=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}};function CD({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[],g=(1===d||1===c)&&p>1e3,y=u[2]%2!=0&&!!h.isPacked;if(!g&&Le().getBool("WEBGL_LAZILY_UNPACK")&&Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){let p=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,Xr.assert(y$(h.shape,d.shape),(()=>`packed reshape ${h.shape} to ${d.shape} isn't free`));let g=uR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);let y=xR({a:d,b:g,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(y.dataId);Xr.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,b.shape=n.outShape,l=UF({inputs:{x:y},backend:r}),l.shape=n.outShape,m.push(y)}else{let h=uR({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=uR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=xR({a:h,b:p,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=uR({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(h),m.push(p),m.push(d)}for(let e of m)r.disposeIntermediateTensorInfo(e);return l}function _D({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[m,g],b=[],x=uR({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=uR({inputs:{x:t},backend:r,attrs:{shape:[1,m,Xr.sizeFromShape(t.shape)/m]}});b.push(x),b.push(v);let w=new class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:h,dataFormat:p}=n,{left:d,top:c}=o,f=a*r,m=N$(),g="channelsLast"===p,y=g?0:1,b=g?1:2,x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${c};\n            d0 = offsetY + ${h} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}(y,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=uR({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);let N=null!=a,S=null!=s,C="leakyrelu"===o,_=o?tR(o,!0):null,T=new nR(I.shape,v.shape,[1,g,n.outChannels],!0,!1,N,_,S,C),E=[I,v];if(a&&E.push(a),S&&E.push(s),C){let e=r.makeTensorInfo([],"float32",Xr.createScalarValue(i,"float32"));E.push(e),b.push(e)}let A=r.runWebGLProgram(T,E,"float32"),$=uR({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});b.push(A);for(let e of b)r.disposeIntermediateTensorInfo(e);return $}var TD={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=zd.convertConv2DDataFormat(u),c=zd.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Le().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=_D({x:s,filter:i,convInfo:c,backend:r});else{let e=new SD(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=CD({x:s,filter:i,convInfo:c,backend:r});let f=uR({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}};var ED={kernelName:yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=zd.convertConv2DDataFormat(l),d=zd.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var AD={kernelName:bt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=zd.convertConv2DDataFormat(u),d=zd.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,h=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(c,[a,s],"float32")}};var $D={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=zd.computeConv3DInfo(a.shape,s.shape,i,l,o),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var FD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=zd.computeConv3DInfo(a.shape,l,i,1,o),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}};var RD={kernelName:wt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=zd.computeConv3DInfo(l,s.shape,o,1,i),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(h,[a,s],"float32")}},DD=QF({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),MD={kernelName:kt,backendName:"webgl",kernelFunc:DD},OD=QF({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),LD={kernelName:It,backendName:"webgl",kernelFunc:OD},zD={kernelName:St,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let d="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}},PD=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${BD(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${X$(r)} coords = getOutputCoords();\n        int end = ${WD(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${WD(r,"coords")} = idx;\n          val += getX(${BD(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function BD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function WD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var VD={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=zd.getAxesPermutation([s],l),h=a;null!=u&&(h=yR({inputs:{x:a},backend:n,attrs:{perm:u}}));let p=zd.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let d=a.shape[p],c=UF({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){let t=new PD(h.shape,!1,o),r=t.getCustomSetupFunc(e),a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new PD(h.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=yR({inputs:{x:c},backend:n,attrs:{perm:zd.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),e}return c}};var UD={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=eF(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=tF(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};var GD={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Xr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}},HD=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels,g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");let b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${p};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}},jD=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,f=e.filterWidth,m=f,g="int xR; int xC; int xCOffset;";for(let e=0;e<c;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<c;e++)for(let t=0;t<m;t++){let n=2*t;if(g+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*d};\n        `,1===h){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){let t=l%2==0?Xr.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<c;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");let x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${h});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}};var qD={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,h=l;null==h&&(h=[1,1]),Xr.assert(zd.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));let p,d=zd.computeConv2DInfo(a.shape,s.shape,i,h,o,u,!0);return p=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new jD(d):new HD(d),n.runWebGLProgram(p,[a,s],"float32")}};var KD={kernelName:Et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=zd.computeConv2DInfo(a.shape,h,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var XD={kernelName:At,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=zd.computeConv2DInfo(h,s.shape,i,o,l,u,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(d,[a,s],"float32")}};var YD={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Xr.sizeFromShape(r.shape),i=uR({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=uR({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};var ZD={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=zd.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(h);t=r.runWebGLProgram(p,[s,i],"float32");let d=uR({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}},JD=QF({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),QD={kernelName:Ot,backendName:"webgl",kernelFunc:JD},eM={kernelName:Lt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Le().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new VF("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new WF("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},tM=eR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),nM={kernelName:Pt,backendName:"webgl",kernelFunc:tM},rM=QF({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${zd.ERF_P};\n  float a1 = ${zd.ERF_A1};\n  float a2 = ${zd.ERF_A2};\n  float a3 = ${zd.ERF_A3};\n  float a4 = ${zd.ERF_A4};\n  float a5 = ${zd.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),aM={kernelName:zt,backendName:"webgl",kernelFunc:rM},sM="return exp(x);",iM=QF({opSnippet:sM,packedOpSnippet:sM,cpuKernelImpl:aF}),oM={kernelName:Bt,backendName:"webgl",kernelFunc:iM};function lM(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Xr.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),uR({inputs:{x:s},backend:r,attrs:{shape:o}})}var uM={kernelName:Wt,backendName:"webgl",kernelFunc:lM},hM="return exp(x) - 1.0;",pM=QF({opSnippet:hM,packedOpSnippet:hM,cpuKernelImpl:sF}),dM={kernelName:Vt,backendName:"webgl",kernelFunc:pM},cM=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function fM(e,t,n){let r=n.texData.get(e.dataId),a=Xr.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=uR({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new cM("real",o,t),u=new cM("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=HF({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=uR({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var mM={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return fM(r,!1,n)}};function gM(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Xr.inferDtype(a),"string"===s){let e=Xr.getArrayFromDType(s,Xr.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}var yM,bM={kernelName:Gt,backendName:"webgl",kernelFunc:gM},xM={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},vM="return floor(x);",wM=QF({opSnippet:vM,packedOpSnippet:vM,cpuKernelImpl:iF}),kM={kernelName:jt,backendName:"webgl",kernelFunc:wM},IM=eR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),NM={kernelName:qt,backendName:"webgl",kernelFunc:IM},SM={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,u],d=[h,u,s];(o||i||l)&&(null==yM&&(yM=document.createElement("canvas").getContext("2d")),yM.canvas.width=u,yM.canvas.height=h,yM.drawImage(a,0,0,u,h),a=yM.canvas);let c=n.makeTensorInfo(p,"int32");n.texData.get(c.dataId).usage=GA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),a);let f=Le().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=N$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(d):new class{constructor(e){this.variableNames=["A"];let t=N$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(d),m=n.runWebGLProgram(f,[c],"int32");return n.disposeData(c.dataId),m}};var CM={kernelName:Or,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=zd.convertConv2DDataFormat(p),y=zd.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Le().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=_D({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?tR(f,!1):null,h=new SD(y,e,u,n,a),p=[s,i];if(o&&p.push(o),l&&p.push(l),a){let e=r.makeTensorInfo([],"float32",Xr.createScalarValue(m,"float32"));p.push(e),b.push(e)}t=r.runWebGLProgram(h,p,"float32")}else t=CD({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let x=uR({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach((e=>r.disposeIntermediateTensorInfo(e))),x}};var _M={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:c}=r,f=[],m=h;null==m&&(m=[1,1]),Xr.assert(zd.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=zd.computeConv2DInfo(a.shape,s.shape,l,m,u,p,!0),b=Le().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?tR(d,b):null,v=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===d;if(w&&v.push(i),k&&v.push(o),I){let e=n.makeTensorInfo([],"float32",Xr.createScalarValue(c,"float32"));v.push(e),f.push(e)}g=b?new jD(y,w,x,k,I):new HD(y,w,x,k,I);let N=n.runWebGLProgram(g,v,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};var TM={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,l,u,h]=zd.prepareAndValidate(r,a),p=uR({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),d=uR({inputs:{x:r},backend:n,attrs:{shape:[Xr.sizeFromShape(r.shape)/u,u]}}),c=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=X$(t.length),a=X$(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,u]),f=n.runWebGLProgram(c,[d,p],d.dtype),m=uR({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};var EM={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Xr.parseAxisParam(i,a.shape)[0],u=zd.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=Xr.sizeFromShape(s.shape),p=[],d=uR({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=uR({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),r=oF(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=X$(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=uR({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},AM=eR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:lF,dtype:"bool"}),$M={kernelName:Zt,backendName:"webgl",kernelFunc:AM},FM=eR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),RM={kernelName:Jt,backendName:"webgl",kernelFunc:FM};var DM={kernelName:en,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return fM(r,!0,n)}},MM=QF({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),OM={kernelName:nn,backendName:"webgl",kernelFunc:MM},LM=QF({opSnippet:"return float(isinf(x));",dtype:"bool"}),zM={kernelName:rn,backendName:"webgl",kernelFunc:LM},PM=QF({opSnippet:"return float(isnan(x));",dtype:"bool"}),BM={kernelName:an,backendName:"webgl",kernelFunc:PM},WM=eR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:uF,dtype:"bool"}),VM={kernelName:on,backendName:"webgl",kernelFunc:WM},UM=eR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),GM={kernelName:ln,backendName:"webgl",kernelFunc:UM};var HM={kernelName:un,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=hF(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},jM=QF({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:pF}),qM={kernelName:hn,backendName:"webgl",kernelFunc:jM},KM=QF({opSnippet:"return log(1.0 + x);"}),XM={kernelName:pn,backendName:"webgl",kernelFunc:KM},YM=eR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ZM={kernelName:dn,backendName:"webgl",kernelFunc:YM},JM=QF({opSnippet:"return float(!(x >= 1.0));"}),QM={kernelName:cn,backendName:"webgl",kernelFunc:JM},eO=eR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),tO={kernelName:fn,backendName:"webgl",kernelFunc:eO},nO={kernelName:gn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Le().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},rO={kernelName:yn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function aO(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=Xr.parseAxisParam(s,a.shape),u=l,h=zd.getAxesPermutation(u,o),p=null!=h,d=n.shouldExecuteOnCPU([a]),c=a;if(p){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let r=CF(e,a.shape,a.dtype,h,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=fR(a,h,n);u=zd.getInnerMostAxes(u.length,o)}zd.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=zd.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=zd.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=dF(e,Xr.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=Xr.sizeFromShape(t),s=uR({inputs:{x:e},attrs:{shape:[Xr.sizeFromShape(e.shape)/a,a]},backend:r}),i=cR(s,e.dtype,"max",r),o=uR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var sO={kernelName:bn,backendName:"webgl",kernelFunc:aO},iO=eR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:cF}),oO={kernelName:xn,backendName:"webgl",kernelFunc:iO};var lO={kernelName:vn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;k$(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Xr.assert(zd.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=zd.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Xr.arraysEqual(u.inShape,u.outShape))return UF({inputs:{x:a},backend:n});let h=new KR(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};var uO={kernelName:kn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=zd.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),p=new XR(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};var hO={kernelName:In,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=zd.computePool3DInfo(i.shape,o,l,[1,1,1],u,h),d=new XR(p,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}};var pO={kernelName:wn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;k$([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:h,dimRoundingMode:p}=r,d=zd.computePool2DInfo(o.shape,l,u,1,h,p),c=new KR(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var dO={kernelName:Nn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Xr.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];Xr.assert(zd.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let h=zd.computePool2DInfo(r.shape,a,s,u,i),[p,d]=function(e,t,n,r){let a=new KR(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new KR(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,h,l);return[p,d]}};var cO={kernelName:Sn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=Xr.parseAxisParam(s,r.shape),u=l,h=zd.getAxesPermutation(u,o),p=null!=h,d=i.shouldExecuteOnCPU([r]),c=[],f=r;if(p){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];let n=CF(e,r.shape,r.dtype,h,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=fR(r,h,i);c.push(f),u=zd.getInnerMostAxes(u.length,o)}zd.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=zd.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=zd.expandShapeToKeepDim(m,l));let b=function(e,t,n,r){let a=Xr.sizeFromShape(t),s=uR({inputs:{x:e},attrs:{shape:[Xr.sizeFromShape(e.shape)/a,a]},backend:r}),i=cR(s,"float32","mean",r),o=uR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return b}};var fO={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Xr.parseAxisParam(s,a.shape),u=l,h=zd.getAxesPermutation(u,o),p=a;null!=h&&(p=yR({inputs:{x:a},backend:n,attrs:{perm:h}}),u=zd.getInnerMostAxes(u.length,a.shape.length)),zd.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=zd.computeOutAndReduceShapes(p.shape,u),m=uR({inputs:{x:p},backend:n,attrs:{shape:[-1,Xr.sizeFromShape(f)]}}),g=cR(m,m.dtype,"min",n);if(i){d=uR({inputs:{x:g},backend:n,attrs:{shape:zd.expandShapeToKeepDim(c,l)}})}else d=uR({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),d}},mO=eR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:fF}),gO={kernelName:_n,backendName:"webgl",kernelFunc:mO},yO={kernelName:Tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=X$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=EF("rc",r),l=EF("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,d="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=X$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},bO=eR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xO={kernelName:En,backendName:"webgl",kernelFunc:bO},vO=eR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),wO={kernelName:Mt,backendName:"webgl",kernelFunc:vO},kO="return a - b;",IO=eR({opSnippet:kO,packedOpSnippet:kO,supportsComplex:!0,cpuKernelImpl:IF}),NO={kernelName:vr,backendName:"webgl",kernelFunc:IO};function SO(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Xr.parseAxisParam([s],a.shape),o=aO({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=zd.expandShapeToKeepDim(o.shape,i),u=uR({inputs:{x:o},backend:n,attrs:{shape:l}}),h=IO({inputs:{a,b:u},backend:n}),p=iM({inputs:{x:h},backend:n}),d=mR({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=uR({inputs:{x:d},backend:n,attrs:{shape:l}}),f=vO({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var CO={kernelName:yr,backendName:"webgl",kernelFunc:SO};var _O={kernelName:An,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:SO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],h=l.shape[1],p=new class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}(u,h,s),d=p.getCustomSetupFunc(i),c=n.runWebGLProgram(p,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}},TO="return -x;";var EO={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=gF(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Le().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LF(a.shape,TO):new DF(a.shape,TO),r.runWebGLProgram(t,[a],a.dtype)}},AO=vc.nonMaxSuppressionV3Impl;var $O={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){zd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p}=AO(u,h,i,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},FO=vc.nonMaxSuppressionV4Impl;var RO={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){zd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=FO(h,p,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},DO=vc.nonMaxSuppressionV5Impl;var MO={kernelName:On,backendName:"webgl",kernelFunc:function(e){zd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),p=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=DO(h,p,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},OO={kernelName:zn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=Xr.sizeFromShape(a.shape),u=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),h=uR({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[h],a.dtype);n.disposeIntermediateTensorInfo(h);let d=uR({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),d}};function LO(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=uD({inputs:{input:r},backend:n}),t=LO({inputs:{x:e},backend:n}),a=xD({inputs:{input:r},backend:n}),s=LO({inputs:{x:a},backend:n}),i=HF({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return gM({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var zO={kernelName:$r,backendName:"webgl",kernelFunc:LO};var PO={kernelName:Ln,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=uD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=xD({inputs:{input:a},backend:r}),i=LO({inputs:{x:s},backend:r}),o=HF({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return gM({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};var BO={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return lM({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Xr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Xr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=ID({inputs:t.map((e=>{let t=lM({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},WO=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=X$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=EF("rc",r),l=EF("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=X$(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)},VO={kernelName:Bn,backendName:"webgl",kernelFunc:WO},UO=eR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),GO={kernelName:Vn,backendName:"webgl",kernelFunc:UO};var HO={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=Xr.parseAxisParam(i,s.shape),p=h,d=zd.getAxesPermutation(p,l),c=s;if(null!=d&&(c=yR({inputs:{x:s},backend:r,attrs:{perm:d}}),p=zd.getInnerMostAxes(p.length,l),u.push(c)),zd.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=yF(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=zd.computeOutAndReduceShapes(c.shape,p),a=Xr.sizeFromShape(n),i=uR({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=cR(i,Ia(s.dtype),"prod",r);t=uR({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=zd.expandShapeToKeepDim(t.shape,h);t=uR({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},jO=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=bF(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},qO={kernelName:Hn,backendName:"webgl",kernelFunc:jO},KO=QF({opSnippet:"return 1.0 / x;"}),XO={kernelName:qn,backendName:"webgl",kernelFunc:KO},YO=QF({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ZO={kernelName:Kn,backendName:"webgl",kernelFunc:YO},JO=QF({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),QO={kernelName:er,backendName:"webgl",kernelFunc:JO};var eL={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=Le().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]},\n          ${h[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}};var tL={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var nL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${h[0]/p[0]},\n          ${h[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}};var rL={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var aL={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Xr.parseAxisParam(s,a.shape);if(0===i)return UF({inputs:{x:a},backend:n});let l=Le().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=EF("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=X$(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=X$(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},sL={kernelName:Dr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];let a=e[1],s=e[2],i=Math.sin(t).toFixed(3),o=Math.cos(t).toFixed(3);this.outputShape=e;let[l,u]=zd.getImageCenter(r,a,s),h=l.toFixed(3),p=u.toFixed(3),d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${o} - (float(y) - ${p}) * ${i};\n          float coordYFloat = (float(x) - ${h}) * ${i} + (float(y) - ${p}) * ${o};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${p}));\n          ${d}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape,a,s,i);return o.runWebGLProgram(l,[r],r.dtype)}},iL=QF({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oL={kernelName:nr,backendName:"webgl",kernelFunc:iL},lL=QF({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xF}),uL={kernelName:rr,backendName:"webgl",kernelFunc:lL},hL=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=X$(a.length),l=X$(s.length),u="";1===n?u="i":2===n&&(u="i, j");let h=`getIndices(${u})`,p="";1===r?p="i":2===r&&(p="i, coords[1]");let d=`getUpdates(${p})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var pL={kernelName:ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=zd.calculateShapes(s,a,i),d=[p/u,u];if(0===p)return n.makeTensorInfo(i,a.dtype);let c=uR({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=uR({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new hL(l,o,c.shape.length,f.shape.length,h,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=uR({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};var dL={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=X$(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ka(a.dtype,s.dtype))}},cL=QF({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${zd.SELU_SCALEALPHA};\n  float scale = ${zd.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),fL={kernelName:ir,backendName:"webgl",kernelFunc:cL},mL=QF({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),gL={kernelName:pr,backendName:"webgl",kernelFunc:mL},yL=QF({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),bL={kernelName:hr,backendName:"webgl",kernelFunc:yL},xL=QF({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),vL={kernelName:lr,backendName:"webgl",kernelFunc:xL},wL=QF({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),kL={kernelName:ur,backendName:"webgl",kernelFunc:wL},IL=QF({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),NL={kernelName:dr,backendName:"webgl",kernelFunc:IL},SL={kernelName:mr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Xr.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=WO({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=zd.getReshaped(h.shape,s,o,!1),d=zd.getPermuted(p.length,s.length,!1),c=zd.getReshapedPermuted(h.shape,s,o,!1),f=uR({inputs:{x:h},backend:n,attrs:{shape:p}}),m=yR({inputs:{x:f},backend:n,attrs:{perm:d}}),g=uR({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var CL={kernelName:wr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:h,outputSize:p}=zd.calculateShapes(s,a,o),d=new hL(u,l,a.shape.length,s.shape.length,h,[p,1],!1),c=n.runWebGLProgram(d,[s,a,i],s.dtype),f=uR({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(c),f}};var _L={kernelName:gr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Xr.parseAxisParam(i,a.shape)[0],l=zd.prepareSplitSize(a,s,o),u=a.shape.length,h=new Array(u).fill(0),p=a.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let r=rD({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[o]+=e,r}))}},TL=QF({opSnippet:"return sqrt(x);"}),EL={kernelName:cr,backendName:"webgl",kernelFunc:TL},AL=QF({opSnippet:"return x * x;"}),$L={kernelName:xr,backendName:"webgl",kernelFunc:AL},FL="return (a - b) * (a - b);",RL=eR({opSnippet:FL,packedOpSnippet:FL}),DL={kernelName:br,backendName:"webgl",kernelFunc:RL};var ML={kernelName:Fr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new DF(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};var OL={kernelName:kr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=vi.sliceInfo(s.shape,i,o,l,u,h,p,d,c),v=uR({inputs:{x:s},backend:r,attrs:{shape:b}});if(f){let e=rD({inputs:{x:v},backend:r,attrs:{begin:m,size:y}});t=uR({inputs:{x:e},backend:r,attrs:{shape:x}}),r.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))t=r.makeTensorInfo(x,s.dtype,[]);else if(r.shouldExecuteOnCPU([v])){let e=r.texData.get(v.dataId).values,n=zs(v.shape,v.dtype,e),a=kF(x,n,g,m);t=r.makeTensorInfo(x,v.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=X$(n.length),s=X$(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(m,g,x);t=r.runWebGLProgram(e,[v],v.dtype)}let w=uR({inputs:{x:t},backend:r,attrs:{shape:x}});return r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(t),w}},LL=QF({opSnippet:"return tan(x);"}),zL={kernelName:Ir,backendName:"webgl",kernelFunc:LL},PL=QF({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BL={kernelName:Nr,backendName:"webgl",kernelFunc:PL};function WL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype){let e=n.readSync(a.dataId).map((e=>Xr.decodeString(e))),t=zs(a.shape,a.dtype,e),r=NF(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=X$(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var VL={kernelName:Sr,backendName:"webgl",kernelFunc:WL};var UL={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[l,u]=SF(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var GL={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;k$(s,"unique");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=_F(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}};var HL={kernelName:Er,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),h=0;for(let e=0;e<o;e++)e!==s&&(u[h++]=i.shape[e]);let p=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=rD({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),r=uR({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var jL=[nO,rO,vR,kR,NR,CR,ER,AR,$R,FR,OR,LR,PR,WR,HR,UR,qR,ZR,YR,JR,QR,eD,tD,sD,iD,pD,fD,mD,yD,jF,ND,ED,AD,TD,FD,RD,$D,MD,LD,zD,VD,UD,GD,KD,XD,qD,YD,ZD,QD,eM,nM,aM,oM,uM,dM,mM,bM,xM,kM,NM,SM,CM,_M,TM,EM,$M,RM,GF,DM,vD,OM,zM,BM,XF,VM,GM,HM,XM,qM,ZM,QM,tO,sO,uO,lO,hO,pO,dO,oO,cO,fO,gO,yO,xO,_O,lR,EO,$O,RO,MO,lD,OO,PO,BO,VO,GO,JF,HO,qO,hD,wO,XO,QO,ZO,hR,eL,tL,nL,rL,aL,sL,oL,uL,pL,dL,fL,gL,bL,vL,kL,aD,CO,NL,SL,CL,_L,EL,$L,DL,ML,OL,NO,gR,zL,BL,VL,UL,bR,GL,HL,{kernelName:Ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=zd.getAxesPermutation([u],o),p=a;null!=h&&(p=yR({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=zd.getInnerMostAxes(1,o)[0]);let d=zd.segment_util.computeOutShape(p.shape,u,i),c=Xr.sizeFromShape([p.shape[u]]),f=uR({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ia(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=zd.segment_util.segOpComputeOptimalWindowSize(o,s),h={windowSize:u,inSize:o,batchSize:i,numSegments:s},p=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(h,t),d=n.compileAndRun(p,[e,r],a);if(l.push(d),d.shape[1]===s)return d;let c=jO({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=WL({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(d,t,f,a,s)},y=uR({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;if(null!=h){l.push(y);let e=zd.getUndoAxesPermutation(h);b=yR({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},zO];for(let e of jL)Ur(e);var qL,KL,XL,YL={"tfjs-core":Qi,"tfjs-backend-cpu":"3.0.0","tfjs-backend-webgl":"3.0.0","tfjs-data":pS,"tfjs-layers":eb,"tfjs-converter":JI,tfjs:"3.0.0"};!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(qL||(qL={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu"}(KL||(KL={}));var ZL={kernelName:Mr,backendName:"wasm",setupFunc:function(e){XL=e.wasm.cwrap(Mr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r,d=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=KL[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],b=u?s.shape[1]:s.shape[2],x=a.shape[0],v=n.makeOutput([x,y,b],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return XL(d,k,a.shape.length,c,I,s.shape.length,l,u,g,f,m,p||0,w),v}};function JL(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){let{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===Xr.sizeFromShape(s.shape)||t(a,i),s}}}var QL=JL(Ve);function ez(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){let{backend:s,inputs:i}=a,{a:o,b:l}=i,u=s.dataIdMap.get(o.dataId).id,h=s.dataIdMap.get(l.dataId).id,p=null!=n?n:o.dtype,d=zd.assertAndGetBroadcastShape(o.shape,l.shape),c=s.makeOutput(d,p);if(0===Xr.sizeFromShape(d))return c;let f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(l.shape).buffer),g=s.dataIdMap.get(c.dataId).id,y=()=>r(u,f,o.shape.length,h,m,l.shape.length,qL[o.dtype],g);if(t&&"float32"===o.dtype)return y(),c;let b=zd.getBroadcastDims(o.shape,d),x=zd.getBroadcastDims(l.shape,d),v=b.every(((e,t)=>e===t)),w=x.every(((e,t)=>e===t));if(v&&w)return y(),c;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}var tz,nz=ez(He,!0);var rz={kernelName:je,backendName:"wasm",setupFunc:function(e){tz=e.wasm.cwrap(je,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Xr.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return tz(s,a.length,qL[r.dtype],i),r}};function az(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var sz,iz={kernelName:Qt,backendName:"wasm",kernelFunc:az};function oz(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=az({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),h=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return sz(h,c,l.shape.length,qL[l.dtype],p,d,s.length),u}var lz,uz={kernelName:_r,backendName:"wasm",kernelFunc:oz,setupFunc:function(e){sz=e.wasm.cwrap(_r,null,["number","array","number","number","number","array","number"])}};function hz(e,t,n){let r=e.shape,a=e.shape.length,s=Xr.parseAxisParam(t,r),i=s,o=zd.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=zd.getInnerMostAxes(i.length,a),l=oz({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var pz,dz={kernelName:Xe,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:h,inputWasTransposed:p}=hz(s,a,t);if(p){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=Xr.sizeFromShape(c.shape),g=l.shape[h[0]];return lz(o,qL[l.dtype],m,g,f),p&&t.disposeData(u.dataId),c},setupFunc:function(e){lz=e.wasm.cwrap(Xe,null,["number","number","number","number","number"])}};var cz={kernelName:nt,backendName:"wasm",setupFunc:function(e){pz=e.wasm.cwrap(nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=zd.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.strideHeight,b=h.strideWidth,x=h.inChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);if(1!==h.dilationWidth||1!==h.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${h.dilationHeight}, ${h.dilationWidth}].`);let v=r.makeOutput(h.outShape,"float32"),w=r.dataIdMap.get(v.dataId).id;return pz(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,w),v}};function fz(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Xr.sizeFromShape(r.shape),i=Xr.inferFromImplicitShape(a,s);return Xr.assert(s===Xr.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),{dataId:r.dataId,shape:i,dtype:r.dtype}}var mz,gz={kernelName:Xn,backendName:"wasm",kernelFunc:fz};var yz={kernelName:it,backendName:"wasm",setupFunc:function(e){mz=e.wasm.cwrap(it,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Xr.sizeFromShape(f),y=Xr.sizeFromShape(m),b=g===y||1===g||1===y;Xr.assert(l>=2&&u>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));let x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,c]);Xr.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[y,c,p]:[y,p,c],w=fz({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),k=fz({inputs:{x:s},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,N=n.dataIdMap.get(k.dataId).id,S=i?w.shape[2]:w.shape[1],C=o?k.shape[1]:k.shape[2],_=Math.max(g,y),T=n.makeOutput([_,S,C],w.dtype),E=n.dataIdMap.get(T.dataId).id,A=new Uint8Array(new Int32Array(w.shape).buffer),$=new Uint8Array(new Int32Array(k.shape).buffer);return mz(I,A,w.shape.length,N,$,k.shape.length,i,o,E),T.shape=x,T}};function bz(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var xz,vz={kernelName:ht,backendName:"wasm",kernelFunc:bz};var wz={kernelName:dt,backendName:"wasm",setupFunc:function(e){xz=e.wasm.cwrap(dt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return xz(o,s,i,u),l}};function kz(e){let{inputs:t,backend:n}=e,r=Xr.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=zd.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>Xr.sizeFromShape(e.shape)>0));if(1===s.length)return az({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===Xr.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(zd.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=Xr.sizeFromShape(e.shape.slice(r));return fz({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=zd.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=VS(o,a,t[0].dtype,l),h=zd.computeOutShape(s.map((e=>e.shape)),r);return i.shape=h,n.dataIdMap.get(i.dataId).stringBytes=zd.fromStringArrayToUint8(u),i}let l=Xr.sizeFromShape(s[0].shape.slice(0,r)),u=0,h=s.map((e=>{let t=Xr.sizeFromShape(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){let r=h[n],a=e*r,s=p[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}var Iz,Nz={kernelName:mt,backendName:"wasm",kernelFunc:kz};var Sz,Cz={kernelName:gt,backendName:"wasm",setupFunc:function(e){Iz=e.wasm.cwrap(gt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p,dataFormat:d}=n,c=zd.convertConv2DDataFormat(d),f=zd.computeConv2DInfo(a.shape,s.shape,l,u,h,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,C=f.outChannels,_="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(T.dataId).id;return Iz(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,v,_,w,k,I,N,S,C,E),T}};var _z,Tz,Ez={kernelName:bt,backendName:"wasm",setupFunc:function(e){Sz=e.wasm.cwrap(bt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:h}=r,p=zd.convertConv2DDataFormat(l),d=zd.computeConv2DInfo(h,s.shape,i,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=d,N=f-1-d.padInfo.top,S=m-1-d.padInfo.left,C="channelsLast"===d.dataFormat,_=Xr.computeStrides(d.inShape),T=Xr.computeStrides(a.shape),[E,A,$]=Xr.computeStrides(s.shape),F=_[0],R=C?_[1]:_[2],D=C?_[2]:1,M=C?1:_[1],O=T[0],L=C?T[1]:T[2],z=C?T[2]:1,P=C?1:T[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return Sz(V,U,c,f,m,y,b,g,v,w,x,k,I,N,S,E,A,$,F,R,D,M,O,L,z,P,W),B}},Az=JL(kt);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(_z||(_z={}));var $z,Fz={kernelName:St,backendName:"wasm",setupFunc:function(e){Tz=e.wasm.cwrap(St,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:h}=r,p=u.shape[0],[d,c]=o,f=[p,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=bz({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(h.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return Tz(g,y,b,p,w,d,c,_z[s],i,v),null!=t&&n.disposeData(t.dataId),x}};var Rz,Dz={kernelName:Nt,backendName:"wasm",setupFunc:function(e){$z=e.wasm.cwrap(Nt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Xr.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=zd.getAxesPermutation([s],l),h=a;null!==u&&(h=oz({inputs:{x:a},attrs:{perm:u},backend:n}));let p=zd.getInnerMostAxes(1,l)[0];zd.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(h.shape,h.dtype),c=h.shape[p],f=n.dataIdMap.get(h.dataId).id,m=n.dataIdMap.get(d.dataId).id;$z(f,i?1:0,o?1:0,c,m,qL[a.dtype]);let g=d;if(null!==u){g=oz({inputs:{x:d},attrs:{perm:zd.getUndoAxesPermutation(u)},backend:n}),n.disposeData(h.dataId),n.disposeData(d.dataId)}return g}};var Mz,Oz={kernelName:_t,backendName:"wasm",setupFunc:function(e){Rz=e.wasm.cwrap(_t,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;Xr.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));let o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f="NHWC"===i?[o,p,d,c]:[o,c,p,d],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(Xr.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(Xr.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return Rz(g,s,"NHWC"===i?1:0,y,a.shape.length-1,b,x,f.length,v),m}};var Lz={kernelName:Tt,backendName:"wasm",setupFunc:function(e){Mz=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:h,dimRoundingMode:p}=n,d=null==u?[1,1]:u,c=zd.computeConv2DInfo(a.shape,s.shape,l,d,h,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,N=c.inChannels,S=c.outChannels,C="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(c.outShape,"float32"),T=r.dataIdMap.get(_.dataId).id;return Mz(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,C,v,w,k,I,N,S,T),_}},zz=ez(Pt,!1,"bool"),Pz=JL(Bt);function Bz(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Xr.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),fz({inputs:{x:a},backend:r,attrs:{shape:o}})}var Wz={kernelName:Wt,backendName:"wasm",kernelFunc:Bz};var Vz,Uz={kernelName:Gt,backendName:"wasm",kernelFunc:function(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};var Gz,Hz={kernelName:Ht,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,h]=r.shape;return Vz(s,o,l,u,h,i),a},setupFunc:function(e){Vz=e.wasm.cwrap(Ht,null,["number","number","number","number","number","number"])}},jz=JL(jt),qz=ez(qt,!1);var Kz,Xz={kernelName:Kt,backendName:"wasm",setupFunc:function(e){Gz=e.wasm.cwrap(Kt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Xr.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return Gz(h,p,d,c,f,a,g),m}};var Yz,Zz={kernelName:Or,backendName:"wasm",setupFunc:function(e){Kz=e.wasm.cwrap(Or,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=zd.computeConv2DInfo(a.shape,s.shape,l,h,u,d),g=KL[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return Kz(y,R,D,M,b,w,k,v,I,N,S,C,F,_,T,E,A,$,x,g,z,f||0,L),O}};var Jz,Qz={kernelName:Lr,backendName:"wasm",setupFunc:function(e){Yz=e.wasm.cwrap(Lr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:h,dataFormat:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=zd.computeConv2DInfo(a.shape,s.shape,l,h,u,d,!0),g=KL[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,_=m.dilationHeight,T=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return Yz(y,R,D,M,b,w,k,v,I,N,S,C,F,_,T,E,A,$,x,g,z,f||0,L),O}};var eP,tP={kernelName:Yt,backendName:"wasm",setupFunc:function(e){Jz=e.wasm.cwrap(Yt,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=fi.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let h=a.shape,p=h[h.length-1],d=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return Jz(d,qL[r.dtype],c,i,p,o,f,m),u}};var nP,rP={kernelName:Xt,backendName:"wasm",setupFunc:function(e){eP=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=Xr.parseAxisParam(i,a.shape)[0],u=zd.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=fz({inputs:{x:a},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:t}),p=Xr.sizeFromShape(s.shape),d=fz({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:t}),c=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],f=t.makeOutput(c,a.dtype);if(0===Xr.sizeFromShape(a.shape))return f;let m=h.shape.length-1,g=t.dataIdMap.get(h.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=new Uint8Array(new Int32Array(Xr.computeStrides(h.shape)).buffer),v=new Uint8Array(new Int32Array(Xr.computeStrides(c)).buffer);return eP(g,qL[a.dtype],x,m,y,u.batchSize,v,b),f.shape=u.outputShape,f}},aP=ez(Zt,!1,"bool"),sP=ez(Jt,!1,"bool");var iP,oP={kernelName:sn,backendName:"wasm",setupFunc:function(e){nP=e.wasm.cwrap(sn,null,["number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,t.dtype);if(0!==Xr.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;nP(a,n,e)}return s}},lP=ez(on,!1,"bool"),uP=ez(ln,!1,"bool"),hP=JL(hn),pP=ez(dn,!1,"bool");var dP,cP={kernelName:bn,backendName:"wasm",setupFunc:function(e){iP=e.wasm.cwrap(bn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:h,originalAxes:p,inputWasTransposed:d}=hz(i,a,t);if(d){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;zd.assertAxesAreInnerMostDims("max",h,c);let[f,m]=zd.computeOutAndReduceShapes(l.shape,h),g=Xr.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Xr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;iP(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=zd.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},fP=ez(xn,!1);var mP,gP={kernelName:vn,backendName:"wasm",setupFunc:function(e){dP=e.wasm.cwrap(vn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,h=zd.computePool2DInfo(a.shape,i,o,1,l,u),p=h.filterHeight,d=h.filterWidth,c=h.padInfo.top,f=h.padInfo.right,m=h.padInfo.bottom,g=h.padInfo.left,y=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(h.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return dP(s,a.shape[0],a.shape[1],a.shape[2],p,d,c,f,m,g,y,b,x,v,w,k,N),I}};var yP,bP={kernelName:Sn,backendName:"wasm",setupFunc:function(e){mP=e.wasm.cwrap(Sn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=hz(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=zd.getInnerMostAxes(f.length,u.shape.length))}zd.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=zd.computeOutAndReduceShapes(u.shape,f),y=Xr.sizeFromShape(g),b=u;"float32"!==u.dtype&&(b=bz({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(m,"float32");if(0!==Xr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;mP(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=zd.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};var xP,vP={kernelName:Cn,backendName:"wasm",setupFunc:function(e){yP=e.wasm.cwrap(Cn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=hz(i,a,t);if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e)}let f=u.shape.length;zd.assertAxesAreInnerMostDims("min",p,f);let[m,g]=zd.computeOutAndReduceShapes(u.shape,p),y=Xr.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Xr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;yP(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=zd.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},wP=ez(_n,!1),kP=ez($n,!0),IP=JL(Fn);function NP(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var SP,CP={kernelName:Dn,backendName:"wasm",setupFunc:function(e){xP=e.wasm.cwrap(Dn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(l.dataId).id,p=xP(u,h,s,a,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=NP(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}};var _P,TP={kernelName:Mn,backendName:"wasm",setupFunc:function(e){SP=e.wasm.cwrap(Mn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=SP(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NP(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var EP,AP={kernelName:On,backendName:"wasm",setupFunc:function(e){_P=e.wasm.cwrap(On,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,h=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=_P(h,p,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=NP(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},$P=ez(Rn,!1,"bool");var FP={kernelName:zn,backendName:"wasm",setupFunc:function(e){EP=e.wasm.cwrap(zn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(a.dataId).id;return EP(h,s,i,o,u),l}};var RP={kernelName:Ln,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}};var DP,MP={kernelName:Pn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Bz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;return t.forEach((e=>{Xr.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Xr.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))})),kz({inputs:t.map((e=>Bz({inputs:{input:e},backend:n,attrs:{dim:a}}))),backend:n,attrs:{axis:a}})}};var OP,LP={kernelName:Bn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),d=new Uint8Array(new Int32Array(h).buffer),c=new Uint8Array(new Int32Array(p).buffer);return DP(i,u,t.shape.length,qL[t.dtype],d,c,a,l),o},setupFunc:function(e){DP=e.wasm.cwrap(Bn,null,["number","array","number","number","array","array","number","number"])}},zP=ez(Vn,!1);var PP,BP={kernelName:Un,backendName:"wasm",setupFunc:function(e){OP=e.wasm.cwrap(Un,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),l=n.dataIdMap.get(o.dataId).id;return OP(s,i,l),o}};var WP,VP={kernelName:Gn,backendName:"wasm",setupFunc:function(e){PP=e.wasm.cwrap(Gn,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=hz(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=zd.getInnerMostAxes(f.length,u.shape.length))}zd.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=zd.computeOutAndReduceShapes(u.shape,f),y=Xr.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Xr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;PP(l,y,qL[b.dtype],e)}if(c&&t.disposeData(h.dataId),s){let e=zd.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},UP={kernelName:Hn,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=AC(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},GP=ez(Mt,!0),HP=JL(Kn),jP=JL(er);var qP,KP={kernelName:Jn,backendName:"wasm",setupFunc:function(e){WP=e.wasm.cwrap(Jn,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,h]=l,[p,d,c,f]=s.shape,m=[p,u,h,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=bz({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,b=n.makeOutput(m,"float32");if(0===Xr.sizeFromShape(s.shape))return b;let x=n.dataIdMap.get(b.dataId).id;return WP(y,p,d,c,f,u,h,i?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),b}};var XP,YP={kernelName:tr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Xr.parseAxisParam(s,a.shape);if(0===a.shape.length)return az({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);return qP(l,h,i.length,p,a.shape.length,u),fz({inputs:{x:o},attrs:{shape:a.shape},backend:n})},setupFunc:function(e){qP=e.wasm.cwrap(tr,null,["number","array","number","array","number","number"])}};var ZP,JP,QP,eB,tB={kernelName:Dr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(l.dataId).id,[p,d,c,f]=a.shape,[m,g]=zd.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return XP(u,p,d,c,f,s,m,g,b,y.length,h),l},setupFunc:function(e){XP=e.wasm.cwrap(Dr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},nB=JL(nr);function rB(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=vi.parseSliceParams(t,n,r),o=vi.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),h=Xr.computeStrides(t.shape),p=a.dataIdMap.get(u.dataId);if(o){let e=vi.computeFlatOffset(s,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+Xr.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+Xr.sizeFromShape(i))),u}if("string"===t.dtype){let e=DC(l,s,i,t.shape,t.dtype);return p.stringBytes=e,u}let d=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,h[0],d,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],h=o+s[0],p=l+s[1];for(let a=o;a<h;a++)for(let o=l;o<p;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,h[0],h[1],d,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],h=s[2],p=l+i[0],d=u+i[1],c=h+i[2],f=s[3];for(let s=l;s<p;s++)for(let l=u;l<d;l++)for(let u=h;u<c;u++){let h=s*t+l*n+u*r+f;a.set(e.subarray(h,h+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],d,s,i);else{let e=DC(l,s,i,t.shape,t.dtype);d.set(e)}return u}var aB,sB;var iB,oB,lB;var uB=[QL,nz,rz,dz,cz,yz,vz,wz,Nz,Cz,Ez,Az,Fz,Dz,Oz,Lz,zz,Pz,Wz,Uz,Hz,jz,qz,ZL,Xz,Zz,Qz,tP,rP,aP,sP,iz,oP,lP,uP,hP,pP,cP,fP,gP,bP,vP,wP,kP,IP,CP,TP,AP,$P,FP,RP,MP,LP,zP,BP,VP,UP,GP,HP,jP,gz,KP,YP,tB,JL(rr),nB,{kernelName:ar,backendName:"wasm",setupFunc:function(e){ZP=e.wasm.cwrap(ar,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Xr.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=gi.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return ZP(c,f,qL[s.dtype],l,u,h,m,d,g),o}},{kernelName:sr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(u.dataId).id,p=r.shape.length,d=a.shape.length,c=0===p||p>1||1===d?1:Xr.sizeFromShape(a.shape.slice(1));return JP(i,o,l,c,h),u},setupFunc:function(e){JP=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){QP=e.wasm.cwrap(pr,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Xr.sizeFromShape(a.shape)||QP(r,s),a}},JL(lr),{kernelName:or,backendName:"wasm",kernelFunc:rB},{kernelName:yr,backendName:"wasm",setupFunc:function(e){eB=e.wasm.cwrap(yr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=Xr.sizeFromShape(n.shape)/o;return 0===Xr.sizeFromShape(s.shape)||eB(a,i,o,l),s}},{kernelName:gr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Xr.parseAxisParam(i,a.shape)[0],l=zd.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let n=rB({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},JL(cr),JL(xr),ez(br,!0),{kernelName:Fr,backendName:"wasm",setupFunc:function(e){aB=e.wasm.cwrap(Fr,null,["number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return aB(i,a,l),o}},{kernelName:kr,backendName:"wasm",setupFunc:function(e){sB=e.wasm.cwrap(kr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=r,c=zd.slice_util.maskToAxes(h);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=a.shape.length-s.length,m=zd.slice_util.maskToAxes(p),g=a.shape.slice();m.forEach((e=>{s[e]=0,i[e]=1,g.splice(e,0,1)}));let y=fz({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:v}=zd.slice_util.getNormalizedAxes(y.shape,c,f,s,i,o,l,u,h);s=b,i=x,o=v;let w=zd.slice_util.maskToAxes(d);w.forEach((e=>{i[e]=s[e]+1,o[e]=1}));let k=zd.slice_util.computeOutShape(s,i,o),I=k.filter(((e,t)=>-1===w.indexOf(t)));if(o.every((e=>1===e))){return fz({inputs:{x:rB({inputs:{x:a},attrs:{begin:s,size:k},backend:t})},attrs:{shape:I},backend:t})}let N=t.makeOutput(I,"float32");if(!I.some((e=>0===e))){let e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(Xr.computeStrides(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),l=new Uint8Array(new Int32Array(o).buffer),u=new Uint8Array(new Int32Array(I).buffer),h=new Uint8Array(new Int32Array(Xr.computeStrides(I)).buffer),p=t.dataIdMap.get(N.dataId).id;sB(e,n,y.shape.length,r,a,l,u,h,I.length,p)}return fz({inputs:{x:N},attrs:{shape:I},backend:t})}},ez(vr,!0),{kernelName:fr,backendName:"wasm",setupFunc:function(e){iB=e.wasm.cwrap(fr,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:h,axes:p,originalAxes:d,inputWasTransposed:c}=hz(i,a,t),f=p;if(c){let e=t.dataIdMap.get(h.dataId).id;e!==o&&(u=h,l=e,f=zd.getInnerMostAxes(f.length,u.shape.length))}zd.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=zd.computeOutAndReduceShapes(u.shape,f),y=Xr.sizeFromShape(g),b=t.makeOutput(m,u.dtype);if(0!==Xr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;iB(l,y,e)}if(c&&t.disposeData(h.dataId),s){let e=zd.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},JL(Nr),{kernelName:Sr,backendName:"wasm",setupFunc:function(e){oB=e.wasm.cwrap(Sr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),h=n.makeOutput(o,a.dtype),p=n.dataIdMap.get(h.dataId).id;return oB(s,l,a.shape.length,u,o.length,qL[h.dtype],p),h}},{kernelName:Cr,backendName:"wasm",setupFunc:function(e){lB=e.wasm.cwrap(Cr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),h=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return lB(i,o,r.shape.length,qL[r.dtype],a,s,h,d),[u,p]}},uz,{kernelName:Er,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let h=new Array(i),p=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let e=0;e<h.length;e++)p[s]=e,h[e]=rB({inputs:{x:a},attrs:{begin:p,size:d},backend:n});return h.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},{kernelName:$r,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(let e of uB)Ur(e);var hB=Le();hB.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),hB.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(hB.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var pB=k(L()),dB=k(z()),cB=class extends B{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new P(this,so())}write(e,t,n){let r={};return this.move(r,e,t,n),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Xr.now();return e(),{kernelMs:Xr.now()-t}}move(e,t,n,r){let a=this.dataIdNextNumber++;if("string"===r){let s=t;return void this.dataIdMap.set(e,{id:a,stringBytes:s,shape:n,dtype:r,memoryOffset:null})}let s=Xr.sizeFromShape(n),i=s*Xr.bytesPerElement(r),o=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:o,shape:n,dtype:r}),this.wasm.tfjs.registerTensor(a,s,o),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),o)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+Xr.sizeFromShape(r)*Xr.bytesPerElement(n)).buffer,n)}disposeData(e){let t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{r={};let a=this.dataIdNextNumber++;this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t});let s=Xr.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Xr.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function fB(e,t,n){if(null!=yB)return yB;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=xB&&null!=xB[r]?xB[r]:n+r}async function mB(){let[e,t]=await Promise.all([Le().getAsync("WASM_HAS_SIMD_SUPPORT"),Le().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a,s={};s.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){let e=new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?fB(e,t,null!=bB?bB:r):r+n},wB&&(s.instantiateWasm=function(e){return(t,n)=>(Xr.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance)}))}))})),{})}(fB(e,t,null!=bB?bB:""))),t&&e&&null==yB?(a=pB.default(s),a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+pB.default.toString()],{type:"text/javascript"})):a=dB.default(s);a.tfjs={init:a.cwrap("init",null,[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",null,["number"]),dispose:a.cwrap("dispose",null,[])};let i=!1;a.onRuntimeInitialized=()=>{i=!0,vB=!1,n({wasm:a})},a.onAbort=()=>{i||vB||(vB=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))}}))}var gB=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],yB=null,bB=null,xB={},vB=!1,wB=!1;function kB(e,t=!1){if(ro(),vB)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");yB=e,wB=t}function IB(e,t=!1){if(vB)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)bB=e;else{xB=e;let t=gB.filter((e=>null==xB[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}wB=t}var NB="3.0.0";xo("wasm",(async()=>{let{wasm:e}=await mB();return new cB(e)}),2);var SB={};function CB(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach((({x:n,y:r},a)=>{let s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)})),n){let n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}p(SB,{AnchorPosition:()=>pW,DrawBox:()=>bW,DrawBoxOptions:()=>yW,DrawFaceLandmarks:()=>oV,DrawFaceLandmarksOptions:()=>iV,DrawTextField:()=>gW,DrawTextFieldOptions:()=>mW,drawContour:()=>CB,drawDetections:()=>xW,drawFaceExpressions:()=>rV,drawFaceLandmarks:()=>lV});p({},{computeReshapedDimensions:()=>LB,getCenterPoint:()=>zB,isDimensions:()=>OB,isEven:()=>DB,isFloat:()=>RB,isTensor:()=>TB,isTensor1D:()=>EB,isTensor2D:()=>AB,isTensor3D:()=>$B,isTensor4D:()=>FB,isValidNumber:()=>BB,isValidProbablitiy:()=>WB,range:()=>PB,round:()=>MB});var _B=class{constructor(e,t){if(!BB(e)||!BB(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new _B(1/this.width,1/this.height)}};function TB(e,t){return e instanceof da&&e.shape.length===t}function EB(e){return TB(e,1)}function AB(e){return TB(e,2)}function $B(e){return TB(e,3)}function FB(e){return TB(e,4)}function RB(e){return e%1!=0}function DB(e){return e%2==0}function MB(e,t=2){let n=10**t;return Math.floor(e*n)/n}function OB(e){return e&&e.width&&e.height}function LB({width:e,height:t},n){let r=n/Math.max(t,e);return new _B(Math.round(e*r),Math.round(t*r))}function zB(e){return e.reduce(((e,t)=>e.add(t)),new VB(0,0)).div(new VB(e.length,e.length))}function PB(e,t,n){return Array(e).fill(0).map(((e,r)=>t+r*n))}function BB(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function WB(e){return BB(e)&&e>=0&&e<=1}var VB=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new VB(this.x+e.x,this.y+e.y)}sub(e){return new VB(this.x-e.x,this.y-e.y)}mul(e){return new VB(this.x*e.x,this.y*e.y)}div(e){return new VB(this.x/e.x,this.y/e.y)}abs(){return new VB(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new VB(Math.floor(this.x),Math.floor(this.y))}},UB=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(BB)}static assertIsValidBox(e,t,n=!1){if(!UB.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(BB),a=[n.x,n.y,n.width,n.height].every(BB);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,l]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];UB.assertIsValidBox({x:s,y:i,width:o,height:l},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=l}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new VB(this.left,this.top)}get topRight(){return new VB(this.right,this.top)}get bottomLeft(){return new VB(this.left,this.bottom)}get bottomRight(){return new VB(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.round(e)));return new UB({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map((e=>Math.floor(e)));return new UB({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new UB({x:e,y:t,width:n,height:r})}rescale(e){let t=OB(e)?e.width:e,n=OB(e)?e.height:e;return new UB({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new UB({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),l=a-i,u=s-o,h=Math.min(l,e-i),p=Math.min(u,t-o);return new UB({x:i,y:o,width:h,height:p}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new UB({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,l=this.right,u=this.bottom;return l>t&&(a=-l+t+n,l=t),u>e&&(s=-u+e+r,u=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:u,x:i,ex:l,w:n,h:r}}calibrate(e){return new UB({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},GB=class extends UB{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},HB=class{constructor(e,t,n,r,a){this._imageDims=new _B(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new UB(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new UB(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new HB(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},jB=class extends HB{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new jB(n,r,a)}};function qB(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function KB(e,t){return lo((()=>{let[n,r,a]=t,s=Yl([...e.shape.slice(0,3),1],n,"float32"),i=Yl([...e.shape.slice(0,3),1],r,"float32"),o=Yl([...e.shape.slice(0,3),1],a,"float32"),l=tl([s,i,o],3);return Iu(e,l)}))}function XB(e){return 1/(1+Math.exp(-e))}var YB=class extends UB{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},ZB=class{constructor(e,t,n=new VB(0,0)){let{width:r,height:a}=t;this._imgDims=new _B(r,a),this._shift=n,this._positions=e.map((e=>e.mul(new VB(r,a)).add(n)))}get shift(){return new VB(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map((e=>e.sub(this._shift).div(new VB(this.imageWidth,this.imageHeight))))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new VB(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let n=e instanceof jB?e.box.floor():new UB(e);return this.shiftBy(n.x,n.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=zB(e),l=Math.floor(Math.max(0,o.x-.5*i)),u=Math.floor(Math.max(0,o.y-.43*i));return new YB(l,u,Math.min(i,this.imageWidth+l),Math.min(i,this.imageHeight+u))}alignMinBbox(e){let t=function(e){let t=e.map((e=>e.x)),n=e.map((e=>e.y)),r=t.reduce(((e,t)=>t<e?t:e),1/0),a=n.reduce(((e,t)=>t<e?t:e),1/0),s=t.reduce(((e,t)=>e<t?t:e),0),i=n.reduce(((e,t)=>e<t?t:e),0);return new GB(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},JB=class extends ZB{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(zB)}},QB=class{constructor(e,t){this._label=e,this._distance=t}get label(){return this._label}get distance(){return this._distance}toString(e=!0){return`${this.label}${e?` (${MB(this.distance)})`:""}`}},eW=class{constructor(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some((e=>!(e instanceof Float32Array))))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}get label(){return this._label}get descriptors(){return this._descriptors}toJSON(){return{label:this.label,descriptors:this.descriptors.map((e=>Array.from(e)))}}static fromJSON(e){let t=e.descriptors.map((e=>new Float32Array(e)));return new eW(e.label,t)}};function tW(e){return e.detection instanceof jB}function nW(e,t){return{...e,detection:t}}function rW(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function aW(e){let t="";if(!e)try{e=a(993)}catch(e){t=e.toString()}return{readFile:e?t=>new Promise(((n,r)=>{e.readFile(t,((e,t)=>e?r(e):n(t)))})):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function sW(){let e=a.g.Canvas||a.g.HTMLCanvasElement,t=a.g.Image||a.g.HTMLImageElement,n=a.g.fetch,r=aW();return{Canvas:e||class{},CanvasRenderingContext2D:a.g.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:a.g.ImageData||class{},Video:a.g.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},fetch:n,...r}}function iW(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}var oW,lW=(e=>e&&e.__esModule?e:((e,t,n)=>{if(h(e),t&&"object"==typeof t||"function"==typeof t)for(let r of l(t))!o.call(e,r)&&"default"!==r&&s(e,r,{get:()=>t[r],enumerable:!(n=u(t,r))||n.enumerable});return e})(s(null!=e?r(i(e)):{},"default",{value:e,enumerable:!0}),e))(d());function uW(e){oW=e}function hW(){return iW()?uW(rW()):lW.isNodejs()?uW(sW()):null}var pW,dW={getEnv:function(){if(!oW)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return oW},setEnv:uW,initialize:hW,createBrowserEnv:rW,createFileSystem:aW,createNodejsEnv:sW,monkeyPatch:function(e){if(oW||hW(),!oW)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=oW.Canvas,Image:n=oW.Image}=e;oW.Canvas=t,oW.Image=n,oW.createCanvasElement=e.createCanvasElement||(()=>new t),oW.createImageElement=e.createImageElement||(()=>new n),oW.ImageData=e.ImageData||oW.ImageData,oW.Video=e.Video||oW.Video,oW.fetch=e.fetch||oW.fetch,oW.readFile=e.readFile||oW.readFile},isBrowser:iW,isNodejs:lW.isNodejs};function cW(e){return dW.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function fW(e){let{Canvas:t,CanvasRenderingContext2D:n}=dW.getEnv();if(e instanceof n)return e;let r=cW(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}hW(),function(e){e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT"}(pW||(pW={}));var mW=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||pW.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},gW=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof gW?e.text:e,this.anchor=t,this.options=new mW(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map((t=>e.measureText(t).width)).reduce(((e,t)=>e<t?t:e),0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r=n===pW.BOTTOM_RIGHT||n===pW.TOP_RIGHT,a=n===pW.BOTTOM_LEFT||n===pW.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,l=a?this.anchor.y-i:this.anchor.y;if(t){let{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(l,n-i),0)}}return{x:o,y:l}}draw(e){let t=cW(e),n=fW(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let l=this.measureWidth(n),u=this.measureHeight();n.fillStyle=r;let h=this.getUpperLeft(n,t);n.fillRect(h.x,h.y,l,u),n.fillStyle=a,this.text.forEach(((e,t)=>{let r=o+h.x,a=o+h.y+(t+1)*s;n.fillText(e,r,a)}))}},yW=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:pW.BOTTOM_LEFT,backgroundColor:this.boxColor};this.drawLabelOptions=new mW({...s,...a})}},bW=class{constructor(e,t={}){this.box=new UB(e),this.options=new yW(t)}draw(e){let t=fW(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:l}=this.options;l&&new gW([l],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function xW(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof jB?t.score:tW(t)?t.detection.score:void 0,r=t instanceof jB?t.box:tW(t)?t.detection.box:new UB(t),a=n?`${MB(n)}`:void 0;new bW(r,{label:a}).draw(e)}))}function vW(e){let{Image:t,Video:n}=dW.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function wW(e){return new Promise(((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{"string"!=typeof r.result&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let e=dW.getEnv().createImageElement();e.onload=()=>t(e),e.onerror=n,e.src=r.result},r.onerror=n,r.readAsDataURL(e)}))}function kW(e){let{Image:t,Video:n}=dW.getEnv();return e instanceof t?new _B(e.naturalWidth,e.naturalHeight):e instanceof n?new _B(e.videoWidth,e.videoHeight):new _B(e.width,e.height)}function IW({width:e,height:t}){let{createCanvasElement:n}=dW.getEnv(),r=n();return r.width=e,r.height=t,r}function NW(e,t){let{ImageData:n}=dW.getEnv();if(!(e instanceof n||vW(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||kW(e),s=IW({width:r,height:a});return e instanceof n?fW(s).putImageData(e,0,0):fW(s).drawImage(e,0,0,r,a),s}function SW(e){let{Image:t,Canvas:n,Video:r}=dW.getEnv();return e instanceof t||e instanceof n||e instanceof r}var CW=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(((e,t)=>{if($B(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(FB(e)){let n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}let n=e instanceof dW.getEnv().Canvas?e:NW(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]}))}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return PB(this.batchSize,0,1).map(((e,t)=>this.getReshapedInputDimensions(t)))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return LB({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,lo((()=>{let n=PB(this.batchSize,0,1).map((n=>{let r=this.getInput(n);if(r instanceof da){let n=FB(r)?r:r.expandDims();return n=function(e,t=!1){return lo((()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{let n=e.shape.slice();return n[i]=t,Yl(n,0,"float32")},l=o(s),u=a-l.shape[i],h=[t&&u?o(u):null,e,l].filter((e=>!!e)).map((e=>Ps(e,"float32")));return tl(h,i)}))}(n,t),(n.shape[1]!==e||n.shape[2]!==e)&&(n=Id.resizeBilinear(n,[e,e])),n.as3D(e,e,3)}if(r instanceof dW.getEnv().Canvas)return hi.fromPixels(function(e,t,n=!1){let{Image:r,Canvas:a}=dW.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");let s=kW(e),i=t/Math.max(s.height,s.width),o=i*s.width,l=i*s.height,u=IW({width:t,height:t}),h=e instanceof a?e:NW(e),p=Math.abs(o-l)/2,d=n&&o<l?p:0,c=n&&l<o?p:0;return fW(u).drawImage(h,d,c,o,l),u}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)}));return Zh(n.map((e=>Ps(e,"float32")))).as4D(this.batchSize,e,e,3)}))}};async function _W(e){if(e instanceof CW)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(cW);return r.forEach(((e,r)=>{if(!SW(e)&&!$B(e)&&!FB(e))throw"string"==typeof t[r]?new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`):new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(FB(e)){let t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}})),await Promise.all(r.map((e=>SW(e)&&function(e){return new Promise(((t,n)=>{if(e instanceof dW.getEnv().Canvas||vW(e))return t(null);function r(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(e){!e.currentTarget||(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),t(e))}e.addEventListener("load",a),e.addEventListener("error",r)}))}(e)))),new CW(r,Array.isArray(e))}async function TW(e,t){let{Canvas:n}=dW.getEnv(),r=e;if(!(e instanceof n)){let t=await _W(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let a=t.getInput(0);r=a instanceof n?a:await async function(e,t){let n=t||dW.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(FB(e)?1:0),i=lo((()=>e.as3D(r,a,s).toInt()));return await hi.toPixels(i,n),i.dispose(),n}(a)}let a=fW(r);return t.map((e=>e instanceof jB?e.forSize(r.width,r.height).box.floor():e)).map((e=>e.clipAtImageBorders(r.width,r.height))).map((({x:e,y:t,width:n,height:r})=>{let s=IW({width:n,height:r});return fW(s).putImageData(a.getImageData(e,t,n,r),0,0),s}))}async function EW(e,t){if(!$B(e)&&!FB(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(FB(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return lo((()=>{let[n,r,a]=e.shape.slice(FB(e)?1:0);return t.map((e=>e instanceof jB?e.forSize(r,n).box:e)).map((e=>e.clipAtImageBorders(r,n))).map((({x:t,y:s,width:i,height:o})=>Bh(e.as3D(n,r,a),[s,t,0],[o,i,a])))}))}async function AW(e,t){let{fetch:n}=dW.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}function $W(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter((e=>e)),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:"/"===i?`/${s}`:`${i}/${s}`}}async function FW(e,t){let{manifestUri:n,modelBaseUri:r}=$W(e,t),a=await async function(e){return(await AW(e)).json()}(n);return Vs.loadWeights(a,r)}function RW(e,t,n=!1){let{width:r,height:a}=n?kW(t):t;return e.width=r,e.height=a,{width:r,height:a}}var DW=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map((({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)})))}getTrainableParams(){return this.getParamList().filter((e=>e.tensor instanceof fa))}getFrozenParams(){return this.getParamList().filter((e=>!(e.tensor instanceof fa)))}variable(){this.getFrozenParams().forEach((({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())}))}freeze(){this.getTrainableParams().forEach((({path:e,tensor:t})=>{let n=Ka(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)}))}dispose(e=!0){this.getParamList().forEach((t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()})),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map((({tensor:e})=>Array.from(e.dataSync()))).reduce(((e,t)=>e.concat(t))))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await FW(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=dW.getEnv(),{manifestUri:n,modelBaseUri:r}=$W(e,this.getDefaultModelName()),a=Vs.weightsLoaderFactory((e=>Promise.all(e.map((e=>t(e).then((e=>e.buffer))))))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce(((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}}),{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof da))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function MW(e,t,n){return lo((()=>{let r=Rh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=ko(r,t.bias),r}))}function OW(e,t,n=!1){return lo((()=>{let r=kh(n?ko(vl(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):MW(e,t.conv0,[2,2])),a=MW(r,t.conv1,[1,1]),s=MW(kh(ko(r,a)),t.conv2,[1,1]);return kh(ko(r,ko(a,s)))}))}function LW(e,t,n=!1,r=!0){return lo((()=>{let a=kh(n?ko(vl(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):MW(e,t.conv0,r?[2,2]:[1,1])),s=MW(a,t.conv1,[1,1]),i=MW(kh(ko(a,s)),t.conv2,[1,1]),o=MW(kh(ko(a,ko(s,i))),t.conv3,[1,1]);return kh(ko(a,ko(s,ko(i,o))))}))}function zW(e,t,n="same",r=!1){return lo((()=>{let a=ko(vl(e,t.filters,[1,1],n),t.bias);return r?kh(a):a}))}function PW(e,t){Object.keys(e).forEach((n=>{t.some((e=>e.originalPath===n))||e[n].dispose()}))}function BW(e,t){return(n,r,a,s)=>{let i=rp(e(n*r*a*a),[a,a,n,r]),o=tp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function WW(e,t){return(n,r,a)=>{let s=np(e(n*r),[n,r]),i=tp(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var VW=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function UW(e,t){return(n,r,a)=>{let s=rp(e(9*n),[3,3,n,1]),i=rp(e(n*r),[1,1,n,r]),o=tp(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new VW(s,i,o)}}function GW(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new VW(n,r,a)}}function HW(e,t){return(n,r,a)=>{let s=e[n];if(!TB(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function jW(e){let t=e;return{extractWeights:function(e){let n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function qW(e,t){let n=BW(e,t),r=UW(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,`${a}/conv0`):r(e,t,`${a}/conv0`),conv1:r(t,t,`${a}/conv1`),conv2:r(t,t,`${a}/conv2`)}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){let{conv0:i,conv1:o,conv2:l}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:l,conv3:r(t,t,`${n}/conv3`)}}}}function KW(e){return t=>({filters:e(`${t}/filters`,4),bias:e(`${t}/bias`,1)})}function XW(e,t){let n=HW(e,t),r=KW(n),a=GW(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`)}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(`${e}/conv0`):a(`${e}/conv0`),conv1:a(`${e}/conv1`),conv2:a(`${e}/conv2`),conv3:a(`${e}/conv3`)}}}}var YW=class extends DW{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return lo((()=>{let n=LW(KB(Ps(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div($h(255)),t.dense0,!0);return n=LW(n,t.dense1),n=LW(n,t.dense2),n=LW(n,t.dense3),n=Qo(n,[7,7],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await _W(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock4Params:n}=XW(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return PW(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=jW(e),{extractDenseBlock4Params:a}=qW(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),l=a(128,256,"dense3");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:l}}}(e)}};function ZW(e,t){return lo((()=>ko(si(e,t.weights),t.bias)))}function JW(e){let t={},n={};return Object.keys(e).forEach((r=>{(r.startsWith("fc")?n:t)[r]=e[r]})),{featureExtractorMap:t,classifierMap:n}}var QW=class extends DW{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return lo((()=>{let n=e instanceof CW?this.faceFeatureExtractor.forwardInput(e):e;return ZW(n.as2D(n.shape[0],-1),t.fc)}))}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=jW(e),i=WW(a,r)(t,n,"fc");if(0!==s().length)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=JW(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=HW(e,t),r={fc:(a="fc",{weights:n(`${a}/weights`,2),bias:n(`${a}/bias`,1)})};var a;return PW(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},eV=["neutral","happy","sad","angry","fearful","disgusted","surprised"],tV=class{constructor(e){if(7!==e.length)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);eV.forEach(((t,n)=>{this[t]=e[n]}))}asSortedArray(){return eV.map((e=>({expression:e,probability:this[e]}))).sort(((e,t)=>t.probability-e.probability))}};function nV(e,t){return{...e,expressions:t}}function rV(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach((t=>{let a=t instanceof tV?t:function(e){return e.expressions instanceof tV}(t)?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let s=a.asSortedArray().filter((e=>e.probability>n)),i=tW(t)?t.detection.box.bottomLeft:r||new VB(0,0);new gW(s.map((e=>`${e.expression} (${MB(e.probability)})`)),i).draw(e)}))}function aV(e){return tW(e)&&e.landmarks instanceof ZB&&e.unshiftedLandmarks instanceof ZB&&e.alignedRect instanceof jB}function sV(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new jB(e.detection.score,a.rescale(s.reverse()),s);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i}}var iV=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},oV=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new iV(t)}draw(e){let t=fW(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof JB&&(t.strokeStyle=s,t.lineWidth=a,CB(t,this.faceLandmarks.getJawOutline()),CB(t,this.faceLandmarks.getLeftEyeBrow()),CB(t,this.faceLandmarks.getRightEyeBrow()),CB(t,this.faceLandmarks.getNose()),CB(t,this.faceLandmarks.getLeftEye(),!0),CB(t,this.faceLandmarks.getRightEye(),!0),CB(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let e=e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(e)}}};function lV(e,t){(Array.isArray(t)?t:[t]).forEach((t=>{let n=t instanceof ZB?t:aV(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new oV(n).draw(e)}))}function uV(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=jW(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:l}=function(e,t){let n=BW(e,t),r=UW(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,`${a}/separable_conv0`),separable_conv1:r(t,t,`${a}/separable_conv1`),expansion_conv:n(e,t,1,`${a}/expansion_conv`)}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,`${t}/separable_conv0`),separable_conv1:r(e,e,`${t}/separable_conv1`),separable_conv2:r(e,e,`${t}/separable_conv2`)}}}}(r,n),u={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},h={};PB(t,0,1).forEach((e=>{h[`main_block_${e}`]=l(128,`middle_flow/main_block_${e}`)}));let p={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:u,middle_flow:h,exit_flow:p}}}function hV(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){let n=HW(e,t),r=KW(n),a=GW(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),expansion_conv:r(`${e}/expansion_conv`)}},extractMainBlockParams:function(e){return{separable_conv0:a(`${e}/separable_conv0`),separable_conv1:a(`${e}/separable_conv1`),separable_conv2:a(`${e}/separable_conv2`)}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},l={};PB(t,0,1).forEach((e=>{l[`main_block_${e}`]=i(`middle_flow/main_block_${e}`)}));let u={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return PW(e,n),{params:{entry_flow:o,middle_flow:l,exit_flow:u},paramMappings:n}}function pV(e,t,n){return ko(vl(e,t.filters,n,"same"),t.bias)}function dV(e,t,n=!0){let r=n?kh(e):e;return r=MW(r,t.separable_conv0,[1,1]),r=MW(kh(r),t.separable_conv1,[1,1]),r=Pu(r,[3,3],[2,2],"same"),r=ko(r,pV(e,t.expansion_conv,[2,2])),r}var cV,fV=class extends DW{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return lo((()=>{let n=KB(Ps(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div($h(256)),r=kh(pV(n,t.entry_flow.conv_in,[2,2]));return r=dV(r,t.entry_flow.reduction_block_0,!1),r=dV(r,t.entry_flow.reduction_block_1),PB(this._numMainBlocks,0,1).forEach((e=>{r=function(e,t){let n=MW(kh(e),t.separable_conv0,[1,1]);return n=MW(kh(n),t.separable_conv1,[1,1]),n=MW(kh(n),t.separable_conv2,[1,1]),n=ko(n,e),n}(r,t.middle_flow[`main_block_${e}`])})),r=dV(r,t.exit_flow.reduction_block),r=kh(MW(r,t.exit_flow.separable_conv,[1,1])),r}))}async forward(e){return this.forwardInput(await _W(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return hV(e,this._numMainBlocks)}extractParams(e){return uV(e,this._numMainBlocks)}};!function(e){e.FEMALE="female",e.MALE="male"}(cV||(cV={}));var mV=class extends QW{postProcess(e,t,n){let r=n.map((({width:e,height:n})=>{let r=t/Math.max(n,e);return{width:e*r,height:n*r}})),a=r.length;return lo((()=>{let n=(e,t)=>Zh([Yl([68],e,"float32"),Yl([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{let{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(Yl([a,136],t,"float32")).sub(Zh(Array.from(Array(a),((e,t)=>n((e=>s(e,((e,t)=>e<t)))(t),(e=>s(e,((e,t)=>t<e)))(t)))))).div(Zh(Array.from(Array(a),((e,t)=>n(r[t].width,r[t].height)))))}))}forwardInput(e){return lo((()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map((([e,t])=>({height:e,width:t}))))}))}async forward(e){return this.forwardInput(await _W(e))}async detectLandmarks(e){let t=await _W(e),n=lo((()=>hp(this.forwardInput(t)))),r=await Promise.all(n.map((async(e,n)=>{let r=Array.from(await e.data()),a=r.filter(((e,t)=>DB(t))),s=r.filter(((e,t)=>!DB(t)));return new JB(Array(68).fill(0).map(((e,t)=>new VB(a[t],s[t]))),{height:t.getInputHeight(n),width:t.getInputWidth(n)})})));return n.forEach((e=>e.dispose())),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},gV=class extends mV{constructor(e=new YW){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};var yV=class extends DW{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return lo((()=>{let n=OW(KB(Ps(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div($h(255)),t.dense0,!0);return n=OW(n,t.dense1),n=OW(n,t.dense2),n=Qo(n,[14,14],[2,2],"valid"),n}))}async forward(e){return this.forwardInput(await _W(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractDenseBlock3Params:n}=XW(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return PW(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=jW(e),{extractDenseBlock3Params:a}=qW(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function bV(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=vl(e,s,n,a);return o=ko(o,i),o=function(e,t){return ko(So(e,t.weights),t.biases)}(o,t.scale),r?kh(o):o}function xV(e,t){return bV(e,t,[1,1],!1)}function vV(e,t){return bV(e,t,[2,2],!0,"valid")}function wV(e,t){function n(n,r,a,s){let i=function(t,n,r){let a=e(t),s=a.length/(n*r*r);if(RB(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return lo((()=>oi(rp(a,[n,s,r,r]),[2,3,1,0])))}(n,r,a),o=tp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}function r(r,a,s,i){return{conv:n(r,a,s,`${i}/conv`),scale:function(n,r){let a=tp(e(n)),s=tp(e(n));return t.push({paramPath:`${r}/weights`},{paramPath:`${r}/biases`}),{weights:a,biases:s}}(a,`${i}/scale`)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,`${a}/conv1`),conv2:r(e,t,n,`${a}/conv2`)}}}}function kV(e,t){let n=HW(e,t);function r(e){return{conv:{filters:n(`${e}/conv/filters`,4),bias:n(`${e}/conv/bias`,1)},scale:function(e){return{weights:n(`${e}/scale/weights`,1),biases:n(`${e}/scale/biases`,1)}}(e)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(`${e}/conv1`),conv2:r(`${e}/conv2`)}}}}function IV(e,t){let n=function(e,t){return bV(e,t,[1,1],!0)}(e,t.conv1);return n=xV(n,t.conv2),n=ko(n,e),n=kh(n),n}function NV(e,t){let n=vV(e,t.conv1);n=xV(n,t.conv2);let r=Qo(e,2,2,"valid"),a=Qu(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let e=[...n.shape];e[1]=1;let t=Qu(e);n=tl([n,t],1);let r=[...n.shape];r[2]=1;let a=Qu(r);n=tl([n,a],2)}return r=s?tl([r,a],3):r,n=ko(r,n),n=kh(n),n}var SV=class extends DW{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return lo((()=>{let n=vV(KB(Ps(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div($h(256)),t.conv32_down);n=Pu(n,3,2,"valid"),n=IV(n,t.conv32_1),n=IV(n,t.conv32_2),n=IV(n,t.conv32_3),n=NV(n,t.conv64_down),n=IV(n,t.conv64_1),n=IV(n,t.conv64_2),n=IV(n,t.conv64_3),n=NV(n,t.conv128_down),n=IV(n,t.conv128_1),n=IV(n,t.conv128_2),n=NV(n,t.conv256_down),n=IV(n,t.conv256_1),n=IV(n,t.conv256_2),n=NV(n,t.conv256_down_out);let r=n.mean([1,2]);return si(r,t.fc)}))}async forward(e){return this.forwardInput(await _W(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some((e=>e<=0)))return new Float32Array(128);let n=await _W(e),r=lo((()=>hp(this.forwardInput(n)))),a=await Promise.all(r.map((e=>e.data())));return r.forEach((e=>e.dispose())),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=kV(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),l=r("conv64_down"),u=r("conv64_1"),h=r("conv64_2"),p=r("conv64_3"),d=r("conv128_down"),c=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!AB(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let v={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:l,conv64_1:u,conv64_2:h,conv64_3:p,conv128_down:d,conv128_1:c,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return PW(e,t),{params:v,paramMappings:t}}(e)}extractParams(e){return function(e){let{extractWeights:t,getRemainingWeights:n}=jW(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=wV(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),l=s(9216,32,3,"conv32_2"),u=s(9216,32,3,"conv32_3"),h=s(36864,64,3,"conv64_down",!0),p=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),v=s(589824,256,3,"conv256_down_out"),w=lo((()=>oi(np(t(32768),[128,256]),[1,0])));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:l,conv32_3:u,conv64_down:h,conv64_1:p,conv64_2:d,conv64_3:c,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:v,fc:w},paramMappings:r}}(e)}};function CV(e,t){return{...e,descriptor:t}}function _V(e,t){return{...e,age:t}}function TV(e,t,n){return{...e,gender:t,genderProbability:n}}function EV(e,t){function n(n,r,a,s,i){let o=rp(e(n*r*a*a),[a,a,n,r]),l=tp(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:l}}function r(e,t,r,a){let{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){return{depthwise_conv:function(n,r){let a=rp(e(9*n),[3,3,n,1]),s=tp(e(n)),i=tp(e(n)),o=tp(e(n)),l=tp(e(n));return t.push({paramPath:`${r}/filters`},{paramPath:`${r}/batch_norm_scale`},{paramPath:`${r}/batch_norm_offset`},{paramPath:`${r}/batch_norm_mean`},{paramPath:`${r}/batch_norm_variance`}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:l}}(n,`${s}/depthwise_conv`),pointwise_conv:r(n,a,1,`${s}/pointwise_conv`)}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function AV(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){let n=HW(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,`${r}/filters`),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,`${r}/batch_norm_offset`)}}function a(e){let t=`mobilenetv1/conv_${e}`,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=`${t}/depthwise_conv`,i=`${t}/pointwise_conv`;return{depthwise_conv:{filters:n(`${a}/depthwise_weights`,4,`${s}/filters`),batch_norm_scale:n(`${a}/BatchNorm/gamma`,1,`${s}/batch_norm_scale`),batch_norm_offset:n(`${a}/BatchNorm/beta`,1,`${s}/batch_norm_offset`),batch_norm_mean:n(`${a}/BatchNorm/moving_mean`,1,`${s}/batch_norm_mean`),batch_norm_variance:n(`${a}/BatchNorm/moving_variance`,1,`${s}/batch_norm_variance`)},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(`${e}/weights`,4,`${t}/filters`),bias:n(`${e}/biases`,1,`${t}/bias`)}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!$B(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return PW(e,t),{params:s,paramMappings:t}}function $V(e,t,n){return lo((()=>{let r=vl(e,t.filters,n,"same");return r=ko(r,t.batch_norm_offset),ml(r,0,6)}))}function FV(e,t){return lo((()=>{let n,r=$V(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(((e,t)=>{let a=t+1,s=function(e){return[2,4,6,12].some((t=>t===e))?[2,2]:[1,1]}(a);r=function(e,t,n){return lo((()=>{let r=Fl(e,t.filters,n,"same");return r=ll(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),ml(r,0,6)}))}(r,e.depthwise_conv,s),r=$V(r,e.pointwise_conv,[1,1]),11===a&&(n=r)})),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}}))}function RV(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),l=Math.min(r[n][0],r[n][2]),u=Math.min(r[n][1],r[n][3]),h=Math.max(r[n][0],r[n][2]),p=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),c=(h-l)*(p-u);if(d<=0||c<=0)return 0;let f=Math.max(a,l),m=Math.max(s,u),g=Math.min(i,h),y=Math.min(o,p),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+c-b)}function DV(e,t){let{sizes:n,centers:r}=function(e){let t=hp(oi(e,[1,0])),n=[Iu(t[2],t[0]),Iu(t[3],t[1])];return{sizes:n,centers:[ko(t[0],No(n[0],$h(2))),ko(t[1],No(n[1],$h(2)))]}}(e),a=hp(oi(t,[1,0])),s=No(So(Hl(No(a[2],$h(5))),n[0]),$h(2)),i=ko(So(No(a[0],$h(10)),n[0]),r[0]),o=No(So(Hl(No(a[3],$h(5))),n[1]),$h(2)),l=ko(So(No(a[1],$h(10)),n[1]),r[1]);return oi(Zh([Iu(i,s),Iu(l,o),ko(i,s),ko(l,o)]),[1,0])}function MV(e,t){return lo((()=>{let n=e.shape[0];return{boxPredictionEncoding:Jo(zW(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Jo(zW(e,t.class_predictor),[n,-1,3])}}))}var OV=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if("number"!=typeof this._maxResults)throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},LV=class extends DW{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return lo((()=>{let n=Ps(e.toBatchTensor(512,!1),"float32"),r=FV(Iu(So(n,$h(.007843137718737125)),$h(1)),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return lo((()=>{let r=$V(e,n.conv_0,[1,1]),a=$V(r,n.conv_1,[2,2]),s=$V(a,n.conv_2,[1,1]),i=$V(s,n.conv_3,[2,2]),o=$V(i,n.conv_4,[1,1]),l=$V(o,n.conv_5,[2,2]),u=$V(l,n.conv_6,[1,1]),h=$V(u,n.conv_7,[2,2]),p=MV(t,n.box_predictor_0),d=MV(e,n.box_predictor_1),c=MV(a,n.box_predictor_2),f=MV(i,n.box_predictor_3),m=MV(l,n.box_predictor_4),g=MV(h,n.box_predictor_5);return{boxPredictions:tl([p.boxPredictionEncoding,d.boxPredictionEncoding,c.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:tl([p.classPrediction,d.classPrediction,c.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}}))}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return lo((()=>{let r=e.shape[0],a=DV(Jo(Kl(n.extra_dim,[r,1,1]),[-1,4]),Jo(e,[-1,4]));a=Jo(a,[r,a.shape[0]/r,4]);let s=nl(rl(t,[0,0,1],[-1,-1,-1])),i=rl(s,[0,0,0],[-1,-1,1]);return i=Jo(i,[r,i.shape[1]]),{boxes:hp(a),scores:hp(i)}}))}(a,s,t.output_layer)}))}async forward(e){return this.forwardInput(await _W(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new OV(t),a=await _W(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],l=i[0];for(let e=1;e<s.length;e++)s[e].dispose(),i[e].dispose();let u=Array.from(await l.data()),h=function(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map(((e,t)=>({score:e,boxIndex:t}))).filter((e=>e.score>a)).sort(((e,t)=>t.score-e.score)),l=e=>e<=r?1:0,u=[];return o.forEach((t=>{if(u.length>=i)return;let n=t.score;for(let n=u.length-1;n>=0;--n){let r=RV(e,t.boxIndex,u[n]);if(0!==r&&(t.score*=l(r),t.score<=a))break}n===t.score&&u.push(t.boxIndex)})),u}(o,u,n,.5,r),p=a.getReshapedInputDimensions(0),d=a.inputSize,c=d/p.width,f=d/p.height,m=o.arraySync(),g=h.map((e=>{let[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map((e=>e*f)),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map((e=>e*c));return new jB(u[e],new YB(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})}));return o.dispose(),l.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return AV(e)}extractParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=jW(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=EV(n,t),i=a(),o=s(),l={extra_dim:pi(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:l},paramMappings:t}}(e)}};var zV=[new VB(.738768,.874946),new VB(2.42204,2.65704),new VB(4.30971,7.04493),new VB(10.246,4.59428),new VB(12.6868,11.8741)],PV=[new VB(1.603231,2.094468),new VB(6.041143,7.080126),new VB(2.882459,3.518061),new VB(4.266906,5.178857),new VB(9.041765,10.66308)],BV=[117.001,114.697,97.404],WV=e=>"number"==typeof e;function VV(e){return lo((()=>{let t=So(e,$h(.10000000149011612));return ko(kh(Iu(e,t)),t)}))}function UV(e,t){return lo((()=>{let n=rh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=vl(n,t.conv.filters,[1,1],"valid"),n=Iu(n,t.bn.sub),n=So(n,t.bn.truediv),n=ko(n,t.conv.bias),VV(n)}))}function GV(e,t){return lo((()=>{let n=rh(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Rh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=ko(n,t.bias),VV(n)}))}function HV(e,t){let n=BW(e,t);let r=UW(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){return{conv:n(r,a,3,`${s}/conv`),bn:function(n,r){let a=tp(e(n)),s=tp(e(n));return t.push({paramPath:`${r}/sub`},{paramPath:`${r}/truediv`}),{sub:a,truediv:s}}(a,`${s}/bn`)}},extractSeparableConvParams:r}}function jV(e,t){let n=HW(e,t);function r(e){return{filters:n(`${e}/filters`,4),bias:n(`${e}/bias`,1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(`${e}/conv`),bn:function(e){return{sub:n(`${e}/sub`,1),truediv:n(`${e}/truediv`,1)}}(`${e}/bn`)}},extractSeparableConvParams:GW(n)}}var qV=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},KV=class extends DW{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error(`invalid config: ${e}`);if("boolean"!=typeof e.withSeparableConvs)throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!WV(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every((e=>"string"==typeof e)))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map((e=>e||{})).every((e=>WV(e.x)&&WV(e.y))))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(WV)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=UV(e,t.conv0);return n=Pu(n,[2,2],[2,2],"same"),n=UV(n,t.conv1),n=Pu(n,[2,2],[2,2],"same"),n=UV(n,t.conv2),n=Pu(n,[2,2],[2,2],"same"),n=UV(n,t.conv3),n=Pu(n,[2,2],[2,2],"same"),n=UV(n,t.conv4),n=Pu(n,[2,2],[2,2],"same"),n=UV(n,t.conv5),n=Pu(n,[2,2],[1,1],"same"),n=UV(n,t.conv6),n=UV(n,t.conv7),zW(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?VV(zW(e,t.conv0,"valid",!1)):GV(e,t.conv0);return n=Pu(n,[2,2],[2,2],"same"),n=GV(n,t.conv1),n=Pu(n,[2,2],[2,2],"same"),n=GV(n,t.conv2),n=Pu(n,[2,2],[2,2],"same"),n=GV(n,t.conv3),n=Pu(n,[2,2],[2,2],"same"),n=GV(n,t.conv4),n=Pu(n,[2,2],[2,2],"same"),n=GV(n,t.conv5),n=Pu(n,[2,2],[1,1],"same"),n=t.conv6?GV(n,t.conv6):n,n=t.conv7?GV(n,t.conv7):n,zW(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return lo((()=>{let r=Ps(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?KB(r,this.config.meanRgb):r,r=r.div($h(256)),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)}))}async forward(e,t){return this.forwardInput(await _W(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new qV(t),a=await _W(e),s=await this.forwardInput(a,n),i=lo((()=>hp(s)[0].expandDims())),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},l=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let u=l.map((e=>e.box)),h=l.map((e=>e.score)),p=l.map((e=>e.classScore)),d=l.map((e=>this.config.classes[e.label]));return function(e,t,n,r=!0){let a=t.map(((e,t)=>({score:e,boxIndex:t}))).sort(((e,t)=>e.score-t.score)).map((e=>e.boxIndex)),s=[];for(;a.length>0;){let t=a.pop();s.push(t);let i=a,o=[];for(let n=0;n<i.length;n++){let a=i[n],s=e[t],l=e[a];o.push(qB(s,l,r))}a=a.filter(((e,t)=>o[t]<=n))}return s}(u.map((e=>e.rescale(n))),h,this.config.iouThreshold,!0).map((e=>new HB(h[e],p[e],d[e],u[e],o)))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){let n,r=[],{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}=jV(e,r);if(t.withSeparableConvs){let e=t.filterSizes&&t.filterSizes.length||9;n={conv0:t.isFirstLayerConv2d?a("conv0"):i("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:e>7?i("conv6"):void 0,conv7:e>8?i("conv7"):void 0,conv8:a("conv8")}}else n={conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")};return PW(e,r),{params:n,paramMappings:r}}(e,this.config)}extractParams(e){let t=this.config.filterSizes||KV.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){let a,{extractWeights:s,getRemainingWeights:i}=jW(e),o=[],{extractConvParams:l,extractConvWithBatchNormParams:u,extractSeparableConvParams:h}=HV(s,o);if(t.withSeparableConvs){let[e,s,i,o,u,p,d,c,f]=r;a={conv0:t.isFirstLayerConv2d?l(e,s,3,"conv0"):h(e,s,"conv0"),conv1:h(s,i,"conv1"),conv2:h(i,o,"conv2"),conv3:h(o,u,"conv3"),conv4:h(u,p,"conv4"),conv5:h(p,d,"conv5"),conv6:c?h(d,c,"conv6"):void 0,conv7:f?h(c,f,"conv7"):void 0,conv8:l(f||c||d,5*n,1,"conv8")}}else{let[e,t,s,i,o,h,p,d,c]=r;a={conv0:u(e,t,"conv0"),conv1:u(t,s,"conv1"),conv2:u(s,i,"conv2"),conv3:u(i,o,"conv3"),conv4:u(o,h,"conv4"),conv5:u(h,p,"conv5"),conv6:u(p,d,"conv6"),conv7:u(d,c,"conv7"),conv8:l(c,5*n,1,"conv8")}}if(0!==i().length)throw new Error(`weights remaing after extract: ${i().length}`);return{params:a,paramMappings:o}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,l=e.shape[1],u=this.config.anchors.length,[h,p,d]=lo((()=>{let t=e.reshape([l,l,u,this.boxEncodingSize]);return[t.slice([0,0,0,0],[l,l,u,4]),t.slice([0,0,0,4],[l,l,u,1]),this.withClassScores?Vh(t.slice([0,0,0,5],[l,l,u,this.config.classes.length]),3):$h(0)]})),c=[],f=await p.array(),m=await h.array();for(let e=0;e<l;e++)for(let t=0;t<l;t++)for(let r=0;r<u;r++){let a=XB(f[e][t][r][0]);if(!n||a>n){let n=(t+XB(m[e][t][r][0]))/l*i,s=(e+XB(m[e][t][r][1]))/l*o,u=Math.exp(m[e][t][r][2])*this.config.anchors[r].x/l*i,h=Math.exp(m[e][t][r][3])*this.config.anchors[r].y/l*o,p=n-u/2,f=s-h/2,g={row:e,col:t,anchor:r},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,g):{classScore:1,label:0};c.push({box:new GB(p,f,p+u,f+h),score:a,classScore:a*y,label:b,...g})}}return h.dispose(),p.dispose(),d.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map(((e,t)=>s[n][r][a][t])).map(((e,t)=>({classScore:e,label:t}))).reduce(((e,t)=>e.classScore>t.classScore?e:t))}},XV=KV;XV.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var YV=class extends XV{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:PV,meanRgb:BV}:{anchors:zV,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new jB(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}};var ZV=class extends qV{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},JV=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function QV(e,t,n,r,a=(({alignedRect:e})=>e)){let s=e.map((e=>aV(e)?a(e):e.detection)),i=r||(t instanceof da?await EW(t,s):await TW(t,s)),o=await n(i);return i.forEach((e=>e instanceof da&&e.dispose())),o}var eU=[new VB(1.603231,2.094468),new VB(6.041143,7.080126),new VB(2.882459,3.518061),new VB(4.266906,5.178857),new VB(9.041765,10.66308)],tU=[117.001,114.697,97.404],nU=class extends XV{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:eU,meanRgb:tU,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map((e=>new jB(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},rU={ssdMobilenetv1:new LV,tinyFaceDetector:new nU,tinyYolov2:new YV,faceLandmark68Net:new gV,faceLandmark68TinyNet:new class extends mV{constructor(e=new yV){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new SV,faceExpressionNet:new class extends QW{constructor(e=new YW){super("FaceExpressionNet",e)}forwardInput(e){return lo((()=>Vh(this.runNet(e))))}async forward(e){return this.forwardInput(await _W(e))}async predictExpressions(e){let t=await _W(e),n=await this.forwardInput(t),r=await Promise.all(hp(n).map((async e=>{let t=await e.data();return e.dispose(),t})));n.dispose();let a=r.map((e=>new tV(e)));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends DW{constructor(e=new fV(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return lo((()=>{let n=e instanceof CW?this.faceFeatureExtractor.forwardInput(e):e,r=Qo(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:ZW(r,t.fc.age).as1D(),gender:ZW(r,t.fc.gender)}}))}forwardInput(e){return lo((()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:Vh(n)}}))}async forward(e){return this.forwardInput(await _W(e))}async predictAgeAndGender(e){let t=await _W(e),n=await this.forwardInput(t),r=hp(n.age),a=hp(n.gender),s=r.map(((e,t)=>({ageTensor:e,genderTensor:a[t]}))),i=await Promise.all(s.map((async({ageTensor:e,genderTensor:t})=>{let n=(await e.data())[0],r=(await t.data())[0],a=r>.5,s=a?cV.MALE:cV.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}})));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){let t=[],{extractWeights:n,getRemainingWeights:r}=jW(e),a=WW(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=JW(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){let t=[],n=HW(e,t);function r(e){return{weights:n(`${e}/weights`,2),bias:n(`${e}/bias`,1)}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return PW(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},aU=class extends JV{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},sU=class extends aU{async run(){let e=await this.parentTask,t=await QV(e,this.input,(async e=>Promise.all(e.map((e=>rU.faceExpressionNet.predictExpressions(e))))),this.extractedFaces);return e.map(((e,n)=>nV(e,t[n])))}withAgeAndGender(){return new lU(this,this.input)}},iU=class extends sU{withAgeAndGender(){return new uU(this,this.input)}withFaceDescriptors(){return new pU(this,this.input)}},oU=class extends JV{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},lU=class extends oU{async run(){let e=await this.parentTask,t=await QV(e,this.input,(async e=>Promise.all(e.map((e=>rU.ageGenderNet.predictAgeAndGender(e))))),this.extractedFaces);return e.map(((e,n)=>{let{age:r,gender:a,genderProbability:s}=t[n];return _V(TV(e,a,s),r)}))}withFaceExpressions(){return new sU(this,this.input)}},uU=class extends lU{withFaceExpressions(){return new iU(this,this.input)}withFaceDescriptors(){return new pU(this,this.input)}},hU=class extends JV{constructor(e,t){super(),this.parentTask=e,this.input=t}},pU=class extends hU{async run(){let e=await this.parentTask;return(await QV(e,this.input,(e=>Promise.all(e.map((e=>rU.faceRecognitionNet.computeFaceDescriptor(e))))),null,(e=>e.landmarks.align(null,{useDlibAlignment:!0})))).map(((t,n)=>CV(e[n],t)))}withFaceExpressions(){return new iU(this,this.input)}withAgeAndGender(){return new uU(this,this.input)}},dU=class extends JV{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?rU.faceLandmark68TinyNet:rU.faceLandmark68Net}},cU=class extends dU{async run(){let e=await this.parentTask,t=e.map((e=>e.detection)),n=this.input instanceof da?await EW(this.input,t):await TW(this.input,t),r=await Promise.all(n.map((e=>this.landmarkNet.detectLandmarks(e))));return n.forEach((e=>e instanceof da&&e.dispose())),e.map(((e,t)=>sV(e,r[t])))}withFaceExpressions(){return new iU(this,this.input)}withAgeAndGender(){return new uU(this,this.input)}withFaceDescriptors(){return new pU(this,this.input)}},fU=class extends JV{constructor(e,t=new OV){super(),this.input=e,this.options=t}},mU=class extends fU{async run(){let{input:e,options:t}=this,n=t instanceof ZV?e=>rU.tinyFaceDetector.locateFaces(e,t):t instanceof OV?e=>rU.ssdMobilenetv1.locateFaces(e,t):t instanceof qV?e=>rU.tinyYolov2.locateFaces(e,t):null;if(!n)throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options");return n(e)}runAndExtendWithFaceDetections(){return new Promise((async e=>{e((await this.run()).map((e=>nW({},e))))}))}withFaceLandmarks(e=!1){return new cU(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new sU(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new lU(this.runAndExtendWithFaceDetections(),this.input)}};function gU(e,t=new OV){return new mU(e,t)}var yU=class{constructor(e,t=.6){this._distanceThreshold=t;let n=Array.isArray(e)?e:[e];if(!n.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");let r=1,a=()=>"person "+r++;this._labeledDescriptors=n.map((e=>{if(e instanceof eW)return e;if(e instanceof Float32Array)return new eW(a(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new eW(a(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")}))}get labeledDescriptors(){return this._labeledDescriptors}get distanceThreshold(){return this._distanceThreshold}computeMeanDistance(e,t){return t.map((t=>function(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map(((e,t)=>e-r[t])).reduce(((e,t)=>e+t**2),0))}(t,e))).reduce(((e,t)=>e+t),0)/(t.length||1)}matchDescriptor(e){return this.labeledDescriptors.map((({descriptors:t,label:n})=>new QB(n,this.computeMeanDistance(e,t)))).reduce(((e,t)=>e.distance<t.distance?e:t))}findBestMatch(e){let t=this.matchDescriptor(e);return t.distance<this.distanceThreshold?t:new QB("unknown",t.distance)}toJSON(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map((e=>e.toJSON()))}}static fromJSON(e){let t=e.labeledDescriptors.map((e=>eW.fromJSON(e)));return new yU(t,e.distanceThreshold)}};function bU(e,t){let{width:n,height:r}=new _B(t.width,t.height);if(n<=0||r<=0)throw new Error(`resizeResults - invalid dimensions: ${JSON.stringify({width:n,height:r})}`);if(Array.isArray(e))return e.map((e=>bU(e,{width:n,height:r})));if(aV(e)){let t=e.detection.forSize(n,r),a=e.unshiftedLandmarks.forSize(t.box.width,t.box.height);return sV(nW(e,t),a)}return tW(e)?nW(e,e.detection.forSize(n,r)):e instanceof ZB||e instanceof jB?e.forSize(n,r):e}"undefined"!=typeof navigator&&navigator.userAgent;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */function xU(e){switch(e.toLowerCase().trim()){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function vU(e,t,n,r){const a=e.location.search,s=new URLSearchParams(a);for(const[e,t]of s)"number"==typeof n[e]?n[e]=parseInt(t,10):"boolean"==typeof n[e]?n[e]=xU(t):n[e]=t;"serviceWorker"in navigator&&(navigator.serviceWorker.register("./sw.js",{scope:"./"}).then((function(e){t.querySelector("footer").classList.remove("hidden")})).catch((function(e){})),function(e,t,n){const r=t.getElementById("butInstall");if(!r)return;let a;r.addEventListener("click",(e=>{r.classList.add("hidden"),a.prompt(),a.userChoice.then((e=>{}))})),e.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),a=e,n&&n.showInstall&&r.classList.remove("hidden")}))}(e,t,n)),r(e,t,n)}!function(e,t,n,r){!function(e,t,n,r,a){"loading"!==n.readyState?e(t,n,r,a):n.addEventListener("DOMContentLoaded",(function(s){e(t,n,r,a)}))}(vU,e,t,n,r)}(window,document,{modes:["diagnosis","ira","planeta","kotony","danila","hruj","cat","max","meshok","default"],mode:"meshok",sound:!1},(function(e,t,n){const r=t.getElementById("imageUpload"),s=t.getElementById("video"),i=t.querySelector(".video_container"),o=t.querySelector(".image_container"),l=t.querySelector(".start_video"),u=t.querySelector(".main_header"),h=t.querySelector("footer"),p=t.querySelector(".processing");let d=null,c=function(){const e={unknown:"Хер с горы",petr:"Петруччо",serg:"Серж",sava:"Чемонин",lenya:"Лёня",chern:"Не лох",boys:"ЧернRк",glider:"Шурик"};return{convert:function(t,n){const r=e[t];return r?n&&"female"===n.gender&&"unknown"===t?"Незнакомка":r:t}}}();if(n.modes.includes(n.mode)&&"default"!==n.mode){let e=null;"diagnosis"===n.mode||"ira"===n.mode?e=a.e(967).then(a.bind(a,967)):"planeta"===n.mode?e=a.e(590).then(a.bind(a,590)):"max"===n.mode?e=a.e(352).then(a.bind(a,352)):"cat"===n.mode?e=a.e(833).then(a.bind(a,833)):"meshok"===n.mode&&(e=a.e(474).then(a.bind(a,474))),e&&e.then((e=>{u.innerText=e.default.header,c=e.default.nameConvertor}))}let f="default";async function m(){i.classList.remove("hidden"),h.classList.add("hidden"),d&&clearInterval(d);const e={video:!0};try{navigator.mediaDevices.getUserMedia(e).then((function(e){s.srcObject=e})).catch((function(e){}))}catch(e){}}n.modes.includes(n.mode)&&(f=n.mode),Promise.all([async function(e){try{return(await fetch("/models/"+e+".json")).json()}catch(e){return(await fetch("/models/default.json")).json()}}(f),rU.faceRecognitionNet.loadFromUri("/models"),rU.faceLandmark68Net.loadFromUri("/models"),rU.ageGenderNet.loadFromUri("/models"),rU.ssdMobilenetv1.loadFromUri("/models")]).then((async function(e){const t=yU.fromJSON(e[0]);let n=null,a=null,u=null;function f(e,n){e.map((e=>t.findBestMatch(e.descriptor))).forEach(((t,r)=>{if(e.length>7&&"unknown"===t.label)return;const a=e[r],s=c.convert(t.label,a);if("unknown"!==s){new SB.DrawBox(a.detection.box,{label:s}).draw(n)}}))}r.addEventListener("click",(()=>{i.classList.remove("hidden"),h.classList.add("hidden")})),r.addEventListener("change",(async()=>{p.classList.remove("hidden"),n&&n.remove(),a&&a.remove(),n=await wW(r.files[0]),o.append(n),a=NW(n),o.append(a);const e={width:n.width,height:n.height};RW(a,e);const t=bU(await gU(n).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),e);p.classList.add("hidden"),requestAnimationFrame((()=>{f(t,a)}))})),l.addEventListener("click",m),s.addEventListener("playing",(()=>{u&&u.remove();const e=NW(s);i.append(e),u=e;const t={width:s.getBoundingClientRect().width,height:s.getBoundingClientRect().height};RW(e,t),d&&clearInterval(d),d=setInterval((async()=>{const n=bU(await gU(s).withFaceLandmarks().withFaceDescriptors().withAgeAndGender(),t);e.getContext("2d").clearRect(0,0,e.width,e.height),f(n,e)}),300)}))}))}))})()})();